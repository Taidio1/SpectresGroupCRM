import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

/**
 * üîê HELPERY DO SPRAWDZANIA R√ìL
 * 
 * Centralne miejsce do zarzƒÖdzania uprawnieniami r√≥l.
 * U≈Çatwia utrzymanie i modyfikacjƒô uprawnie≈Ñ w przysz≈Ço≈õci.
 */

// Role z pe≈Çnymi uprawnieniami (szef/admin)
export const ADMIN_ROLES = ['szef', 'admin'] as const

// Role mened≈ºerskie (wszyscy managerowie)
export const MANAGER_ROLES = ['manager', 'project_manager', 'junior_manager'] as const

// Role z dostƒôpem do raport√≥w i statystyk
export const REPORTS_ACCESS_ROLES = [...MANAGER_ROLES, ...ADMIN_ROLES] as const

// Role z dostƒôpem do zarzƒÖdzania u≈ºytkownikami (wszyscy mened≈ºerowie + szef/admin)
export const USER_MANAGEMENT_ROLES = [...MANAGER_ROLES, ...ADMIN_ROLES] as const

// Role z dostƒôpem do promowania u≈ºytkownik√≥w (tylko szef i admin)
export const USER_PROMOTION_ROLES = [...ADMIN_ROLES] as const

// Role z dostƒôpem do importu plik√≥w
export const FILE_IMPORT_ROLES = REPORTS_ACCESS_ROLES

/**
 * Sprawdza czy u≈ºytkownik ma rolƒô mened≈ºerskƒÖ (manager, project_manager, junior_manager)
 */
export function isManagerLike(userRole?: string): boolean {
  return userRole ? MANAGER_ROLES.includes(userRole as any) : false
}

/**
 * Sprawdza czy u≈ºytkownik ma rolƒô administracyjnƒÖ (szef, admin)
 */
export function isAdminLike(userRole?: string): boolean {
  return userRole ? ADMIN_ROLES.includes(userRole as any) : false
}

/**
 * Sprawdza czy u≈ºytkownik ma dostƒôp do raport√≥w i statystyk
 */
export function hasReportsAccess(userRole?: string): boolean {
  return userRole ? REPORTS_ACCESS_ROLES.includes(userRole as any) : false
}

/**
 * Sprawdza czy u≈ºytkownik mo≈ºe zarzƒÖdzaƒá innymi u≈ºytkownikami
 */
export function canManageUsers(userRole?: string): boolean {
  return userRole ? USER_MANAGEMENT_ROLES.includes(userRole as any) : false
}

/**
 * Sprawdza czy u≈ºytkownik mo≈ºe importowaƒá pliki
 */
export function canImportFiles(userRole?: string): boolean {
  return userRole ? FILE_IMPORT_ROLES.includes(userRole as any) : false
}

/**
 * Sprawdza czy u≈ºytkownik mo≈ºe promowaƒá innych u≈ºytkownik√≥w (tylko szef i admin)
 */
export function canPromoteUsers(userRole?: string): boolean {
  return userRole ? USER_PROMOTION_ROLES.includes(userRole as any) : false
}
