/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"59c18827894d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcYXBwXFxnbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjU5YzE4ODI3ODk0ZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/auth/enhanced-auth-provider.tsx":
/*!****************************************************!*\
  !*** ./components/auth/enhanced-auth-provider.tsx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnhancedAuthProvider: () => (/* binding */ EnhancedAuthProvider),\n/* harmony export */   useAuthContext: () => (/* binding */ useAuthContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n/* harmony import */ var _store_useStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/store/useStore */ \"(app-pages-browser)/./store/useStore.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/logger */ \"(app-pages-browser)/./lib/logger.ts\");\n/* harmony import */ var _barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=AlertCircle,Loader2,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-alert.js\");\n/* harmony import */ var _barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=AlertCircle,Loader2,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=AlertCircle,Loader2,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_alert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/ui/alert */ \"(app-pages-browser)/./components/ui/alert.tsx\");\n/* __next_internal_client_entry_do_not_use__ useAuthContext,EnhancedAuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    loading: true,\n    error: null,\n    retryAuth: ()=>{}\n});\nconst useAuthContext = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuthContext must be used within AuthProvider\");\n    }\n    return context;\n};\n_s(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Skrócone timeouty dla lepszego UX\nconst AUTH_TIMEOUT_MS = 8000 // 8 sekund na inicjalizację\n;\nconst MAX_RETRY_ATTEMPTS = 2 // Mniej prób\n;\nconst LOADING_HANG_TIMEOUT_MS = 15000 // 15 sekund na wykrycie zawieszenia\n;\nfunction EnhancedAuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [retryCount, setRetryCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [sessionHanged, setSessionHanged] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n    const { user, isAuthenticated, setUser, setAuthenticated, clearStore } = (0,_store_useStore__WEBPACK_IMPORTED_MODULE_4__.useAuth)();\n    // Refs dla timeoutów\n    const initTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const hangDetectionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isInitializingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Memoized values\n    const publicRoutes = [\n        \"/login\",\n        \"/register\"\n    ];\n    const isPublicRoute = publicRoutes.includes(pathname);\n    // Funkcja do czyszczenia sesji\n    const clearSession = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[clearSession]\": async ()=>{\n            try {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.loading(\"Clearing corrupted session\", {\n                    component: 'enhanced-auth-provider',\n                    pathname,\n                    retryCount\n                });\n                // Wyloguj z Supabase\n                await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.signOut();\n                // Wyczyść localStorage i store\n                clearStore();\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.success(\"Session cleared successfully\", {\n                    component: 'enhanced-auth-provider',\n                    pathname\n                });\n            } catch (clearError) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Error clearing session\", clearError, {\n                    component: 'enhanced-auth-provider',\n                    pathname\n                });\n            }\n        }\n    }[\"EnhancedAuthProvider.useCallback[clearSession]\"], [\n        clearStore,\n        pathname,\n        retryCount\n    ]);\n    // Funkcja do wykrywania i resetowania zawieszenia\n    const handleSessionHang = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[handleSessionHang]\": async ()=>{\n            _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Session hang detected - initiating emergency reset\", new Error(\"Session hang timeout\"), {\n                component: 'enhanced-auth-provider',\n                pathname,\n                retryCount,\n                action: 'session_hang_reset'\n            });\n            setSessionHanged(true);\n            await clearSession();\n            // Po 2 sekundach przekieruj do logowania\n            setTimeout({\n                \"EnhancedAuthProvider.useCallback[handleSessionHang]\": ()=>{\n                    router.push(\"/login?error=session_reset\");\n                }\n            }[\"EnhancedAuthProvider.useCallback[handleSessionHang]\"], 2000);\n        }\n    }[\"EnhancedAuthProvider.useCallback[handleSessionHang]\"], [\n        clearSession,\n        router,\n        pathname,\n        retryCount\n    ]);\n    // Funkcja inicjalizacji autoryzacji z timeoutem\n    const initAuthWithTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\": async ()=>{\n            return new Promise({\n                \"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\": (resolve, reject)=>{\n                    const abortController = new AbortController();\n                    let isCompleted = false;\n                    const timeoutId = setTimeout({\n                        \"EnhancedAuthProvider.useCallback[initAuthWithTimeout].timeoutId\": ()=>{\n                            if (!isCompleted) {\n                                abortController.abort();\n                                reject(new Error(\"Authentication timeout - sprawdź połączenie internetowe\"));\n                            }\n                        }\n                    }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout].timeoutId\"], AUTH_TIMEOUT_MS);\n                    const performAuth = {\n                        \"EnhancedAuthProvider.useCallback[initAuthWithTimeout].performAuth\": async ()=>{\n                            try {\n                                // Jeśli mamy już dane użytkownika w store z localStorage, użyj ich\n                                if (user && isAuthenticated) {\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"User data found in persisted store, verifying session\", {\n                                        component: 'enhanced-auth-provider',\n                                        userId: user.id,\n                                        userEmail: user.email\n                                    });\n                                    // Sprawdź czy sesja w Supabase jest nadal ważna\n                                    const session = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getSession();\n                                    if ((session === null || session === void 0 ? void 0 : session.user) && session.user.id === user.id) {\n                                        _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.success(\"Persisted session is valid\", {\n                                            component: 'enhanced-auth-provider',\n                                            userId: user.id\n                                        });\n                                        // Sesja jest ważna, nie potrzeba ponownej autoryzacji\n                                        if (isPublicRoute) {\n                                            router.push(\"/\");\n                                        }\n                                        isCompleted = true;\n                                        clearTimeout(timeoutId);\n                                        resolve();\n                                        return;\n                                    } else {\n                                        _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Persisted session is invalid, clearing and re-authenticating\", {\n                                            component: 'enhanced-auth-provider',\n                                            userId: user.id\n                                        });\n                                        clearStore();\n                                    }\n                                }\n                                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Auth init attempt \".concat(retryCount + 1, \"/\").concat(MAX_RETRY_ATTEMPTS), {\n                                    component: 'enhanced-auth-provider',\n                                    pathname,\n                                    retryCount,\n                                    action: 'auth_init_attempt'\n                                });\n                                if (abortController.signal.aborted) {\n                                    throw new Error(\"Operation was cancelled\");\n                                }\n                                // Sprawdź sesję w Supabase\n                                const session = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getSession();\n                                if (abortController.signal.aborted) {\n                                    throw new Error(\"Operation was cancelled\");\n                                }\n                                if (session === null || session === void 0 ? void 0 : session.user) {\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Session found, fetching user profile\", {\n                                        component: 'enhanced-auth-provider',\n                                        pathname,\n                                        userId: session.user.id\n                                    });\n                                    const userProfile = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getUserProfile(session.user.id);\n                                    if (abortController.signal.aborted) {\n                                        throw new Error(\"Operation was cancelled\");\n                                    }\n                                    setUser(userProfile);\n                                    setAuthenticated(true);\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.success(\"Authentication successful\", {\n                                        component: 'enhanced-auth-provider',\n                                        pathname,\n                                        userProfile: userProfile.email\n                                    });\n                                    if (isPublicRoute) {\n                                        router.push(\"/\");\n                                    }\n                                } else {\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"No session found\", {\n                                        component: 'enhanced-auth-provider',\n                                        pathname,\n                                        action: 'no_session'\n                                    });\n                                    setUser(null);\n                                    setAuthenticated(false);\n                                    if (!isPublicRoute) {\n                                        router.push(\"/login\");\n                                    }\n                                }\n                                isCompleted = true;\n                                clearTimeout(timeoutId);\n                                resolve();\n                            } catch (authError) {\n                                var _authError_message, _authError_message1, _authError_message2;\n                                isCompleted = true;\n                                clearTimeout(timeoutId);\n                                if (authError.message === \"Operation was cancelled\") {\n                                    reject(new Error(\"Operacja anulowana z powodu timeoutu\"));\n                                } else if (((_authError_message = authError.message) === null || _authError_message === void 0 ? void 0 : _authError_message.includes(\"Failed to fetch\")) || ((_authError_message1 = authError.message) === null || _authError_message1 === void 0 ? void 0 : _authError_message1.includes(\"fetch\"))) {\n                                    reject(new Error(\"Błąd połączenia - sprawdź internet\"));\n                                } else if ((_authError_message2 = authError.message) === null || _authError_message2 === void 0 ? void 0 : _authError_message2.includes(\"timeout\")) {\n                                    reject(new Error(\"Timeout połączenia z serwerem\"));\n                                } else {\n                                    reject(authError);\n                                }\n                            }\n                        }\n                    }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout].performAuth\"];\n                    performAuth();\n                }\n            }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\"]);\n        }\n    }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\"], [\n        retryCount,\n        setUser,\n        setAuthenticated,\n        isPublicRoute,\n        router,\n        user,\n        isAuthenticated,\n        clearStore\n    ]);\n    // Główna funkcja inicjalizacji\n    const initAuth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[initAuth]\": async ()=>{\n            // Zapobiegaj równoczesnym inicjalizacjom\n            if (isInitializingRef.current) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Auth initialization already in progress, skipping\", {\n                    component: 'enhanced-auth-provider'\n                });\n                return;\n            }\n            isInitializingRef.current = true;\n            // Wyczyść poprzednie timeouty\n            if (initTimeoutRef.current) {\n                clearTimeout(initTimeoutRef.current);\n                initTimeoutRef.current = null;\n            }\n            if (hangDetectionRef.current) {\n                clearTimeout(hangDetectionRef.current);\n                hangDetectionRef.current = null;\n            }\n            setLoading(true);\n            setError(null);\n            // Timeout na wykrycie zawieszenia\n            hangDetectionRef.current = setTimeout(handleSessionHang, LOADING_HANG_TIMEOUT_MS);\n            try {\n                await initAuthWithTimeout();\n                setRetryCount(0);\n                setIsInitialized(true);\n            } catch (authError) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Authentication failed\", authError, {\n                    component: 'enhanced-auth-provider',\n                    pathname,\n                    retryCount,\n                    action: 'auth_failed'\n                });\n                if (retryCount < MAX_RETRY_ATTEMPTS - 1) {\n                    const delay = Math.pow(2, retryCount) * 1000;\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Retrying in \".concat(delay, \"ms...\"), {\n                        component: 'enhanced-auth-provider',\n                        pathname,\n                        retryCount,\n                        delay,\n                        action: 'retry_auth'\n                    });\n                    setTimeout({\n                        \"EnhancedAuthProvider.useCallback[initAuth]\": ()=>{\n                            setRetryCount({\n                                \"EnhancedAuthProvider.useCallback[initAuth]\": (prev)=>prev + 1\n                            }[\"EnhancedAuthProvider.useCallback[initAuth]\"]);\n                        }\n                    }[\"EnhancedAuthProvider.useCallback[initAuth]\"], delay);\n                    return;\n                } else {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Max retry attempts reached, clearing session\", {\n                        component: 'enhanced-auth-provider',\n                        pathname,\n                        retryCount,\n                        action: 'max_retries_reached'\n                    });\n                    await clearSession();\n                    setError(\"Błąd autoryzacji. Sesja została zresetowana.\");\n                    if (!isPublicRoute) {\n                        router.push(\"/login?error=auth_failed\");\n                    }\n                }\n            } finally{\n                if (hangDetectionRef.current) {\n                    clearTimeout(hangDetectionRef.current);\n                    hangDetectionRef.current = null;\n                }\n                setLoading(false);\n                isInitializingRef.current = false;\n            }\n        }\n    }[\"EnhancedAuthProvider.useCallback[initAuth]\"], [\n        retryCount,\n        initAuthWithTimeout,\n        handleSessionHang,\n        clearSession,\n        isPublicRoute,\n        router\n    ]);\n    // Funkcja retry dla UI\n    const retryAuth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[retryAuth]\": ()=>{\n            setRetryCount(0);\n            setSessionHanged(false);\n            setIsInitialized(false);\n            initAuth();\n        }\n    }[\"EnhancedAuthProvider.useCallback[retryAuth]\"], [\n        initAuth\n    ]);\n    // Główny useEffect - uruchamia się TYLKO raz przy mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedAuthProvider.useEffect\": ()=>{\n            if (!isInitialized) {\n                initAuth();\n            }\n            return ({\n                \"EnhancedAuthProvider.useEffect\": ()=>{\n                    if (initTimeoutRef.current) {\n                        clearTimeout(initTimeoutRef.current);\n                        initTimeoutRef.current = null;\n                    }\n                    if (hangDetectionRef.current) {\n                        clearTimeout(hangDetectionRef.current);\n                        hangDetectionRef.current = null;\n                    }\n                }\n            })[\"EnhancedAuthProvider.useEffect\"];\n        }\n    }[\"EnhancedAuthProvider.useEffect\"], []) // BRAK dependencies - tylko mount/unmount!\n    ;\n    // Osobny useEffect dla nasłuchiwania zmian autoryzacji\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedAuthProvider.useEffect\": ()=>{\n            // Nasłuchuj tylko jeśli już zainicjalizowane\n            if (!isInitialized) return;\n            const { data: { subscription } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.onAuthStateChange({\n                \"EnhancedAuthProvider.useEffect\": async (event, session)=>{\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Auth state changed: \".concat(event), {\n                        component: 'enhanced-auth-provider',\n                        event,\n                        action: 'auth_state_change'\n                    });\n                    if (event === \"SIGNED_IN\" && (session === null || session === void 0 ? void 0 : session.user)) {\n                        try {\n                            const userProfile = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getUserProfile(session.user.id);\n                            setUser(userProfile);\n                            setAuthenticated(true);\n                            if (isPublicRoute) {\n                                router.push(\"/\");\n                            }\n                        } catch (error) {\n                            var _session_user;\n                            _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Error handling SIGNED_IN event\", error, {\n                                component: 'enhanced-auth-provider',\n                                event,\n                                userId: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id\n                            });\n                        }\n                    } else if (event === \"SIGNED_OUT\") {\n                        clearStore();\n                        if (!isPublicRoute) {\n                            router.push(\"/login\");\n                        }\n                    }\n                }\n            }[\"EnhancedAuthProvider.useEffect\"]);\n            return ({\n                \"EnhancedAuthProvider.useEffect\": ()=>{\n                    subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n                }\n            })[\"EnhancedAuthProvider.useEffect\"];\n        }\n    }[\"EnhancedAuthProvider.useEffect\"], [\n        isInitialized,\n        setUser,\n        setAuthenticated,\n        clearStore,\n        router,\n        isPublicRoute\n    ]);\n    // Renderowanie stanów błędów i ładowania\n    if (sessionHanged) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-slate-900 flex items-center justify-center p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-md w-full text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        className: \"h-12 w-12 text-orange-400 mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 390,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-semibold text-white mb-2\",\n                        children: \"Wykryto zawieszenie sesji\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 391,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-slate-400 mb-6\",\n                        children: \"Sesja została automatycznie zresetowana. Za chwilę nastąpi przekierowanie do strony logowania.\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 394,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-cyan-400 mx-auto\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 397,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                lineNumber: 389,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n            lineNumber: 388,\n            columnNumber: 7\n        }, this);\n    }\n    if (loading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-slate-900 flex items-center justify-center p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center max-w-md w-full\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                        className: \"h-8 w-8 animate-spin text-cyan-400 mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 407,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-slate-400 mb-2\",\n                        children: \"Sprawdzanie autoryzacji...\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 408,\n                        columnNumber: 11\n                    }, this),\n                    retryCount > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-orange-400\",\n                        children: [\n                            \"Pr\\xf3ba \",\n                            retryCount + 1,\n                            \"/\",\n                            MAX_RETRY_ATTEMPTS\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 411,\n                        columnNumber: 13\n                    }, this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_alert__WEBPACK_IMPORTED_MODULE_7__.Alert, {\n                        className: \"mt-4 bg-red-900/20 border-red-500/30\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                className: \"h-4 w-4\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 418,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_alert__WEBPACK_IMPORTED_MODULE_7__.AlertDescription, {\n                                className: \"text-red-400\",\n                                children: error\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 419,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 417,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                lineNumber: 406,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n            lineNumber: 405,\n            columnNumber: 7\n        }, this);\n    }\n    if (error && !loading) {\n        const isTimeoutError = error.includes(\"timeout\") || error.includes(\"Timeout\") || error.includes(\"anulowana\");\n        const isConnectionError = error.includes(\"połączenia\") || error.includes(\"internet\");\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-slate-900 flex items-center justify-center p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-md w-full text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        className: \"h-12 w-12 text-red-400 mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 436,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-semibold text-white mb-2\",\n                        children: isTimeoutError ? \"Timeout autoryzacji\" : \"Błąd autoryzacji\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 437,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-slate-400 mb-4\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 440,\n                        columnNumber: 11\n                    }, this),\n                    isTimeoutError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-orange-900/20 border border-orange-500/30 rounded-lg p-4 mb-6 text-left\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"text-orange-400 font-medium mb-2\",\n                                children: \"\\uD83D\\uDCA1 Co możesz zrobić:\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 444,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: \"text-orange-300 text-sm space-y-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Sprawdź połączenie internetowe\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 446,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Spr\\xf3buj ponownie (automatycznie)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 447,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Restart przeglądarki może pom\\xf3c\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 448,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Wyczyść cache przeglądarki\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 449,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 445,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 443,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_6__.Button, {\n                        onClick: retryAuth,\n                        className: \"bg-cyan-600 hover:bg-cyan-700 w-full mb-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                className: \"h-4 w-4 mr-2\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 458,\n                                columnNumber: 13\n                            }, this),\n                            \"Spr\\xf3buj ponownie\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 454,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_6__.Button, {\n                        variant: \"outline\",\n                        onClick: ()=>router.push(\"/login\"),\n                        className: \"border-slate-600 text-slate-300 hover:bg-slate-800 w-full\",\n                        children: \"Przejdź do logowania\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 462,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4 text-xs text-slate-500\",\n                        children: [\n                            \"Timeout: \",\n                            AUTH_TIMEOUT_MS / 1000,\n                            \"s | Wersja z persistence\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 470,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                lineNumber: 435,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n            lineNumber: 434,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            loading,\n            error,\n            retryAuth\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n        lineNumber: 479,\n        columnNumber: 5\n    }, this);\n}\n_s1(EnhancedAuthProvider, \"qNqia9MhOtK1L6Zk6uRFFveshLo=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter,\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname,\n        _store_useStore__WEBPACK_IMPORTED_MODULE_4__.useAuth\n    ];\n});\n_c = EnhancedAuthProvider;\nvar _c;\n$RefreshReg$(_c, \"EnhancedAuthProvider\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/auth/enhanced-auth-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/theme-provider.tsx":
/*!***************************************!*\
  !*** ./components/theme-provider.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider auto */ \n\n\nfunction ThemeProvider(param) {\n    let { children, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n        ...props,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\theme-provider.tsx\",\n        lineNumber: 10,\n        columnNumber: 10\n    }, this);\n}\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdGhlbWUtcHJvdmlkZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUU4QjtBQUlWO0FBRWIsU0FBU0MsY0FBYyxLQUEwQztRQUExQyxFQUFFRSxRQUFRLEVBQUUsR0FBR0MsT0FBMkIsR0FBMUM7SUFDNUIscUJBQU8sOERBQUNGLHNEQUFrQkE7UUFBRSxHQUFHRSxLQUFLO2tCQUFHRDs7Ozs7O0FBQ3pDO0tBRmdCRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxjb21wb25lbnRzXFx0aGVtZS1wcm92aWRlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHtcclxuICBUaGVtZVByb3ZpZGVyIGFzIE5leHRUaGVtZXNQcm92aWRlcixcclxuICB0eXBlIFRoZW1lUHJvdmlkZXJQcm9wcyxcclxufSBmcm9tICduZXh0LXRoZW1lcydcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHsgY2hpbGRyZW4sIC4uLnByb3BzIH06IFRoZW1lUHJvdmlkZXJQcm9wcykge1xyXG4gIHJldHVybiA8TmV4dFRoZW1lc1Byb3ZpZGVyIHsuLi5wcm9wc30+e2NoaWxkcmVufTwvTmV4dFRoZW1lc1Byb3ZpZGVyPlxyXG59XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlRoZW1lUHJvdmlkZXIiLCJOZXh0VGhlbWVzUHJvdmlkZXIiLCJjaGlsZHJlbiIsInByb3BzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/theme-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/alert.tsx":
/*!*********************************!*\
  !*** ./components/ui/alert.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alert: () => (/* binding */ Alert),\n/* harmony export */   AlertDescription: () => (/* binding */ AlertDescription),\n/* harmony export */   AlertTitle: () => (/* binding */ AlertTitle)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n\n\n\n\nconst alertVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\", {\n    variants: {\n        variant: {\n            default: \"bg-background text-foreground\",\n            destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nconst Alert = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, variant, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        role: \"alert\",\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(alertVariants({\n            variant\n        }), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\alert.tsx\",\n        lineNumber: 26,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = Alert;\nAlert.displayName = \"Alert\";\nconst AlertTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c2 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"mb-1 font-medium leading-none tracking-tight\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\alert.tsx\",\n        lineNumber: 39,\n        columnNumber: 3\n    }, undefined);\n});\n_c3 = AlertTitle;\nAlertTitle.displayName = \"AlertTitle\";\nconst AlertDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c4 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm [&_p]:leading-relaxed\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\alert.tsx\",\n        lineNumber: 51,\n        columnNumber: 3\n    }, undefined);\n});\n_c5 = AlertDescription;\nAlertDescription.displayName = \"AlertDescription\";\n\nvar _c, _c1, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c1, \"Alert\");\n$RefreshReg$(_c2, \"AlertTitle$React.forwardRef\");\n$RefreshReg$(_c3, \"AlertTitle\");\n$RefreshReg$(_c4, \"AlertDescription$React.forwardRef\");\n$RefreshReg$(_c5, \"AlertDescription\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvYWxlcnQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNtQztBQUVqQztBQUVoQyxNQUFNRyxnQkFBZ0JGLDZEQUFHQSxDQUN2Qiw2SkFDQTtJQUNFRyxVQUFVO1FBQ1JDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxhQUNFO1FBQ0o7SUFDRjtJQUNBQyxpQkFBaUI7UUFDZkgsU0FBUztJQUNYO0FBQ0Y7QUFHRixNQUFNSSxzQkFBUVQsNkNBQWdCLE1BRzVCLFFBQW1DVztRQUFsQyxFQUFFQyxTQUFTLEVBQUVQLE9BQU8sRUFBRSxHQUFHUSxPQUFPO3lCQUNqQyw4REFBQ0M7UUFDQ0gsS0FBS0E7UUFDTEksTUFBSztRQUNMSCxXQUFXViw4Q0FBRUEsQ0FBQ0MsY0FBYztZQUFFRTtRQUFRLElBQUlPO1FBQ3pDLEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JKLE1BQU1PLFdBQVcsR0FBRztBQUVwQixNQUFNQywyQkFBYWpCLDZDQUFnQixPQUdqQyxRQUEwQlc7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87eUJBQ3hCLDhEQUFDSztRQUNDUCxLQUFLQTtRQUNMQyxXQUFXViw4Q0FBRUEsQ0FBQyxnREFBZ0RVO1FBQzdELEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JJLFdBQVdELFdBQVcsR0FBRztBQUV6QixNQUFNRyxpQ0FBbUJuQiw2Q0FBZ0IsT0FHdkMsUUFBMEJXO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ0M7UUFDQ0gsS0FBS0E7UUFDTEMsV0FBV1YsOENBQUVBLENBQUMsaUNBQWlDVTtRQUM5QyxHQUFHQyxLQUFLOzs7Ozs7OztBQUdiTSxpQkFBaUJILFdBQVcsR0FBRztBQUVlIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXGNvbXBvbmVudHNcXHVpXFxhbGVydC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcclxuaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gXCJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHlcIlxyXG5cclxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxyXG5cclxuY29uc3QgYWxlcnRWYXJpYW50cyA9IGN2YShcclxuICBcInJlbGF0aXZlIHctZnVsbCByb3VuZGVkLWxnIGJvcmRlciBwLTQgWyY+c3ZnfipdOnBsLTcgWyY+c3ZnK2Rpdl06dHJhbnNsYXRlLXktWy0zcHhdIFsmPnN2Z106YWJzb2x1dGUgWyY+c3ZnXTpsZWZ0LTQgWyY+c3ZnXTp0b3AtNCBbJj5zdmddOnRleHQtZm9yZWdyb3VuZFwiLFxyXG4gIHtcclxuICAgIHZhcmlhbnRzOiB7XHJcbiAgICAgIHZhcmlhbnQ6IHtcclxuICAgICAgICBkZWZhdWx0OiBcImJnLWJhY2tncm91bmQgdGV4dC1mb3JlZ3JvdW5kXCIsXHJcbiAgICAgICAgZGVzdHJ1Y3RpdmU6XHJcbiAgICAgICAgICBcImJvcmRlci1kZXN0cnVjdGl2ZS81MCB0ZXh0LWRlc3RydWN0aXZlIGRhcms6Ym9yZGVyLWRlc3RydWN0aXZlIFsmPnN2Z106dGV4dC1kZXN0cnVjdGl2ZVwiLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIGRlZmF1bHRWYXJpYW50czoge1xyXG4gICAgICB2YXJpYW50OiBcImRlZmF1bHRcIixcclxuICAgIH0sXHJcbiAgfVxyXG4pXHJcblxyXG5jb25zdCBBbGVydCA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTERpdkVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+ICYgVmFyaWFudFByb3BzPHR5cGVvZiBhbGVydFZhcmlhbnRzPlxyXG4+KCh7IGNsYXNzTmFtZSwgdmFyaWFudCwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPGRpdlxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICByb2xlPVwiYWxlcnRcIlxyXG4gICAgY2xhc3NOYW1lPXtjbihhbGVydFZhcmlhbnRzKHsgdmFyaWFudCB9KSwgY2xhc3NOYW1lKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5BbGVydC5kaXNwbGF5TmFtZSA9IFwiQWxlcnRcIlxyXG5cclxuY29uc3QgQWxlcnRUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTEhlYWRpbmdFbGVtZW50PlxyXG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPGg1XHJcbiAgICByZWY9e3JlZn1cclxuICAgIGNsYXNzTmFtZT17Y24oXCJtYi0xIGZvbnQtbWVkaXVtIGxlYWRpbmctbm9uZSB0cmFja2luZy10aWdodFwiLCBjbGFzc05hbWUpfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkFsZXJ0VGl0bGUuZGlzcGxheU5hbWUgPSBcIkFsZXJ0VGl0bGVcIlxyXG5cclxuY29uc3QgQWxlcnREZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFBhcmFncmFwaEVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8ZGl2XHJcbiAgICByZWY9e3JlZn1cclxuICAgIGNsYXNzTmFtZT17Y24oXCJ0ZXh0LXNtIFsmX3BdOmxlYWRpbmctcmVsYXhlZFwiLCBjbGFzc05hbWUpfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkFsZXJ0RGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPSBcIkFsZXJ0RGVzY3JpcHRpb25cIlxyXG5cclxuZXhwb3J0IHsgQWxlcnQsIEFsZXJ0VGl0bGUsIEFsZXJ0RGVzY3JpcHRpb24gfVxyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJjdmEiLCJjbiIsImFsZXJ0VmFyaWFudHMiLCJ2YXJpYW50cyIsInZhcmlhbnQiLCJkZWZhdWx0IiwiZGVzdHJ1Y3RpdmUiLCJkZWZhdWx0VmFyaWFudHMiLCJBbGVydCIsImZvcndhcmRSZWYiLCJyZWYiLCJjbGFzc05hbWUiLCJwcm9wcyIsImRpdiIsInJvbGUiLCJkaXNwbGF5TmFtZSIsIkFsZXJ0VGl0bGUiLCJoNSIsIkFsZXJ0RGVzY3JpcHRpb24iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/alert.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/button.tsx":
/*!**********************************!*\
  !*** ./components/ui/button.tsx ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   buttonVariants: () => (/* binding */ buttonVariants)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n\n\n\n\n\nconst buttonVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n            destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n            outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\"\n        },\n        size: {\n            default: \"h-10 px-4 py-2\",\n            sm: \"h-9 rounded-md px-3\",\n            lg: \"h-11 rounded-md px-8\",\n            icon: \"h-10 w-10\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nconst Button = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, variant, size, asChild = false, ...props } = param;\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot : \"button\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Comp, {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({\n            variant,\n            size,\n            className\n        })),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\button.tsx\",\n        lineNumber: 46,\n        columnNumber: 7\n    }, undefined);\n});\n_c1 = Button;\nButton.displayName = \"Button\";\n\nvar _c, _c1;\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c1, \"Button\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvYnV0dG9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDYTtBQUNzQjtBQUVqQztBQUVoQyxNQUFNSSxpQkFBaUJGLDZEQUFHQSxDQUN4Qiw0VkFDQTtJQUNFRyxVQUFVO1FBQ1JDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxhQUNFO1lBQ0ZDLFNBQ0U7WUFDRkMsV0FDRTtZQUNGQyxPQUFPO1lBQ1BDLE1BQU07UUFDUjtRQUNBQyxNQUFNO1lBQ0pOLFNBQVM7WUFDVE8sSUFBSTtZQUNKQyxJQUFJO1lBQ0pDLE1BQU07UUFDUjtJQUNGO0lBQ0FDLGlCQUFpQjtRQUNmWCxTQUFTO1FBQ1RPLE1BQU07SUFDUjtBQUNGO0FBU0YsTUFBTUssdUJBQVNsQiw2Q0FBZ0IsTUFDN0IsUUFBMERvQjtRQUF6RCxFQUFFQyxTQUFTLEVBQUVmLE9BQU8sRUFBRU8sSUFBSSxFQUFFUyxVQUFVLEtBQUssRUFBRSxHQUFHQyxPQUFPO0lBQ3RELE1BQU1DLE9BQU9GLFVBQVVyQixzREFBSUEsR0FBRztJQUM5QixxQkFDRSw4REFBQ3VCO1FBQ0NILFdBQVdsQiw4Q0FBRUEsQ0FBQ0MsZUFBZTtZQUFFRTtZQUFTTztZQUFNUTtRQUFVO1FBQ3hERCxLQUFLQTtRQUNKLEdBQUdHLEtBQUs7Ozs7OztBQUdmOztBQUVGTCxPQUFPTyxXQUFXLEdBQUc7QUFFWSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxjb21wb25lbnRzXFx1aVxcYnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG5pbXBvcnQgeyBTbG90IH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1zbG90XCJcclxuaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gXCJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHlcIlxyXG5cclxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxyXG5cclxuY29uc3QgYnV0dG9uVmFyaWFudHMgPSBjdmEoXHJcbiAgXCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZ2FwLTIgd2hpdGVzcGFjZS1ub3dyYXAgcm91bmRlZC1tZCB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJpbmctb2Zmc2V0LWJhY2tncm91bmQgdHJhbnNpdGlvbi1jb2xvcnMgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOnBvaW50ZXItZXZlbnRzLW5vbmUgZGlzYWJsZWQ6b3BhY2l0eS01MCBbJl9zdmddOnBvaW50ZXItZXZlbnRzLW5vbmUgWyZfc3ZnXTpzaXplLTQgWyZfc3ZnXTpzaHJpbmstMFwiLFxyXG4gIHtcclxuICAgIHZhcmlhbnRzOiB7XHJcbiAgICAgIHZhcmlhbnQ6IHtcclxuICAgICAgICBkZWZhdWx0OiBcImJnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQgaG92ZXI6YmctcHJpbWFyeS85MFwiLFxyXG4gICAgICAgIGRlc3RydWN0aXZlOlxyXG4gICAgICAgICAgXCJiZy1kZXN0cnVjdGl2ZSB0ZXh0LWRlc3RydWN0aXZlLWZvcmVncm91bmQgaG92ZXI6YmctZGVzdHJ1Y3RpdmUvOTBcIixcclxuICAgICAgICBvdXRsaW5lOlxyXG4gICAgICAgICAgXCJib3JkZXIgYm9yZGVyLWlucHV0IGJnLWJhY2tncm91bmQgaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmRcIixcclxuICAgICAgICBzZWNvbmRhcnk6XHJcbiAgICAgICAgICBcImJnLXNlY29uZGFyeSB0ZXh0LXNlY29uZGFyeS1mb3JlZ3JvdW5kIGhvdmVyOmJnLXNlY29uZGFyeS84MFwiLFxyXG4gICAgICAgIGdob3N0OiBcImhvdmVyOmJnLWFjY2VudCBob3Zlcjp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kXCIsXHJcbiAgICAgICAgbGluazogXCJ0ZXh0LXByaW1hcnkgdW5kZXJsaW5lLW9mZnNldC00IGhvdmVyOnVuZGVybGluZVwiLFxyXG4gICAgICB9LFxyXG4gICAgICBzaXplOiB7XHJcbiAgICAgICAgZGVmYXVsdDogXCJoLTEwIHB4LTQgcHktMlwiLFxyXG4gICAgICAgIHNtOiBcImgtOSByb3VuZGVkLW1kIHB4LTNcIixcclxuICAgICAgICBsZzogXCJoLTExIHJvdW5kZWQtbWQgcHgtOFwiLFxyXG4gICAgICAgIGljb246IFwiaC0xMCB3LTEwXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgZGVmYXVsdFZhcmlhbnRzOiB7XHJcbiAgICAgIHZhcmlhbnQ6IFwiZGVmYXVsdFwiLFxyXG4gICAgICBzaXplOiBcImRlZmF1bHRcIixcclxuICAgIH0sXHJcbiAgfVxyXG4pXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvblByb3BzXHJcbiAgZXh0ZW5kcyBSZWFjdC5CdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4sXHJcbiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIGJ1dHRvblZhcmlhbnRzPiB7XHJcbiAgYXNDaGlsZD86IGJvb2xlYW5cclxufVxyXG5cclxuY29uc3QgQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MQnV0dG9uRWxlbWVudCwgQnV0dG9uUHJvcHM+KFxyXG4gICh7IGNsYXNzTmFtZSwgdmFyaWFudCwgc2l6ZSwgYXNDaGlsZCA9IGZhbHNlLCAuLi5wcm9wcyB9LCByZWYpID0+IHtcclxuICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6IFwiYnV0dG9uXCJcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxDb21wXHJcbiAgICAgICAgY2xhc3NOYW1lPXtjbihidXR0b25WYXJpYW50cyh7IHZhcmlhbnQsIHNpemUsIGNsYXNzTmFtZSB9KSl9XHJcbiAgICAgICAgcmVmPXtyZWZ9XHJcbiAgICAgICAgey4uLnByb3BzfVxyXG4gICAgICAvPlxyXG4gICAgKVxyXG4gIH1cclxuKVxyXG5CdXR0b24uZGlzcGxheU5hbWUgPSBcIkJ1dHRvblwiXHJcblxyXG5leHBvcnQgeyBCdXR0b24sIGJ1dHRvblZhcmlhbnRzIH1cclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiU2xvdCIsImN2YSIsImNuIiwiYnV0dG9uVmFyaWFudHMiLCJ2YXJpYW50cyIsInZhcmlhbnQiLCJkZWZhdWx0IiwiZGVzdHJ1Y3RpdmUiLCJvdXRsaW5lIiwic2Vjb25kYXJ5IiwiZ2hvc3QiLCJsaW5rIiwic2l6ZSIsInNtIiwibGciLCJpY29uIiwiZGVmYXVsdFZhcmlhbnRzIiwiQnV0dG9uIiwiZm9yd2FyZFJlZiIsInJlZiIsImNsYXNzTmFtZSIsImFzQ2hpbGQiLCJwcm9wcyIsIkNvbXAiLCJkaXNwbGF5TmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/button.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/toast.tsx":
/*!*********************************!*\
  !*** ./components/ui/toast.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-toast */ \"(app-pages-browser)/./node_modules/@radix-ui/react-toast/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ ToastProvider,ToastViewport,Toast,ToastTitle,ToastDescription,ToastClose,ToastAction auto */ \n\n\n\n\n\nconst ToastProvider = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Provider;\nconst ToastViewport = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 16,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = ToastViewport;\nToastViewport.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport.displayName;\nconst toastVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\", {\n    variants: {\n        variant: {\n            default: \"border bg-background text-foreground\",\n            destructive: \"destructive group border-destructive bg-destructive text-destructive-foreground\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nconst Toast = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c2 = (param, ref)=>{\n    let { className, variant, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(toastVariants({\n            variant\n        }), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, undefined);\n});\n_c3 = Toast;\nToast.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root.displayName;\nconst ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c4 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 62,\n        columnNumber: 3\n    }, undefined);\n});\n_c5 = ToastAction;\nToastAction.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action.displayName;\nconst ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c6 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\", className),\n        \"toast-close\": \"\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            className: \"h-4 w-4\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n            lineNumber: 86,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 77,\n        columnNumber: 3\n    }, undefined);\n});\n_c7 = ToastClose;\nToastClose.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close.displayName;\nconst ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c8 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm font-semibold\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 95,\n        columnNumber: 3\n    }, undefined);\n});\n_c9 = ToastTitle;\nToastTitle.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title.displayName;\nconst ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c10 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm opacity-90\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 107,\n        columnNumber: 3\n    }, undefined);\n});\n_c11 = ToastDescription;\nToastDescription.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description.displayName;\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"ToastViewport$React.forwardRef\");\n$RefreshReg$(_c1, \"ToastViewport\");\n$RefreshReg$(_c2, \"Toast$React.forwardRef\");\n$RefreshReg$(_c3, \"Toast\");\n$RefreshReg$(_c4, \"ToastAction$React.forwardRef\");\n$RefreshReg$(_c5, \"ToastAction\");\n$RefreshReg$(_c6, \"ToastClose$React.forwardRef\");\n$RefreshReg$(_c7, \"ToastClose\");\n$RefreshReg$(_c8, \"ToastTitle$React.forwardRef\");\n$RefreshReg$(_c9, \"ToastTitle\");\n$RefreshReg$(_c10, \"ToastDescription$React.forwardRef\");\n$RefreshReg$(_c11, \"ToastDescription\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/toast.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/toaster.tsx":
/*!***********************************!*\
  !*** ./components/ui/toaster.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ Toaster)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/use-toast */ \"(app-pages-browser)/./hooks/use-toast.ts\");\n/* harmony import */ var _components_ui_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/toast */ \"(app-pages-browser)/./components/ui/toast.tsx\");\n/* __next_internal_client_entry_do_not_use__ Toaster auto */ \nvar _s = $RefreshSig$();\n\n\nfunction Toaster() {\n    _s();\n    const { toasts } = (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.useToast)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastProvider, {\n        children: [\n            toasts.map(function(param) {\n                let { id, title, description, action, ...props } = param;\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.Toast, {\n                    ...props,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid gap-1\",\n                            children: [\n                                title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastTitle, {\n                                    children: title\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 22,\n                                    columnNumber: 25\n                                }, this),\n                                description && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastDescription, {\n                                    children: description\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 24,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 13\n                        }, this),\n                        action,\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastClose, {}, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, id, true, {\n                    fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 11\n                }, this);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastViewport, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n_s(Toaster, \"1YTCnXrq2qRowe0H/LBWLjtXoYc=\", false, function() {\n    return [\n        _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.useToast\n    ];\n});\n_c = Toaster;\nvar _c;\n$RefreshReg$(_c, \"Toaster\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvdG9hc3Rlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRTRDO0FBUWQ7QUFFdkIsU0FBU087O0lBQ2QsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR1IsMERBQVFBO0lBRTNCLHFCQUNFLDhEQUFDSSwrREFBYUE7O1lBQ1hJLE9BQU9DLEdBQUcsQ0FBQyxTQUFVLEtBQTRDO29CQUE1QyxFQUFFQyxFQUFFLEVBQUVDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxNQUFNLEVBQUUsR0FBR0MsT0FBTyxHQUE1QztnQkFDcEIscUJBQ0UsOERBQUNiLHVEQUFLQTtvQkFBVyxHQUFHYSxLQUFLOztzQ0FDdkIsOERBQUNDOzRCQUFJQyxXQUFVOztnQ0FDWkwsdUJBQVMsOERBQUNOLDREQUFVQTs4Q0FBRU07Ozs7OztnQ0FDdEJDLDZCQUNDLDhEQUFDVCxrRUFBZ0JBOzhDQUFFUzs7Ozs7Ozs7Ozs7O3dCQUd0QkM7c0NBQ0QsOERBQUNYLDREQUFVQTs7Ozs7O21CQVJEUTs7Ozs7WUFXaEI7MEJBQ0EsOERBQUNKLCtEQUFhQTs7Ozs7Ozs7Ozs7QUFHcEI7R0F0QmdCQzs7UUFDS1Asc0RBQVFBOzs7S0FEYk8iLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcY29tcG9uZW50c1xcdWlcXHRvYXN0ZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXHJcblxyXG5pbXBvcnQgeyB1c2VUb2FzdCB9IGZyb20gXCJAL2hvb2tzL3VzZS10b2FzdFwiXHJcbmltcG9ydCB7XHJcbiAgVG9hc3QsXHJcbiAgVG9hc3RDbG9zZSxcclxuICBUb2FzdERlc2NyaXB0aW9uLFxyXG4gIFRvYXN0UHJvdmlkZXIsXHJcbiAgVG9hc3RUaXRsZSxcclxuICBUb2FzdFZpZXdwb3J0LFxyXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvdG9hc3RcIlxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFRvYXN0ZXIoKSB7XHJcbiAgY29uc3QgeyB0b2FzdHMgfSA9IHVzZVRvYXN0KClcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxUb2FzdFByb3ZpZGVyPlxyXG4gICAgICB7dG9hc3RzLm1hcChmdW5jdGlvbiAoeyBpZCwgdGl0bGUsIGRlc2NyaXB0aW9uLCBhY3Rpb24sIC4uLnByb3BzIH0pIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgPFRvYXN0IGtleT17aWR9IHsuLi5wcm9wc30+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBnYXAtMVwiPlxyXG4gICAgICAgICAgICAgIHt0aXRsZSAmJiA8VG9hc3RUaXRsZT57dGl0bGV9PC9Ub2FzdFRpdGxlPn1cclxuICAgICAgICAgICAgICB7ZGVzY3JpcHRpb24gJiYgKFxyXG4gICAgICAgICAgICAgICAgPFRvYXN0RGVzY3JpcHRpb24+e2Rlc2NyaXB0aW9ufTwvVG9hc3REZXNjcmlwdGlvbj5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAge2FjdGlvbn1cclxuICAgICAgICAgICAgPFRvYXN0Q2xvc2UgLz5cclxuICAgICAgICAgIDwvVG9hc3Q+XHJcbiAgICAgICAgKVxyXG4gICAgICB9KX1cclxuICAgICAgPFRvYXN0Vmlld3BvcnQgLz5cclxuICAgIDwvVG9hc3RQcm92aWRlcj5cclxuICApXHJcbn1cclxuIl0sIm5hbWVzIjpbInVzZVRvYXN0IiwiVG9hc3QiLCJUb2FzdENsb3NlIiwiVG9hc3REZXNjcmlwdGlvbiIsIlRvYXN0UHJvdmlkZXIiLCJUb2FzdFRpdGxlIiwiVG9hc3RWaWV3cG9ydCIsIlRvYXN0ZXIiLCJ0b2FzdHMiLCJtYXAiLCJpZCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhY3Rpb24iLCJwcm9wcyIsImRpdiIsImNsYXNzTmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/toaster.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./hooks/use-toast.ts":
/*!****************************!*\
  !*** ./hooks/use-toast.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reducer: () => (/* binding */ reducer),\n/* harmony export */   toast: () => (/* binding */ toast),\n/* harmony export */   useToast: () => (/* binding */ useToast)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ reducer,useToast,toast auto */ // Inspired by react-hot-toast library\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\nconst actionTypes = {\n    ADD_TOAST: \"ADD_TOAST\",\n    UPDATE_TOAST: \"UPDATE_TOAST\",\n    DISMISS_TOAST: \"DISMISS_TOAST\",\n    REMOVE_TOAST: \"REMOVE_TOAST\"\n};\nlet count = 0;\nfunction genId() {\n    count = (count + 1) % Number.MAX_SAFE_INTEGER;\n    return count.toString();\n}\nconst toastTimeouts = new Map();\nconst addToRemoveQueue = (toastId)=>{\n    if (toastTimeouts.has(toastId)) {\n        return;\n    }\n    const timeout = setTimeout(()=>{\n        toastTimeouts.delete(toastId);\n        dispatch({\n            type: \"REMOVE_TOAST\",\n            toastId: toastId\n        });\n    }, TOAST_REMOVE_DELAY);\n    toastTimeouts.set(toastId, timeout);\n};\nconst reducer = (state, action)=>{\n    switch(action.type){\n        case \"ADD_TOAST\":\n            return {\n                ...state,\n                toasts: [\n                    action.toast,\n                    ...state.toasts\n                ].slice(0, TOAST_LIMIT)\n            };\n        case \"UPDATE_TOAST\":\n            return {\n                ...state,\n                toasts: state.toasts.map((t)=>t.id === action.toast.id ? {\n                        ...t,\n                        ...action.toast\n                    } : t)\n            };\n        case \"DISMISS_TOAST\":\n            {\n                const { toastId } = action;\n                // ! Side effects ! - This could be extracted into a dismissToast() action,\n                // but I'll keep it here for simplicity\n                if (toastId) {\n                    addToRemoveQueue(toastId);\n                } else {\n                    state.toasts.forEach((toast)=>{\n                        addToRemoveQueue(toast.id);\n                    });\n                }\n                return {\n                    ...state,\n                    toasts: state.toasts.map((t)=>t.id === toastId || toastId === undefined ? {\n                            ...t,\n                            open: false\n                        } : t)\n                };\n            }\n        case \"REMOVE_TOAST\":\n            if (action.toastId === undefined) {\n                return {\n                    ...state,\n                    toasts: []\n                };\n            }\n            return {\n                ...state,\n                toasts: state.toasts.filter((t)=>t.id !== action.toastId)\n            };\n    }\n};\nconst listeners = [];\nlet memoryState = {\n    toasts: []\n};\nfunction dispatch(action) {\n    memoryState = reducer(memoryState, action);\n    listeners.forEach((listener)=>{\n        listener(memoryState);\n    });\n}\nfunction toast(param) {\n    let { ...props } = param;\n    const id = genId();\n    const update = (props)=>dispatch({\n            type: \"UPDATE_TOAST\",\n            toast: {\n                ...props,\n                id\n            }\n        });\n    const dismiss = ()=>dispatch({\n            type: \"DISMISS_TOAST\",\n            toastId: id\n        });\n    dispatch({\n        type: \"ADD_TOAST\",\n        toast: {\n            ...props,\n            id,\n            open: true,\n            onOpenChange: (open)=>{\n                if (!open) dismiss();\n            }\n        }\n    });\n    return {\n        id: id,\n        dismiss,\n        update\n    };\n}\nfunction useToast() {\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(memoryState);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useToast.useEffect\": ()=>{\n            listeners.push(setState);\n            return ({\n                \"useToast.useEffect\": ()=>{\n                    const index = listeners.indexOf(setState);\n                    if (index > -1) {\n                        listeners.splice(index, 1);\n                    }\n                }\n            })[\"useToast.useEffect\"];\n        }\n    }[\"useToast.useEffect\"], [\n        state\n    ]);\n    return {\n        ...state,\n        toast,\n        dismiss: (toastId)=>dispatch({\n                type: \"DISMISS_TOAST\",\n                toastId\n            })\n    };\n}\n\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-toast.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/language-context.tsx":
/*!**********************************!*\
  !*** ./lib/language-context.tsx ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LanguageProvider: () => (/* binding */ LanguageProvider),\n/* harmony export */   useLanguage: () => (/* binding */ useLanguage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/translations */ \"(app-pages-browser)/./lib/translations.ts\");\n/* harmony import */ var _store_useStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/useStore */ \"(app-pages-browser)/./store/useStore.ts\");\n/* __next_internal_client_entry_do_not_use__ LanguageProvider,useLanguage auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst LanguageContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction LanguageProvider(param) {\n    let { children } = param;\n    _s();\n    const { user } = (0,_store_useStore__WEBPACK_IMPORTED_MODULE_3__.useStore)();\n    const [language, setLanguageState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('pl');\n    // Pobierz język z profilu użytkownika lub localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"LanguageProvider.useEffect\": ()=>{\n            if (user === null || user === void 0 ? void 0 : user.language) {\n                setLanguageState(user.language);\n            } else {\n                // Fallback do localStorage lub domyślnego języka\n                const savedLanguage = localStorage.getItem('app-language');\n                if (savedLanguage && [\n                    'pl',\n                    'en',\n                    'sk'\n                ].includes(savedLanguage)) {\n                    setLanguageState(savedLanguage);\n                }\n            }\n        }\n    }[\"LanguageProvider.useEffect\"], [\n        user\n    ]);\n    const setLanguage = (lang)=>{\n        setLanguageState(lang);\n        localStorage.setItem('app-language', lang);\n    };\n    const { t } = (0,_lib_translations__WEBPACK_IMPORTED_MODULE_2__.useTranslation)(language);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LanguageContext.Provider, {\n        value: {\n            language,\n            setLanguage,\n            t\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpectresGroupCRM\\\\dashboard\\\\lib\\\\language-context.tsx\",\n        lineNumber: 44,\n        columnNumber: 5\n    }, this);\n}\n_s(LanguageProvider, \"sk/kPbpXYz2YeNiKFszIHggvJqg=\", false, function() {\n    return [\n        _store_useStore__WEBPACK_IMPORTED_MODULE_3__.useStore,\n        _lib_translations__WEBPACK_IMPORTED_MODULE_2__.useTranslation\n    ];\n});\n_c = LanguageProvider;\nfunction useLanguage() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LanguageContext);\n    if (context === undefined) {\n        throw new Error('useLanguage must be used within a LanguageProvider');\n    }\n    return context;\n}\n_s1(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9sYW5ndWFnZS1jb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFaUY7QUFDcEI7QUFDbEI7QUFRM0MsTUFBTU0sZ0NBQWtCTixvREFBYUEsQ0FBa0NPO0FBTWhFLFNBQVNDLGlCQUFpQixLQUFtQztRQUFuQyxFQUFFQyxRQUFRLEVBQXlCLEdBQW5DOztJQUMvQixNQUFNLEVBQUVDLElBQUksRUFBRSxHQUFHTCx5REFBUUE7SUFDekIsTUFBTSxDQUFDTSxVQUFVQyxpQkFBaUIsR0FBR1QsK0NBQVFBLENBQVc7SUFFeEQsdURBQXVEO0lBQ3ZERCxnREFBU0E7c0NBQUM7WUFDUixJQUFJUSxpQkFBQUEsMkJBQUFBLEtBQU1DLFFBQVEsRUFBRTtnQkFDbEJDLGlCQUFpQkYsS0FBS0MsUUFBUTtZQUNoQyxPQUFPO2dCQUNMLGlEQUFpRDtnQkFDakQsTUFBTUUsZ0JBQWdCQyxhQUFhQyxPQUFPLENBQUM7Z0JBQzNDLElBQUlGLGlCQUFpQjtvQkFBQztvQkFBTTtvQkFBTTtpQkFBSyxDQUFDRyxRQUFRLENBQUNILGdCQUFnQjtvQkFDL0RELGlCQUFpQkM7Z0JBQ25CO1lBQ0Y7UUFDRjtxQ0FBRztRQUFDSDtLQUFLO0lBRVQsTUFBTU8sY0FBYyxDQUFDQztRQUNuQk4saUJBQWlCTTtRQUNqQkosYUFBYUssT0FBTyxDQUFDLGdCQUFnQkQ7SUFDdkM7SUFFQSxNQUFNLEVBQUVFLENBQUMsRUFBRSxHQUFHaEIsaUVBQWNBLENBQUNPO0lBRTdCLHFCQUNFLDhEQUFDTCxnQkFBZ0JlLFFBQVE7UUFBQ0MsT0FBTztZQUFFWDtZQUFVTTtZQUFhRztRQUFFO2tCQUN6RFg7Ozs7OztBQUdQO0dBN0JnQkQ7O1FBQ0dILHFEQUFRQTtRQXFCWEQsNkRBQWNBOzs7S0F0QmRJO0FBK0JULFNBQVNlOztJQUNkLE1BQU1DLFVBQVV2QixpREFBVUEsQ0FBQ0s7SUFDM0IsSUFBSWtCLFlBQVlqQixXQUFXO1FBQ3pCLE1BQU0sSUFBSWtCLE1BQU07SUFDbEI7SUFDQSxPQUFPRDtBQUNUO0lBTmdCRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxsaWJcXGxhbmd1YWdlLWNvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xyXG5cclxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IExhbmd1YWdlLCB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ0AvbGliL3RyYW5zbGF0aW9ucydcclxuaW1wb3J0IHsgdXNlU3RvcmUgfSBmcm9tICdAL3N0b3JlL3VzZVN0b3JlJ1xyXG5cclxuaW50ZXJmYWNlIExhbmd1YWdlQ29udGV4dFR5cGUge1xyXG4gIGxhbmd1YWdlOiBMYW5ndWFnZVxyXG4gIHNldExhbmd1YWdlOiAobGFuZzogTGFuZ3VhZ2UpID0+IHZvaWRcclxuICB0OiAoa2V5OiBzdHJpbmcpID0+IHN0cmluZ1xyXG59XHJcblxyXG5jb25zdCBMYW5ndWFnZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PExhbmd1YWdlQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZClcclxuXHJcbmludGVyZmFjZSBMYW5ndWFnZVByb3ZpZGVyUHJvcHMge1xyXG4gIGNoaWxkcmVuOiBSZWFjdE5vZGVcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIExhbmd1YWdlUHJvdmlkZXIoeyBjaGlsZHJlbiB9OiBMYW5ndWFnZVByb3ZpZGVyUHJvcHMpIHtcclxuICBjb25zdCB7IHVzZXIgfSA9IHVzZVN0b3JlKClcclxuICBjb25zdCBbbGFuZ3VhZ2UsIHNldExhbmd1YWdlU3RhdGVdID0gdXNlU3RhdGU8TGFuZ3VhZ2U+KCdwbCcpXHJcbiAgXHJcbiAgLy8gUG9iaWVyeiBqxJl6eWsgeiBwcm9maWx1IHXFvHl0a293bmlrYSBsdWIgbG9jYWxTdG9yYWdlXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICh1c2VyPy5sYW5ndWFnZSkge1xyXG4gICAgICBzZXRMYW5ndWFnZVN0YXRlKHVzZXIubGFuZ3VhZ2UpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBGYWxsYmFjayBkbyBsb2NhbFN0b3JhZ2UgbHViIGRvbXnFm2xuZWdvIGrEmXp5a2FcclxuICAgICAgY29uc3Qgc2F2ZWRMYW5ndWFnZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhcHAtbGFuZ3VhZ2UnKSBhcyBMYW5ndWFnZVxyXG4gICAgICBpZiAoc2F2ZWRMYW5ndWFnZSAmJiBbJ3BsJywgJ2VuJywgJ3NrJ10uaW5jbHVkZXMoc2F2ZWRMYW5ndWFnZSkpIHtcclxuICAgICAgICBzZXRMYW5ndWFnZVN0YXRlKHNhdmVkTGFuZ3VhZ2UpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9LCBbdXNlcl0pXHJcblxyXG4gIGNvbnN0IHNldExhbmd1YWdlID0gKGxhbmc6IExhbmd1YWdlKSA9PiB7XHJcbiAgICBzZXRMYW5ndWFnZVN0YXRlKGxhbmcpXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXBwLWxhbmd1YWdlJywgbGFuZylcclxuICB9XHJcblxyXG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24obGFuZ3VhZ2UpXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8TGFuZ3VhZ2VDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGxhbmd1YWdlLCBzZXRMYW5ndWFnZSwgdCB9fT5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9MYW5ndWFnZUNvbnRleHQuUHJvdmlkZXI+XHJcbiAgKVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXNlTGFuZ3VhZ2UoKSB7XHJcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoTGFuZ3VhZ2VDb250ZXh0KVxyXG4gIGlmIChjb250ZXh0ID09PSB1bmRlZmluZWQpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcigndXNlTGFuZ3VhZ2UgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIExhbmd1YWdlUHJvdmlkZXInKVxyXG4gIH1cclxuICByZXR1cm4gY29udGV4dFxyXG59ICJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlVHJhbnNsYXRpb24iLCJ1c2VTdG9yZSIsIkxhbmd1YWdlQ29udGV4dCIsInVuZGVmaW5lZCIsIkxhbmd1YWdlUHJvdmlkZXIiLCJjaGlsZHJlbiIsInVzZXIiLCJsYW5ndWFnZSIsInNldExhbmd1YWdlU3RhdGUiLCJzYXZlZExhbmd1YWdlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImluY2x1ZGVzIiwic2V0TGFuZ3VhZ2UiLCJsYW5nIiwic2V0SXRlbSIsInQiLCJQcm92aWRlciIsInZhbHVlIiwidXNlTGFuZ3VhZ2UiLCJjb250ZXh0IiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/language-context.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/logger.ts":
/*!***********************!*\
  !*** ./lib/logger.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\nclass Logger {\n    log(message, context) {\n        if (this.isDevelopment) {\n            console.log(\"\\uD83D\\uDCDD \".concat(message), context ? context : '');\n        }\n    }\n    info(message, context) {\n        if (this.isDevelopment) {\n            console.info(\"ℹ️ \".concat(message), context ? context : '');\n        }\n    }\n    warn(message, context) {\n        if (this.isDevelopment) {\n            console.warn(\"⚠️ \".concat(message), context ? context : '');\n        }\n    }\n    error(message, error, context) {\n        // Błędy logujemy zawsze, nawet w produkcji\n        console.error(\"❌ \".concat(message), error, context ? context : '');\n    }\n    debug(message, data) {\n        if (this.isDevelopment) {\n            console.debug(\"\\uD83D\\uDD0D \".concat(message), data ? data : '');\n        }\n    }\n    success(message, context) {\n        if (this.isDevelopment) {\n            console.log(\"✅ \".concat(message), context ? context : '');\n        }\n    }\n    loading(message, context) {\n        if (this.isDevelopment) {\n            console.log(\"\\uD83D\\uDD04 \".concat(message), context ? context : '');\n        }\n    }\n    constructor(){\n        this.isDevelopment = \"development\" !== 'production';\n    }\n}\nconst logger = new Logger();\n// Dla kompatybilności wstecznej\nconst log = function() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (true) {\n        console.log(...args);\n    }\n};\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9sb2dnZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFPQSxNQUFNQTtJQUdKQyxJQUFJQyxPQUFlLEVBQUVDLE9BQW9CLEVBQUU7UUFDekMsSUFBSSxJQUFJLENBQUNDLGFBQWEsRUFBRTtZQUN0QkMsUUFBUUosR0FBRyxDQUFDLGdCQUFjLE9BQVJDLFVBQVdDLFVBQVVBLFVBQVU7UUFDbkQ7SUFDRjtJQUVBRyxLQUFLSixPQUFlLEVBQUVDLE9BQW9CLEVBQUU7UUFDMUMsSUFBSSxJQUFJLENBQUNDLGFBQWEsRUFBRTtZQUN0QkMsUUFBUUMsSUFBSSxDQUFDLE1BQWMsT0FBUkosVUFBV0MsVUFBVUEsVUFBVTtRQUNwRDtJQUNGO0lBRUFJLEtBQUtMLE9BQWUsRUFBRUMsT0FBb0IsRUFBRTtRQUMxQyxJQUFJLElBQUksQ0FBQ0MsYUFBYSxFQUFFO1lBQ3RCQyxRQUFRRSxJQUFJLENBQUMsTUFBYyxPQUFSTCxVQUFXQyxVQUFVQSxVQUFVO1FBQ3BEO0lBQ0Y7SUFFQUssTUFBTU4sT0FBZSxFQUFFTSxLQUFXLEVBQUVMLE9BQW9CLEVBQUU7UUFDeEQsMkNBQTJDO1FBQzNDRSxRQUFRRyxLQUFLLENBQUMsS0FBYSxPQUFSTixVQUFXTSxPQUFPTCxVQUFVQSxVQUFVO0lBQzNEO0lBRUFNLE1BQU1QLE9BQWUsRUFBRVEsSUFBVSxFQUFFO1FBQ2pDLElBQUksSUFBSSxDQUFDTixhQUFhLEVBQUU7WUFDdEJDLFFBQVFJLEtBQUssQ0FBQyxnQkFBYyxPQUFSUCxVQUFXUSxPQUFPQSxPQUFPO1FBQy9DO0lBQ0Y7SUFFQUMsUUFBUVQsT0FBZSxFQUFFQyxPQUFvQixFQUFFO1FBQzdDLElBQUksSUFBSSxDQUFDQyxhQUFhLEVBQUU7WUFDdEJDLFFBQVFKLEdBQUcsQ0FBQyxLQUFhLE9BQVJDLFVBQVdDLFVBQVVBLFVBQVU7UUFDbEQ7SUFDRjtJQUVBUyxRQUFRVixPQUFlLEVBQUVDLE9BQW9CLEVBQUU7UUFDN0MsSUFBSSxJQUFJLENBQUNDLGFBQWEsRUFBRTtZQUN0QkMsUUFBUUosR0FBRyxDQUFDLGdCQUFjLE9BQVJDLFVBQVdDLFVBQVVBLFVBQVU7UUFDbkQ7SUFDRjs7YUF6Q1FDLGdCQUFnQlMsYUFBb0IsS0FBSzs7QUEwQ25EO0FBRU8sTUFBTUcsU0FBUyxJQUFJaEIsU0FBUTtBQUVsQyxnQ0FBZ0M7QUFDekIsTUFBTUMsTUFBTTtxQ0FBSWdCO1FBQUFBOztJQUNyQixJQUFJSixJQUFxQyxFQUFFO1FBQ3pDUixRQUFRSixHQUFHLElBQUlnQjtJQUNqQjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbGliXFxsb2dnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIExvZ0NvbnRleHQge1xyXG4gIGNvbXBvbmVudD86IHN0cmluZ1xyXG4gIGFjdGlvbj86IHN0cmluZ1xyXG4gIGRhdGE/OiBhbnlcclxuICBba2V5OiBzdHJpbmddOiBhbnlcclxufVxyXG5cclxuY2xhc3MgTG9nZ2VyIHtcclxuICBwcml2YXRlIGlzRGV2ZWxvcG1lbnQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nXHJcbiAgXHJcbiAgbG9nKG1lc3NhZ2U6IHN0cmluZywgY29udGV4dD86IExvZ0NvbnRleHQpIHtcclxuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcclxuICAgICAgY29uc29sZS5sb2coYPCfk50gJHttZXNzYWdlfWAsIGNvbnRleHQgPyBjb250ZXh0IDogJycpXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIGluZm8obWVzc2FnZTogc3RyaW5nLCBjb250ZXh0PzogTG9nQ29udGV4dCkge1xyXG4gICAgaWYgKHRoaXMuaXNEZXZlbG9wbWVudCkge1xyXG4gICAgICBjb25zb2xlLmluZm8oYOKEue+4jyAke21lc3NhZ2V9YCwgY29udGV4dCA/IGNvbnRleHQgOiAnJylcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgd2FybihtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ/OiBMb2dDb250ZXh0KSB7XHJcbiAgICBpZiAodGhpcy5pc0RldmVsb3BtZW50KSB7XHJcbiAgICAgIGNvbnNvbGUud2Fybihg4pqg77iPICR7bWVzc2FnZX1gLCBjb250ZXh0ID8gY29udGV4dCA6ICcnKVxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBlcnJvcihtZXNzYWdlOiBzdHJpbmcsIGVycm9yPzogYW55LCBjb250ZXh0PzogTG9nQ29udGV4dCkge1xyXG4gICAgLy8gQsWCxJlkeSBsb2d1amVteSB6YXdzemUsIG5hd2V0IHcgcHJvZHVrY2ppXHJcbiAgICBjb25zb2xlLmVycm9yKGDinYwgJHttZXNzYWdlfWAsIGVycm9yLCBjb250ZXh0ID8gY29udGV4dCA6ICcnKVxyXG4gIH1cclxuICBcclxuICBkZWJ1ZyhtZXNzYWdlOiBzdHJpbmcsIGRhdGE/OiBhbnkpIHtcclxuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcclxuICAgICAgY29uc29sZS5kZWJ1Zyhg8J+UjSAke21lc3NhZ2V9YCwgZGF0YSA/IGRhdGEgOiAnJylcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgc3VjY2VzcyhtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ/OiBMb2dDb250ZXh0KSB7XHJcbiAgICBpZiAodGhpcy5pc0RldmVsb3BtZW50KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGDinIUgJHttZXNzYWdlfWAsIGNvbnRleHQgPyBjb250ZXh0IDogJycpXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIGxvYWRpbmcobWVzc2FnZTogc3RyaW5nLCBjb250ZXh0PzogTG9nQ29udGV4dCkge1xyXG4gICAgaWYgKHRoaXMuaXNEZXZlbG9wbWVudCkge1xyXG4gICAgICBjb25zb2xlLmxvZyhg8J+UhCAke21lc3NhZ2V9YCwgY29udGV4dCA/IGNvbnRleHQgOiAnJylcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKClcclxuXHJcbi8vIERsYSBrb21wYXR5Ymlsbm/Fm2NpIHdzdGVjem5lalxyXG5leHBvcnQgY29uc3QgbG9nID0gKC4uLmFyZ3M6IGFueVtdKSA9PiB7XHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICAgIGNvbnNvbGUubG9nKC4uLmFyZ3MpXHJcbiAgfVxyXG59ICJdLCJuYW1lcyI6WyJMb2dnZXIiLCJsb2ciLCJtZXNzYWdlIiwiY29udGV4dCIsImlzRGV2ZWxvcG1lbnQiLCJjb25zb2xlIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImRlYnVnIiwiZGF0YSIsInN1Y2Nlc3MiLCJsb2FkaW5nIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwibG9nZ2VyIiwiYXJncyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/logger.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   activityLogsApi: () => (/* binding */ activityLogsApi),\n/* harmony export */   authApi: () => (/* binding */ authApi),\n/* harmony export */   clientsApi: () => (/* binding */ clientsApi),\n/* harmony export */   csvImportApi: () => (/* binding */ csvImportApi),\n/* harmony export */   dashboardApi: () => (/* binding */ dashboardApi),\n/* harmony export */   getAvatarUrl: () => (/* binding */ getAvatarUrl),\n/* harmony export */   getCanvasClientsWithPriority: () => (/* binding */ getCanvasClientsWithPriority),\n/* harmony export */   getCanvasStatusColor: () => (/* binding */ getCanvasStatusColor),\n/* harmony export */   performanceApi: () => (/* binding */ performanceApi),\n/* harmony export */   permissionsApi: () => (/* binding */ permissionsApi),\n/* harmony export */   reportsApi: () => (/* binding */ reportsApi),\n/* harmony export */   storageApi: () => (/* binding */ storageApi),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   teamApi: () => (/* binding */ teamApi)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://pkhuggdkcglicghgxiyp.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBraHVnZ2RrY2dsaWNnaGd4aXlwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk5MTEwNzEsImV4cCI6MjA2NTQ4NzA3MX0.LbWtb-modRDlvnkGF5IswRHe1lJpd4zCMgkQ3_E0QQk\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Funkcja pomocnicza do generowania poprawnych URL-i avatarów z Supabase Storage\nconst getAvatarUrl = (avatarUrl)=>{\n    if (!avatarUrl) return null;\n    // Jeśli to już pełny URL (zaczyna się od http), zwróć bez zmian\n    if (avatarUrl.startsWith('http')) {\n        return avatarUrl;\n    }\n    // Jeśli to ścieżka w bucket'u (zawiera folder), wygeneruj publiczny URL\n    if (avatarUrl.includes('/')) {\n        try {\n            const { data } = supabase.storage.from('avatars').getPublicUrl(avatarUrl);\n            return data.publicUrl;\n        } catch (error) {\n            console.error('Błąd generowania URL avatara:', error);\n            return null;\n        }\n    }\n    // Fallback - prawdopodobnie niepoprawny format\n    console.warn('Nierozpoznany format avatar_url:', avatarUrl);\n    return null;\n};\n// Storage API dla plików CSV\nconst storageApi = {\n    // Upload pliku CSV do bucket\n    async uploadCSV (file, user) {\n        try {\n            const fileName = \"\".concat(user.id, \"_\").concat(Date.now(), \"_\").concat(file.name);\n            const filePath = \"csv-imports/\".concat(fileName);\n            console.log(\"\\uD83D\\uDCC1 Uploading CSV: \".concat(filePath));\n            const { data, error } = await supabase.storage.from('csv-files').upload(filePath, file, {\n                cacheControl: '3600',\n                upsert: false\n            });\n            if (error) {\n                console.error('❌ Storage upload error:', error);\n                throw new Error(\"Błąd uploadu: \".concat(error.message));\n            }\n            console.log('✅ File uploaded successfully:', data.path);\n            return data.path;\n        } catch (error) {\n            console.error('❌ Upload failed:', error);\n            throw error;\n        }\n    },\n    // Pobierz publiczny URL pliku\n    getPublicUrl (path) {\n        const { data } = supabase.storage.from('csv-files').getPublicUrl(path);\n        return data.publicUrl;\n    },\n    // Usuń plik z bucket\n    async deleteFile (path) {\n        const { error } = await supabase.storage.from('csv-files').remove([\n            path\n        ]);\n        if (error) {\n            console.error('❌ File deletion error:', error);\n            throw new Error(\"Błąd usuwania pliku: \".concat(error.message));\n        }\n    }\n};\n// CSV Import API\nconst csvImportApi = {\n    // Parsuj CSV i zwróć dane\n    parseCSV (csvText) {\n        const lines = csvText.split('\\n').filter((line)=>line.trim() !== '');\n        if (lines.length < 2) {\n            throw new Error('Plik CSV jest pusty lub zawiera tylko nagłówki');\n        }\n        // Parsowanie z obsługą cudzysłowów\n        const parseCSVLine = (line)=>{\n            const result = [];\n            let current = '';\n            let inQuotes = false;\n            for(let i = 0; i < line.length; i++){\n                const char = line[i];\n                if (char === '\"') {\n                    inQuotes = !inQuotes;\n                } else if (char === ',' && !inQuotes) {\n                    result.push(current.trim());\n                    current = '';\n                } else {\n                    current += char;\n                }\n            }\n            result.push(current.trim());\n            return result.map((cell)=>cell.replace(/^\"|\"$/g, '')) // Usuń cudzysłowy\n            ;\n        };\n        const headers = parseCSVLine(lines[0]);\n        const rows = lines.slice(1).map(parseCSVLine);\n        return {\n            headers,\n            rows\n        };\n    },\n    // Mapuj nagłówki CSV na pola bazy danych\n    mapHeaders (headers) {\n        const mapping = {};\n        const fieldMappings = [\n            {\n                fields: [\n                    'first_name',\n                    'imię',\n                    'name',\n                    'firstName'\n                ],\n                dbField: 'first_name'\n            },\n            {\n                fields: [\n                    'last_name',\n                    'nazwisko',\n                    'surname',\n                    'lastName'\n                ],\n                dbField: 'last_name'\n            },\n            {\n                fields: [\n                    'company_name',\n                    'firma',\n                    'company',\n                    'companyName',\n                    'nazwa'\n                ],\n                dbField: 'company_name'\n            },\n            {\n                fields: [\n                    'nip',\n                    'tax_id',\n                    'taxId'\n                ],\n                dbField: 'nip'\n            },\n            {\n                fields: [\n                    'phone',\n                    'telefon',\n                    'telephone'\n                ],\n                dbField: 'phone'\n            },\n            {\n                fields: [\n                    'email',\n                    'e-mail',\n                    'mail'\n                ],\n                dbField: 'email'\n            },\n            {\n                fields: [\n                    'website',\n                    'www',\n                    'strona',\n                    'url'\n                ],\n                dbField: 'website'\n            },\n            {\n                fields: [\n                    'notes',\n                    'notatka',\n                    'note',\n                    'comment'\n                ],\n                dbField: 'notes'\n            },\n            {\n                fields: [\n                    'status'\n                ],\n                dbField: 'status'\n            }\n        ];\n        for (const fieldMapping of fieldMappings){\n            for(let i = 0; i < headers.length; i++){\n                const header = headers[i].toLowerCase().trim();\n                if (fieldMapping.fields.some((field)=>header.includes(field))) {\n                    mapping[fieldMapping.dbField] = i;\n                    break;\n                }\n            }\n        }\n        return mapping;\n    },\n    // Waliduj wymagane pola\n    validateRequiredFields (mapping) {\n        const requiredFields = [\n            'company_name'\n        ];\n        const missingFields = requiredFields.filter((field)=>!(field in mapping));\n        if (missingFields.length > 0) {\n            throw new Error(\"Brak wymaganych kolumn: \".concat(missingFields.join(', '), \". Wymagane: Firma/Nazwa\"));\n        }\n    },\n    // Sprawdź dostępne kolumny i pokaż informacje\n    analyzeColumns (mapping, headers) {\n        const allPossibleFields = [\n            {\n                field: 'first_name',\n                displayName: 'Imię',\n                required: false\n            },\n            {\n                field: 'last_name',\n                displayName: 'Nazwisko',\n                required: false\n            },\n            {\n                field: 'company_name',\n                displayName: 'Firma/Nazwa',\n                required: true\n            },\n            {\n                field: 'phone',\n                displayName: 'Telefon',\n                required: false\n            },\n            {\n                field: 'email',\n                displayName: 'Email',\n                required: false\n            },\n            {\n                field: 'nip',\n                displayName: 'NIP',\n                required: false\n            },\n            {\n                field: 'website',\n                displayName: 'Strona WWW',\n                required: false\n            },\n            {\n                field: 'notes',\n                displayName: 'Notatki',\n                required: false\n            },\n            {\n                field: 'status',\n                displayName: 'Status',\n                required: false\n            }\n        ];\n        const found = [];\n        const missing = [];\n        const optional = [];\n        allPossibleFields.forEach((param)=>{\n            let { field, displayName, required } = param;\n            if (field in mapping) {\n                found.push(displayName);\n            } else if (required) {\n                missing.push(displayName);\n            } else {\n                optional.push(displayName);\n            }\n        });\n        return {\n            found,\n            missing,\n            optional\n        };\n    },\n    // Przekształć wiersz CSV na obiekt klienta\n    rowToClient (row, mapping, user) {\n        const getField = function(field) {\n            let defaultValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'brak informacji';\n            const index = mapping[field];\n            if (index === undefined) {\n                return defaultValue;\n            }\n            const value = (row[index] || '').trim();\n            return value === '' ? defaultValue : value;\n        };\n        // Walidacja statusu\n        const rawStatus = getField('status', 'canvas').toLowerCase();\n        const validStatuses = [\n            'canvas',\n            'brak_kontaktu',\n            'nie_zainteresowany',\n            'zdenerwowany',\n            'antysale',\n            'sale',\n            '$$'\n        ];\n        const status = validStatuses.includes(rawStatus) ? rawStatus : 'canvas';\n        return {\n            first_name: getField('first_name'),\n            last_name: getField('last_name'),\n            company_name: getField('company_name', ''),\n            nip: getField('nip'),\n            phone: getField('phone'),\n            email: getField('email'),\n            website: getField('website'),\n            notes: getField('notes'),\n            status,\n            edited_by: user.id,\n            edited_at: new Date().toISOString(),\n            owner_id: user.id,\n            last_edited_by_name: user.full_name,\n            last_edited_by_avatar_url: user.avatar_url\n        };\n    },\n    // Import pełnego CSV do bazy danych\n    async importCSV (file, user, onProgress) {\n        try {\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 0,\n                total: 100,\n                status: 'Uploading pliku...'\n            });\n            // 1. Upload pliku do Storage\n            const filePath = await storageApi.uploadCSV(file, user);\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 20,\n                total: 100,\n                status: 'Parsowanie CSV...'\n            });\n            // 2. Czytanie i parsowanie CSV\n            const csvText = await file.text();\n            const { headers, rows } = csvImportApi.parseCSV(csvText);\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 40,\n                total: 100,\n                status: 'Mapowanie kolumn...'\n            });\n            // 3. Mapowanie nagłówków\n            const mapping = csvImportApi.mapHeaders(headers);\n            csvImportApi.validateRequiredFields(mapping);\n            // 4. Analiza dostępnych kolumn\n            const columnAnalysis = csvImportApi.analyzeColumns(mapping, headers);\n            console.log('📊 CSV Headers:', headers);\n            console.log('📊 Field mapping:', mapping);\n            console.log('📊 Rows to import:', rows.length);\n            console.log('✅ Znalezione kolumny:', columnAnalysis.found);\n            console.log('❌ Brakujące wymagane:', columnAnalysis.missing);\n            console.log('⚪ Opcjonalne (będą \"brak informacji\"):', columnAnalysis.optional);\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 50,\n                total: 100,\n                status: \"Importowanie \".concat(rows.length, \" klient\\xf3w...\")\n            });\n            // 4. Import wierszy do bazy\n            const results = {\n                success: 0,\n                errors: []\n            };\n            for(let i = 0; i < rows.length; i++){\n                try {\n                    const row = rows[i];\n                    // Sprawdź czy wiersz nie jest pusty\n                    if (row.every((cell)=>cell.trim() === '')) {\n                        continue;\n                    }\n                    const clientData = csvImportApi.rowToClient(row, mapping, user);\n                    // Walidacja podstawowych danych\n                    if (!clientData.company_name || clientData.company_name.trim() === '') {\n                        results.errors.push({\n                            row: i + 2,\n                            error: 'Brak wymaganych danych: firma/nazwa',\n                            data: row\n                        });\n                        continue;\n                    }\n                    // Dodaj klienta do bazy\n                    await clientsApi.createClient(clientData, user);\n                    results.success++;\n                    // Aktualizuj progress\n                    const progress = 50 + Math.floor(i / rows.length * 40);\n                    onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                        current: progress,\n                        total: 100,\n                        status: \"Zaimportowano \".concat(results.success, \"/\").concat(rows.length, \" klient\\xf3w\")\n                    });\n                } catch (error) {\n                    console.error(\"❌ Błąd importu wiersza \".concat(i + 2, \":\"), error);\n                    results.errors.push({\n                        row: i + 2,\n                        error: error instanceof Error ? error.message : 'Nieznany błąd',\n                        data: rows[i]\n                    });\n                }\n            }\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 95,\n                total: 100,\n                status: 'Finalizowanie...'\n            });\n            // 5. Opcjonalnie usuń plik z Storage (lub zachowaj dla historii)\n            // await storageApi.deleteFile(filePath)\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 100,\n                total: 100,\n                status: 'Zakończono!'\n            });\n            console.log(\"✅ Import zakończony: \".concat(results.success, \" sukces, \").concat(results.errors.length, \" błęd\\xf3w\"));\n            return results;\n        } catch (error) {\n            console.error('❌ CSV Import failed:', error);\n            throw error;\n        }\n    }\n};\n// Funkcje sprawdzania uprawnień\nconst permissionsApi = {\n    // Sprawdź czy użytkownik może edytować klienta\n    canEdit: (client, user)=>{\n        // Wszyscy zalogowani użytkownicy mogą edytować klientów\n        return true;\n    },\n    // Sprawdź czy użytkownik może usunąć klienta\n    canDelete: (client, user)=>{\n        // Wszyscy zalogowani użytkownicy mogą usuwać klientów\n        return true;\n    },\n    // Sprawdź czy użytkownik może widzieć klienta\n    canView: (client, user)=>{\n        switch(user.role){\n            case 'pracownik':\n                return client.owner_id === user.id || client.owner_id === null || client.edited_by === user.id;\n            case 'manager':\n            case 'project_manager':\n            case 'junior_manager':\n            case 'szef':\n            case 'admin':\n                return true;\n            default:\n                return false;\n        }\n    },\n    // Sprawdź czy użytkownik może przypisywać klientów\n    canAssignClients: (user)=>{\n        return [\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(user.role);\n    },\n    // Sprawdź czy użytkownik może zmieniać role innych użytkowników\n    canChangeRoles: (user)=>{\n        return [\n            'szef',\n            'admin'\n        ].includes(user.role);\n    },\n    // Sprawdź czy użytkownik może dostęp do zaawansowanych raportów\n    canAccessAdvancedReports: (user)=>{\n        return [\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(user.role);\n    }\n};\n// Funkcje API dla klientów z systemem uprawnień\nconst clientsApi = {\n    // Funkcja testowa - podstawowe zapytanie do klientów\n    async testBasicQuery () {\n        try {\n            console.log('🔍 Testowe zapytanie do tabeli clients...');\n            const { data, error } = await supabase.from('clients').select('*').limit(5);\n            console.log('Wynik testu - data:', data);\n            console.log('Wynik testu - error:', error);\n            return {\n                data,\n                error\n            };\n        } catch (error) {\n            console.error('Błąd testowego zapytania:', error);\n            return {\n                data: null,\n                error\n            };\n        }\n    },\n    // Pobierz klientów z filtrami uprawnień\n    async getClients (user, filters) {\n        try {\n            console.log('🔄 Rozpoczynam pobieranie klientów dla użytkownika:', user.id, user.role);\n            // Użyj JOIN aby pobrać klientów z danymi właścicieli w jednym zapytaniu\n            // 🚀 OPTYMALIZACJA: Wybierz tylko niezbędne pola\n            let query = supabase.from('clients').select(\"\\n          id,\\n          first_name,\\n          last_name,\\n          company_name,\\n          nip,\\n          phone,\\n          email,\\n          website,\\n          status,\\n          notes,\\n          owner_id,\\n          edited_by,\\n          edited_at,\\n          created_at,\\n          updated_at,\\n          status_changed_at,\\n          last_phone_click,\\n          last_edited_by_name,\\n          last_edited_by_avatar_url,\\n          owner:users!owner_id (\\n            id,\\n            full_name,\\n            email,\\n            avatar_url\\n          )\\n        \").order('updated_at', {\n                ascending: false\n            });\n            // Dodatkowe filtry\n            if (filters === null || filters === void 0 ? void 0 : filters.date) {\n                query = query.gte('updated_at', filters.date);\n            }\n            if (filters === null || filters === void 0 ? void 0 : filters.status) {\n                query = query.eq('status', filters.status);\n            }\n            if (filters === null || filters === void 0 ? void 0 : filters.employee) {\n                query = query.eq('edited_by', filters.employee);\n            }\n            console.log('🔄 Wykonuję zapytanie z JOIN...');\n            const { data: clients, error } = await query;\n            if (error) {\n                console.error('❌ Błąd zapytania clients:', error);\n                throw error;\n            }\n            if (!clients || clients.length === 0) {\n                console.log('ℹ️ Brak klientów w bazie danych');\n                return [];\n            }\n            // Przekształć dane - Supabase JOIN zwraca owner jako tablicę, ale potrzebujemy pojedynczego obiektu\n            const transformedClients = clients.map((client)=>({\n                    ...client,\n                    owner: client.owner && Array.isArray(client.owner) && client.owner.length > 0 ? client.owner[0] // Weź pierwszy element z tablicy\n                     : client.owner && !Array.isArray(client.owner) ? client.owner // Już jest pojedynczym obiektem\n                     : null // Brak właściciela\n                }));\n            // DEBUG: Sprawdź dane właścicieli\n            const clientsWithOwners = transformedClients.filter((client)=>client.owner);\n            const clientsWithoutOwners = transformedClients.filter((client)=>!client.owner);\n            console.log('✅ Klienci z właścicielami:', clientsWithOwners.length);\n            console.log('❌ Klienci bez właścicieli:', clientsWithoutOwners.length);\n            if (clientsWithOwners.length > 0) {\n                var _clientsWithOwners__owner, _clientsWithOwners__owner1;\n                console.log('👤 Przykład klienta z właścicielem:', {\n                    client: \"\".concat(clientsWithOwners[0].first_name, \" \").concat(clientsWithOwners[0].last_name),\n                    owner_id: clientsWithOwners[0].owner_id,\n                    owner_name: (_clientsWithOwners__owner = clientsWithOwners[0].owner) === null || _clientsWithOwners__owner === void 0 ? void 0 : _clientsWithOwners__owner.full_name,\n                    owner_email: (_clientsWithOwners__owner1 = clientsWithOwners[0].owner) === null || _clientsWithOwners__owner1 === void 0 ? void 0 : _clientsWithOwners__owner1.email\n                });\n            }\n            return transformedClients;\n        } catch (error) {\n            console.error('❌ Błąd w getClients:', error);\n            throw error;\n        }\n    },\n    // Dodaj nowego klienta z automatycznym przypisaniem właściciela\n    async createClient (client, user) {\n        // ZABEZPIECZENIE: Upewnij się że status nie jest pusty\n        const safeStatus = client.status || 'canvas';\n        const clientToCreate = {\n            ...client,\n            status: safeStatus,\n            owner_id: user.id,\n            edited_by: user.id,\n            last_edited_by_name: user.full_name,\n            last_edited_by_avatar_url: user.avatar_url,\n            // Jeśli status to \"canvas\", ustaw status_changed_at\n            ...safeStatus === 'canvas' && {\n                status_changed_at: new Date().toISOString()\n            },\n            // Konwertuj undefined reminder na null dla bazy danych\n            reminder: client.reminder || null\n        };\n        console.log('📊 Tworzenie klienta z danymi:', clientToCreate);\n        const { data, error } = await supabase.from('clients').insert([\n            clientToCreate\n        ]).select().single();\n        if (error) {\n            console.error('❌ Błąd createClient:', error);\n            throw error;\n        }\n        return data;\n    },\n    // Zaktualizuj klienta z sprawdzeniem uprawnień\n    async updateClient (id, updates, user) {\n        try {\n            console.log('🔄 updateClient START:', {\n                id,\n                updates,\n                user: user.email\n            });\n            // Pobierz aktualny stan klienta aby sprawdzić czy status się zmienia\n            const { data: currentClient, error: fetchError } = await supabase.from('clients').select('status, owner_id').eq('id', id).single();\n            if (fetchError) {\n                console.error('❌ Błąd pobierania aktualnego klienta:', fetchError);\n                throw new Error(\"Nie można pobrać aktualnego stanu klienta: \".concat(fetchError.message));\n            }\n            console.log('✅ Aktualny stan klienta:', currentClient);\n            // NOWA LOGIKA: Każda osoba która edytuje klienta zostaje jego właścicielem\n            let updatedData = {\n                ...updates\n            };\n            // ZABEZPIECZENIE: Jeśli status jest w aktualizacji, upewnij się że nie jest pusty\n            if ('status' in updatedData && !updatedData.status) {\n                console.log('⚠️ UWAGA: Pusty status w aktualizacji - ustawiam domyślny \"canvas\"');\n                updatedData.status = 'canvas';\n            }\n            // Sprawdź czy status się zmienia\n            const statusChanged = updatedData.status && updatedData.status !== currentClient.status;\n            if (statusChanged) {\n                updatedData.status_changed_at = new Date().toISOString();\n                console.log('\\uD83D\\uDCCA Status zmieniony z \"'.concat(currentClient.status, '\" na \"').concat(updates.status, '\" - ustawiam status_changed_at'));\n                // Powiadomienie o zmianie na canvas\n                if (updates.status === 'canvas') {\n                    console.log('🔔 POWIADOMIENIE: Klient przeszedł na status CANVAS - start trackingu czasu!');\n                }\n            }\n            // Zawsze przypisz edytującego jako właściciela\n            updatedData.owner_id = user.id;\n            console.log(\"\\uD83C\\uDFAF Przypisuję klienta \".concat(id, \" do użytkownika \").concat(user.id, \" (\").concat(user.email, \") jako właściciela\"));\n            // Zapisz informacje o edytorze (szczególnie ważne dla pracowników)\n            updatedData.last_edited_by_name = user.full_name;\n            updatedData.last_edited_by_avatar_url = user.avatar_url;\n            console.log(\"\\uD83D\\uDC64 Zapisuję dane edytora: \".concat(user.full_name, \" (rola: \").concat(user.role, \")\"));\n            // Jeśli to pracownik i zmienia status - dodatkowy log\n            if (user.role === 'pracownik' && statusChanged) {\n                console.log(\"\\uD83D\\uDC77 Pracownik \".concat(user.email, ' zmienia status z \"').concat(currentClient.status, '\" na \"').concat(updates.status, '\"'));\n            }\n            console.log('🔄 Dane do aktualizacji:', updatedData);\n            // Przygotuj finalne dane do UPDATE\n            const finalData = {\n                ...updatedData,\n                edited_by: user.id,\n                updated_at: new Date().toISOString(),\n                // Konwertuj undefined reminder na null dla bazy danych\n                ...updatedData.reminder !== undefined && {\n                    reminder: updatedData.reminder || null\n                }\n            };\n            console.log('🔄 Finalne dane do UPDATE:', finalData);\n            // Bezpośrednia aktualizacja\n            const { data, error } = await supabase.from('clients').update(finalData).eq('id', id).select().single();\n            if (error) {\n                console.error('❌ Błąd UPDATE clients:', error);\n                console.error('❌ Kod błędu:', error.code);\n                console.error('❌ Szczegóły:', error.details);\n                console.error('❌ Hint:', error.hint);\n                throw new Error(\"Błąd aktualizacji: \".concat(error.message, \" (kod: \").concat(error.code, \")\"));\n            }\n            console.log('✅ updateClient SUCCESS:', data);\n            return data;\n        } catch (error) {\n            console.error('❌ updateClient FAILED:', error);\n            throw error;\n        }\n    },\n    // Aktualizuj czas ostatniego kliknięcia telefonu\n    async updateLastPhoneClick (clientId, user) {\n        console.log('📞 Aktualizuję czas ostatniego kliknięcia telefonu:', clientId);\n        const { data, error } = await supabase.from('clients').update({\n            last_phone_click: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        }).eq('id', clientId).select().single();\n        if (error) {\n            console.error('❌ Błąd updateLastPhoneClick:', error);\n            throw error;\n        }\n        // Zaloguj w activity_logs\n        try {\n            await activityLogsApi.createLog({\n                client_id: clientId,\n                changed_by: user.id,\n                change_type: 'update',\n                field_changed: 'last_phone_click',\n                old_value: undefined,\n                new_value: data.last_phone_click\n            });\n        } catch (logError) {\n            console.error('❌ Błąd logowania activity_logs (updateLastPhoneClick):', logError);\n        }\n        return data;\n    },\n    // Usuń klienta z sprawdzeniem uprawnień\n    async deleteClient (id, user) {\n        // Bezpośrednie usunięcie bez sprawdzania uprawnień\n        const { error } = await supabase.from('clients').delete().eq('id', id);\n        if (error) throw error;\n    },\n    // Przypisz klienta do innego użytkownika (tylko manager+)\n    async assignClient (clientId, newOwnerId, user) {\n        if (!permissionsApi.canAssignClients(user)) {\n            throw new Error('Brak uprawnień do przypisywania klientów');\n        }\n        const { data, error } = await supabase.from('clients').update({\n            owner_id: newOwnerId,\n            edited_by: user.id,\n            updated_at: new Date().toISOString()\n        }).eq('id', clientId).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Funkcja do czyszczenia nieistniejących owner_id\n    async cleanupInvalidOwnerIds () {\n        try {\n            console.log('🧹 Rozpoczynam czyszczenie nieistniejących owner_id...');\n            // Pobierz wszystkich klientów z owner_id\n            const { data: allClients, error: clientsError } = await supabase.from('clients').select('id, owner_id, first_name, last_name').not('owner_id', 'is', null);\n            if (clientsError) throw clientsError;\n            console.log('📊 Znaleziono klientów z owner_id:', (allClients === null || allClients === void 0 ? void 0 : allClients.length) || 0);\n            if (!allClients || allClients.length === 0) {\n                return {\n                    cleaned: 0,\n                    errors: []\n                };\n            }\n            // Pobierz wszystkie unikalne owner_id\n            const ownerIds = [\n                ...new Set(allClients.map((c)=>c.owner_id))\n            ];\n            console.log('🔍 Sprawdzam owner_id:', ownerIds);\n            // Sprawdź które użytkownicy istnieją\n            const { data: existingUsers, error: usersError } = await supabase.from('users').select('id').in('id', ownerIds);\n            if (usersError) throw usersError;\n            const existingUserIds = (existingUsers || []).map((u)=>u.id);\n            console.log('✅ Istniejący użytkownicy:', existingUserIds);\n            // Znajdź klientów z nieistniejącymi owner_id\n            const clientsToClean = allClients.filter((client)=>client.owner_id && !existingUserIds.includes(client.owner_id));\n            console.log('🧹 Klienci do wyczyszczenia:', clientsToClean.length);\n            if (clientsToClean.length === 0) {\n                console.log('✅ Brak klientów do wyczyszczenia');\n                return {\n                    cleaned: 0,\n                    errors: []\n                };\n            }\n            // Wyczyść owner_id dla problematycznych klientów\n            const cleanupResults = [];\n            const errors = [];\n            for (const client of clientsToClean){\n                try {\n                    console.log(\"\\uD83E\\uDDF9 Czyszczę owner_id dla \".concat(client.first_name, \" \").concat(client.last_name, \" (\").concat(client.owner_id, \")\"));\n                    const { error } = await supabase.from('clients').update({\n                        owner_id: null\n                    }).eq('id', client.id);\n                    if (error) {\n                        console.error(\"❌ Błąd czyszczenia \".concat(client.id, \":\"), error);\n                        errors.push({\n                            client: client.id,\n                            error: error.message\n                        });\n                    } else {\n                        cleanupResults.push(client.id);\n                    }\n                } catch (err) {\n                    console.error(\"❌ Wyjątek podczas czyszczenia \".concat(client.id, \":\"), err);\n                    errors.push({\n                        client: client.id,\n                        error: String(err)\n                    });\n                }\n            }\n            console.log(\"✅ Wyczyszczono \".concat(cleanupResults.length, \" klient\\xf3w\"));\n            if (errors.length > 0) {\n                console.error(\"❌ Błędy przy \".concat(errors.length, \" klientach:\"), errors);\n            }\n            return {\n                cleaned: cleanupResults.length,\n                errors,\n                cleanedClients: clientsToClean.filter((c)=>cleanupResults.includes(c.id))\n            };\n        } catch (error) {\n            console.error('❌ Błąd w cleanupInvalidOwnerIds:', error);\n            throw error;\n        }\n    },\n    // Subskrypcja na zmiany w czasie rzeczywistym\n    subscribeToChanges (callback) {\n        return supabase.channel('clients_changes').on('postgres_changes', {\n            event: '*',\n            schema: 'public',\n            table: 'clients'\n        }, callback).subscribe();\n    },\n    // Subskrypcja na zmiany owner_id dla real-time aktualizacji\n    subscribeToOwnerChanges (callback) {\n        try {\n            // Sprawdź czy callback jest funkcją\n            if (typeof callback !== 'function') {\n                console.error('❌ Callback nie jest funkcją w subscribeToOwnerChanges');\n                throw new Error('Callback musi być funkcją');\n            }\n            console.log('📡 Tworzę kanał Supabase dla owner changes...');\n            // Najpierw sprawdź czy real-time jest włączony i dostępny\n            const channelName = \"clients_owner_changes_\".concat(Date.now());\n            console.log('📡 Nazwa kanału:', channelName);\n            const channel = supabase.channel(channelName).on('postgres_changes', {\n                event: 'UPDATE',\n                schema: 'public',\n                table: 'clients',\n                filter: 'owner_id=neq.null' // Tylko gdy owner_id się zmienia\n            }, (payload)=>{\n                try {\n                    console.log('📡 Real-time payload otrzymany:', {\n                        eventType: payload.eventType,\n                        table: payload.table,\n                        changes: payload.new ? {\n                            id: payload.new.id,\n                            owner_id: payload.new.owner_id,\n                            first_name: payload.new.first_name,\n                            last_name: payload.new.last_name\n                        } : 'brak danych'\n                    });\n                    if (typeof callback === 'function') {\n                        callback(payload);\n                    } else {\n                        console.error('❌ Callback nie jest funkcją podczas wywołania');\n                    }\n                } catch (callbackError) {\n                    console.error('❌ Błąd w callback:', callbackError);\n                }\n            }).subscribe((status, err)=>{\n                console.log('📡 Subskrypcja owner_changes status:', status);\n                if (status === 'SUBSCRIBED') {\n                    console.log('✅ Subskrypcja owner_changes aktywna');\n                } else if (status === 'CLOSED') {\n                    console.warn('⚠️ Subskrypcja owner_changes zamknięta - prawdopodobnie problem z autoryzacją real-time');\n                    console.warn('💡 Real-time może być wyłączony w ustawieniach Supabase lub brakuje uprawnień');\n                } else if (status === 'CHANNEL_ERROR') {\n                    console.error('❌ Błąd kanału real-time:', err);\n                    console.error('💡 Sprawdź ustawienia real-time w Supabase Dashboard');\n                } else if (status === 'TIMED_OUT') {\n                    console.warn('⏰ Timeout subskrypcji - problemy z połączeniem WebSocket');\n                } else {\n                    console.log('📡 Status subskrypcji:', status);\n                }\n            });\n            // Sprawdź stan kanału po krótkim czasie\n            setTimeout(()=>{\n                if (channel.state === 'closed') {\n                    console.warn('⚠️ Kanał real-time został zamknięty - prawdopodobnie RLS blokuje real-time lub feature jest wyłączony');\n                }\n            }, 2000);\n            console.log('✅ Kanał owner changes utworzony');\n            return channel;\n        } catch (error) {\n            console.error('❌ Błąd w subscribeToOwnerChanges:', error);\n            console.warn('💡 Real-time nie będzie działać - aplikacja będzie używać okresowego odświeżania');\n            // Zwróć mock object aby nie powodować błędów\n            return {\n                unsubscribe: ()=>{\n                    console.log('🧹 Mock unsubscribe dla błędnego kanału');\n                }\n            };\n        }\n    },\n    // Pobierz klientów z przypomnieniami na konkretny dzień\n    async getClientsWithReminders (user, targetDate) {\n        try {\n            const today = targetDate || new Date().toISOString().split('T')[0] // format YYYY-MM-DD\n            ;\n            console.log(\"\\uD83D\\uDCC5 Pobieranie klient\\xf3w z przypomnieniami na: \".concat(today));\n            // Pobierz wszystkich klientów użytkownika\n            const allClients = await this.getClients(user);\n            // Filtruj tylko tych z przypomnieniami na dziś\n            const clientsWithTodayReminders = allClients.filter((client)=>{\n                // Sprawdź czy klient ma aktywne przypomnienie\n                const reminder = client.reminder || {\n                    enabled: false,\n                    date: '',\n                    time: '',\n                    note: ''\n                };\n                return reminder.enabled && reminder.date === today;\n            });\n            // Sortuj według godziny przypomnienia\n            const sortedClients = clientsWithTodayReminders.sort((a, b)=>{\n                var _a_reminder, _b_reminder;\n                const timeA = ((_a_reminder = a.reminder) === null || _a_reminder === void 0 ? void 0 : _a_reminder.time) || '00:00';\n                const timeB = ((_b_reminder = b.reminder) === null || _b_reminder === void 0 ? void 0 : _b_reminder.time) || '00:00';\n                return timeA.localeCompare(timeB);\n            });\n            console.log(\"✅ Znaleziono \".concat(sortedClients.length, \" klient\\xf3w z przypomnieniami na \").concat(today));\n            return sortedClients;\n        } catch (error) {\n            console.error('❌ Błąd pobierania klientów z przypomnieniami:', error);\n            throw error;\n        }\n    },\n    // Pobierz przypomnienia pogrupowane według slotów czasowych dla dashboardu\n    async getDailyScheduleWithClients (user, targetDate) {\n        try {\n            const clientsWithReminders = await this.getClientsWithReminders(user, targetDate);\n            // Definicja slotów czasowych (zgodnie z obecną strukturą dashboardu)\n            const timeSlots = [\n                {\n                    time: '8:00 - 10:00',\n                    type: 'canvas',\n                    color: '#06b6d4',\n                    startTime: '08:00',\n                    endTime: '10:00',\n                    statuses: [\n                        'canvas'\n                    ]\n                },\n                {\n                    time: '10:10 - 12:00',\n                    type: 'sales',\n                    color: '#10b981',\n                    startTime: '10:10',\n                    endTime: '12:00',\n                    statuses: [\n                        'sale'\n                    ]\n                },\n                {\n                    time: '12:30 - 15:00',\n                    type: 'antysales',\n                    color: '#f59e0b',\n                    startTime: '12:30',\n                    endTime: '15:00',\n                    statuses: [\n                        'antysale'\n                    ]\n                },\n                {\n                    time: '15:10 - 16:30',\n                    type: 'canvas + sales',\n                    color: '#8b5cf6',\n                    startTime: '15:10',\n                    endTime: '16:30',\n                    statuses: [\n                        'canvas',\n                        'sale'\n                    ]\n                }\n            ];\n            // Przypisz klientów do odpowiednich slotów\n            const slotsWithClients = timeSlots.map((slot)=>{\n                const slotClients = clientsWithReminders.filter((client)=>{\n                    var _client_reminder;\n                    const reminderTime = ((_client_reminder = client.reminder) === null || _client_reminder === void 0 ? void 0 : _client_reminder.time) || '00:00';\n                    const [hours, minutes] = reminderTime.split(':').map(Number);\n                    const reminderMinutes = hours * 60 + minutes;\n                    const [startHours, startMins] = slot.startTime.split(':').map(Number);\n                    const [endHours, endMins] = slot.endTime.split(':').map(Number);\n                    const startMinutes = startHours * 60 + startMins;\n                    const endMinutes = endHours * 60 + endMins;\n                    // Sprawdź czy godzina przypomnienia mieści się w slocie\n                    const timeInSlot = reminderMinutes >= startMinutes && reminderMinutes <= endMinutes;\n                    // Sprawdź czy status klienta pasuje do typu slotu\n                    const statusMatches = slot.statuses.includes(client.status);\n                    return timeInSlot && statusMatches;\n                });\n                return {\n                    ...slot,\n                    clients: slotClients\n                };\n            });\n            console.log(\"\\uD83D\\uDCCA Plan dnia z \".concat(slotsWithClients.reduce((sum, slot)=>sum + slot.clients.length, 0), \" klientami\"));\n            return slotsWithClients;\n        } catch (error) {\n            console.error('❌ Błąd tworzenia planu dnia:', error);\n            throw error;\n        }\n    }\n};\n// Funkcje API dla logów aktywności\nconst activityLogsApi = {\n    // Pobierz logi aktywności\n    async getLogs (clientId) {\n        let query = supabase.from('activity_logs').select(\"\\n        *,\\n        clients(first_name, last_name)\\n      \").order('timestamp', {\n            ascending: false\n        }).limit(50);\n        if (clientId) {\n            query = query.eq('client_id', clientId);\n        }\n        const { data, error } = await query;\n        if (error) throw error;\n        return data;\n    },\n    // Pobierz historię zmian dla konkretnego klienta\n    async getClientHistory (clientId) {\n        try {\n            console.log('Pobieranie historii dla klienta:', clientId);\n            // Sprawdź czy użytkownik jest zalogowany\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('Aktualny użytkownik:', user === null || user === void 0 ? void 0 : user.id);\n            if (!user) {\n                console.error('Użytkownik nie jest zalogowany');\n                return [];\n            }\n            const { data, error } = await supabase.from('activity_logs').select(\"\\n          id,\\n          client_id,\\n          changed_by,\\n          change_type,\\n          field_changed,\\n          old_value,\\n          new_value,\\n          timestamp\\n        \").eq('client_id', clientId).order('timestamp', {\n                ascending: false\n            }).limit(20);\n            if (error) {\n                var _error_message;\n                console.error('Błąd query activity_logs:', error);\n                console.error('Szczegóły błędu:', JSON.stringify(error, null, 2));\n                // Sprawdź czy to problem z RLS\n                if (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS'))) {\n                    console.error('Problem z Row Level Security - użytkownik może nie mieć dostępu');\n                }\n                // Zwróć pustą tablicę zamiast rzucania błędem\n                return [];\n            }\n            console.log('Pobrano logi:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n            // Jeśli nie ma logów, zwróć pustą tablicę\n            if (!data || data.length === 0) {\n                return [];\n            }\n            // Pobierz informacje o użytkownikach osobno z avatarami\n            const userIds = [\n                ...new Set(data.map((log)=>log.changed_by).filter(Boolean))\n            ];\n            console.log('Pobieranie użytkowników:', userIds);\n            const { data: users, error: usersError } = await supabase.from('users').select('id, full_name, role, avatar_url').in('id', userIds);\n            if (usersError) {\n                console.error('Błąd pobierania użytkowników:', usersError);\n            // Kontynuuj bez danych użytkowników\n            }\n            console.log('Pobrano użytkowników:', (users === null || users === void 0 ? void 0 : users.length) || 0);\n            // Mapuj użytkowników do słownika dla szybkiego dostępu\n            const usersMap = (users || []).reduce((acc, user)=>{\n                acc[user.id] = user;\n                return acc;\n            }, {});\n            // Przekształć dane z informacjami o edytorze\n            const result = data.map((log)=>{\n                const user = usersMap[log.changed_by];\n                return {\n                    id: log.id,\n                    client_id: log.client_id,\n                    changed_by: log.changed_by,\n                    change_type: log.change_type,\n                    field_changed: log.field_changed,\n                    old_value: log.old_value,\n                    new_value: log.new_value,\n                    timestamp: log.timestamp,\n                    editor_name: (user === null || user === void 0 ? void 0 : user.full_name) || log.changed_by || 'Nieznany użytkownik',\n                    editor_role: (user === null || user === void 0 ? void 0 : user.role) || 'unknown',\n                    editor_avatar: (user === null || user === void 0 ? void 0 : user.avatar_url) || null\n                };\n            });\n            console.log('Zwracanie historii:', result.length, 'wpisów');\n            return result;\n        } catch (error) {\n            console.error('Błąd w getClientHistory:', error);\n            throw error;\n        }\n    },\n    // Dodaj log aktywności\n    async createLog (log) {\n        const { data, error } = await supabase.from('activity_logs').insert([\n            {\n                ...log,\n                timestamp: new Date().toISOString()\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Funkcja testowa do sprawdzania dostępu do activity_logs\n    async testActivityLogsAccess () {\n        try {\n            console.log('Testowanie dostępu do activity_logs...');\n            // Sprawdź autoryzację\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('Test - użytkownik:', user === null || user === void 0 ? void 0 : user.id, user === null || user === void 0 ? void 0 : user.email);\n            if (!user) {\n                return {\n                    success: false,\n                    error: 'Brak autoryzacji - użytkownik nie jest zalogowany'\n                };\n            }\n            // Sprawdź czy użytkownik istnieje w tabeli users\n            const { data: userProfile, error: userError } = await supabase.from('users').select('id, email, role').eq('id', user.id).single();\n            console.log('Test - profil użytkownika:', userProfile);\n            console.log('Test - błąd profilu:', userError);\n            if (userError || !userProfile) {\n                return {\n                    success: false,\n                    error: 'Użytkownik nie istnieje w tabeli users'\n                };\n            }\n            // Testuj dostęp do activity_logs\n            const { data, error, count } = await supabase.from('activity_logs').select('*', {\n                count: 'exact'\n            }).limit(1);\n            console.log('Test activity_logs - data:', data);\n            console.log('Test activity_logs - error:', error);\n            console.log('Test activity_logs - count:', count);\n            return {\n                success: !error,\n                data,\n                error,\n                count,\n                user: userProfile\n            };\n        } catch (error) {\n            console.error('Błąd testu activity_logs:', error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n};\n// Funkcje API dla raportów\nconst reportsApi = {\n    // Pobierz statystyki tylko pracowników z prowizją\n    async getEmployeeStats (user) {\n        try {\n            console.log('📊 Pobieranie statystyk pracowników...');\n            // KROK 1: Pobierz wszystkich użytkowników z rolą 'pracownik'\n            const { data: allEmployees, error: usersError } = await supabase.from('users').select(\"\\n          id,\\n          full_name,\\n          email,\\n          avatar_url,\\n          role\\n        \").eq('role', 'pracownik').order('full_name', {\n                ascending: true\n            });\n            if (usersError) {\n                console.error('❌ Błąd pobierania użytkowników-pracowników:', usersError);\n                throw usersError;\n            }\n            if (!allEmployees || allEmployees.length === 0) {\n                console.log('⚠️ Brak użytkowników z rolą pracownik');\n                return [];\n            }\n            console.log('✅ Pobrano wszystkich pracowników:', allEmployees.length, allEmployees.map((e)=>e.full_name));\n            // KROK 2: Pobierz statystyki z tabeli employee_stats dla tych pracowników\n            const employeeIds = allEmployees.map((emp)=>emp.id);\n            let existingStats = [];\n            try {\n                const { data, error: statsError } = await supabase.from('employee_stats').select('*').in('user_id', employeeIds);\n                if (statsError) {\n                    console.warn('⚠️ Błąd pobierania employee_stats:', statsError);\n                } else {\n                    existingStats = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać employee_stats:', error);\n            }\n            console.log('✅ Pobrano statystyki dla pracowników:', (existingStats === null || existingStats === void 0 ? void 0 : existingStats.length) || 0);\n            // KROK 3: Pobierz dzisiejsze statystyki z tabeli clients (z obsługą błędów)\n            const today = new Date().toISOString().split('T')[0];\n            let todayClients = [];\n            try {\n                const { data, error: clientsError } = await supabase.from('clients').select('status, edited_by, created_at, updated_at').gte('updated_at', \"\".concat(today, \"T00:00:00\")).lt('updated_at', \"\".concat(today, \"T23:59:59\"));\n                if (clientsError) {\n                    console.warn('⚠️ Błąd pobierania klientów z dzisiaj:', clientsError);\n                } else {\n                    todayClients = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać dzisiejszych klientów:', error);\n            }\n            console.log('✅ Pobrano dzisiejszych klientów:', todayClients.length);\n            // KROK 4: Pobierz wczorajsze statystyki dla kar (z obsługą błędów)\n            const yesterday = new Date();\n            yesterday.setDate(yesterday.getDate() - 1);\n            const yesterdayStr = yesterday.toISOString().split('T')[0];\n            let yesterdayClients = [];\n            try {\n                const { data, error: yesterdayError } = await supabase.from('clients').select('status, edited_by').gte('updated_at', \"\".concat(yesterdayStr, \"T00:00:00\")).lt('updated_at', \"\".concat(yesterdayStr, \"T23:59:59\"));\n                if (yesterdayError) {\n                    console.warn('⚠️ Błąd pobierania wczorajszych klientów:', yesterdayError);\n                } else {\n                    yesterdayClients = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać wczorajszych klientów:', error);\n            }\n            // KROK 5: Pobierz WSZYSTKICH klientów przypisanych do pracowników (z obsługą błędów)\n            let allOwnedClients = [];\n            try {\n                const { data, error: ownedError } = await supabase.from('clients').select('status, owner_id').not('owner_id', 'is', null).in('owner_id', employeeIds);\n                if (ownedError) {\n                    console.warn('⚠️ Błąd pobierania klientów przypisanych:', ownedError);\n                } else {\n                    allOwnedClients = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać przypisanych klientów:', error);\n            }\n            console.log('✅ Pobrano wszystkich przypisanych klientów:', allOwnedClients.length);\n            // KROK 6: Agreguj dzisiejsze statystyki per pracownik\n            const todayStats = todayClients.reduce((acc, client)=>{\n                const userId = client.edited_by;\n                if (!userId) return acc;\n                if (!acc[userId]) {\n                    acc[userId] = {\n                        total: 0,\n                        canvas: 0,\n                        antysale: 0,\n                        sale: 0,\n                        other: 0\n                    };\n                }\n                acc[userId].total++;\n                if (client.status === 'canvas') acc[userId].canvas++;\n                else if (client.status === 'antysale') acc[userId].antysale++;\n                else if (client.status === 'sale') acc[userId].sale++;\n                else acc[userId].other++;\n                return acc;\n            }, {});\n            // KROK 7: Agreguj wczorajsze statystyki per pracownik\n            const yesterdayStats = yesterdayClients.reduce((acc, client)=>{\n                const userId = client.edited_by;\n                if (userId) {\n                    acc[userId] = (acc[userId] || 0) + 1;\n                }\n                return acc;\n            }, {});\n            // KROK 8: Agreguj statusy WSZYSTKICH przypisanych klientów per pracownik\n            const ownedClientsStats = allOwnedClients.reduce((acc, client)=>{\n                const ownerId = client.owner_id;\n                if (!ownerId) return acc;\n                if (!acc[ownerId]) {\n                    acc[ownerId] = {\n                        total: 0,\n                        canvas: 0,\n                        antysale: 0,\n                        sale: 0,\n                        brak_kontaktu: 0,\n                        nie_zainteresowany: 0,\n                        zdenerwowany: 0,\n                        '$$': 0\n                    };\n                }\n                acc[ownerId].total++;\n                switch(client.status){\n                    case 'canvas':\n                        acc[ownerId].canvas++;\n                        break;\n                    case 'antysale':\n                        acc[ownerId].antysale++;\n                        break;\n                    case 'sale':\n                        acc[ownerId].sale++;\n                        break;\n                    case 'brak_kontaktu':\n                        acc[ownerId].brak_kontaktu++;\n                        break;\n                    case 'nie_zainteresowany':\n                        acc[ownerId].nie_zainteresowany++;\n                        break;\n                    case 'zdenerwowany':\n                        acc[ownerId].zdenerwowany++;\n                        break;\n                    case '$$':\n                        acc[ownerId]['$$']++;\n                        break;\n                }\n                return acc;\n            }, {});\n            console.log('📊 Statystyki przypisanych klientów:', ownedClientsStats);\n            // KROK 9: Stwórz mapę statystyk employee_stats\n            const statsMap = new Map();\n            existingStats.forEach((stat)=>{\n                statsMap.set(stat.user_id, stat);\n            });\n            // KROK 10: Kombinuj dane - dla WSZYSTKICH pracowników (zawsze zwraca listę)\n            const enhancedStats = allEmployees.map((employee)=>{\n                const userId = employee.id;\n                // Pobierz statystyki z employee_stats lub utwórz domyślne\n                const basicStat = statsMap.get(userId) || {\n                    id: 'temp_' + userId,\n                    user_id: userId,\n                    daily_target: 20,\n                    commission_rate: 3.0,\n                    monthly_canvas: 0,\n                    monthly_antysale: 0,\n                    monthly_sale: 0,\n                    total_commissions: 0,\n                    total_penalties: 0,\n                    custom_clients_count: 0,\n                    custom_total_payments: 0,\n                    created_at: new Date().toISOString(),\n                    updated_at: new Date().toISOString()\n                };\n                const todayForUser = todayStats[userId] || {\n                    total: 0,\n                    canvas: 0,\n                    antysale: 0,\n                    sale: 0\n                };\n                const yesterdayForUser = yesterdayStats[userId] || 0;\n                const ownedForUser = ownedClientsStats[userId] || {\n                    total: 0,\n                    canvas: 0,\n                    antysale: 0,\n                    sale: 0,\n                    brak_kontaktu: 0,\n                    nie_zainteresowany: 0,\n                    zdenerwowany: 0,\n                    '$$': 0\n                };\n                // Oblicz karę za wczoraj\n                const yesterdayShortage = Math.max(0, basicStat.daily_target - yesterdayForUser);\n                const penalty = yesterdayShortage * 15;\n                // Oblicz prowizję na podstawie przypisanych klientów Sale\n                const commission = ownedForUser.sale * basicStat.commission_rate / 100 * 100;\n                console.log(\"\\uD83D\\uDC64 Pracownik \".concat(employee.full_name, \": Canvas=\").concat(ownedForUser.canvas, \", AntyS=\").concat(ownedForUser.antysale, \", Sale=\").concat(ownedForUser.sale));\n                return {\n                    ...basicStat,\n                    // WAŻNE: Dołącz dane użytkownika\n                    user: {\n                        id: employee.id,\n                        full_name: employee.full_name,\n                        email: employee.email,\n                        avatar_url: employee.avatar_url,\n                        role: employee.role\n                    },\n                    daily_achieved: todayForUser.total,\n                    yesterday_shortage: yesterdayShortage,\n                    status_changes_today: {\n                        canvas: todayForUser.canvas,\n                        antysale: todayForUser.antysale,\n                        sale: todayForUser.sale,\n                        other: todayForUser.other\n                    },\n                    // Używaj statystyk opartych na owner_id (przypisanych klientów)\n                    monthly_canvas: ownedForUser.canvas,\n                    monthly_antysale: ownedForUser.antysale,\n                    monthly_sale: ownedForUser.sale,\n                    total_commissions: commission,\n                    total_penalties: penalty\n                };\n            });\n            console.log('✅ Przygotowano rozszerzone statystyki dla wszystkich pracowników:', enhancedStats.length);\n            console.log('👥 Lista pracowników:', enhancedStats.map((s)=>{\n                var _s_user;\n                return (_s_user = s.user) === null || _s_user === void 0 ? void 0 : _s_user.full_name;\n            }).join(', '));\n            return enhancedStats;\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk pracowników:', error);\n            // W przypadku błędu, zwróć pustą listę zamiast rzucać błąd\n            return [];\n        }\n    },\n    // Podsumowanie dnia\n    async getDailySummary (date) {\n        const { data, error } = await supabase.from('clients').select('status, edited_by').gte('updated_at', \"\".concat(date, \"T00:00:00\")).lt('updated_at', \"\".concat(date, \"T23:59:59\"));\n        if (error) throw error;\n        // Agregacja danych\n        const statusBreakdown = data.reduce((acc, client)=>{\n            acc[client.status] = (acc[client.status] || 0) + 1;\n            return acc;\n        }, {});\n        const employeeStats = data.reduce((acc, client)=>{\n            acc[client.edited_by] = (acc[client.edited_by] || 0) + 1;\n            return acc;\n        }, {});\n        return {\n            totalClients: data.length,\n            statusBreakdown,\n            employeeStats\n        };\n    },\n    // Podsumowanie tygodniowe\n    async getWeeklySummary (startDate, endDate) {\n        const { data, error } = await supabase.from('clients').select('status, edited_by, updated_at').gte('updated_at', startDate).lt('updated_at', endDate);\n        if (error) throw error;\n        return data;\n    },\n    // Aktualizuj statystyki pracownika (dla manager/project_manager/junior_manager/szef/admin)\n    async updateEmployeeStats (userId, updates, currentUser) {\n        // Sprawdź uprawnienia\n        if (![\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            throw new Error('Brak uprawnień do modyfikacji statystyk');\n        }\n        const { data, error } = await supabase.from('employee_stats').update(updates).eq('user_id', userId).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Edytuj ilość klientów i sumę wpłat pracownika (dla manager/project_manager/junior_manager/szef/admin)\n    async updateEmployeeClientStats (userId, clientsCount, totalPayments, currentUser) {\n        // Sprawdź uprawnienia\n        if (![\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            throw new Error('Brak uprawnień do modyfikacji statystyk');\n        }\n        try {\n            console.log(\"\\uD83D\\uDCDD Aktualizuję statystyki pracownika \".concat(userId, \": klienci=\").concat(clientsCount, \", wpłaty=\").concat(totalPayments));\n            // METODA 1: Spróbuj prostą aktualizację w employee_stats\n            try {\n                console.log('📝 Próba prostej aktualizacji w employee_stats');\n                const legacyUpdates = {\n                    custom_clients_count: clientsCount,\n                    custom_total_payments: totalPayments,\n                    updated_at: new Date().toISOString()\n                };\n                const { data, error } = await supabase.from('employee_stats').update(legacyUpdates).eq('user_id', userId).select(\"\\n            *,\\n            user:users!user_id (\\n              id,\\n              full_name,\\n              email,\\n              avatar_url,\\n              role\\n            )\\n          \").single();\n                if (!error && data) {\n                    console.log('✅ Zaktualizowano statystyki w employee_stats (metoda 1)');\n                    console.log(\"\\uD83D\\uDCCA Klienci: \".concat(clientsCount, \", Wpłaty: €\").concat(totalPayments));\n                    return data;\n                } else {\n                    console.warn('⚠️ Metoda 1 nie zadziałała:', error);\n                    throw error;\n                }\n            } catch (method1Error) {\n                console.warn('⚠️ Metoda 1 (prosta aktualizacja) nie zadziałała:', method1Error);\n                // METODA 2: Spróbuj INSERT z ON CONFLICT\n                try {\n                    console.log('📝 Próba INSERT z ON CONFLICT w employee_stats');\n                    const insertData = {\n                        user_id: userId,\n                        daily_target: 20,\n                        commission_rate: 3.0,\n                        monthly_canvas: 0,\n                        monthly_antysale: 0,\n                        monthly_sale: 0,\n                        total_commissions: 0,\n                        total_penalties: 0,\n                        custom_clients_count: clientsCount,\n                        custom_total_payments: totalPayments,\n                        created_at: new Date().toISOString(),\n                        updated_at: new Date().toISOString()\n                    };\n                    const { data, error } = await supabase.from('employee_stats').upsert(insertData, {\n                        onConflict: 'user_id',\n                        ignoreDuplicates: false\n                    }).select(\"\\n              *,\\n              user:users!user_id (\\n                id,\\n                full_name,\\n                email,\\n                avatar_url,\\n                role\\n              )\\n            \").single();\n                    if (!error && data) {\n                        console.log('✅ Zaktualizowano statystyki w employee_stats (metoda 2)');\n                        console.log(\"\\uD83D\\uDCCA Klienci: \".concat(clientsCount, \", Wpłaty: €\").concat(totalPayments));\n                        return data;\n                    } else {\n                        console.warn('⚠️ Metoda 2 nie zadziałała:', error);\n                        throw error;\n                    }\n                } catch (method2Error) {\n                    console.warn('⚠️ Metoda 2 (upsert) nie zadziałała:', method2Error);\n                    // METODA 3: Zaktualizuj tylko w pamięci (fallback)\n                    console.log('📝 Fallback - zwracam symulowane dane');\n                    return {\n                        id: 'temp_' + userId,\n                        user_id: userId,\n                        daily_target: 20,\n                        commission_rate: 3.0,\n                        monthly_canvas: 0,\n                        monthly_antysale: 0,\n                        monthly_sale: 0,\n                        total_commissions: 0,\n                        total_penalties: 0,\n                        custom_clients_count: clientsCount,\n                        custom_total_payments: totalPayments,\n                        created_at: new Date().toISOString(),\n                        updated_at: new Date().toISOString(),\n                        user: {\n                            id: userId,\n                            full_name: 'Pracownik',\n                            email: 'brak@email.com',\n                            avatar_url: null,\n                            role: 'pracownik'\n                        }\n                    };\n                }\n            }\n        } catch (error) {\n            console.error('❌ Błąd w updateEmployeeClientStats:', error);\n            throw error;\n        }\n    },\n    // Stwórz statystyki dla nowego pracownika\n    async createEmployeeStats (userId, currentUser) {\n        // Sprawdź uprawnienia\n        if (![\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            throw new Error('Brak uprawnień do tworzenia statystyk');\n        }\n        const { data, error } = await supabase.from('employee_stats').insert([\n            {\n                user_id: userId,\n                daily_target: 20,\n                commission_rate: 3.0\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // 📊 Nowa funkcja: Pobierz statystyki wykorzystania bazy (klienci z/bez właściciela)\n    async getDatabaseUtilization () {\n        try {\n            console.log('📊 Pobieranie statystyk wykorzystania bazy...');\n            // Zlicz wszystkich klientów\n            const { count: totalCount, error: totalError } = await supabase.from('clients').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (totalError) {\n                console.error('❌ Błąd pobierania łącznej liczby klientów:', totalError);\n                throw totalError;\n            }\n            // Zlicz klientów z właścicielem (owner_id != null)\n            const { count: withOwnerCount, error: withOwnerError } = await supabase.from('clients').select('*', {\n                count: 'exact',\n                head: true\n            }).not('owner_id', 'is', null);\n            if (withOwnerError) {\n                console.error('❌ Błąd pobierania klientów z właścicielem:', withOwnerError);\n                throw withOwnerError;\n            }\n            // Oblicz klientów bez właściciela\n            const withoutOwnerCount = (totalCount || 0) - (withOwnerCount || 0);\n            // Oblicz procent wykorzystania\n            const utilizationPercentage = totalCount ? Math.round((withOwnerCount || 0) / totalCount * 100) : 0;\n            const result = {\n                withOwner: withOwnerCount || 0,\n                withoutOwner: withoutOwnerCount,\n                total: totalCount || 0,\n                utilizationPercentage\n            };\n            console.log('📊 Statystyki wykorzystania bazy:', result);\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk wykorzystania bazy:', error);\n            throw error;\n        }\n    },\n    // 🔄 ADMIN: Resetuj właścicieli wszystkich klientów\n    async resetAllClientOwners (currentUser) {\n        // Sprawdź uprawnienia - tylko admin\n        if (currentUser.role !== 'admin') {\n            throw new Error('Brak uprawnień! Tylko administrator może resetować właścicieli klientów.');\n        }\n        try {\n            console.log('🔄 Rozpoczynam resetowanie właścicieli klientów...');\n            // Pobierz liczbę klientów z właścicielem przed resetowaniem\n            const { count: beforeCount, error: beforeError } = await supabase.from('clients').select('*', {\n                count: 'exact',\n                head: true\n            }).not('owner_id', 'is', null);\n            if (beforeError) {\n                console.error('❌ Błąd sprawdzania stanu przed resetowaniem:', beforeError);\n                throw beforeError;\n            }\n            // Resetuj owner_id dla wszystkich klientów\n            const { data, error } = await supabase.from('clients').update({\n                owner_id: null\n            }).not('owner_id', 'is', null) // Tylko te które mają właściciela\n            .select('id, first_name, last_name');\n            if (error) {\n                console.error('❌ Błąd resetowania właścicieli:', error);\n                throw error;\n            }\n            const resetCount = (data === null || data === void 0 ? void 0 : data.length) || 0;\n            // Loguj akcję do activity_logs\n            try {\n                await activityLogsApi.createLog({\n                    client_id: 'bulk_action',\n                    changed_by: currentUser.id,\n                    change_type: 'update',\n                    field_changed: 'owner_id',\n                    old_value: 'various',\n                    new_value: 'null (reset by admin)'\n                });\n            } catch (logError) {\n                console.error('⚠️ Nie udało się zalogować akcji:', logError);\n            // Nie przerywamy procesu z powodu błędu logowania\n            }\n            console.log(\"✅ Zresetowano właścicieli dla \".concat(resetCount, \" klient\\xf3w\"));\n            return {\n                success: resetCount,\n                message: \"Pomyślnie zresetowano właścicieli dla \".concat(resetCount, \" klient\\xf3w. Wszyscy klienci są teraz bez przypisanego właściciela.\")\n            };\n        } catch (error) {\n            console.error('❌ Błąd resetowania właścicieli klientów:', error);\n            throw error;\n        }\n    },\n    // Pobierz statystyki aktywności pracowników z tabeli employee_statistics\n    async getEmployeeActivityStats (user) {\n        try {\n            console.log('📊 Pobieranie statystyk aktywności pracowników...');\n            // Sprawdź uprawnienia\n            if (!user || ![\n                'manager',\n                'project_manager',\n                'junior_manager',\n                'szef',\n                'admin'\n            ].includes(user.role)) {\n                console.warn('⚠️ Brak uprawnień do podglądu statystyk aktywności');\n                return [];\n            }\n            // KROK 1: Pobierz wszystkich użytkowników z rolą 'pracownik'\n            let allEmployees = [];\n            try {\n                const { data: employees, error: usersError } = await supabase.from('users').select(\"\\n            id,\\n            full_name,\\n            email,\\n            avatar_url,\\n            role\\n          \").eq('role', 'pracownik').order('full_name', {\n                    ascending: true\n                });\n                if (usersError) {\n                    console.error('❌ Błąd pobierania użytkowników-pracowników:', usersError);\n                    return [];\n                }\n                allEmployees = employees || [];\n                console.log(\"\\uD83D\\uDC65 Znaleziono pracownik\\xf3w: \".concat(allEmployees.length));\n                if (allEmployees.length === 0) {\n                    console.log('⚠️ Brak użytkowników z rolą pracownik');\n                    return [];\n                }\n            } catch (error) {\n                console.error('❌ Błąd pobierania pracowników:', error);\n                return [];\n            }\n            // KROK 2: Pobierz statystyki aktywności - z obsługą błędów RLS\n            let activityStats = [];\n            try {\n                const employeeIds = allEmployees.map((emp)=>emp.id);\n                console.log(\"\\uD83D\\uDD0D Pobieranie statystyk dla ID: \".concat(employeeIds.slice(0, 3).join(', '), \"... (\").concat(employeeIds.length, \" total)\"));\n                const { data: stats, error: statsError } = await supabase.from('employee_statistics').select('*').eq('period_type', 'monthly').in('user_id', employeeIds).order('period_end', {\n                    ascending: false\n                });\n                if (statsError) {\n                    var _statsError_message, _statsError_message1;\n                    console.error('❌ Błąd pobierania statystyk aktywności:', statsError);\n                    // Jeśli to błąd RLS (403), nie przerywaj - użyj domyślnych danych\n                    if (statsError.code === 'PGRST116' || ((_statsError_message = statsError.message) === null || _statsError_message === void 0 ? void 0 : _statsError_message.includes('RLS')) || ((_statsError_message1 = statsError.message) === null || _statsError_message1 === void 0 ? void 0 : _statsError_message1.includes('permission'))) {\n                        console.warn('🔒 Problem z RLS - używam domyślnych danych aktywności');\n                        activityStats = [];\n                    } else {\n                        console.error('💥 Krytyczny błąd pobierania statystyk - przerywam');\n                        return [];\n                    }\n                } else {\n                    activityStats = stats || [];\n                    console.log(\"\\uD83D\\uDCCA Znaleziono rekord\\xf3w aktywności: \".concat(activityStats.length));\n                }\n            } catch (error) {\n                console.error('❌ Błąd zapytania o statystyki aktywności:', error);\n                activityStats = [];\n            }\n            // KROK 3: Stwórz mapę najnowszych statystyk dla każdego pracownika\n            const latestStatsMap = new Map();\n            if (activityStats && activityStats.length > 0) {\n                activityStats.forEach((stat)=>{\n                    const userId = stat.user_id;\n                    if (!latestStatsMap.has(userId)) {\n                        latestStatsMap.set(userId, stat);\n                    }\n                });\n                console.log(\"\\uD83D\\uDDFA️ Zmapowano statystyki dla \".concat(latestStatsMap.size, \" pracownik\\xf3w\"));\n            } else {\n                console.log('⚠️ Brak danych aktywności - użyję domyślnych wartości');\n            }\n            // KROK 4: Kombinuj dane pracowników ze statystykami aktywności\n            const result = allEmployees.map((employee)=>{\n                const userId = employee.id;\n                const activityStat = latestStatsMap.get(userId);\n                if (activityStat) {\n                    // Mamy statystyki - użyj prawdziwych danych\n                    return {\n                        ...activityStat,\n                        user: {\n                            id: employee.id,\n                            full_name: employee.full_name,\n                            email: employee.email,\n                            avatar_url: employee.avatar_url,\n                            role: employee.role\n                        }\n                    };\n                } else {\n                    // Brak statystyk - stwórz domyślne dane\n                    const currentDate = new Date();\n                    const currentMonth = currentDate.getMonth() + 1;\n                    const currentYear = currentDate.getFullYear();\n                    const monthStart = \"\".concat(currentYear, \"-\").concat(currentMonth.toString().padStart(2, '0'), \"-01\");\n                    const monthEnd = new Date(currentYear, currentMonth, 0).toISOString().split('T')[0];\n                    return {\n                        id: 'temp_' + userId,\n                        user_id: userId,\n                        period_type: 'monthly',\n                        period_start: monthStart,\n                        period_end: monthEnd,\n                        total_work_minutes: 0,\n                        average_daily_minutes: 0,\n                        expected_work_minutes: 176 * 60,\n                        efficiency_percentage: 0,\n                        total_activities: 0,\n                        average_daily_activities: 0,\n                        days_worked: 0,\n                        days_absent: 0,\n                        user: {\n                            id: employee.id,\n                            full_name: employee.full_name,\n                            email: employee.email,\n                            avatar_url: employee.avatar_url,\n                            role: employee.role\n                        }\n                    };\n                }\n            });\n            console.log(\"✅ Przygotowano statystyki aktywności dla wszystkich pracownik\\xf3w: \".concat(result.length));\n            console.log(\"\\uD83D\\uDC65 Lista pracownik\\xf3w: \".concat(result.map((s)=>{\n                var _s_user;\n                return (_s_user = s.user) === null || _s_user === void 0 ? void 0 : _s_user.full_name;\n            }).join(', ')));\n            // Pokaż statystyki podsumowujące\n            const withData = result.filter((r)=>r.total_work_minutes > 0).length;\n            const withoutData = result.length - withData;\n            console.log(\"\\uD83D\\uDCCA Pracownicy z danymi: \".concat(withData, \", bez danych: \").concat(withoutData));\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk aktywności:', error);\n            // Graceful fallback - zwróć pustą tablicę zamiast crashować\n            console.log('🔄 Graceful fallback - zwracam pustą tablicę');\n            return [];\n        }\n    },\n    // Pobierz trendy sprzedażowe z ostatnich 7 dni\n    async getSalesTrends (user) {\n        try {\n            console.log('📈 Pobieranie trendów sprzedażowych z ostatnich 7 dni...');\n            // Pobierz dane z ostatnich 7 dni\n            const endDate = new Date();\n            const startDate = new Date();\n            startDate.setDate(endDate.getDate() - 6) // 7 dni wstecz (włącznie z dzisiaj)\n            ;\n            const { data, error } = await supabase.from('clients').select('status, updated_at, status_changed_at, owner_id, edited_by').gte('updated_at', startDate.toISOString().split('T')[0]).lte('updated_at', endDate.toISOString().split('T')[0] + 'T23:59:59').in('status', [\n                'canvas',\n                'sale',\n                'antysale'\n            ]).order('updated_at', {\n                ascending: true\n            });\n            if (error) {\n                console.error('❌ Błąd pobierania trendów sprzedażowych:', error);\n                throw error;\n            }\n            console.log(\"✅ Pobrano \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" rekord\\xf3w z ostatnich 7 dni\"));\n            // Filtruj klientów według uprawnień użytkownika\n            let filteredData = data || [];\n            if (user.role === 'pracownik') {\n                filteredData = filteredData.filter((client)=>client.owner_id === user.id || client.owner_id === null || client.edited_by === user.id);\n            }\n            // Stwórz mapę dla dni tygodnia\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const trends = {};\n            // Inicjalizuj ostatnie 7 dni\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                trends[dayName] = {\n                    canvas: 0,\n                    sale: 0,\n                    antysale: 0\n                };\n            }\n            // Grupuj dane według dni\n            filteredData.forEach((client)=>{\n                const date = new Date(client.updated_at);\n                const dayName = dayNames[date.getDay()];\n                if (trends[dayName]) {\n                    if (client.status === 'canvas') trends[dayName].canvas++;\n                    else if (client.status === 'sale') trends[dayName].sale++;\n                    else if (client.status === 'antysale') trends[dayName].antysale++;\n                }\n            });\n            // Przekształć na format dla wykresu (ostatnie 7 dni w kolejności)\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                result.push({\n                    day: dayName,\n                    canvas: trends[dayName].canvas,\n                    sale: trends[dayName].sale,\n                    antysale: trends[dayName].antysale\n                });\n            }\n            console.log('✅ Trendy sprzedażowe przygotowane:', result);\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania trendów sprzedażowych:', error);\n            // W przypadku błędu zwróć puste dane dla ostatnich 7 dni\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                result.push({\n                    day: dayName,\n                    canvas: 0,\n                    sale: 0,\n                    antysale: 0\n                });\n            }\n            return result;\n        }\n    },\n    // Pobierz statystyki kliknięć telefonu tylko dla pracowników\n    async getPhoneClicksStats (user) {\n        try {\n            console.log('📞 Pobieranie statystyk kliknięć telefonu...');\n            // Pobierz wszystkich pracowników\n            const { data: employees, error: employeesError } = await supabase.from('users').select('id').eq('role', 'pracownik');\n            if (employeesError) {\n                console.error('❌ Błąd pobierania pracowników:', employeesError);\n                throw employeesError;\n            }\n            const employeeIds = (employees || []).map((emp)=>emp.id);\n            console.log(\"\\uD83D\\uDC65 Znaleziono \".concat(employeeIds.length, \" pracownik\\xf3w\"));\n            if (employeeIds.length === 0) {\n                return {\n                    totalPhoneCalls: 0,\n                    totalPhoneCallsToday: 0\n                };\n            }\n            // Pobierz wszystkie kliknięcia telefonu z activity_logs tylko dla pracowników\n            const { data: allPhoneClicks, error: allClicksError } = await supabase.from('activity_logs').select('id, changed_by, timestamp').eq('field_changed', 'last_phone_click').in('changed_by', employeeIds);\n            if (allClicksError) {\n                console.error('❌ Błąd pobierania kliknięć telefonu:', allClicksError);\n                throw allClicksError;\n            }\n            const totalPhoneCalls = (allPhoneClicks === null || allPhoneClicks === void 0 ? void 0 : allPhoneClicks.length) || 0;\n            // Pobierz dzisiejsze kliknięcia telefonu\n            const today = new Date().toISOString().split('T')[0] // YYYY-MM-DD\n            ;\n            const { data: todayPhoneClicks, error: todayClicksError } = await supabase.from('activity_logs').select('id, changed_by, timestamp').eq('field_changed', 'last_phone_click').in('changed_by', employeeIds).gte('timestamp', \"\".concat(today, \"T00:00:00\")).lt('timestamp', \"\".concat(today, \"T23:59:59\"));\n            if (todayClicksError) {\n                console.error('❌ Błąd pobierania dzisiejszych kliknięć telefonu:', todayClicksError);\n                throw todayClicksError;\n            }\n            const totalPhoneCallsToday = (todayPhoneClicks === null || todayPhoneClicks === void 0 ? void 0 : todayPhoneClicks.length) || 0;\n            console.log(\"✅ Statystyki kliknięć telefonu: łącznie \".concat(totalPhoneCalls, \", dziś \").concat(totalPhoneCallsToday));\n            return {\n                totalPhoneCalls,\n                totalPhoneCallsToday\n            };\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk kliknięć telefonu:', error);\n            // W przypadku błędu zwróć zerowe statystyki\n            return {\n                totalPhoneCalls: 0,\n                totalPhoneCallsToday: 0\n            };\n        }\n    },\n    // Pobierz dane trendów wydajności zespołu z ostatnich 7 dni\n    async getTeamPerformanceTrends (user) {\n        try {\n            console.log('📊 Pobieranie trendów wydajności zespołu z ostatnich 7 dni...');\n            // Pobierz wszystkich pracowników\n            const { data: employees, error: employeesError } = await supabase.from('users').select('id').eq('role', 'pracownik');\n            if (employeesError) {\n                console.error('❌ Błąd pobierania pracowników:', employeesError);\n                throw employeesError;\n            }\n            const employeeIds = (employees || []).map((emp)=>emp.id);\n            console.log(\"\\uD83D\\uDC65 Znaleziono \".concat(employeeIds.length, \" pracownik\\xf3w\"));\n            if (employeeIds.length === 0) {\n                // Zwróć puste dane dla ostatnich 7 dni\n                const dayNames = [\n                    'Ndz',\n                    'Pon',\n                    'Wt',\n                    'Śr',\n                    'Czw',\n                    'Pt',\n                    'Sob'\n                ];\n                const result = [];\n                for(let i = 6; i >= 0; i--){\n                    const date = new Date();\n                    date.setDate(date.getDate() - i);\n                    const dayName = dayNames[date.getDay()];\n                    result.push({\n                        day: dayName,\n                        telefony: 0,\n                        konwersja: 0,\n                        klienci: 0\n                    });\n                }\n                return result;\n            }\n            // Pobierz dane z ostatnich 7 dni\n            const endDate = new Date();\n            const startDate = new Date();\n            startDate.setDate(endDate.getDate() - 6) // 7 dni wstecz (włącznie z dzisiaj)\n            ;\n            // 1. Pobierz kliknięcia telefonu z activity_logs (tylko pracownicy)\n            const { data: phoneClicks, error: phoneError } = await supabase.from('activity_logs').select('changed_by, timestamp').eq('field_changed', 'last_phone_click').in('changed_by', employeeIds).gte('timestamp', startDate.toISOString().split('T')[0]).lte('timestamp', endDate.toISOString().split('T')[0] + 'T23:59:59');\n            if (phoneError) {\n                console.error('❌ Błąd pobierania kliknięć telefonu:', phoneError);\n                throw phoneError;\n            }\n            // 2. Pobierz zmiany klientów z ostatnich 7 dni (tylko przez pracowników)\n            const { data: clientChanges, error: changesError } = await supabase.from('clients').select('updated_at, status, edited_by').in('edited_by', employeeIds).gte('updated_at', startDate.toISOString().split('T')[0]).lte('updated_at', endDate.toISOString().split('T')[0] + 'T23:59:59').order('updated_at', {\n                ascending: true\n            });\n            if (changesError) {\n                console.error('❌ Błąd pobierania zmian klientów:', changesError);\n                throw changesError;\n            }\n            console.log(\"✅ Pobrano \".concat((phoneClicks === null || phoneClicks === void 0 ? void 0 : phoneClicks.length) || 0, \" kliknięć telefonu i \").concat((clientChanges === null || clientChanges === void 0 ? void 0 : clientChanges.length) || 0, \" zmian klient\\xf3w\"));\n            // Stwórz mapę dla dni tygodnia\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const trendsData = {};\n            // Inicjalizuj ostatnie 7 dni\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                trendsData[dayName] = {\n                    telefony: 0,\n                    klienci: 0,\n                    sales: 0\n                };\n            }\n            // Grupuj kliknięcia telefonu według dni\n            if (phoneClicks && Array.isArray(phoneClicks)) {\n                phoneClicks.forEach((click)=>{\n                    const date = new Date(click.timestamp);\n                    const dayName = dayNames[date.getDay()];\n                    if (trendsData[dayName]) {\n                        trendsData[dayName].telefony++;\n                    }\n                });\n            }\n            // Grupuj zmiany klientów według dni\n            if (clientChanges && Array.isArray(clientChanges)) {\n                clientChanges.forEach((change)=>{\n                    const date = new Date(change.updated_at);\n                    const dayName = dayNames[date.getDay()];\n                    if (trendsData[dayName]) {\n                        trendsData[dayName].klienci++;\n                        if (change.status === 'sale') {\n                            trendsData[dayName].sales++;\n                        }\n                    }\n                });\n            }\n            // Przekształć na format dla wykresu (ostatnie 7 dni w kolejności)\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                const dayData = trendsData[dayName];\n                // Oblicz konwersję (procent sales względem wszystkich klientów)\n                const konwersja = dayData.klienci > 0 ? Math.round(dayData.sales / dayData.klienci * 100) : 0;\n                result.push({\n                    day: dayName,\n                    telefony: dayData.telefony,\n                    konwersja: konwersja,\n                    klienci: dayData.klienci\n                });\n            }\n            console.log('✅ Trendy wydajności zespołu przygotowane:', result);\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania trendów wydajności zespołu:', error);\n            // W przypadku błędu zwróć puste dane dla ostatnich 7 dni\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                result.push({\n                    day: dayName,\n                    telefony: 0,\n                    konwersja: 0,\n                    klienci: 0\n                });\n            }\n            return result;\n        }\n    },\n    // API dla statystyk osobistych pracownika\n    async getMyPersonalStats (user) {\n        try {\n            console.log('📊 Pobieranie osobistych statystyk pracownika:', user.id, user.role);\n            // Sprawdź czy użytkownik to pracownik\n            if (user.role !== 'pracownik') {\n                console.error('❌ Nieautoryzowana rola:', user.role);\n                throw new Error('Dostęp tylko dla pracowników');\n            }\n            console.log('✅ Użytkownik autoryzowany jako pracownik');\n            const currentDate = new Date();\n            const currentMonth = currentDate.toISOString().slice(0, 7) // YYYY-MM\n            ;\n            // Ustaw pierwszy i ostatni dzień miesiąca prawidłowo\n            const startOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n            const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0, 23, 59, 59);\n            // 1. Pobierz liczbę telefonów w tym miesiącu (kliknięcia telefonu)\n            const { data: phoneClicks, error: phoneError } = await supabase.from('activity_logs').select('id, timestamp').eq('changed_by', user.id).eq('field_changed', 'last_phone_click').gte('timestamp', startOfMonth.toISOString()).lte('timestamp', endOfMonth.toISOString());\n            if (phoneError) {\n                console.error('❌ Błąd pobierania kliknięć telefonu:', phoneError);\n                throw phoneError;\n            }\n            const phoneCallsThisMonth = (phoneClicks === null || phoneClicks === void 0 ? void 0 : phoneClicks.length) || 0;\n            console.log(\"\\uD83D\\uDCDE Znaleziono \".concat(phoneCallsThisMonth, \" kliknięć telefonu w tym miesiącu\"));\n            // 2. Pobierz klientów przypisanych do pracownika\n            console.log('👥 Pobieranie klientów przypisanych do pracownika...');\n            const { data: myClients, error: clientsError } = await supabase.from('clients').select('id, status, first_name, last_name, company_name').eq('owner_id', user.id);\n            if (clientsError) {\n                console.error('❌ Błąd pobierania klientów:', clientsError);\n                throw clientsError;\n            }\n            const clients = myClients || [];\n            const totalClients = clients.length;\n            console.log(\"\\uD83D\\uDC64 Pracownik ma \".concat(totalClients, \" przypisanych klient\\xf3w\"));\n            // 3. Agreguj statusy klientów\n            console.log('📊 Agregowanie statusów klientów...');\n            const statusMap = new Map();\n            clients.forEach((client)=>{\n                const status = client.status;\n                statusMap.set(status, (statusMap.get(status) || 0) + 1);\n            });\n            console.log('📈 Statusy klientów:', Object.fromEntries(statusMap));\n            // Mapuj statusy na kolory\n            const statusColors = {\n                canvas: '#06b6d4',\n                sale: '#10b981',\n                antysale: '#f59e0b',\n                brak_kontaktu: '#6b7280',\n                nie_zainteresowany: '#ef4444',\n                zdenerwowany: '#dc2626',\n                '$$': '#fbbf24'\n            };\n            const clientStats = Array.from(statusMap.entries()).map((param)=>{\n                let [status, count] = param;\n                return {\n                    status,\n                    count,\n                    color: statusColors[status] || '#64748b'\n                };\n            });\n            // 4. Oblicz prowizję (tylko za klientów ze statusem 'sale')\n            const saleClients = statusMap.get('sale') || 0;\n            const commissionPerSale = 200 // 200 zł za każdego klienta sale\n            ;\n            const commissionTotal = saleClients * commissionPerSale;\n            // 5. Pobierz godziny pracy z tego miesiąca na podstawie activity_logs\n            console.log('⏰ Pobieranie aktywności z tego miesiąca...');\n            console.log(\"\\uD83D\\uDCC5 Zakres dat: \".concat(startOfMonth.toISOString(), \" - \").concat(endOfMonth.toISOString()));\n            const { data: activities, error: activitiesError } = await supabase.from('activity_logs').select('timestamp').eq('changed_by', user.id).gte('timestamp', startOfMonth.toISOString()).lte('timestamp', endOfMonth.toISOString()).order('timestamp', {\n                ascending: true\n            });\n            if (activitiesError) {\n                console.error('❌ Błąd pobierania aktywności:', activitiesError);\n                throw activitiesError;\n            }\n            console.log(\"⏰ Znaleziono \".concat((activities === null || activities === void 0 ? void 0 : activities.length) || 0, \" aktywności w tym miesiącu\"));\n            // Grupuj aktywności według dni i oblicz godziny pracy\n            console.log('📅 Grupowanie aktywności według dni...');\n            const dailyActivities = new Map();\n            if (activities && activities.length > 0) {\n                activities.forEach((activity)=>{\n                    const date = new Date(activity.timestamp);\n                    const day = date.toISOString().split('T')[0] // YYYY-MM-DD\n                    ;\n                    const hour = date.getHours();\n                    if (!dailyActivities.has(day)) {\n                        dailyActivities.set(day, new Set());\n                    }\n                    dailyActivities.get(day).add(hour);\n                });\n            }\n            // Przekształć na format dla wykresu\n            const workingHoursThisMonth = Array.from(dailyActivities.entries()).map((param)=>{\n                let [day, hours] = param;\n                return {\n                    day: new Date(day).toLocaleDateString('pl-PL', {\n                        weekday: 'short',\n                        day: 'numeric'\n                    }),\n                    hours: hours.size,\n                    sortDate: new Date(day) // Dodaj pole do sortowania\n                };\n            }).sort((a, b)=>a.sortDate.getTime() - b.sortDate.getTime()).map((param)=>{\n                let { day, hours } = param;\n                return {\n                    day,\n                    hours\n                };\n            }) // Usuń pole sortDate z wynikowych danych\n            ;\n            const totalWorkingHours = Array.from(dailyActivities.values()).reduce((sum, hours)=>sum + hours.size, 0);\n            const totalWorkingDays = dailyActivities.size;\n            console.log('✅ Statystyki osobiste przygotowane:', {\n                phoneCallsThisMonth,\n                totalClients,\n                commissionTotal,\n                totalWorkingHours,\n                totalWorkingDays\n            });\n            return {\n                phoneCallsThisMonth,\n                clientStats,\n                totalClients,\n                commissionTotal,\n                workingHoursThisMonth,\n                totalWorkingHours,\n                totalWorkingDays\n            };\n        } catch (error) {\n            var _error_message, _error_message1;\n            console.error('❌ Błąd pobierania osobistych statystyk:', error);\n            // Szczegółowe informacje o błędzie\n            if (error && typeof error === 'object') {\n                console.error('📋 Szczegóły błędu:', {\n                    message: error.message,\n                    code: error.code,\n                    details: error.details,\n                    hint: error.hint,\n                    stack: error.stack\n                });\n            }\n            // Jeśli to błąd RLS lub uprawnień, zwróć pustą strukturę zamiast crashować\n            if (error && typeof error === 'object' && (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS')) || ((_error_message1 = error.message) === null || _error_message1 === void 0 ? void 0 : _error_message1.includes('permission')))) {\n                console.warn('🔒 Problem z uprawnieniami - zwracam domyślne dane');\n                return {\n                    phoneCallsThisMonth: 0,\n                    clientStats: [],\n                    totalClients: 0,\n                    commissionTotal: 0,\n                    workingHoursThisMonth: [],\n                    totalWorkingHours: 0,\n                    totalWorkingDays: 0\n                };\n            }\n            throw error;\n        }\n    },\n    // Funkcje do zarządzania godzinami pracy pracownika\n    async saveWorkingHours (user, date, hours) {\n        try {\n            console.log(\"⏰ Zapisywanie godzin pracy: \".concat(hours, \"h dla dnia \").concat(date));\n            // Sprawdź czy użytkownik to pracownik\n            if (user.role !== 'pracownik') {\n                throw new Error('Dostęp tylko dla pracowników');\n            }\n            // Sprawdź czy to dzień roboczy (pon-pt)\n            const dayOfWeek = new Date(date).getDay();\n            if (dayOfWeek === 0 || dayOfWeek === 6) {\n                throw new Error('Można wpisywać godziny tylko dla dni roboczych (pon-pt)');\n            }\n            // Walidacja godzin (0-12)\n            if (hours < 0 || hours > 12) {\n                throw new Error('Liczba godzin musi być między 0 a 12');\n            }\n            // Upsert godzin pracy w bazie danych (tabela już istnieje)\n            const { error } = await supabase.from('working_hours').upsert({\n                user_id: user.id,\n                work_date: date,\n                hours_worked: hours,\n                updated_at: new Date().toISOString()\n            }, {\n                onConflict: 'user_id,work_date'\n            });\n            if (error) {\n                console.error('❌ Błąd zapisywania godzin pracy do bazy:', error);\n                // Fallback do localStorage tylko przy błędzie bazy danych\n                console.warn('⚠️ Błąd bazy danych - używam localStorage jako fallback');\n                const storageKey = \"working_hours_\".concat(user.id);\n                const existingData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                existingData[date] = hours;\n                localStorage.setItem(storageKey, JSON.stringify(existingData));\n                console.log(\"✅ Zapisano \".concat(hours, \"h dla dnia \").concat(date, \" (localStorage fallback)\"));\n                return;\n            }\n            console.log(\"✅ Zapisano \".concat(hours, \"h dla dnia \").concat(date, \" (baza danych working_hours)\"));\n        } catch (error) {\n            console.error('❌ Błąd w saveWorkingHours:', error);\n            // Ultimate fallback - localStorage\n            try {\n                console.warn('⚠️ Używam localStorage jako ostateczny fallback');\n                const storageKey = \"working_hours_\".concat(user.id);\n                const existingData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                existingData[date] = hours;\n                localStorage.setItem(storageKey, JSON.stringify(existingData));\n                console.log(\"✅ Zapisano \".concat(hours, \"h dla dnia \").concat(date, \" (localStorage ultimate fallback)\"));\n            } catch (storageError) {\n                console.error('❌ Nie udało się zapisać nawet do localStorage:', storageError);\n                throw error;\n            }\n        }\n    },\n    async getWorkingHoursForMonth (user, year, month) {\n        try {\n            console.log(\"⏰ Pobieranie godzin pracy dla \".concat(year, \"-\").concat(month));\n            // Sprawdź czy użytkownik to pracownik\n            if (user.role !== 'pracownik') {\n                throw new Error('Dostęp tylko dla pracowników');\n            }\n            // Oblicz pierwszy i ostatni dzień miesiąca\n            const startDate = new Date(year, month - 1, 1);\n            const endDate = new Date(year, month, 0);\n            // Pobierz godziny pracy z tabeli working_hours (tabela już istnieje)\n            const { data, error } = await supabase.from('working_hours').select('work_date, hours_worked').eq('user_id', user.id).gte('work_date', startDate.toISOString().split('T')[0]).lte('work_date', endDate.toISOString().split('T')[0]);\n            if (error) {\n                console.error('❌ Błąd pobierania godzin pracy z bazy:', error);\n                console.warn('⚠️ Błąd bazy danych - używam localStorage jako fallback');\n                // Fallback do localStorage tylko przy błędzie bazy danych\n                const storageKey = \"working_hours_\".concat(user.id);\n                const storedData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                // Filtruj dane dla odpowiedniego miesiąca\n                const hoursMap = {};\n                Object.entries(storedData).forEach((param)=>{\n                    let [date, hours] = param;\n                    const dateObj = new Date(date);\n                    if (dateObj >= startDate && dateObj <= endDate) {\n                        hoursMap[date] = hours;\n                    }\n                });\n                console.log(\"✅ Pobrano godziny pracy z localStorage fallback dla \".concat(Object.keys(hoursMap).length, \" dni\"));\n                return hoursMap;\n            }\n            // Konwertuj na obiekt date -> hours\n            const hoursMap = {};\n            if (data) {\n                data.forEach((entry)=>{\n                    hoursMap[entry.work_date] = entry.hours_worked;\n                });\n            }\n            console.log(\"✅ Pobrano godziny pracy z tabeli working_hours dla \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" dni\"));\n            return hoursMap;\n        } catch (error) {\n            console.error('❌ Błąd w getWorkingHoursForMonth:', error);\n            // Ultimate fallback - localStorage\n            try {\n                console.warn('⚠️ Używam localStorage jako ostateczny fallback');\n                const storageKey = \"working_hours_\".concat(user.id);\n                const storedData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                // Filtruj dane dla odpowiedniego miesiąca\n                const startDate = new Date(year, month - 1, 1);\n                const endDate = new Date(year, month, 0);\n                const hoursMap = {};\n                Object.entries(storedData).forEach((param)=>{\n                    let [date, hours] = param;\n                    const dateObj = new Date(date);\n                    if (dateObj >= startDate && dateObj <= endDate) {\n                        hoursMap[date] = hours;\n                    }\n                });\n                console.log(\"✅ Pobrano godziny pracy z localStorage ultimate fallback dla \".concat(Object.keys(hoursMap).length, \" dni\"));\n                return hoursMap;\n            } catch (storageError) {\n                console.error('❌ Nie udało się pobrać nawet z localStorage:', storageError);\n                return {};\n            }\n        }\n    },\n    // 🚀 NOWE FUNKCJE PERFORMANCE - Materializowane Widoki\n    // Zastępuje ciężkie JOIN'y - teraz natychmiastowe ładowanie\n    async getMonthlyEmployeePerformance (year, month) {\n        try {\n            console.log(\"\\uD83D\\uDCCA Pobieranie wydajności pracownik\\xf3w dla \".concat(year, \"-\").concat(month, \" (zoptymalizowane)...\"));\n            const { data, error } = await supabase.rpc('get_monthly_employee_performance', {\n                target_year: year,\n                target_month: month\n            });\n            if (error) {\n                console.error('❌ Błąd pobierania wydajności pracowników:', error);\n                throw error;\n            }\n            console.log(\"✅ Wydajność pracownik\\xf3w pobrana: \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" rekord\\xf3w\"));\n            return data;\n        } catch (error) {\n            console.error('❌ getMonthlyEmployeePerformance failed:', error);\n            throw error;\n        }\n    },\n    // Szybkie statystyki zespołu na podstawie materializowanych widoków\n    async getTeamSummary (year, month) {\n        try {\n            const { data, error } = await supabase.from('mv_monthly_employee_stats').select('*').eq('year', year).eq('month', month).order('owned_sales', {\n                ascending: false\n            });\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error('❌ getTeamSummary failed:', error);\n            throw error;\n        }\n    },\n    // Performance analytics - top performers\n    async getTopPerformers () {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n        try {\n            const { data, error } = await supabase.rpc('get_top_performers', {\n                limit_count: limit\n            });\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error('❌ getTopPerformers failed:', error);\n            throw error;\n        }\n    }\n};\n// Funkcje autoryzacji\nconst authApi = {\n    // Zaloguj użytkownika\n    async signIn (email, password) {\n        const { data, error } = await supabase.auth.signInWithPassword({\n            email,\n            password\n        });\n        if (error) throw error;\n        return data;\n    },\n    // Zarejestruj nowego użytkownika\n    async signUp (email, password, fullName) {\n        const { data, error } = await supabase.auth.signUp({\n            email,\n            password,\n            options: {\n                data: {\n                    full_name: fullName\n                }\n            }\n        });\n        if (error) throw error;\n        return data;\n    },\n    // Wyloguj użytkownika\n    async signOut () {\n        const { error } = await supabase.auth.signOut();\n        if (error) throw error;\n    },\n    // Pobierz aktualnego użytkownika\n    async getCurrentUser () {\n        const { data: { user } } = await supabase.auth.getUser();\n        return user;\n    },\n    // Pobierz profil użytkownika z rolą\n    async getUserProfile (userId) {\n        const { data, error } = await supabase.from('users').select('*').eq('id', userId).single();\n        if (error) throw error;\n        return data;\n    },\n    // Pobierz wszystkich użytkowników (dla opcji filtrowania)\n    async getAllUsers () {\n        try {\n            console.log('👥 getAllUsers START - sprawdzam RLS...');\n            // Sprawdź aktualnego użytkownika\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('👤 Aktualny użytkownik:', user === null || user === void 0 ? void 0 : user.email, user === null || user === void 0 ? void 0 : user.id);\n            const { data, error } = await supabase.from('users').select('id, full_name, email, role, avatar_url').order('full_name');\n            console.log('👥 getAllUsers - znaleziono użytkowników:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n            console.log('👥 getAllUsers - błąd:', error);\n            if (error) {\n                var _error_message, _error_message1;\n                console.error('❌ RLS Error in getAllUsers:', error);\n                // Sprawdź czy to problem z RLS\n                if (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS')) || ((_error_message1 = error.message) === null || _error_message1 === void 0 ? void 0 : _error_message1.includes('permission'))) {\n                    console.error('🔒 Problem z Row Level Security - pracownik nie może widzieć innych użytkowników');\n                }\n                throw error;\n            }\n            if (data && data.length > 0) {\n                console.log('👥 Przykład użytkowników:', data.slice(0, 3).map((u)=>({\n                        id: u.id,\n                        name: u.full_name,\n                        role: u.role\n                    })));\n            } else {\n                console.log('👥 UWAGA: Brak danych użytkowników - może RLS blokuje dostęp');\n            }\n            return data;\n        } catch (error) {\n            console.error('❌ getAllUsers FAILED:', error);\n            throw error;\n        }\n    },\n    // Sprawdź sesję użytkownika\n    async getSession () {\n        const { data: { session } } = await supabase.auth.getSession();\n        return session;\n    },\n    // Nasłuchuj zmian w autoryzacji\n    onAuthStateChange (callback) {\n        return supabase.auth.onAuthStateChange(callback);\n    },\n    // Zaktualizuj język użytkownika\n    async updateUserLanguage (userId, language) {\n        const { data, error } = await supabase.from('users').update({\n            language\n        }).eq('id', userId).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Bezpieczne pobieranie użytkowników do wyświetlania (odporne na RLS)\n    async getAllUsersForDisplay () {\n        try {\n            console.log('👥 getAllUsersForDisplay START - bezpieczne pobieranie...');\n            // Sprawdź aktualnego użytkownika\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('👤 Aktualny użytkownik:', user === null || user === void 0 ? void 0 : user.email, user === null || user === void 0 ? void 0 : user.id);\n            if (!user) {\n                console.log('❌ Brak zalogowanego użytkownika');\n                return [];\n            }\n            const { data, error } = await supabase.from('users').select('id, full_name, email, role, avatar_url').order('full_name');\n            console.log('👥 getAllUsersForDisplay - znaleziono użytkowników:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n            if (error) {\n                var _error_message, _error_message1;\n                console.error('❌ RLS Error in getAllUsersForDisplay:', error);\n                // Jeśli to problem z RLS, zwróć przynajmniej aktualnego użytkownika\n                if (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS')) || ((_error_message1 = error.message) === null || _error_message1 === void 0 ? void 0 : _error_message1.includes('permission'))) {\n                    console.error('🔒 RLS blokuje dostęp - zwracam tylko aktualnego użytkownika');\n                    // Pobierz profil aktualnego użytkownika\n                    try {\n                        const userProfile = await this.getUserProfile(user.id);\n                        console.log('👤 Fallback: używam profilu aktualnego użytkownika:', userProfile.full_name);\n                        return [\n                            userProfile\n                        ];\n                    } catch (profileError) {\n                        console.error('❌ Nie można pobrać profilu użytkownika:', profileError);\n                        return [];\n                    }\n                }\n                // Inny błąd - zwróć pustą tablicę\n                console.error('❌ Inny błąd - zwracam pustą tablicę');\n                return [];\n            }\n            if (data && data.length > 0) {\n                console.log('👥 Udane pobranie użytkowników:', data.length);\n                console.log('👥 Przykład użytkowników:', data.slice(0, 3).map((u)=>({\n                        id: u.id,\n                        name: u.full_name,\n                        role: u.role\n                    })));\n                return data;\n            } else {\n                console.log('👥 UWAGA: Brak danych użytkowników');\n                // Fallback - przynajmniej aktualny użytkownik\n                try {\n                    const userProfile = await this.getUserProfile(user.id);\n                    console.log('👤 Fallback: używam profilu aktualnego użytkownika:', userProfile.full_name);\n                    return [\n                        userProfile\n                    ];\n                } catch (profileError) {\n                    console.error('❌ Nie można pobrać profilu użytkownika:', profileError);\n                    return [];\n                }\n            }\n        } catch (error) {\n            console.error('❌ getAllUsersForDisplay CRITICAL ERROR:', error);\n            // Krytyczny fallback - spróbuj przynajmniej pobrać aktualnego użytkownika\n            try {\n                const { data: { user } } = await supabase.auth.getUser();\n                if (user) {\n                    const userProfile = await this.getUserProfile(user.id);\n                    console.log('👤 Krytyczny fallback: zwracam aktualnego użytkownika:', userProfile.full_name);\n                    return [\n                        userProfile\n                    ];\n                }\n            } catch (criticalError) {\n                console.error('❌ Krytyczny błąd fallback:', criticalError);\n            }\n            return [];\n        }\n    }\n};\n// Funkcja do określania koloru statusu \"canvas\" na podstawie czasu\nconst getCanvasStatusColor = (statusChangedAt)=>{\n    if (!statusChangedAt) {\n        return {\n            color: 'bg-blue-500/20 text-blue-400 border-blue-500/30',\n            description: 'Nowy',\n            priority: 'low'\n        };\n    }\n    const now = new Date();\n    const statusDate = new Date(statusChangedAt);\n    const daysDiff = Math.floor((now.getTime() - statusDate.getTime()) / (1000 * 60 * 60 * 24));\n    if (daysDiff <= 2) {\n        // 0-2 dni - zielony (świeży)\n        return {\n            color: 'bg-green-500/20 text-green-400 border-green-500/30',\n            description: \"Świeży (\".concat(daysDiff, \"d)\"),\n            priority: 'low'\n        };\n    } else if (daysDiff <= 4) {\n        // 2-4 dni - żółty (uwaga)\n        return {\n            color: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30',\n            description: \"Wymaga uwagi (\".concat(daysDiff, \"d)\"),\n            priority: 'medium'\n        };\n    } else {\n        // 5+ dni - czerwony (pilny)\n        return {\n            color: 'bg-red-500/20 text-red-400 border-red-500/30',\n            description: \"Pilny (\".concat(daysDiff, \"d)\"),\n            priority: 'high'\n        };\n    }\n};\n// Funkcja do pobierania klientów z oznaczeniami priorytetów\nconst getCanvasClientsWithPriority = async (user)=>{\n    try {\n        const clients = await clientsApi.getClients(user);\n        const canvasClients = clients.filter((client)=>client.status === 'canvas');\n        const priorityStats = {\n            high: 0,\n            medium: 0,\n            low: 0,\n            total: canvasClients.length\n        };\n        canvasClients.forEach((client)=>{\n            const { priority } = getCanvasStatusColor(client.status_changed_at);\n            priorityStats[priority]++;\n        });\n        return {\n            clients: canvasClients,\n            stats: priorityStats\n        };\n    } catch (error) {\n        console.error('Błąd pobierania klientów canvas:', error);\n        return {\n            clients: [],\n            stats: {\n                high: 0,\n                medium: 0,\n                low: 0,\n                total: 0\n            }\n        };\n    }\n};\n// 🚀 NOWE API PERFORMANCE - Materializowane Widoki i Optymalizacje\n// Dodane zgodnie z INSTRUKCJE_PERFORMANCE_OPTIMIZATIONS.md\nconst dashboardApi = {\n    // Zastępuje wolne zapytania dashboard - teraz ~10ms zamiast ~200ms\n    async getDashboardMetrics () {\n        try {\n            console.log('⚡ Pobieranie szybkich metryk dashboard z materializowanego widoku...');\n            const { data, error } = await supabase.rpc('get_dashboard_metrics');\n            if (error) {\n                console.error('❌ Błąd pobierania metryk dashboard:', error);\n                throw error;\n            }\n            console.log('✅ Dashboard metrics pobrane w trybie express:', (data === null || data === void 0 ? void 0 : data.length) || 0, 'metryk');\n            return data;\n        } catch (error) {\n            console.error('❌ getDashboardMetrics failed:', error);\n            throw error;\n        }\n    },\n    // Sprawdzenie czy materializowane widoki są świeże\n    async checkViewFreshness () {\n        try {\n            const { data, error } = await supabase.from('mv_dashboard_summary').select('last_updated').single();\n            if (error) throw error;\n            const lastUpdate = new Date(data.last_updated);\n            const now = new Date();\n            const minutesSinceUpdate = Math.floor((now.getTime() - lastUpdate.getTime()) / (1000 * 60));\n            return {\n                lastUpdate: data.last_updated,\n                minutesSinceUpdate,\n                isStale: minutesSinceUpdate > 30 // Uznaj za nieaktualne po 30 minutach\n            };\n        } catch (error) {\n            console.error('❌ Błąd sprawdzania świeżości widoków:', error);\n            return {\n                lastUpdate: null,\n                minutesSinceUpdate: Infinity,\n                isStale: true\n            };\n        }\n    }\n};\n// 🚀 NOWE FUNKCJE PERFORMANCE dodane do istniejącego reportsApi\nconst teamApi = {\n    // Szybki przegląd aktywności zespołu\n    async getTeamActivityOverview () {\n        try {\n            console.log('👥 Pobieranie przeglądu aktywności zespołu (zoptymalizowane)...');\n            const { data, error } = await supabase.from('mv_activity_summary').select('*').in('role', [\n                'pracownik',\n                'manager',\n                'project_manager',\n                'junior_manager',\n                'szef'\n            ]).order('activities_24h', {\n                ascending: false\n            });\n            if (error) {\n                console.error('❌ Błąd pobierania aktywności zespołu:', error);\n                throw error;\n            }\n            console.log(\"✅ Aktywność zespołu pobrana: \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" użytkownik\\xf3w\"));\n            return data;\n        } catch (error) {\n            console.error('❌ getTeamActivityOverview failed:', error);\n            throw error;\n        }\n    },\n    // Sprawdzenie aktywnych użytkowników w czasie rzeczywistym\n    async getActiveUsersNow () {\n        try {\n            const { data, error } = await supabase.from('mv_activity_summary').select('user_id, full_name, activity_status, last_activity').eq('activity_status', 'active').order('last_activity', {\n                ascending: false\n            });\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error('❌ getActiveUsersNow failed:', error);\n            throw error;\n        }\n    },\n    // Statystyki produktywności zespołu\n    async getProductivityStats () {\n        try {\n            const { data, error } = await supabase.from('mv_activity_summary').select('activities_24h, activities_7d, phone_clicks, status_changes').in('role', [\n                'pracownik',\n                'manager',\n                'project_manager',\n                'junior_manager',\n                'szef'\n            ]);\n            if (error) throw error;\n            // Oblicz średnie\n            const totalUsers = data.length;\n            const avgDaily = data.reduce((sum, user)=>sum + user.activities_24h, 0) / totalUsers;\n            const avgWeekly = data.reduce((sum, user)=>sum + user.activities_7d, 0) / totalUsers;\n            return {\n                totalUsers,\n                avgDailyActivities: Math.round(avgDaily),\n                avgWeeklyActivities: Math.round(avgWeekly),\n                totalDailyActivities: data.reduce((sum, user)=>sum + user.activities_24h, 0),\n                totalWeeklyActivities: data.reduce((sum, user)=>sum + user.activities_7d, 0)\n            };\n        } catch (error) {\n            console.error('❌ getProductivityStats failed:', error);\n            throw error;\n        }\n    }\n};\n// 🔧 PERFORMANCE MONITORING API\nconst performanceApi = {\n    // Sprawdzenie metryk wydajności systemu\n    async getSystemMetrics () {\n        try {\n            // Pobierz statystyki tabel bezpośrednio zamiast używać funkcji z błędem timestamp\n            const tableStats = [];\n            // Statystyki activity_logs\n            const { count: logsCount, error: logsError } = await supabase.from('activity_logs').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (!logsError) {\n                tableStats.push({\n                    table_name: 'activity_logs',\n                    record_count: logsCount || 0,\n                    table_size: 'N/A',\n                    last_updated: new Date().toISOString()\n                });\n            }\n            // Statystyki activity_logs_archive\n            const { count: archiveCount, error: archiveError } = await supabase.from('activity_logs_archive').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (!archiveError) {\n                tableStats.push({\n                    table_name: 'activity_logs_archive',\n                    record_count: archiveCount || 0,\n                    table_size: 'N/A',\n                    last_updated: new Date().toISOString()\n                });\n            }\n            // Statystyki clients\n            const { count: clientsCount, error: clientsError } = await supabase.from('clients').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (!clientsError) {\n                tableStats.push({\n                    table_name: 'clients',\n                    record_count: clientsCount || 0,\n                    table_size: 'N/A',\n                    last_updated: new Date().toISOString()\n                });\n            }\n            // Statystyki users\n            const { count: usersCount, error: usersError } = await supabase.from('users').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (!usersError) {\n                tableStats.push({\n                    table_name: 'users',\n                    record_count: usersCount || 0,\n                    table_size: 'N/A',\n                    last_updated: new Date().toISOString()\n                });\n            }\n            return tableStats;\n        } catch (error) {\n            console.error('❌ getSystemMetrics failed:', error);\n            throw error;\n        }\n    },\n    // Manualne odświeżenie materializowanych widoków\n    async refreshMaterializedViews () {\n        try {\n            console.log('🔄 Manualnie odświeżam materializowane widoki...');\n            const { data, error } = await supabase.rpc('refresh_all_materialized_views');\n            if (error) throw error;\n            console.log('✅ Widoki odświeżone:', data);\n            return data;\n        } catch (error) {\n            console.error('❌ refreshMaterializedViews failed:', error);\n            throw error;\n        }\n    },\n    // Archiwizacja starych logów\n    async archiveOldLogs () {\n        try {\n            console.log('📦 Uruchamiam archiwizację starych logów...');\n            const { data, error } = await supabase.rpc('archive_old_activity_logs');\n            if (error) throw error;\n            console.log(\"✅ Zarchiwizowano \".concat(data, \" starych log\\xf3w\"));\n            return data;\n        } catch (error) {\n            console.error('❌ archiveOldLogs failed:', error);\n            throw error;\n        }\n    },\n    // Optymalizacja bazy danych\n    async optimizeDatabase () {\n        try {\n            console.log('🚀 Uruchamiam optymalizację bazy danych...');\n            const { data, error } = await supabase.rpc('optimize_database_performance');\n            if (error) throw error;\n            console.log('✅ Baza danych zoptymalizowana:', data);\n            return data;\n        } catch (error) {\n            console.error('❌ optimizeDatabase failed:', error);\n            throw error;\n        }\n    }\n};\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/translations.ts":
/*!*****************************!*\
  !*** ./lib/translations.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVAILABLE_LANGUAGES: () => (/* binding */ AVAILABLE_LANGUAGES),\n/* harmony export */   translations: () => (/* binding */ translations),\n/* harmony export */   useTranslation: () => (/* binding */ useTranslation)\n/* harmony export */ });\n// Definicje języków\n// Dostępne języki z nazwami wyświetlanymi\nconst AVAILABLE_LANGUAGES = {\n    pl: {\n        name: 'Polski',\n        flag: '🇵🇱'\n    },\n    en: {\n        name: 'English',\n        flag: '🇬🇧'\n    },\n    sk: {\n        name: 'Slovenčina',\n        flag: '🇸🇰'\n    }\n};\n// Tłumaczenia - kompletne dla całej aplikacji\nconst translations = {\n    pl: {\n        // Ogólne\n        language: 'Język',\n        save: 'Zapisz',\n        cancel: 'Anuluj',\n        loading: 'Ładowanie...',\n        error: 'Błąd',\n        success: 'Sukces',\n        edit: 'Edytuj',\n        delete: 'Usuń',\n        add: 'Dodaj',\n        search: 'Szukaj',\n        filter: 'Filtruj',\n        reset: 'Resetuj',\n        close: 'Zamknij',\n        // Nawigacja\n        navigation: {\n            dashboard: 'Dashboard',\n            clients: 'Klienci',\n            reports: 'Raporty',\n            settings: 'Ustawienia',\n            logout: 'Wyloguj'\n        },\n        // Klienci\n        clients: {\n            title: 'Zarządzanie Klientami',\n            searchClients: 'Szukaj klientów...',\n            filterByOwner: 'Filtruj po właścicielu',\n            allOwners: 'Wszyscy właściciele',\n            noOwner: 'Bez właściciela',\n            resetFilters: 'Resetuj filtry',\n            employeeInfo: 'Widzisz wszystkich klientów i ich właścicieli, ale możesz filtrować tylko swoich klientów',\n            // Pola\n            firstName: 'Imię',\n            lastName: 'Nazwisko',\n            company: 'Firma',\n            phone: 'Telefon',\n            email: 'Email',\n            status: 'Status',\n            owner: 'Właściciel',\n            // Statusy\n            statuses: {\n                canvas: 'Canvas',\n                brak_kontaktu: 'Brak kontaktu',\n                nie_zainteresowany: 'Nie zainteresowany',\n                zdenerwowany: 'Zdenerwowany',\n                antysale: 'Anti-sale',\n                sale: 'Sprzedaż',\n                '$$': 'Płatny'\n            }\n        },\n        // Ustawienia\n        settings: {\n            title: 'Ustawienia',\n            languageSettings: 'Ustawienia językowe',\n            selectLanguage: 'Wybierz język aplikacji',\n            languageChanged: 'Język został zmieniony'\n        }\n    },\n    en: {\n        // General\n        language: 'Language',\n        save: 'Save',\n        cancel: 'Cancel',\n        loading: 'Loading...',\n        error: 'Error',\n        success: 'Success',\n        edit: 'Edit',\n        delete: 'Delete',\n        add: 'Add',\n        search: 'Search',\n        filter: 'Filter',\n        reset: 'Reset',\n        close: 'Close',\n        // Navigation\n        navigation: {\n            dashboard: 'Dashboard',\n            clients: 'Clients',\n            reports: 'Reports',\n            settings: 'Settings',\n            logout: 'Logout'\n        },\n        // Clients\n        clients: {\n            title: 'Client Management',\n            searchClients: 'Search clients...',\n            filterByOwner: 'Filter by owner',\n            allOwners: 'All owners',\n            noOwner: 'No owner',\n            resetFilters: 'Reset filters',\n            employeeInfo: 'You can see all clients and their owners, but can only filter your own clients',\n            // Fields\n            firstName: 'First Name',\n            lastName: 'Last Name',\n            company: 'Company',\n            phone: 'Phone',\n            email: 'Email',\n            status: 'Status',\n            owner: 'Owner',\n            // Statuses\n            statuses: {\n                canvas: 'Canvas',\n                brak_kontaktu: 'No contact',\n                nie_zainteresowany: 'Not interested',\n                zdenerwowany: 'Angry',\n                antysale: 'Anti-sale',\n                sale: 'Sale',\n                '$$': 'Paid'\n            }\n        },\n        // Settings\n        settings: {\n            title: 'Settings',\n            languageSettings: 'Language Settings',\n            selectLanguage: 'Select application language',\n            languageChanged: 'Language has been changed'\n        }\n    },\n    sk: {\n        // Všeobecné\n        language: 'Jazyk',\n        save: 'Uložiť',\n        cancel: 'Zrušiť',\n        loading: 'Načítava...',\n        error: 'Chyba',\n        success: 'Úspech',\n        edit: 'Upraviť',\n        delete: 'Vymazať',\n        add: 'Pridať',\n        search: 'Hľadať',\n        filter: 'Filtrovať',\n        reset: 'Resetovať',\n        close: 'Zavrieť',\n        // Navigácia\n        navigation: {\n            dashboard: 'Dashboard',\n            clients: 'Klienti',\n            reports: 'Reporty',\n            settings: 'Nastavenia',\n            logout: 'Odhlásiť'\n        },\n        // Klienti\n        clients: {\n            title: 'Správa Klientov',\n            searchClients: 'Hľadať klientov...',\n            filterByOwner: 'Filtrovať podľa vlastníka',\n            allOwners: 'Všetci vlastníci',\n            noOwner: 'Bez vlastníka',\n            resetFilters: 'Resetovať filtre',\n            employeeInfo: 'Vidíte všetkých klientov a ich vlastníkov, ale môžete filtrovať len svojich klientov',\n            // Polia\n            firstName: 'Meno',\n            lastName: 'Priezvisko',\n            company: 'Spoločnosť',\n            phone: 'Telefón',\n            email: 'Email',\n            status: 'Status',\n            owner: 'Vlastník',\n            // Statusy\n            statuses: {\n                canvas: 'Canvas',\n                brak_kontaktu: 'Bez kontaktu',\n                nie_zainteresowany: 'Nezaujíma sa',\n                zdenerwowany: 'Nahnevaný',\n                antysale: 'Anti-predaj',\n                sale: 'Predaj',\n                '$$': 'Platený'\n            }\n        },\n        // Nastavenia\n        settings: {\n            title: 'Nastavenia',\n            languageSettings: 'Nastavenia jazyka',\n            selectLanguage: 'Vybrať jazyk aplikácie',\n            languageChanged: 'Jazyk bol zmenený'\n        }\n    }\n};\n// Hook dla tłumaczeń\nfunction useTranslation() {\n    let language = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'pl';\n    return {\n        t: (key)=>{\n            const keys = key.split('.');\n            let value = translations[language];\n            for (const k of keys){\n                value = value === null || value === void 0 ? void 0 : value[k];\n            }\n            return value || key;\n        },\n        language,\n        availableLanguages: AVAILABLE_LANGUAGES\n    };\n}\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/translations.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi91dGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDSjtBQUVqQyxTQUFTRTtJQUFHO1FBQUdDLE9BQUgsdUJBQXVCOztJQUN4QyxPQUFPRix1REFBT0EsQ0FBQ0QsMENBQUlBLENBQUNHO0FBQ3RCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXGxpYlxcdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xzeCwgdHlwZSBDbGFzc1ZhbHVlIH0gZnJvbSBcImNsc3hcIlxyXG5pbXBvcnQgeyB0d01lcmdlIH0gZnJvbSBcInRhaWx3aW5kLW1lcmdlXCJcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbiguLi5pbnB1dHM6IENsYXNzVmFsdWVbXSkge1xyXG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSlcclxufVxyXG4iXSwibmFtZXMiOlsiY2xzeCIsInR3TWVyZ2UiLCJjbiIsImlucHV0cyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@radix-ui/primitive/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeEventHandlers: () => (/* binding */ composeEventHandlers)\n/* harmony export */ });\n// packages/core/primitive/src/primitive.tsx\r\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\r\n  return function handleEvent(event) {\r\n    originalEventHandler?.(event);\r\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\r\n      return ourEventHandler?.(event);\r\n    }\r\n  };\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLHVFQUF1RSxrQ0FBa0MsSUFBSTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHByaW1pdGl2ZVxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL2NvcmUvcHJpbWl0aXZlL3NyYy9wcmltaXRpdmUudHN4XHJcbmZ1bmN0aW9uIGNvbXBvc2VFdmVudEhhbmRsZXJzKG9yaWdpbmFsRXZlbnRIYW5kbGVyLCBvdXJFdmVudEhhbmRsZXIsIHsgY2hlY2tGb3JEZWZhdWx0UHJldmVudGVkID0gdHJ1ZSB9ID0ge30pIHtcclxuICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlRXZlbnQoZXZlbnQpIHtcclxuICAgIG9yaWdpbmFsRXZlbnRIYW5kbGVyPy4oZXZlbnQpO1xyXG4gICAgaWYgKGNoZWNrRm9yRGVmYXVsdFByZXZlbnRlZCA9PT0gZmFsc2UgfHwgIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHtcclxuICAgICAgcmV0dXJuIG91ckV2ZW50SGFuZGxlcj8uKGV2ZW50KTtcclxuICAgIH1cclxuICB9O1xyXG59XHJcbmV4cG9ydCB7XHJcbiAgY29tcG9zZUV2ZW50SGFuZGxlcnNcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-collection/dist/index.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@radix-ui/react-collection/dist/index.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCollection: () => (/* binding */ createCollection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ createCollection auto */ // packages/react/collection/src/Collection.tsx\n\n\n\n\n\nfunction createCollection(name) {\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n    const PROVIDER_NAME = name + \"CollectionProvider\";\n    const [createCollectionContext, createCollectionScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(PROVIDER_NAME);\n    const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {\n        collectionRef: {\n            current: null\n        },\n        itemMap: /* @__PURE__ */ new Map()\n    });\n    const CollectionProvider = (props)=>{\n        _s();\n        const { scope, children } = props;\n        const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n        const itemMap = react__WEBPACK_IMPORTED_MODULE_0__.useRef(/* @__PURE__ */ new Map()).current;\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CollectionProviderImpl, {\n            scope,\n            itemMap,\n            collectionRef: ref,\n            children\n        });\n    };\n    _s(CollectionProvider, \"i9R1RY532Tsw7syarXwOonBpwXM=\");\n    CollectionProvider.displayName = PROVIDER_NAME;\n    const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n    const CollectionSlot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s1((props, forwardedRef)=>{\n        _s1();\n        const { scope, children } = props;\n        const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n        const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, context.collectionRef);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot, {\n            ref: composedRefs,\n            children\n        });\n    }, \"5JQ4uy78XLW8WM+YuDpNgF/JIVs=\", false, function() {\n        return [\n            useCollectionContext,\n            _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n        ];\n    }));\n    CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n    const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n    const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n    const CollectionItemSlot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s2((props, forwardedRef)=>{\n        _s2();\n        const { scope, children, ...itemData } = props;\n        const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n        const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref);\n        const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n            \"createCollection.CollectionItemSlot.useEffect\": ()=>{\n                context.itemMap.set(ref, {\n                    ref,\n                    ...itemData\n                });\n                return ({\n                    \"createCollection.CollectionItemSlot.useEffect\": ()=>void context.itemMap.delete(ref)\n                })[\"createCollection.CollectionItemSlot.useEffect\"];\n            }\n        }[\"createCollection.CollectionItemSlot.useEffect\"]);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot, {\n            ...{\n                [ITEM_DATA_ATTR]: \"\"\n            },\n            ref: composedRefs,\n            children\n        });\n    }, \"eauD3DgWC2VdU7voCXLDR4PeA+k=\", false, function() {\n        return [\n            _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n            useCollectionContext\n        ];\n    }));\n    CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n    function useCollection(scope) {\n        _s3();\n        const context = useCollectionContext(name + \"CollectionConsumer\", scope);\n        const getItems = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n            \"createCollection.useCollection.useCallback[getItems]\": ()=>{\n                const collectionNode = context.collectionRef.current;\n                if (!collectionNode) return [];\n                const orderedNodes = Array.from(collectionNode.querySelectorAll(\"[\".concat(ITEM_DATA_ATTR, \"]\")));\n                const items = Array.from(context.itemMap.values());\n                const orderedItems = items.sort({\n                    \"createCollection.useCollection.useCallback[getItems].orderedItems\": (a, b)=>orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n                }[\"createCollection.useCollection.useCallback[getItems].orderedItems\"]);\n                return orderedItems;\n            }\n        }[\"createCollection.useCollection.useCallback[getItems]\"], [\n            context.collectionRef,\n            context.itemMap\n        ]);\n        return getItems;\n    }\n    _s3(useCollection, \"jCyvzZFUzVDqeEjq0R8vi6mUa78=\", false, function() {\n        return [\n            useCollectionContext\n        ];\n    });\n    return [\n        {\n            Provider: CollectionProvider,\n            Slot: CollectionSlot,\n            ItemSlot: CollectionItemSlot\n        },\n        useCollection,\n        createCollectionScope\n    ];\n}\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-collection/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-compose-refs/dist/index.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeRefs: () => (/* binding */ composeRefs),\n/* harmony export */   useComposedRefs: () => (/* binding */ useComposedRefs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/compose-refs/src/composeRefs.tsx\r\n\r\nfunction setRef(ref, value) {\r\n  if (typeof ref === \"function\") {\r\n    return ref(value);\r\n  } else if (ref !== null && ref !== void 0) {\r\n    ref.current = value;\r\n  }\r\n}\r\nfunction composeRefs(...refs) {\r\n  return (node) => {\r\n    let hasCleanup = false;\r\n    const cleanups = refs.map((ref) => {\r\n      const cleanup = setRef(ref, node);\r\n      if (!hasCleanup && typeof cleanup == \"function\") {\r\n        hasCleanup = true;\r\n      }\r\n      return cleanup;\r\n    });\r\n    if (hasCleanup) {\r\n      return () => {\r\n        for (let i = 0; i < cleanups.length; i++) {\r\n          const cleanup = cleanups[i];\r\n          if (typeof cleanup == \"function\") {\r\n            cleanup();\r\n          } else {\r\n            setRef(refs[i], null);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  };\r\n}\r\nfunction useComposedRefs(...refs) {\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(composeRefs(...refs), refs);\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDhDQUFpQjtBQUMxQjtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHJlYWN0LWNvbXBvc2UtcmVmc1xcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L2NvbXBvc2UtcmVmcy9zcmMvY29tcG9zZVJlZnMudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5mdW5jdGlvbiBzZXRSZWYocmVmLCB2YWx1ZSkge1xyXG4gIGlmICh0eXBlb2YgcmVmID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgIHJldHVybiByZWYodmFsdWUpO1xyXG4gIH0gZWxzZSBpZiAocmVmICE9PSBudWxsICYmIHJlZiAhPT0gdm9pZCAwKSB7XHJcbiAgICByZWYuY3VycmVudCA9IHZhbHVlO1xyXG4gIH1cclxufVxyXG5mdW5jdGlvbiBjb21wb3NlUmVmcyguLi5yZWZzKSB7XHJcbiAgcmV0dXJuIChub2RlKSA9PiB7XHJcbiAgICBsZXQgaGFzQ2xlYW51cCA9IGZhbHNlO1xyXG4gICAgY29uc3QgY2xlYW51cHMgPSByZWZzLm1hcCgocmVmKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNsZWFudXAgPSBzZXRSZWYocmVmLCBub2RlKTtcclxuICAgICAgaWYgKCFoYXNDbGVhbnVwICYmIHR5cGVvZiBjbGVhbnVwID09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIGhhc0NsZWFudXAgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBjbGVhbnVwO1xyXG4gICAgfSk7XHJcbiAgICBpZiAoaGFzQ2xlYW51cCkge1xyXG4gICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xlYW51cHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGNvbnN0IGNsZWFudXAgPSBjbGVhbnVwc1tpXTtcclxuICAgICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgY2xlYW51cCgpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc2V0UmVmKHJlZnNbaV0sIG51bGwpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgIH1cclxuICB9O1xyXG59XHJcbmZ1bmN0aW9uIHVzZUNvbXBvc2VkUmVmcyguLi5yZWZzKSB7XHJcbiAgcmV0dXJuIFJlYWN0LnVzZUNhbGxiYWNrKGNvbXBvc2VSZWZzKC4uLnJlZnMpLCByZWZzKTtcclxufVxyXG5leHBvcnQge1xyXG4gIGNvbXBvc2VSZWZzLFxyXG4gIHVzZUNvbXBvc2VkUmVmc1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: () => (/* binding */ createContext2),\n/* harmony export */   createContextScope: () => (/* binding */ createContextScope)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/context/src/createContext.tsx\r\n\r\n\r\nfunction createContext2(rootComponentName, defaultContext) {\r\n  const Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\r\n  const Provider = (props) => {\r\n    const { children, ...context } = props;\r\n    const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\r\n  };\r\n  Provider.displayName = rootComponentName + \"Provider\";\r\n  function useContext2(consumerName) {\r\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\r\n    if (context) return context;\r\n    if (defaultContext !== void 0) return defaultContext;\r\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\r\n  }\r\n  return [Provider, useContext2];\r\n}\r\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\r\n  let defaultContexts = [];\r\n  function createContext3(rootComponentName, defaultContext) {\r\n    const BaseContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\r\n    const index = defaultContexts.length;\r\n    defaultContexts = [...defaultContexts, defaultContext];\r\n    const Provider = (props) => {\r\n      const { scope, children, ...context } = props;\r\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\r\n      const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\r\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\r\n    };\r\n    Provider.displayName = rootComponentName + \"Provider\";\r\n    function useContext2(consumerName, scope) {\r\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\r\n      const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\r\n      if (context) return context;\r\n      if (defaultContext !== void 0) return defaultContext;\r\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\r\n    }\r\n    return [Provider, useContext2];\r\n  }\r\n  const createScope = () => {\r\n    const scopeContexts = defaultContexts.map((defaultContext) => {\r\n      return react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\r\n    });\r\n    return function useScope(scope) {\r\n      const contexts = scope?.[scopeName] || scopeContexts;\r\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\r\n        [scope, contexts]\r\n      );\r\n    };\r\n  };\r\n  createScope.scopeName = scopeName;\r\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\r\n}\r\nfunction composeContextScopes(...scopes) {\r\n  const baseScope = scopes[0];\r\n  if (scopes.length === 1) return baseScope;\r\n  const createScope = () => {\r\n    const scopeHooks = scopes.map((createScope2) => ({\r\n      useScope: createScope2(),\r\n      scopeName: createScope2.scopeName\r\n    }));\r\n    return function useComposedScopes(overrideScopes) {\r\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\r\n        const scopeProps = useScope(overrideScopes);\r\n        const currentScope = scopeProps[`__scope${scopeName}`];\r\n        return { ...nextScopes2, ...currentScope };\r\n      }, {});\r\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\r\n    };\r\n  };\r\n  createScope.scopeName = baseScope.scopeName;\r\n  return createScope;\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29udGV4dC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4QztBQUNBLGtCQUFrQixnREFBbUI7QUFDckM7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxrQkFBa0IsMENBQWE7QUFDL0IsMkJBQTJCLHNEQUFHLHFCQUFxQixpQkFBaUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZDQUFnQjtBQUNwQztBQUNBO0FBQ0EseUJBQXlCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0Esb0JBQW9CLDBDQUFhO0FBQ2pDLDZCQUE2QixzREFBRyxxQkFBcUIsaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDZDQUFnQjtBQUN0QztBQUNBO0FBQ0EsMkJBQTJCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBbUI7QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFhO0FBQzFCLGlCQUFpQixXQUFXLFVBQVUsTUFBTSxtQ0FBbUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQSxrREFBa0QsVUFBVTtBQUM1RCxpQkFBaUI7QUFDakIsT0FBTyxJQUFJO0FBQ1gsYUFBYSwwQ0FBYSxVQUFVLFdBQVcsb0JBQW9CLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3QtY29udGV4dFxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L2NvbnRleHQvc3JjL2NyZWF0ZUNvbnRleHQudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxuZnVuY3Rpb24gY3JlYXRlQ29udGV4dDIocm9vdENvbXBvbmVudE5hbWUsIGRlZmF1bHRDb250ZXh0KSB7XHJcbiAgY29uc3QgQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdENvbnRleHQpO1xyXG4gIGNvbnN0IFByb3ZpZGVyID0gKHByb3BzKSA9PiB7XHJcbiAgICBjb25zdCB7IGNoaWxkcmVuLCAuLi5jb250ZXh0IH0gPSBwcm9wcztcclxuICAgIGNvbnN0IHZhbHVlID0gUmVhY3QudXNlTWVtbygoKSA9PiBjb250ZXh0LCBPYmplY3QudmFsdWVzKGNvbnRleHQpKTtcclxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUsIGNoaWxkcmVuIH0pO1xyXG4gIH07XHJcbiAgUHJvdmlkZXIuZGlzcGxheU5hbWUgPSByb290Q29tcG9uZW50TmFtZSArIFwiUHJvdmlkZXJcIjtcclxuICBmdW5jdGlvbiB1c2VDb250ZXh0Mihjb25zdW1lck5hbWUpIHtcclxuICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KENvbnRleHQpO1xyXG4gICAgaWYgKGNvbnRleHQpIHJldHVybiBjb250ZXh0O1xyXG4gICAgaWYgKGRlZmF1bHRDb250ZXh0ICE9PSB2b2lkIDApIHJldHVybiBkZWZhdWx0Q29udGV4dDtcclxuICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHtjb25zdW1lck5hbWV9XFxgIG11c3QgYmUgdXNlZCB3aXRoaW4gXFxgJHtyb290Q29tcG9uZW50TmFtZX1cXGBgKTtcclxuICB9XHJcbiAgcmV0dXJuIFtQcm92aWRlciwgdXNlQ29udGV4dDJdO1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRleHRTY29wZShzY29wZU5hbWUsIGNyZWF0ZUNvbnRleHRTY29wZURlcHMgPSBbXSkge1xyXG4gIGxldCBkZWZhdWx0Q29udGV4dHMgPSBbXTtcclxuICBmdW5jdGlvbiBjcmVhdGVDb250ZXh0Myhyb290Q29tcG9uZW50TmFtZSwgZGVmYXVsdENvbnRleHQpIHtcclxuICAgIGNvbnN0IEJhc2VDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0Q29udGV4dCk7XHJcbiAgICBjb25zdCBpbmRleCA9IGRlZmF1bHRDb250ZXh0cy5sZW5ndGg7XHJcbiAgICBkZWZhdWx0Q29udGV4dHMgPSBbLi4uZGVmYXVsdENvbnRleHRzLCBkZWZhdWx0Q29udGV4dF07XHJcbiAgICBjb25zdCBQcm92aWRlciA9IChwcm9wcykgPT4ge1xyXG4gICAgICBjb25zdCB7IHNjb3BlLCBjaGlsZHJlbiwgLi4uY29udGV4dCB9ID0gcHJvcHM7XHJcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV0/LltpbmRleF0gfHwgQmFzZUNvbnRleHQ7XHJcbiAgICAgIGNvbnN0IHZhbHVlID0gUmVhY3QudXNlTWVtbygoKSA9PiBjb250ZXh0LCBPYmplY3QudmFsdWVzKGNvbnRleHQpKTtcclxuICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW4gfSk7XHJcbiAgICB9O1xyXG4gICAgUHJvdmlkZXIuZGlzcGxheU5hbWUgPSByb290Q29tcG9uZW50TmFtZSArIFwiUHJvdmlkZXJcIjtcclxuICAgIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSwgc2NvcGUpIHtcclxuICAgICAgY29uc3QgQ29udGV4dCA9IHNjb3BlPy5bc2NvcGVOYW1lXT8uW2luZGV4XSB8fCBCYXNlQ29udGV4dDtcclxuICAgICAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29udGV4dCk7XHJcbiAgICAgIGlmIChjb250ZXh0KSByZXR1cm4gY29udGV4dDtcclxuICAgICAgaWYgKGRlZmF1bHRDb250ZXh0ICE9PSB2b2lkIDApIHJldHVybiBkZWZhdWx0Q29udGV4dDtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcXGAke2NvbnN1bWVyTmFtZX1cXGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBcXGAke3Jvb3RDb21wb25lbnROYW1lfVxcYGApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFtQcm92aWRlciwgdXNlQ29udGV4dDJdO1xyXG4gIH1cclxuICBjb25zdCBjcmVhdGVTY29wZSA9ICgpID0+IHtcclxuICAgIGNvbnN0IHNjb3BlQ29udGV4dHMgPSBkZWZhdWx0Q29udGV4dHMubWFwKChkZWZhdWx0Q29udGV4dCkgPT4ge1xyXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0Q29udGV4dCk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmdW5jdGlvbiB1c2VTY29wZShzY29wZSkge1xyXG4gICAgICBjb25zdCBjb250ZXh0cyA9IHNjb3BlPy5bc2NvcGVOYW1lXSB8fCBzY29wZUNvbnRleHRzO1xyXG4gICAgICByZXR1cm4gUmVhY3QudXNlTWVtbyhcclxuICAgICAgICAoKSA9PiAoeyBbYF9fc2NvcGUke3Njb3BlTmFtZX1gXTogeyAuLi5zY29wZSwgW3Njb3BlTmFtZV06IGNvbnRleHRzIH0gfSksXHJcbiAgICAgICAgW3Njb3BlLCBjb250ZXh0c11cclxuICAgICAgKTtcclxuICAgIH07XHJcbiAgfTtcclxuICBjcmVhdGVTY29wZS5zY29wZU5hbWUgPSBzY29wZU5hbWU7XHJcbiAgcmV0dXJuIFtjcmVhdGVDb250ZXh0MywgY29tcG9zZUNvbnRleHRTY29wZXMoY3JlYXRlU2NvcGUsIC4uLmNyZWF0ZUNvbnRleHRTY29wZURlcHMpXTtcclxufVxyXG5mdW5jdGlvbiBjb21wb3NlQ29udGV4dFNjb3BlcyguLi5zY29wZXMpIHtcclxuICBjb25zdCBiYXNlU2NvcGUgPSBzY29wZXNbMF07XHJcbiAgaWYgKHNjb3Blcy5sZW5ndGggPT09IDEpIHJldHVybiBiYXNlU2NvcGU7XHJcbiAgY29uc3QgY3JlYXRlU2NvcGUgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBzY29wZUhvb2tzID0gc2NvcGVzLm1hcCgoY3JlYXRlU2NvcGUyKSA9PiAoe1xyXG4gICAgICB1c2VTY29wZTogY3JlYXRlU2NvcGUyKCksXHJcbiAgICAgIHNjb3BlTmFtZTogY3JlYXRlU2NvcGUyLnNjb3BlTmFtZVxyXG4gICAgfSkpO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVzZUNvbXBvc2VkU2NvcGVzKG92ZXJyaWRlU2NvcGVzKSB7XHJcbiAgICAgIGNvbnN0IG5leHRTY29wZXMgPSBzY29wZUhvb2tzLnJlZHVjZSgobmV4dFNjb3BlczIsIHsgdXNlU2NvcGUsIHNjb3BlTmFtZSB9KSA9PiB7XHJcbiAgICAgICAgY29uc3Qgc2NvcGVQcm9wcyA9IHVzZVNjb3BlKG92ZXJyaWRlU2NvcGVzKTtcclxuICAgICAgICBjb25zdCBjdXJyZW50U2NvcGUgPSBzY29wZVByb3BzW2BfX3Njb3BlJHtzY29wZU5hbWV9YF07XHJcbiAgICAgICAgcmV0dXJuIHsgLi4ubmV4dFNjb3BlczIsIC4uLmN1cnJlbnRTY29wZSB9O1xyXG4gICAgICB9LCB7fSk7XHJcbiAgICAgIHJldHVybiBSZWFjdC51c2VNZW1vKCgpID0+ICh7IFtgX19zY29wZSR7YmFzZVNjb3BlLnNjb3BlTmFtZX1gXTogbmV4dFNjb3BlcyB9KSwgW25leHRTY29wZXNdKTtcclxuICAgIH07XHJcbiAgfTtcclxuICBjcmVhdGVTY29wZS5zY29wZU5hbWUgPSBiYXNlU2NvcGUuc2NvcGVOYW1lO1xyXG4gIHJldHVybiBjcmVhdGVTY29wZTtcclxufVxyXG5leHBvcnQge1xyXG4gIGNyZWF0ZUNvbnRleHQyIGFzIGNyZWF0ZUNvbnRleHQsXHJcbiAgY3JlYXRlQ29udGV4dFNjb3BlXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Branch: () => (/* binding */ Branch),\n/* harmony export */   DismissableLayer: () => (/* binding */ DismissableLayer),\n/* harmony export */   DismissableLayerBranch: () => (/* binding */ DismissableLayerBranch),\n/* harmony export */   Root: () => (/* binding */ Root)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-escape-keydown */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Branch,DismissableLayer,DismissableLayerBranch,Root auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n// packages/react/dismissable-layer/src/DismissableLayer.tsx\n\n\n\n\n\n\n\nvar DISMISSABLE_LAYER_NAME = \"DismissableLayer\";\nvar CONTEXT_UPDATE = \"dismissableLayer.update\";\nvar POINTER_DOWN_OUTSIDE = \"dismissableLayer.pointerDownOutside\";\nvar FOCUS_OUTSIDE = \"dismissableLayer.focusOutside\";\nvar originalBodyPointerEvents;\nvar DismissableLayerContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n    layers: /* @__PURE__ */ new Set(),\n    layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),\n    branches: /* @__PURE__ */ new Set()\n});\nvar DismissableLayer = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    var _globalThis;\n    _s();\n    const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DismissableLayerContext);\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    var _node_ownerDocument;\n    const ownerDocument = (_node_ownerDocument = node === null || node === void 0 ? void 0 : node.ownerDocument) !== null && _node_ownerDocument !== void 0 ? _node_ownerDocument : (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    const [, force] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, {\n        \"DismissableLayer.useComposedRefs[composedRefs]\": (node2)=>setNode(node2)\n    }[\"DismissableLayer.useComposedRefs[composedRefs]\"]);\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [\n        ...context.layersWithOutsidePointerEventsDisabled\n    ].slice(-1);\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n    const pointerDownOutside = usePointerDownOutside({\n        \"DismissableLayer.usePointerDownOutside[pointerDownOutside]\": (event)=>{\n            const target = event.target;\n            const isPointerDownOnBranch = [\n                ...context.branches\n            ].some({\n                \"DismissableLayer.usePointerDownOutside[pointerDownOutside].isPointerDownOnBranch\": (branch)=>branch.contains(target)\n            }[\"DismissableLayer.usePointerDownOutside[pointerDownOutside].isPointerDownOnBranch\"]);\n            if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n            onPointerDownOutside === null || onPointerDownOutside === void 0 ? void 0 : onPointerDownOutside(event);\n            onInteractOutside === null || onInteractOutside === void 0 ? void 0 : onInteractOutside(event);\n            if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n        }\n    }[\"DismissableLayer.usePointerDownOutside[pointerDownOutside]\"], ownerDocument);\n    const focusOutside = useFocusOutside({\n        \"DismissableLayer.useFocusOutside[focusOutside]\": (event)=>{\n            const target = event.target;\n            const isFocusInBranch = [\n                ...context.branches\n            ].some({\n                \"DismissableLayer.useFocusOutside[focusOutside].isFocusInBranch\": (branch)=>branch.contains(target)\n            }[\"DismissableLayer.useFocusOutside[focusOutside].isFocusInBranch\"]);\n            if (isFocusInBranch) return;\n            onFocusOutside === null || onFocusOutside === void 0 ? void 0 : onFocusOutside(event);\n            onInteractOutside === null || onInteractOutside === void 0 ? void 0 : onInteractOutside(event);\n            if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n        }\n    }[\"DismissableLayer.useFocusOutside[focusOutside]\"], ownerDocument);\n    (0,_radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown)({\n        \"DismissableLayer.useEscapeKeydown\": (event)=>{\n            const isHighestLayer = index === context.layers.size - 1;\n            if (!isHighestLayer) return;\n            onEscapeKeyDown === null || onEscapeKeyDown === void 0 ? void 0 : onEscapeKeyDown(event);\n            if (!event.defaultPrevented && onDismiss) {\n                event.preventDefault();\n                onDismiss();\n            }\n        }\n    }[\"DismissableLayer.useEscapeKeydown\"], ownerDocument);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayer.useEffect\": ()=>{\n            if (!node) return;\n            if (disableOutsidePointerEvents) {\n                if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n                    originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n                    ownerDocument.body.style.pointerEvents = \"none\";\n                }\n                context.layersWithOutsidePointerEventsDisabled.add(node);\n            }\n            context.layers.add(node);\n            dispatchUpdate();\n            return ({\n                \"DismissableLayer.useEffect\": ()=>{\n                    if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {\n                        ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n                    }\n                }\n            })[\"DismissableLayer.useEffect\"];\n        }\n    }[\"DismissableLayer.useEffect\"], [\n        node,\n        ownerDocument,\n        disableOutsidePointerEvents,\n        context\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayer.useEffect\": ()=>{\n            return ({\n                \"DismissableLayer.useEffect\": ()=>{\n                    if (!node) return;\n                    context.layers.delete(node);\n                    context.layersWithOutsidePointerEventsDisabled.delete(node);\n                    dispatchUpdate();\n                }\n            })[\"DismissableLayer.useEffect\"];\n        }\n    }[\"DismissableLayer.useEffect\"], [\n        node,\n        context\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayer.useEffect\": ()=>{\n            const handleUpdate = {\n                \"DismissableLayer.useEffect.handleUpdate\": ()=>force({})\n            }[\"DismissableLayer.useEffect.handleUpdate\"];\n            document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n            return ({\n                \"DismissableLayer.useEffect\": ()=>document.removeEventListener(CONTEXT_UPDATE, handleUpdate)\n            })[\"DismissableLayer.useEffect\"];\n        }\n    }[\"DismissableLayer.useEffect\"], []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...layerProps,\n        ref: composedRefs,\n        style: {\n            pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? \"auto\" : \"none\" : void 0,\n            ...props.style\n        },\n        onFocusCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onFocusCapture, focusOutside.onFocusCapture),\n        onBlurCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onBlurCapture, focusOutside.onBlurCapture),\n        onPointerDownCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)\n    });\n}, \"Cv1Mp9NkKD7dAs9oYGx4QOBfHI8=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs,\n        usePointerDownOutside,\n        useFocusOutside,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown\n    ];\n})), \"Cv1Mp9NkKD7dAs9oYGx4QOBfHI8=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs,\n        usePointerDownOutside,\n        useFocusOutside,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown\n    ];\n});\n_c1 = DismissableLayer;\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\nvar BRANCH_NAME = \"DismissableLayerBranch\";\nvar DismissableLayerBranch = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s1((props, forwardedRef)=>{\n    _s1();\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DismissableLayerContext);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, ref);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayerBranch.useEffect\": ()=>{\n            const node = ref.current;\n            if (node) {\n                context.branches.add(node);\n                return ({\n                    \"DismissableLayerBranch.useEffect\": ()=>{\n                        context.branches.delete(node);\n                    }\n                })[\"DismissableLayerBranch.useEffect\"];\n            }\n        }\n    }[\"DismissableLayerBranch.useEffect\"], [\n        context.branches\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...props,\n        ref: composedRefs\n    });\n}, \"GBdJ+COKIgE+yfoxVYovlSfvJLw=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs\n    ];\n})), \"GBdJ+COKIgE+yfoxVYovlSfvJLw=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs\n    ];\n});\n_c3 = DismissableLayerBranch;\nDismissableLayerBranch.displayName = BRANCH_NAME;\nfunction usePointerDownOutside(onPointerDownOutside) {\n    let ownerDocument = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (()=>{\n        var _globalThis;\n        return (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    })();\n    _s2();\n    const handlePointerDownOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onPointerDownOutside);\n    const isPointerInsideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const handleClickRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        \"usePointerDownOutside.useRef[handleClickRef]\": ()=>{}\n    }[\"usePointerDownOutside.useRef[handleClickRef]\"]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"usePointerDownOutside.useEffect\": ()=>{\n            const handlePointerDown = {\n                \"usePointerDownOutside.useEffect.handlePointerDown\": (event)=>{\n                    if (event.target && !isPointerInsideReactTreeRef.current) {\n                        let handleAndDispatchPointerDownOutsideEvent2 = {\n                            \"usePointerDownOutside.useEffect.handlePointerDown.handleAndDispatchPointerDownOutsideEvent2\": function() {\n                                handleAndDispatchCustomEvent(POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {\n                                    discrete: true\n                                });\n                            }\n                        }[\"usePointerDownOutside.useEffect.handlePointerDown.handleAndDispatchPointerDownOutsideEvent2\"];\n                        var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;\n                        const eventDetail = {\n                            originalEvent: event\n                        };\n                        if (event.pointerType === \"touch\") {\n                            ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n                            handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;\n                            ownerDocument.addEventListener(\"click\", handleClickRef.current, {\n                                once: true\n                            });\n                        } else {\n                            handleAndDispatchPointerDownOutsideEvent2();\n                        }\n                    } else {\n                        ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n                    }\n                    isPointerInsideReactTreeRef.current = false;\n                }\n            }[\"usePointerDownOutside.useEffect.handlePointerDown\"];\n            const timerId = window.setTimeout({\n                \"usePointerDownOutside.useEffect.timerId\": ()=>{\n                    ownerDocument.addEventListener(\"pointerdown\", handlePointerDown);\n                }\n            }[\"usePointerDownOutside.useEffect.timerId\"], 0);\n            return ({\n                \"usePointerDownOutside.useEffect\": ()=>{\n                    window.clearTimeout(timerId);\n                    ownerDocument.removeEventListener(\"pointerdown\", handlePointerDown);\n                    ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n                }\n            })[\"usePointerDownOutside.useEffect\"];\n        }\n    }[\"usePointerDownOutside.useEffect\"], [\n        ownerDocument,\n        handlePointerDownOutside\n    ]);\n    return {\n        // ensures we check React component tree (not just DOM tree)\n        onPointerDownCapture: ()=>isPointerInsideReactTreeRef.current = true\n    };\n}\n_s2(usePointerDownOutside, \"M0Jqtgoae/27FfRizMxidmqs6b8=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef\n    ];\n});\nfunction useFocusOutside(onFocusOutside) {\n    let ownerDocument = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (()=>{\n        var _globalThis;\n        return (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    })();\n    _s3();\n    const handleFocusOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onFocusOutside);\n    const isFocusInsideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useFocusOutside.useEffect\": ()=>{\n            const handleFocus = {\n                \"useFocusOutside.useEffect.handleFocus\": (event)=>{\n                    if (event.target && !isFocusInsideReactTreeRef.current) {\n                        const eventDetail = {\n                            originalEvent: event\n                        };\n                        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n                            discrete: false\n                        });\n                    }\n                }\n            }[\"useFocusOutside.useEffect.handleFocus\"];\n            ownerDocument.addEventListener(\"focusin\", handleFocus);\n            return ({\n                \"useFocusOutside.useEffect\": ()=>ownerDocument.removeEventListener(\"focusin\", handleFocus)\n            })[\"useFocusOutside.useEffect\"];\n        }\n    }[\"useFocusOutside.useEffect\"], [\n        ownerDocument,\n        handleFocusOutside\n    ]);\n    return {\n        onFocusCapture: ()=>isFocusInsideReactTreeRef.current = true,\n        onBlurCapture: ()=>isFocusInsideReactTreeRef.current = false\n    };\n}\n_s3(useFocusOutside, \"IjUuEsgpHwQc3lZUTypKaC1ceUQ=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef\n    ];\n});\nfunction dispatchUpdate() {\n    const event = new CustomEvent(CONTEXT_UPDATE);\n    document.dispatchEvent(event);\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, param) {\n    let { discrete } = param;\n    const target = detail.originalEvent.target;\n    const event = new CustomEvent(name, {\n        bubbles: false,\n        cancelable: true,\n        detail\n    });\n    if (handler) target.addEventListener(name, handler, {\n        once: true\n    });\n    if (discrete) {\n        (0,_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.dispatchDiscreteCustomEvent)(target, event);\n    } else {\n        target.dispatchEvent(event);\n    }\n}\nvar Root = DismissableLayer;\nvar Branch = DismissableLayerBranch;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"DismissableLayer$React.forwardRef\");\n$RefreshReg$(_c1, \"DismissableLayer\");\n$RefreshReg$(_c2, \"DismissableLayerBranch$React.forwardRef\");\n$RefreshReg$(_c3, \"DismissableLayerBranch\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-portal/dist/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   Root: () => (/* binding */ Root)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Portal,Root auto */ var _s = $RefreshSig$();\n// packages/react/portal/src/Portal.tsx\n\n\n\n\n\nvar PORTAL_NAME = \"Portal\";\nvar Portal = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    var _globalThis_document, _globalThis;\n    _s();\n    const { container: containerProp, ...portalProps } = props;\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__.useLayoutEffect)({\n        \"Portal.useLayoutEffect\": ()=>setMounted(true)\n    }[\"Portal.useLayoutEffect\"], []);\n    const container = containerProp || mounted && ((_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : (_globalThis_document = _globalThis.document) === null || _globalThis_document === void 0 ? void 0 : _globalThis_document.body);\n    return container ? /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...portalProps,\n        ref: forwardedRef\n    }), container) : null;\n}, \"FcnMiGdgWOI6sDTng8DolPv2NRo=\")), \"FcnMiGdgWOI6sDTng8DolPv2NRo=\");\n_c1 = Portal;\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Portal$React.forwardRef\");\n$RefreshReg$(_c1, \"Portal\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcG9ydGFsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRUEsdUNBQXVDO0FBQ1I7QUFDRTtBQUNxQjtBQUNjO0FBQzVCO0FBQ3hDLElBQUlLLGNBQWM7QUFDbEIsSUFBSUMsdUJBQVNOLEdBQUFBLDZDQUFnQixTQUFDLENBQUNRLE9BQU9DO1FBSVVDLHNCQUFBQTs7SUFIOUMsTUFBTSxFQUFFQyxXQUFXQyxhQUFhLEVBQUUsR0FBR0MsYUFBYSxHQUFHTDtJQUNyRCxNQUFNLENBQUNNLFNBQVNDLFdBQVcsR0FBR2YsMkNBQWMsQ0FBQztJQUM3Q0csa0ZBQWVBO2tDQUFDLElBQU1ZLFdBQVc7aUNBQU8sRUFBRTtJQUMxQyxNQUFNSixZQUFZQyxpQkFBaUJFLGFBQVdKLGNBQUFBLHdCQUFBQSxtQ0FBQUEsdUJBQUFBLFlBQVlPLFFBQVEsY0FBcEJQLDJDQUFBQSxxQkFBc0JRLElBQUk7SUFDeEUsT0FBT1AsMEJBQVlWLG1EQUFxQixDQUFDLGFBQWEsR0FBR0csc0RBQUdBLENBQUNGLGdFQUFTQSxDQUFDa0IsR0FBRyxFQUFFO1FBQUUsR0FBR1AsV0FBVztRQUFFUSxLQUFLWjtJQUFhLElBQUlFLGFBQWE7QUFDbkk7O0FBQ0FMLE9BQU9nQixXQUFXLEdBQUdqQjtBQUNyQixJQUFJa0IsT0FBT2pCO0FBSVQsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHJlYWN0LXBvcnRhbFxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xyXG5cclxuLy8gcGFja2FnZXMvcmVhY3QvcG9ydGFsL3NyYy9Qb3J0YWwudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xyXG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xyXG5pbXBvcnQgeyB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0XCI7XHJcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG52YXIgUE9SVEFMX05BTUUgPSBcIlBvcnRhbFwiO1xyXG52YXIgUG9ydGFsID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xyXG4gIGNvbnN0IHsgY29udGFpbmVyOiBjb250YWluZXJQcm9wLCAuLi5wb3J0YWxQcm9wcyB9ID0gcHJvcHM7XHJcbiAgY29uc3QgW21vdW50ZWQsIHNldE1vdW50ZWRdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xyXG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBzZXRNb3VudGVkKHRydWUpLCBbXSk7XHJcbiAgY29uc3QgY29udGFpbmVyID0gY29udGFpbmVyUHJvcCB8fCBtb3VudGVkICYmIGdsb2JhbFRoaXM/LmRvY3VtZW50Py5ib2R5O1xyXG4gIHJldHVybiBjb250YWluZXIgPyBSZWFjdERPTS5jcmVhdGVQb3J0YWwoLyogQF9fUFVSRV9fICovIGpzeChQcmltaXRpdmUuZGl2LCB7IC4uLnBvcnRhbFByb3BzLCByZWY6IGZvcndhcmRlZFJlZiB9KSwgY29udGFpbmVyKSA6IG51bGw7XHJcbn0pO1xyXG5Qb3J0YWwuZGlzcGxheU5hbWUgPSBQT1JUQUxfTkFNRTtcclxudmFyIFJvb3QgPSBQb3J0YWw7XHJcbmV4cG9ydCB7XHJcbiAgUG9ydGFsLFxyXG4gIFJvb3RcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJSZWFjdERPTSIsIlByaW1pdGl2ZSIsInVzZUxheW91dEVmZmVjdCIsImpzeCIsIlBPUlRBTF9OQU1FIiwiUG9ydGFsIiwiZm9yd2FyZFJlZiIsInByb3BzIiwiZm9yd2FyZGVkUmVmIiwiZ2xvYmFsVGhpcyIsImNvbnRhaW5lciIsImNvbnRhaW5lclByb3AiLCJwb3J0YWxQcm9wcyIsIm1vdW50ZWQiLCJzZXRNb3VudGVkIiwidXNlU3RhdGUiLCJkb2N1bWVudCIsImJvZHkiLCJjcmVhdGVQb3J0YWwiLCJkaXYiLCJyZWYiLCJkaXNwbGF5TmFtZSIsIlJvb3QiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@radix-ui/react-presence/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Presence: () => (/* binding */ Presence)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ Presence auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n// packages/react/presence/src/Presence.tsx\n\n\n\n// packages/react/presence/src/useStateMachine.tsx\n\nfunction useStateMachine(initialState, machine) {\n    _s();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useReducer({\n        \"useStateMachine.useReducer\": (state, event)=>{\n            const nextState = machine[state][event];\n            return nextState !== null && nextState !== void 0 ? nextState : state;\n        }\n    }[\"useStateMachine.useReducer\"], initialState);\n}\n_s(useStateMachine, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n// packages/react/presence/src/Presence.tsx\nvar Presence = (props)=>{\n    _s1();\n    const { present, children } = props;\n    const presence = usePresence(present);\n    const child = typeof children === \"function\" ? children({\n        present: presence.isPresent\n    }) : react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);\n    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__.useComposedRefs)(presence.ref, getElementRef(child));\n    const forceMount = typeof children === \"function\";\n    return forceMount || presence.isPresent ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {\n        ref\n    }) : null;\n};\n_s1(Presence, \"uNryTcoDvJa4CrInYRt27opyun0=\", false, function() {\n    return [\n        usePresence,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__.useComposedRefs\n    ];\n});\n_c = Presence;\nPresence.displayName = \"Presence\";\nfunction usePresence(present) {\n    _s2();\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const stylesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n    const prevPresentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(present);\n    const prevAnimationNameRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(\"none\");\n    const initialState = present ? \"mounted\" : \"unmounted\";\n    const [state, send] = useStateMachine(initialState, {\n        mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n        },\n        unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n        },\n        unmounted: {\n            MOUNT: \"mounted\"\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"usePresence.useEffect\": ()=>{\n            const currentAnimationName = getAnimationName(stylesRef.current);\n            prevAnimationNameRef.current = state === \"mounted\" ? currentAnimationName : \"none\";\n        }\n    }[\"usePresence.useEffect\"], [\n        state\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)({\n        \"usePresence.useLayoutEffect\": ()=>{\n            const styles = stylesRef.current;\n            const wasPresent = prevPresentRef.current;\n            const hasPresentChanged = wasPresent !== present;\n            if (hasPresentChanged) {\n                const prevAnimationName = prevAnimationNameRef.current;\n                const currentAnimationName = getAnimationName(styles);\n                if (present) {\n                    send(\"MOUNT\");\n                } else if (currentAnimationName === \"none\" || (styles === null || styles === void 0 ? void 0 : styles.display) === \"none\") {\n                    send(\"UNMOUNT\");\n                } else {\n                    const isAnimating = prevAnimationName !== currentAnimationName;\n                    if (wasPresent && isAnimating) {\n                        send(\"ANIMATION_OUT\");\n                    } else {\n                        send(\"UNMOUNT\");\n                    }\n                }\n                prevPresentRef.current = present;\n            }\n        }\n    }[\"usePresence.useLayoutEffect\"], [\n        present,\n        send\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)({\n        \"usePresence.useLayoutEffect\": ()=>{\n            if (node) {\n                let timeoutId;\n                var _node_ownerDocument_defaultView;\n                const ownerWindow = (_node_ownerDocument_defaultView = node.ownerDocument.defaultView) !== null && _node_ownerDocument_defaultView !== void 0 ? _node_ownerDocument_defaultView : window;\n                const handleAnimationEnd = {\n                    \"usePresence.useLayoutEffect.handleAnimationEnd\": (event)=>{\n                        const currentAnimationName = getAnimationName(stylesRef.current);\n                        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n                        if (event.target === node && isCurrentAnimation) {\n                            send(\"ANIMATION_END\");\n                            if (!prevPresentRef.current) {\n                                const currentFillMode = node.style.animationFillMode;\n                                node.style.animationFillMode = \"forwards\";\n                                timeoutId = ownerWindow.setTimeout({\n                                    \"usePresence.useLayoutEffect.handleAnimationEnd\": ()=>{\n                                        if (node.style.animationFillMode === \"forwards\") {\n                                            node.style.animationFillMode = currentFillMode;\n                                        }\n                                    }\n                                }[\"usePresence.useLayoutEffect.handleAnimationEnd\"]);\n                            }\n                        }\n                    }\n                }[\"usePresence.useLayoutEffect.handleAnimationEnd\"];\n                const handleAnimationStart = {\n                    \"usePresence.useLayoutEffect.handleAnimationStart\": (event)=>{\n                        if (event.target === node) {\n                            prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n                        }\n                    }\n                }[\"usePresence.useLayoutEffect.handleAnimationStart\"];\n                node.addEventListener(\"animationstart\", handleAnimationStart);\n                node.addEventListener(\"animationcancel\", handleAnimationEnd);\n                node.addEventListener(\"animationend\", handleAnimationEnd);\n                return ({\n                    \"usePresence.useLayoutEffect\": ()=>{\n                        ownerWindow.clearTimeout(timeoutId);\n                        node.removeEventListener(\"animationstart\", handleAnimationStart);\n                        node.removeEventListener(\"animationcancel\", handleAnimationEnd);\n                        node.removeEventListener(\"animationend\", handleAnimationEnd);\n                    }\n                })[\"usePresence.useLayoutEffect\"];\n            } else {\n                send(\"ANIMATION_END\");\n            }\n        }\n    }[\"usePresence.useLayoutEffect\"], [\n        node,\n        send\n    ]);\n    return {\n        isPresent: [\n            \"mounted\",\n            \"unmountSuspended\"\n        ].includes(state),\n        ref: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n            \"usePresence.useCallback\": (node2)=>{\n                if (node2) stylesRef.current = getComputedStyle(node2);\n                setNode(node2);\n            }\n        }[\"usePresence.useCallback\"], [])\n    };\n}\n_s2(usePresence, \"ncCWxmFAyU87e4PnaTkbrqgR834=\", false, function() {\n    return [\n        useStateMachine\n    ];\n});\nfunction getAnimationName(styles) {\n    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || \"none\";\n}\nfunction getElementRef(element) {\n    var _Object_getOwnPropertyDescriptor, _Object_getOwnPropertyDescriptor1;\n    let getter = (_Object_getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor(element.props, \"ref\")) === null || _Object_getOwnPropertyDescriptor === void 0 ? void 0 : _Object_getOwnPropertyDescriptor.get;\n    let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.ref;\n    }\n    getter = (_Object_getOwnPropertyDescriptor1 = Object.getOwnPropertyDescriptor(element, \"ref\")) === null || _Object_getOwnPropertyDescriptor1 === void 0 ? void 0 : _Object_getOwnPropertyDescriptor1.get;\n    mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.props.ref;\n    }\n    return element.props.ref || element.ref;\n}\n //# sourceMappingURL=index.mjs.map\nvar _c;\n$RefreshReg$(_c, \"Presence\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@radix-ui/react-primitive/dist/index.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Primitive: () => (/* binding */ Primitive),\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   dispatchDiscreteCustomEvent: () => (/* binding */ dispatchDiscreteCustomEvent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/primitive/src/Primitive.tsx\r\n\r\n\r\n\r\n\r\nvar NODES = [\r\n  \"a\",\r\n  \"button\",\r\n  \"div\",\r\n  \"form\",\r\n  \"h2\",\r\n  \"h3\",\r\n  \"img\",\r\n  \"input\",\r\n  \"label\",\r\n  \"li\",\r\n  \"nav\",\r\n  \"ol\",\r\n  \"p\",\r\n  \"span\",\r\n  \"svg\",\r\n  \"ul\"\r\n];\r\nvar Primitive = NODES.reduce((primitive, node) => {\r\n  const Node = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\r\n    const { asChild, ...primitiveProps } = props;\r\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.Slot : node;\r\n    if (typeof window !== \"undefined\") {\r\n      window[Symbol.for(\"radix-ui\")] = true;\r\n    }\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });\r\n  });\r\n  Node.displayName = `Primitive.${node}`;\r\n  return { ...primitive, [node]: Node };\r\n}, {});\r\nfunction dispatchDiscreteCustomEvent(target, event) {\r\n  if (target) react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(() => target.dispatchEvent(event));\r\n}\r\nvar Root = Primitive;\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUNPO0FBQ007QUFDSjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkNBQWdCO0FBQy9CLFlBQVksNkJBQTZCO0FBQ3pDLDJCQUEyQixzREFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsc0RBQUcsU0FBUyxzQ0FBc0M7QUFDN0UsR0FBRztBQUNILGtDQUFrQyxLQUFLO0FBQ3ZDLFdBQVc7QUFDWCxDQUFDLElBQUk7QUFDTDtBQUNBLGNBQWMsZ0RBQWtCO0FBQ2hDO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHJhZGl4LXVpXFxyZWFjdC1wcmltaXRpdmVcXGRpc3RcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC9wcmltaXRpdmUvc3JjL1ByaW1pdGl2ZS50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcclxuaW1wb3J0IHsgU2xvdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xvdFwiO1xyXG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxudmFyIE5PREVTID0gW1xyXG4gIFwiYVwiLFxyXG4gIFwiYnV0dG9uXCIsXHJcbiAgXCJkaXZcIixcclxuICBcImZvcm1cIixcclxuICBcImgyXCIsXHJcbiAgXCJoM1wiLFxyXG4gIFwiaW1nXCIsXHJcbiAgXCJpbnB1dFwiLFxyXG4gIFwibGFiZWxcIixcclxuICBcImxpXCIsXHJcbiAgXCJuYXZcIixcclxuICBcIm9sXCIsXHJcbiAgXCJwXCIsXHJcbiAgXCJzcGFuXCIsXHJcbiAgXCJzdmdcIixcclxuICBcInVsXCJcclxuXTtcclxudmFyIFByaW1pdGl2ZSA9IE5PREVTLnJlZHVjZSgocHJpbWl0aXZlLCBub2RlKSA9PiB7XHJcbiAgY29uc3QgTm9kZSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcclxuICAgIGNvbnN0IHsgYXNDaGlsZCwgLi4ucHJpbWl0aXZlUHJvcHMgfSA9IHByb3BzO1xyXG4gICAgY29uc3QgQ29tcCA9IGFzQ2hpbGQgPyBTbG90IDogbm9kZTtcclxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgIHdpbmRvd1tTeW1ib2wuZm9yKFwicmFkaXgtdWlcIildID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KENvbXAsIHsgLi4ucHJpbWl0aXZlUHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmIH0pO1xyXG4gIH0pO1xyXG4gIE5vZGUuZGlzcGxheU5hbWUgPSBgUHJpbWl0aXZlLiR7bm9kZX1gO1xyXG4gIHJldHVybiB7IC4uLnByaW1pdGl2ZSwgW25vZGVdOiBOb2RlIH07XHJcbn0sIHt9KTtcclxuZnVuY3Rpb24gZGlzcGF0Y2hEaXNjcmV0ZUN1c3RvbUV2ZW50KHRhcmdldCwgZXZlbnQpIHtcclxuICBpZiAodGFyZ2V0KSBSZWFjdERPTS5mbHVzaFN5bmMoKCkgPT4gdGFyZ2V0LmRpc3BhdGNoRXZlbnQoZXZlbnQpKTtcclxufVxyXG52YXIgUm9vdCA9IFByaW1pdGl2ZTtcclxuZXhwb3J0IHtcclxuICBQcmltaXRpdmUsXHJcbiAgUm9vdCxcclxuICBkaXNwYXRjaERpc2NyZXRlQ3VzdG9tRXZlbnRcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-slot/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   Slot: () => (/* binding */ Slot),\n/* harmony export */   Slottable: () => (/* binding */ Slottable)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/slot/src/Slot.tsx\r\n\r\n\r\n\r\nvar Slot = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\r\n  const { children, ...slotProps } = props;\r\n  const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);\r\n  const slottable = childrenArray.find(isSlottable);\r\n  if (slottable) {\r\n    const newElement = slottable.props.children;\r\n    const newChildren = childrenArray.map((child) => {\r\n      if (child === slottable) {\r\n        if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null);\r\n        return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? newElement.props.children : null;\r\n      } else {\r\n        return child;\r\n      }\r\n    });\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement, void 0, newChildren) : null });\r\n  }\r\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });\r\n});\r\nSlot.displayName = \"Slot\";\r\nvar SlotClone = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\r\n  const { children, ...slotProps } = props;\r\n  if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {\r\n    const childrenRef = getElementRef(children);\r\n    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {\r\n      ...mergeProps(slotProps, children.props),\r\n      // @ts-ignore\r\n      ref: forwardedRef ? (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(forwardedRef, childrenRef) : childrenRef\r\n    });\r\n  }\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null) : null;\r\n});\r\nSlotClone.displayName = \"SlotClone\";\r\nvar Slottable = ({ children }) => {\r\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children });\r\n};\r\nfunction isSlottable(child) {\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && child.type === Slottable;\r\n}\r\nfunction mergeProps(slotProps, childProps) {\r\n  const overrideProps = { ...childProps };\r\n  for (const propName in childProps) {\r\n    const slotPropValue = slotProps[propName];\r\n    const childPropValue = childProps[propName];\r\n    const isHandler = /^on[A-Z]/.test(propName);\r\n    if (isHandler) {\r\n      if (slotPropValue && childPropValue) {\r\n        overrideProps[propName] = (...args) => {\r\n          childPropValue(...args);\r\n          slotPropValue(...args);\r\n        };\r\n      } else if (slotPropValue) {\r\n        overrideProps[propName] = slotPropValue;\r\n      }\r\n    } else if (propName === \"style\") {\r\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\r\n    } else if (propName === \"className\") {\r\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\r\n    }\r\n  }\r\n  return { ...slotProps, ...overrideProps };\r\n}\r\nfunction getElementRef(element) {\r\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\r\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\r\n  if (mayWarn) {\r\n    return element.ref;\r\n  }\r\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\r\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\r\n  if (mayWarn) {\r\n    return element.props.ref;\r\n  }\r\n  return element.props.ref || element.ref;\r\n}\r\nvar Root = Slot;\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3Qtc2xvdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUM0QjtBQUNUO0FBQ2xELFdBQVcsNkNBQWdCO0FBQzNCLFVBQVUseUJBQXlCO0FBQ25DLHdCQUF3QiwyQ0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBYywrQkFBK0IsMkNBQWM7QUFDdkUsZUFBZSxpREFBb0I7QUFDbkMsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLHNEQUFHLGNBQWMsMkNBQTJDLGlEQUFvQixlQUFlLCtDQUFrQiwwQ0FBMEM7QUFDdEw7QUFDQSx5QkFBeUIsc0RBQUcsY0FBYywyQ0FBMkM7QUFDckYsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLDZDQUFnQjtBQUNoQyxVQUFVLHlCQUF5QjtBQUNuQyxNQUFNLGlEQUFvQjtBQUMxQjtBQUNBLFdBQVcsK0NBQWtCO0FBQzdCO0FBQ0E7QUFDQSwwQkFBMEIseUVBQVc7QUFDckMsS0FBSztBQUNMO0FBQ0EsU0FBUywyQ0FBYyx1QkFBdUIsMkNBQWM7QUFDNUQsQ0FBQztBQUNEO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0IseUJBQXlCLHNEQUFHLENBQUMsdURBQVEsSUFBSSxVQUFVO0FBQ25EO0FBQ0E7QUFDQSxTQUFTLGlEQUFvQjtBQUM3QjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ04sa0NBQWtDO0FBQ2xDLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3Qtc2xvdFxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3Nsb3Qvc3JjL1Nsb3QudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb21wb3NlUmVmcyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzXCI7XHJcbmltcG9ydCB7IEZyYWdtZW50LCBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxudmFyIFNsb3QgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XHJcbiAgY29uc3QgeyBjaGlsZHJlbiwgLi4uc2xvdFByb3BzIH0gPSBwcm9wcztcclxuICBjb25zdCBjaGlsZHJlbkFycmF5ID0gUmVhY3QuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbik7XHJcbiAgY29uc3Qgc2xvdHRhYmxlID0gY2hpbGRyZW5BcnJheS5maW5kKGlzU2xvdHRhYmxlKTtcclxuICBpZiAoc2xvdHRhYmxlKSB7XHJcbiAgICBjb25zdCBuZXdFbGVtZW50ID0gc2xvdHRhYmxlLnByb3BzLmNoaWxkcmVuO1xyXG4gICAgY29uc3QgbmV3Q2hpbGRyZW4gPSBjaGlsZHJlbkFycmF5Lm1hcCgoY2hpbGQpID0+IHtcclxuICAgICAgaWYgKGNoaWxkID09PSBzbG90dGFibGUpIHtcclxuICAgICAgICBpZiAoUmVhY3QuQ2hpbGRyZW4uY291bnQobmV3RWxlbWVudCkgPiAxKSByZXR1cm4gUmVhY3QuQ2hpbGRyZW4ub25seShudWxsKTtcclxuICAgICAgICByZXR1cm4gUmVhY3QuaXNWYWxpZEVsZW1lbnQobmV3RWxlbWVudCkgPyBuZXdFbGVtZW50LnByb3BzLmNoaWxkcmVuIDogbnVsbDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gY2hpbGQ7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goU2xvdENsb25lLCB7IC4uLnNsb3RQcm9wcywgcmVmOiBmb3J3YXJkZWRSZWYsIGNoaWxkcmVuOiBSZWFjdC5pc1ZhbGlkRWxlbWVudChuZXdFbGVtZW50KSA/IFJlYWN0LmNsb25lRWxlbWVudChuZXdFbGVtZW50LCB2b2lkIDAsIG5ld0NoaWxkcmVuKSA6IG51bGwgfSk7XHJcbiAgfVxyXG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFNsb3RDbG9uZSwgeyAuLi5zbG90UHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmLCBjaGlsZHJlbiB9KTtcclxufSk7XHJcblNsb3QuZGlzcGxheU5hbWUgPSBcIlNsb3RcIjtcclxudmFyIFNsb3RDbG9uZSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcclxuICBjb25zdCB7IGNoaWxkcmVuLCAuLi5zbG90UHJvcHMgfSA9IHByb3BzO1xyXG4gIGlmIChSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZHJlbikpIHtcclxuICAgIGNvbnN0IGNoaWxkcmVuUmVmID0gZ2V0RWxlbWVudFJlZihjaGlsZHJlbik7XHJcbiAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkcmVuLCB7XHJcbiAgICAgIC4uLm1lcmdlUHJvcHMoc2xvdFByb3BzLCBjaGlsZHJlbi5wcm9wcyksXHJcbiAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgcmVmOiBmb3J3YXJkZWRSZWYgPyBjb21wb3NlUmVmcyhmb3J3YXJkZWRSZWYsIGNoaWxkcmVuUmVmKSA6IGNoaWxkcmVuUmVmXHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA+IDEgPyBSZWFjdC5DaGlsZHJlbi5vbmx5KG51bGwpIDogbnVsbDtcclxufSk7XHJcblNsb3RDbG9uZS5kaXNwbGF5TmFtZSA9IFwiU2xvdENsb25lXCI7XHJcbnZhciBTbG90dGFibGUgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goRnJhZ21lbnQsIHsgY2hpbGRyZW4gfSk7XHJcbn07XHJcbmZ1bmN0aW9uIGlzU2xvdHRhYmxlKGNoaWxkKSB7XHJcbiAgcmV0dXJuIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSAmJiBjaGlsZC50eXBlID09PSBTbG90dGFibGU7XHJcbn1cclxuZnVuY3Rpb24gbWVyZ2VQcm9wcyhzbG90UHJvcHMsIGNoaWxkUHJvcHMpIHtcclxuICBjb25zdCBvdmVycmlkZVByb3BzID0geyAuLi5jaGlsZFByb3BzIH07XHJcbiAgZm9yIChjb25zdCBwcm9wTmFtZSBpbiBjaGlsZFByb3BzKSB7XHJcbiAgICBjb25zdCBzbG90UHJvcFZhbHVlID0gc2xvdFByb3BzW3Byb3BOYW1lXTtcclxuICAgIGNvbnN0IGNoaWxkUHJvcFZhbHVlID0gY2hpbGRQcm9wc1twcm9wTmFtZV07XHJcbiAgICBjb25zdCBpc0hhbmRsZXIgPSAvXm9uW0EtWl0vLnRlc3QocHJvcE5hbWUpO1xyXG4gICAgaWYgKGlzSGFuZGxlcikge1xyXG4gICAgICBpZiAoc2xvdFByb3BWYWx1ZSAmJiBjaGlsZFByb3BWYWx1ZSkge1xyXG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gKC4uLmFyZ3MpID0+IHtcclxuICAgICAgICAgIGNoaWxkUHJvcFZhbHVlKC4uLmFyZ3MpO1xyXG4gICAgICAgICAgc2xvdFByb3BWYWx1ZSguLi5hcmdzKTtcclxuICAgICAgICB9O1xyXG4gICAgICB9IGVsc2UgaWYgKHNsb3RQcm9wVmFsdWUpIHtcclxuICAgICAgICBvdmVycmlkZVByb3BzW3Byb3BOYW1lXSA9IHNsb3RQcm9wVmFsdWU7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAocHJvcE5hbWUgPT09IFwic3R5bGVcIikge1xyXG4gICAgICBvdmVycmlkZVByb3BzW3Byb3BOYW1lXSA9IHsgLi4uc2xvdFByb3BWYWx1ZSwgLi4uY2hpbGRQcm9wVmFsdWUgfTtcclxuICAgIH0gZWxzZSBpZiAocHJvcE5hbWUgPT09IFwiY2xhc3NOYW1lXCIpIHtcclxuICAgICAgb3ZlcnJpZGVQcm9wc1twcm9wTmFtZV0gPSBbc2xvdFByb3BWYWx1ZSwgY2hpbGRQcm9wVmFsdWVdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHsgLi4uc2xvdFByb3BzLCAuLi5vdmVycmlkZVByb3BzIH07XHJcbn1cclxuZnVuY3Rpb24gZ2V0RWxlbWVudFJlZihlbGVtZW50KSB7XHJcbiAgbGV0IGdldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZWxlbWVudC5wcm9wcywgXCJyZWZcIik/LmdldDtcclxuICBsZXQgbWF5V2FybiA9IGdldHRlciAmJiBcImlzUmVhY3RXYXJuaW5nXCIgaW4gZ2V0dGVyICYmIGdldHRlci5pc1JlYWN0V2FybmluZztcclxuICBpZiAobWF5V2Fybikge1xyXG4gICAgcmV0dXJuIGVsZW1lbnQucmVmO1xyXG4gIH1cclxuICBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQsIFwicmVmXCIpPy5nZXQ7XHJcbiAgbWF5V2FybiA9IGdldHRlciAmJiBcImlzUmVhY3RXYXJuaW5nXCIgaW4gZ2V0dGVyICYmIGdldHRlci5pc1JlYWN0V2FybmluZztcclxuICBpZiAobWF5V2Fybikge1xyXG4gICAgcmV0dXJuIGVsZW1lbnQucHJvcHMucmVmO1xyXG4gIH1cclxuICByZXR1cm4gZWxlbWVudC5wcm9wcy5yZWYgfHwgZWxlbWVudC5yZWY7XHJcbn1cclxudmFyIFJvb3QgPSBTbG90O1xyXG5leHBvcnQge1xyXG4gIFJvb3QsXHJcbiAgU2xvdCxcclxuICBTbG90dGFibGVcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-toast/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@radix-ui/react-toast/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: () => (/* binding */ Action),\n/* harmony export */   Close: () => (/* binding */ Close),\n/* harmony export */   Description: () => (/* binding */ Description),\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   Root: () => (/* binding */ Root2),\n/* harmony export */   Title: () => (/* binding */ Title),\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport),\n/* harmony export */   Viewport: () => (/* binding */ Viewport),\n/* harmony export */   createToastScope: () => (/* binding */ createToastScope)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-collection */ \"(app-pages-browser)/./node_modules/@radix-ui/react-collection/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-dismissable-layer */ \"(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @radix-ui/react-portal */ \"(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-presence */ \"(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-use-controllable-state */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-visually-hidden */ \"(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Action,Close,Description,Provider,Root,Title,Toast,ToastAction,ToastClose,ToastDescription,ToastProvider,ToastTitle,ToastViewport,Viewport,createToastScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$();\n// packages/react/toast/src/Toast.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar PROVIDER_NAME = \"ToastProvider\";\nvar [Collection, useCollection, createCollectionScope] = (0,_radix_ui_react_collection__WEBPACK_IMPORTED_MODULE_3__.createCollection)(\"Toast\");\nvar [createToastContext, createToastScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_4__.createContextScope)(\"Toast\", [\n    createCollectionScope\n]);\nvar [ToastProviderProvider, useToastProviderContext] = createToastContext(PROVIDER_NAME);\nvar ToastProvider = (props)=>{\n    _s();\n    const { __scopeToast, label = \"Notification\", duration = 5e3, swipeDirection = \"right\", swipeThreshold = 50, children } = props;\n    const [viewport, setViewport] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [toastCount, setToastCount] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const isFocusedToastEscapeKeyDownRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const isClosePausedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    if (!label.trim()) {\n        console.error(\"Invalid prop `label` supplied to `\".concat(PROVIDER_NAME, \"`. Expected non-empty `string`.\"));\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.Provider, {\n        scope: __scopeToast,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastProviderProvider, {\n            scope: __scopeToast,\n            label,\n            duration,\n            swipeDirection,\n            swipeThreshold,\n            toastCount,\n            viewport,\n            onViewportChange: setViewport,\n            onToastAdd: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n                \"ToastProvider.useCallback\": ()=>setToastCount({\n                        \"ToastProvider.useCallback\": (prevCount)=>prevCount + 1\n                    }[\"ToastProvider.useCallback\"])\n            }[\"ToastProvider.useCallback\"], []),\n            onToastRemove: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n                \"ToastProvider.useCallback\": ()=>setToastCount({\n                        \"ToastProvider.useCallback\": (prevCount)=>prevCount - 1\n                    }[\"ToastProvider.useCallback\"])\n            }[\"ToastProvider.useCallback\"], []),\n            isFocusedToastEscapeKeyDownRef,\n            isClosePausedRef,\n            children\n        })\n    });\n};\n_s(ToastProvider, \"5WX6HlT2GKgkJ8VW69vXumjrMKo=\");\n_c = ToastProvider;\nToastProvider.displayName = PROVIDER_NAME;\nvar VIEWPORT_NAME = \"ToastViewport\";\nvar VIEWPORT_DEFAULT_HOTKEY = [\n    \"F8\"\n];\nvar VIEWPORT_PAUSE = \"toast.viewportPause\";\nvar VIEWPORT_RESUME = \"toast.viewportResume\";\nvar ToastViewport = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopeToast, hotkey = VIEWPORT_DEFAULT_HOTKEY, label = \"Notifications ({hotkey})\", ...viewportProps } = props;\n    const context = useToastProviderContext(VIEWPORT_NAME, __scopeToast);\n    const getItems = useCollection(__scopeToast);\n    const wrapperRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const headFocusProxyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const tailFocusProxyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, ref, context.onViewportChange);\n    const hotkeyLabel = hotkey.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\");\n    const hasToasts = context.toastCount > 0;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const handleKeyDown = {\n                \"ToastViewport.useEffect.handleKeyDown\": (event)=>{\n                    var _ref_current;\n                    const isHotkeyPressed = hotkey.length !== 0 && hotkey.every({\n                        \"ToastViewport.useEffect.handleKeyDown\": (key)=>event[key] || event.code === key\n                    }[\"ToastViewport.useEffect.handleKeyDown\"]);\n                    if (isHotkeyPressed) (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();\n                }\n            }[\"ToastViewport.useEffect.handleKeyDown\"];\n            document.addEventListener(\"keydown\", handleKeyDown);\n            return ({\n                \"ToastViewport.useEffect\": ()=>document.removeEventListener(\"keydown\", handleKeyDown)\n            })[\"ToastViewport.useEffect\"];\n        }\n    }[\"ToastViewport.useEffect\"], [\n        hotkey\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const wrapper = wrapperRef.current;\n            const viewport = ref.current;\n            if (hasToasts && wrapper && viewport) {\n                const handlePause = {\n                    \"ToastViewport.useEffect.handlePause\": ()=>{\n                        if (!context.isClosePausedRef.current) {\n                            const pauseEvent = new CustomEvent(VIEWPORT_PAUSE);\n                            viewport.dispatchEvent(pauseEvent);\n                            context.isClosePausedRef.current = true;\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handlePause\"];\n                const handleResume = {\n                    \"ToastViewport.useEffect.handleResume\": ()=>{\n                        if (context.isClosePausedRef.current) {\n                            const resumeEvent = new CustomEvent(VIEWPORT_RESUME);\n                            viewport.dispatchEvent(resumeEvent);\n                            context.isClosePausedRef.current = false;\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handleResume\"];\n                const handleFocusOutResume = {\n                    \"ToastViewport.useEffect.handleFocusOutResume\": (event)=>{\n                        const isFocusMovingOutside = !wrapper.contains(event.relatedTarget);\n                        if (isFocusMovingOutside) handleResume();\n                    }\n                }[\"ToastViewport.useEffect.handleFocusOutResume\"];\n                const handlePointerLeaveResume = {\n                    \"ToastViewport.useEffect.handlePointerLeaveResume\": ()=>{\n                        const isFocusInside = wrapper.contains(document.activeElement);\n                        if (!isFocusInside) handleResume();\n                    }\n                }[\"ToastViewport.useEffect.handlePointerLeaveResume\"];\n                wrapper.addEventListener(\"focusin\", handlePause);\n                wrapper.addEventListener(\"focusout\", handleFocusOutResume);\n                wrapper.addEventListener(\"pointermove\", handlePause);\n                wrapper.addEventListener(\"pointerleave\", handlePointerLeaveResume);\n                window.addEventListener(\"blur\", handlePause);\n                window.addEventListener(\"focus\", handleResume);\n                return ({\n                    \"ToastViewport.useEffect\": ()=>{\n                        wrapper.removeEventListener(\"focusin\", handlePause);\n                        wrapper.removeEventListener(\"focusout\", handleFocusOutResume);\n                        wrapper.removeEventListener(\"pointermove\", handlePause);\n                        wrapper.removeEventListener(\"pointerleave\", handlePointerLeaveResume);\n                        window.removeEventListener(\"blur\", handlePause);\n                        window.removeEventListener(\"focus\", handleResume);\n                    }\n                })[\"ToastViewport.useEffect\"];\n            }\n        }\n    }[\"ToastViewport.useEffect\"], [\n        hasToasts,\n        context.isClosePausedRef\n    ]);\n    const getSortedTabbableCandidates = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"ToastViewport.useCallback[getSortedTabbableCandidates]\": (param)=>{\n            let { tabbingDirection } = param;\n            const toastItems = getItems();\n            const tabbableCandidates = toastItems.map({\n                \"ToastViewport.useCallback[getSortedTabbableCandidates].tabbableCandidates\": (toastItem)=>{\n                    const toastNode = toastItem.ref.current;\n                    const toastTabbableCandidates = [\n                        toastNode,\n                        ...getTabbableCandidates(toastNode)\n                    ];\n                    return tabbingDirection === \"forwards\" ? toastTabbableCandidates : toastTabbableCandidates.reverse();\n                }\n            }[\"ToastViewport.useCallback[getSortedTabbableCandidates].tabbableCandidates\"]);\n            return (tabbingDirection === \"forwards\" ? tabbableCandidates.reverse() : tabbableCandidates).flat();\n        }\n    }[\"ToastViewport.useCallback[getSortedTabbableCandidates]\"], [\n        getItems\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const viewport = ref.current;\n            if (viewport) {\n                const handleKeyDown = {\n                    \"ToastViewport.useEffect.handleKeyDown\": (event)=>{\n                        const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n                        const isTabKey = event.key === \"Tab\" && !isMetaKey;\n                        if (isTabKey) {\n                            const focusedElement = document.activeElement;\n                            const isTabbingBackwards = event.shiftKey;\n                            const targetIsViewport = event.target === viewport;\n                            if (targetIsViewport && isTabbingBackwards) {\n                                var _headFocusProxyRef_current;\n                                (_headFocusProxyRef_current = headFocusProxyRef.current) === null || _headFocusProxyRef_current === void 0 ? void 0 : _headFocusProxyRef_current.focus();\n                                return;\n                            }\n                            const tabbingDirection = isTabbingBackwards ? \"backwards\" : \"forwards\";\n                            const sortedCandidates = getSortedTabbableCandidates({\n                                tabbingDirection\n                            });\n                            const index = sortedCandidates.findIndex({\n                                \"ToastViewport.useEffect.handleKeyDown.index\": (candidate)=>candidate === focusedElement\n                            }[\"ToastViewport.useEffect.handleKeyDown.index\"]);\n                            if (focusFirst(sortedCandidates.slice(index + 1))) {\n                                event.preventDefault();\n                            } else {\n                                var _headFocusProxyRef_current1, _tailFocusProxyRef_current;\n                                isTabbingBackwards ? (_headFocusProxyRef_current1 = headFocusProxyRef.current) === null || _headFocusProxyRef_current1 === void 0 ? void 0 : _headFocusProxyRef_current1.focus() : (_tailFocusProxyRef_current = tailFocusProxyRef.current) === null || _tailFocusProxyRef_current === void 0 ? void 0 : _tailFocusProxyRef_current.focus();\n                            }\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handleKeyDown\"];\n                viewport.addEventListener(\"keydown\", handleKeyDown);\n                return ({\n                    \"ToastViewport.useEffect\": ()=>viewport.removeEventListener(\"keydown\", handleKeyDown)\n                })[\"ToastViewport.useEffect\"];\n            }\n        }\n    }[\"ToastViewport.useEffect\"], [\n        getItems,\n        getSortedTabbableCandidates\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__.Branch, {\n        ref: wrapperRef,\n        role: \"region\",\n        \"aria-label\": label.replace(\"{hotkey}\", hotkeyLabel),\n        tabIndex: -1,\n        style: {\n            pointerEvents: hasToasts ? void 0 : \"none\"\n        },\n        children: [\n            hasToasts && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(FocusProxy, {\n                ref: headFocusProxyRef,\n                onFocusFromOutsideViewport: ()=>{\n                    const tabbableCandidates = getSortedTabbableCandidates({\n                        tabbingDirection: \"forwards\"\n                    });\n                    focusFirst(tabbableCandidates);\n                }\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.Slot, {\n                scope: __scopeToast,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.ol, {\n                    tabIndex: -1,\n                    ...viewportProps,\n                    ref: composedRefs\n                })\n            }),\n            hasToasts && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(FocusProxy, {\n                ref: tailFocusProxyRef,\n                onFocusFromOutsideViewport: ()=>{\n                    const tabbableCandidates = getSortedTabbableCandidates({\n                        tabbingDirection: \"backwards\"\n                    });\n                    focusFirst(tabbableCandidates);\n                }\n            })\n        ]\n    });\n}, \"ixsRCQPkHELg47p3bu1Fa/8Nqww=\", false, function() {\n    return [\n        useToastProviderContext,\n        useCollection,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs\n    ];\n})), \"ixsRCQPkHELg47p3bu1Fa/8Nqww=\", false, function() {\n    return [\n        useToastProviderContext,\n        useCollection,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs\n    ];\n});\n_c2 = ToastViewport;\nToastViewport.displayName = VIEWPORT_NAME;\nvar FOCUS_PROXY_NAME = \"ToastFocusProxy\";\nvar FocusProxy = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;\n    const context = useToastProviderContext(FOCUS_PROXY_NAME, __scopeToast);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__.VisuallyHidden, {\n        \"aria-hidden\": true,\n        tabIndex: 0,\n        ...proxyProps,\n        ref: forwardedRef,\n        style: {\n            position: \"fixed\"\n        },\n        onFocus: (event)=>{\n            var _context_viewport;\n            const prevFocusedElement = event.relatedTarget;\n            const isFocusFromOutsideViewport = !((_context_viewport = context.viewport) === null || _context_viewport === void 0 ? void 0 : _context_viewport.contains(prevFocusedElement));\n            if (isFocusFromOutsideViewport) onFocusFromOutsideViewport();\n        }\n    });\n}, \"v+vTl4n43vTKnNVIR8ksMaNPHN4=\", false, function() {\n    return [\n        useToastProviderContext\n    ];\n}));\n_c3 = FocusProxy;\nFocusProxy.displayName = FOCUS_PROXY_NAME;\nvar TOAST_NAME = \"Toast\";\nvar TOAST_SWIPE_START = \"toast.swipeStart\";\nvar TOAST_SWIPE_MOVE = \"toast.swipeMove\";\nvar TOAST_SWIPE_CANCEL = \"toast.swipeCancel\";\nvar TOAST_SWIPE_END = \"toast.swipeEnd\";\nvar Toast = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = _s3((props, forwardedRef)=>{\n    _s3();\n    const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;\n    const [open = true, setOpen] = (0,_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__.useControllableState)({\n        prop: openProp,\n        defaultProp: defaultOpen,\n        onChange: onOpenChange\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_10__.Presence, {\n        present: forceMount || open,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastImpl, {\n            open,\n            ...toastProps,\n            ref: forwardedRef,\n            onClose: ()=>setOpen(false),\n            onPause: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(props.onPause),\n            onResume: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(props.onResume),\n            onSwipeStart: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeStart, (event)=>{\n                event.currentTarget.setAttribute(\"data-swipe\", \"start\");\n            }),\n            onSwipeMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeMove, (event)=>{\n                const { x, y } = event.detail.delta;\n                event.currentTarget.setAttribute(\"data-swipe\", \"move\");\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-x\", \"\".concat(x, \"px\"));\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-y\", \"\".concat(y, \"px\"));\n            }),\n            onSwipeCancel: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeCancel, (event)=>{\n                event.currentTarget.setAttribute(\"data-swipe\", \"cancel\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-y\");\n            }),\n            onSwipeEnd: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeEnd, (event)=>{\n                const { x, y } = event.detail.delta;\n                event.currentTarget.setAttribute(\"data-swipe\", \"end\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-x\", \"\".concat(x, \"px\"));\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-y\", \"\".concat(y, \"px\"));\n                setOpen(false);\n            })\n        })\n    });\n}, \"GYcbsAOjzeO5jx8hj6HARBbv4Lg=\", false, function() {\n    return [\n        _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__.useControllableState,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n})), \"GYcbsAOjzeO5jx8hj6HARBbv4Lg=\", false, function() {\n    return [\n        _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__.useControllableState,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n});\n_c5 = Toast;\nToast.displayName = TOAST_NAME;\nvar [ToastInteractiveProvider, useToastInteractiveContext] = createToastContext(TOAST_NAME, {\n    onClose () {}\n});\nvar ToastImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s4((props, forwardedRef)=>{\n    _s4();\n    const { __scopeToast, type = \"foreground\", duration: durationProp, open, onClose, onEscapeKeyDown, onPause, onResume, onSwipeStart, onSwipeMove, onSwipeCancel, onSwipeEnd, ...toastProps } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, {\n        \"ToastImpl.useComposedRefs[composedRefs]\": (node2)=>setNode(node2)\n    }[\"ToastImpl.useComposedRefs[composedRefs]\"]);\n    const pointerStartRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const swipeDeltaRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const duration = durationProp || context.duration;\n    const closeTimerStartTimeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const closeTimerRemainingTimeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(duration);\n    const closeTimerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const { onToastAdd, onToastRemove } = context;\n    const handleClose = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)({\n        \"ToastImpl.useCallbackRef[handleClose]\": ()=>{\n            var _context_viewport;\n            const isFocusInToast = node === null || node === void 0 ? void 0 : node.contains(document.activeElement);\n            if (isFocusInToast) (_context_viewport = context.viewport) === null || _context_viewport === void 0 ? void 0 : _context_viewport.focus();\n            onClose();\n        }\n    }[\"ToastImpl.useCallbackRef[handleClose]\"]);\n    const startTimer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"ToastImpl.useCallback[startTimer]\": (duration2)=>{\n            if (!duration2 || duration2 === Infinity) return;\n            window.clearTimeout(closeTimerRef.current);\n            closeTimerStartTimeRef.current = /* @__PURE__ */ new Date().getTime();\n            closeTimerRef.current = window.setTimeout(handleClose, duration2);\n        }\n    }[\"ToastImpl.useCallback[startTimer]\"], [\n        handleClose\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            const viewport = context.viewport;\n            if (viewport) {\n                const handleResume = {\n                    \"ToastImpl.useEffect.handleResume\": ()=>{\n                        startTimer(closeTimerRemainingTimeRef.current);\n                        onResume === null || onResume === void 0 ? void 0 : onResume();\n                    }\n                }[\"ToastImpl.useEffect.handleResume\"];\n                const handlePause = {\n                    \"ToastImpl.useEffect.handlePause\": ()=>{\n                        const elapsedTime = /* @__PURE__ */ new Date().getTime() - closeTimerStartTimeRef.current;\n                        closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;\n                        window.clearTimeout(closeTimerRef.current);\n                        onPause === null || onPause === void 0 ? void 0 : onPause();\n                    }\n                }[\"ToastImpl.useEffect.handlePause\"];\n                viewport.addEventListener(VIEWPORT_PAUSE, handlePause);\n                viewport.addEventListener(VIEWPORT_RESUME, handleResume);\n                return ({\n                    \"ToastImpl.useEffect\": ()=>{\n                        viewport.removeEventListener(VIEWPORT_PAUSE, handlePause);\n                        viewport.removeEventListener(VIEWPORT_RESUME, handleResume);\n                    }\n                })[\"ToastImpl.useEffect\"];\n            }\n        }\n    }[\"ToastImpl.useEffect\"], [\n        context.viewport,\n        duration,\n        onPause,\n        onResume,\n        startTimer\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            if (open && !context.isClosePausedRef.current) startTimer(duration);\n        }\n    }[\"ToastImpl.useEffect\"], [\n        open,\n        duration,\n        context.isClosePausedRef,\n        startTimer\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            onToastAdd();\n            return ({\n                \"ToastImpl.useEffect\": ()=>onToastRemove()\n            })[\"ToastImpl.useEffect\"];\n        }\n    }[\"ToastImpl.useEffect\"], [\n        onToastAdd,\n        onToastRemove\n    ]);\n    const announceTextContent = react__WEBPACK_IMPORTED_MODULE_0__.useMemo({\n        \"ToastImpl.useMemo[announceTextContent]\": ()=>{\n            return node ? getAnnounceTextContent(node) : null;\n        }\n    }[\"ToastImpl.useMemo[announceTextContent]\"], [\n        node\n    ]);\n    if (!context.viewport) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: [\n            announceTextContent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounce, {\n                __scopeToast,\n                role: \"status\",\n                \"aria-live\": type === \"foreground\" ? \"assertive\" : \"polite\",\n                \"aria-atomic\": true,\n                children: announceTextContent\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastInteractiveProvider, {\n                scope: __scopeToast,\n                onClose: handleClose,\n                children: /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.ItemSlot, {\n                    scope: __scopeToast,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__.Root, {\n                        asChild: true,\n                        onEscapeKeyDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(onEscapeKeyDown, ()=>{\n                            if (!context.isFocusedToastEscapeKeyDownRef.current) handleClose();\n                            context.isFocusedToastEscapeKeyDownRef.current = false;\n                        }),\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.li, {\n                            role: \"status\",\n                            \"aria-live\": \"off\",\n                            \"aria-atomic\": true,\n                            tabIndex: 0,\n                            \"data-state\": open ? \"open\" : \"closed\",\n                            \"data-swipe-direction\": context.swipeDirection,\n                            ...toastProps,\n                            ref: composedRefs,\n                            style: {\n                                userSelect: \"none\",\n                                touchAction: \"none\",\n                                ...props.style\n                            },\n                            onKeyDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onKeyDown, (event)=>{\n                                if (event.key !== \"Escape\") return;\n                                onEscapeKeyDown === null || onEscapeKeyDown === void 0 ? void 0 : onEscapeKeyDown(event.nativeEvent);\n                                if (!event.nativeEvent.defaultPrevented) {\n                                    context.isFocusedToastEscapeKeyDownRef.current = true;\n                                    handleClose();\n                                }\n                            }),\n                            onPointerDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerDown, (event)=>{\n                                if (event.button !== 0) return;\n                                pointerStartRef.current = {\n                                    x: event.clientX,\n                                    y: event.clientY\n                                };\n                            }),\n                            onPointerMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerMove, (event)=>{\n                                if (!pointerStartRef.current) return;\n                                const x = event.clientX - pointerStartRef.current.x;\n                                const y = event.clientY - pointerStartRef.current.y;\n                                const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);\n                                const isHorizontalSwipe = [\n                                    \"left\",\n                                    \"right\"\n                                ].includes(context.swipeDirection);\n                                const clamp = [\n                                    \"left\",\n                                    \"up\"\n                                ].includes(context.swipeDirection) ? Math.min : Math.max;\n                                const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n                                const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n                                const moveStartBuffer = event.pointerType === \"touch\" ? 10 : 2;\n                                const delta = {\n                                    x: clampedX,\n                                    y: clampedY\n                                };\n                                const eventDetail = {\n                                    originalEvent: event,\n                                    delta\n                                };\n                                if (hasSwipeMoveStarted) {\n                                    swipeDeltaRef.current = delta;\n                                    handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {\n                                        discrete: false\n                                    });\n                                } else if (isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {\n                                    swipeDeltaRef.current = delta;\n                                    handleAndDispatchCustomEvent(TOAST_SWIPE_START, onSwipeStart, eventDetail, {\n                                        discrete: false\n                                    });\n                                    event.target.setPointerCapture(event.pointerId);\n                                } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n                                    pointerStartRef.current = null;\n                                }\n                            }),\n                            onPointerUp: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerUp, (event)=>{\n                                const delta = swipeDeltaRef.current;\n                                const target = event.target;\n                                if (target.hasPointerCapture(event.pointerId)) {\n                                    target.releasePointerCapture(event.pointerId);\n                                }\n                                swipeDeltaRef.current = null;\n                                pointerStartRef.current = null;\n                                if (delta) {\n                                    const toast = event.currentTarget;\n                                    const eventDetail = {\n                                        originalEvent: event,\n                                        delta\n                                    };\n                                    if (isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold)) {\n                                        handleAndDispatchCustomEvent(TOAST_SWIPE_END, onSwipeEnd, eventDetail, {\n                                            discrete: true\n                                        });\n                                    } else {\n                                        handleAndDispatchCustomEvent(TOAST_SWIPE_CANCEL, onSwipeCancel, eventDetail, {\n                                            discrete: true\n                                        });\n                                    }\n                                    toast.addEventListener(\"click\", (event2)=>event2.preventDefault(), {\n                                        once: true\n                                    });\n                                }\n                            })\n                        })\n                    })\n                }), context.viewport)\n            })\n        ]\n    });\n}, \"7BpmiAQPEbHD32/tfcY+D7MYfsk=\", false, function() {\n    return [\n        useToastProviderContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n}));\n_c6 = ToastImpl;\nvar ToastAnnounce = (props)=>{\n    _s5();\n    const { __scopeToast, children, ...announceProps } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [renderAnnounceText, setRenderAnnounceText] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [isAnnounced, setIsAnnounced] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    useNextFrame({\n        \"ToastAnnounce.useNextFrame\": ()=>setRenderAnnounceText(true)\n    }[\"ToastAnnounce.useNextFrame\"]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastAnnounce.useEffect\": ()=>{\n            const timer = window.setTimeout({\n                \"ToastAnnounce.useEffect.timer\": ()=>setIsAnnounced(true)\n            }[\"ToastAnnounce.useEffect.timer\"], 1e3);\n            return ({\n                \"ToastAnnounce.useEffect\": ()=>window.clearTimeout(timer)\n            })[\"ToastAnnounce.useEffect\"];\n        }\n    }[\"ToastAnnounce.useEffect\"], []);\n    return isAnnounced ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_13__.Portal, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__.VisuallyHidden, {\n            ...announceProps,\n            children: renderAnnounceText && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n                children: [\n                    context.label,\n                    \" \",\n                    children\n                ]\n            })\n        })\n    });\n};\n_s5(ToastAnnounce, \"d6EX7hT1Y0tSA97It++iyDoZbs8=\", false, function() {\n    return [\n        useToastProviderContext,\n        useNextFrame\n    ];\n});\n_c7 = ToastAnnounce;\nvar TITLE_NAME = \"ToastTitle\";\nvar ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c8 = (props, forwardedRef)=>{\n    const { __scopeToast, ...titleProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        ...titleProps,\n        ref: forwardedRef\n    });\n});\n_c9 = ToastTitle;\nToastTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"ToastDescription\";\nvar ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c10 = (props, forwardedRef)=>{\n    const { __scopeToast, ...descriptionProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        ...descriptionProps,\n        ref: forwardedRef\n    });\n});\n_c11 = ToastDescription;\nToastDescription.displayName = DESCRIPTION_NAME;\nvar ACTION_NAME = \"ToastAction\";\nvar ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c12 = (props, forwardedRef)=>{\n    const { altText, ...actionProps } = props;\n    if (!altText.trim()) {\n        console.error(\"Invalid prop `altText` supplied to `\".concat(ACTION_NAME, \"`. Expected non-empty `string`.\"));\n        return null;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounceExclude, {\n        altText,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastClose, {\n            ...actionProps,\n            ref: forwardedRef\n        })\n    });\n});\n_c13 = ToastAction;\nToastAction.displayName = ACTION_NAME;\nvar CLOSE_NAME = \"ToastClose\";\nvar ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const { __scopeToast, ...closeProps } = props;\n    const interactiveContext = useToastInteractiveContext(CLOSE_NAME, __scopeToast);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounceExclude, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.button, {\n            type: \"button\",\n            ...closeProps,\n            ref: forwardedRef,\n            onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onClick, interactiveContext.onClose)\n        })\n    });\n}, \"6ZMkG0Unpl4/gIv2taZUcwphf68=\", false, function() {\n    return [\n        useToastInteractiveContext\n    ];\n}));\n_c14 = ToastClose;\nToastClose.displayName = CLOSE_NAME;\nvar ToastAnnounceExclude = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, altText, ...announceExcludeProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        \"data-radix-toast-announce-exclude\": \"\",\n        \"data-radix-toast-announce-alt\": altText || void 0,\n        ...announceExcludeProps,\n        ref: forwardedRef\n    });\n});\n_c15 = ToastAnnounceExclude;\nfunction getAnnounceTextContent(container) {\n    const textContent = [];\n    const childNodes = Array.from(container.childNodes);\n    childNodes.forEach((node)=>{\n        if (node.nodeType === node.TEXT_NODE && node.textContent) textContent.push(node.textContent);\n        if (isHTMLElement(node)) {\n            const isHidden = node.ariaHidden || node.hidden || node.style.display === \"none\";\n            const isExcluded = node.dataset.radixToastAnnounceExclude === \"\";\n            if (!isHidden) {\n                if (isExcluded) {\n                    const altText = node.dataset.radixToastAnnounceAlt;\n                    if (altText) textContent.push(altText);\n                } else {\n                    textContent.push(...getAnnounceTextContent(node));\n                }\n            }\n        }\n    });\n    return textContent;\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, param) {\n    let { discrete } = param;\n    const currentTarget = detail.originalEvent.currentTarget;\n    const event = new CustomEvent(name, {\n        bubbles: true,\n        cancelable: true,\n        detail\n    });\n    if (handler) currentTarget.addEventListener(name, handler, {\n        once: true\n    });\n    if (discrete) {\n        (0,_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.dispatchDiscreteCustomEvent)(currentTarget, event);\n    } else {\n        currentTarget.dispatchEvent(event);\n    }\n}\nvar isDeltaInDirection = function(delta, direction) {\n    let threshold = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;\n    const deltaX = Math.abs(delta.x);\n    const deltaY = Math.abs(delta.y);\n    const isDeltaX = deltaX > deltaY;\n    if (direction === \"left\" || direction === \"right\") {\n        return isDeltaX && deltaX > threshold;\n    } else {\n        return !isDeltaX && deltaY > threshold;\n    }\n};\nfunction useNextFrame() {\n    let callback = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ()=>{};\n    _s7();\n    const fn = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(callback);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_14__.useLayoutEffect)({\n        \"useNextFrame.useLayoutEffect\": ()=>{\n            let raf1 = 0;\n            let raf2 = 0;\n            raf1 = window.requestAnimationFrame({\n                \"useNextFrame.useLayoutEffect\": ()=>raf2 = window.requestAnimationFrame(fn)\n            }[\"useNextFrame.useLayoutEffect\"]);\n            return ({\n                \"useNextFrame.useLayoutEffect\": ()=>{\n                    window.cancelAnimationFrame(raf1);\n                    window.cancelAnimationFrame(raf2);\n                }\n            })[\"useNextFrame.useLayoutEffect\"];\n        }\n    }[\"useNextFrame.useLayoutEffect\"], [\n        fn\n    ]);\n}\n_s7(useNextFrame, \"io2gR/UjflKlYiMuWmlTjpci2xM=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n});\nfunction isHTMLElement(node) {\n    return node.nodeType === node.ELEMENT_NODE;\n}\nfunction getTabbableCandidates(container) {\n    const nodes = [];\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n        acceptNode: (node)=>{\n            const isHiddenInput = node.tagName === \"INPUT\" && node.type === \"hidden\";\n            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n        }\n    });\n    while(walker.nextNode())nodes.push(walker.currentNode);\n    return nodes;\n}\nfunction focusFirst(candidates) {\n    const previouslyFocusedElement = document.activeElement;\n    return candidates.some((candidate)=>{\n        if (candidate === previouslyFocusedElement) return true;\n        candidate.focus();\n        return document.activeElement !== previouslyFocusedElement;\n    });\n}\nvar Provider = ToastProvider;\nvar Viewport = ToastViewport;\nvar Root2 = Toast;\nvar Title = ToastTitle;\nvar Description = ToastDescription;\nvar Action = ToastAction;\nvar Close = ToastClose;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"ToastProvider\");\n$RefreshReg$(_c1, \"ToastViewport$React.forwardRef\");\n$RefreshReg$(_c2, \"ToastViewport\");\n$RefreshReg$(_c3, \"FocusProxy\");\n$RefreshReg$(_c4, \"Toast$React.forwardRef\");\n$RefreshReg$(_c5, \"Toast\");\n$RefreshReg$(_c6, \"ToastImpl\");\n$RefreshReg$(_c7, \"ToastAnnounce\");\n$RefreshReg$(_c8, \"ToastTitle$React.forwardRef\");\n$RefreshReg$(_c9, \"ToastTitle\");\n$RefreshReg$(_c10, \"ToastDescription$React.forwardRef\");\n$RefreshReg$(_c11, \"ToastDescription\");\n$RefreshReg$(_c12, \"ToastAction$React.forwardRef\");\n$RefreshReg$(_c13, \"ToastAction\");\n$RefreshReg$(_c14, \"ToastClose\");\n$RefreshReg$(_c15, \"ToastAnnounceExclude\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-toast/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCallbackRef: () => (/* binding */ useCallbackRef)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-callback-ref/src/useCallbackRef.tsx\r\n\r\nfunction useCallbackRef(callback) {\r\n  const callbackRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(callback);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    callbackRef.current = callback;\r\n  });\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (...args) => callbackRef.current?.(...args), []);\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWNhbGxiYWNrLXJlZi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0Esc0JBQXNCLHlDQUFZO0FBQ2xDLEVBQUUsNENBQWU7QUFDakI7QUFDQSxHQUFHO0FBQ0gsU0FBUywwQ0FBYTtBQUN0QjtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHJlYWN0LXVzZS1jYWxsYmFjay1yZWZcXGRpc3RcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC91c2UtY2FsbGJhY2stcmVmL3NyYy91c2VDYWxsYmFja1JlZi50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmZ1bmN0aW9uIHVzZUNhbGxiYWNrUmVmKGNhbGxiYWNrKSB7XHJcbiAgY29uc3QgY2FsbGJhY2tSZWYgPSBSZWFjdC51c2VSZWYoY2FsbGJhY2spO1xyXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjYWxsYmFja1JlZi5jdXJyZW50ID0gY2FsbGJhY2s7XHJcbiAgfSk7XHJcbiAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4gKC4uLmFyZ3MpID0+IGNhbGxiYWNrUmVmLmN1cnJlbnQ/LiguLi5hcmdzKSwgW10pO1xyXG59XHJcbmV4cG9ydCB7XHJcbiAgdXNlQ2FsbGJhY2tSZWZcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useControllableState: () => (/* binding */ useControllableState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n// packages/react/use-controllable-state/src/useControllableState.tsx\r\n\r\n\r\nfunction useControllableState({\r\n  prop,\r\n  defaultProp,\r\n  onChange = () => {\r\n  }\r\n}) {\r\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\r\n  const isControlled = prop !== void 0;\r\n  const value = isControlled ? prop : uncontrolledProp;\r\n  const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);\r\n  const setValue = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (nextValue) => {\r\n      if (isControlled) {\r\n        const setter = nextValue;\r\n        const value2 = typeof nextValue === \"function\" ? setter(prop) : nextValue;\r\n        if (value2 !== prop) handleChange(value2);\r\n      } else {\r\n        setUncontrolledProp(nextValue);\r\n      }\r\n    },\r\n    [isControlled, prop, setUncontrolledProp, handleChange]\r\n  );\r\n  return [value, setValue];\r\n}\r\nfunction useUncontrolledState({\r\n  defaultProp,\r\n  onChange\r\n}) {\r\n  const uncontrolledState = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultProp);\r\n  const [value] = uncontrolledState;\r\n  const prevValueRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(value);\r\n  const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (prevValueRef.current !== value) {\r\n      handleChange(value);\r\n      prevValueRef.current = value;\r\n    }\r\n  }, [value, prevValueRef, handleChange]);\r\n  return uncontrolledState;\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWNvbnRyb2xsYWJsZS1zdGF0ZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUMrQjtBQUNtQztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHlFQUF5RSx1QkFBdUI7QUFDaEc7QUFDQTtBQUNBLHVCQUF1QixnRkFBYztBQUNyQyxtQkFBbUIsOENBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEIsMkNBQWM7QUFDMUM7QUFDQSx1QkFBdUIseUNBQVk7QUFDbkMsdUJBQXVCLGdGQUFjO0FBQ3JDLEVBQUUsNENBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHJlYWN0LXVzZS1jb250cm9sbGFibGUtc3RhdGVcXGRpc3RcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC91c2UtY29udHJvbGxhYmxlLXN0YXRlL3NyYy91c2VDb250cm9sbGFibGVTdGF0ZS50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZUNhbGxiYWNrUmVmIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC11c2UtY2FsbGJhY2stcmVmXCI7XHJcbmZ1bmN0aW9uIHVzZUNvbnRyb2xsYWJsZVN0YXRlKHtcclxuICBwcm9wLFxyXG4gIGRlZmF1bHRQcm9wLFxyXG4gIG9uQ2hhbmdlID0gKCkgPT4ge1xyXG4gIH1cclxufSkge1xyXG4gIGNvbnN0IFt1bmNvbnRyb2xsZWRQcm9wLCBzZXRVbmNvbnRyb2xsZWRQcm9wXSA9IHVzZVVuY29udHJvbGxlZFN0YXRlKHsgZGVmYXVsdFByb3AsIG9uQ2hhbmdlIH0pO1xyXG4gIGNvbnN0IGlzQ29udHJvbGxlZCA9IHByb3AgIT09IHZvaWQgMDtcclxuICBjb25zdCB2YWx1ZSA9IGlzQ29udHJvbGxlZCA/IHByb3AgOiB1bmNvbnRyb2xsZWRQcm9wO1xyXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IHVzZUNhbGxiYWNrUmVmKG9uQ2hhbmdlKTtcclxuICBjb25zdCBzZXRWYWx1ZSA9IFJlYWN0LnVzZUNhbGxiYWNrKFxyXG4gICAgKG5leHRWYWx1ZSkgPT4ge1xyXG4gICAgICBpZiAoaXNDb250cm9sbGVkKSB7XHJcbiAgICAgICAgY29uc3Qgc2V0dGVyID0gbmV4dFZhbHVlO1xyXG4gICAgICAgIGNvbnN0IHZhbHVlMiA9IHR5cGVvZiBuZXh0VmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IHNldHRlcihwcm9wKSA6IG5leHRWYWx1ZTtcclxuICAgICAgICBpZiAodmFsdWUyICE9PSBwcm9wKSBoYW5kbGVDaGFuZ2UodmFsdWUyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzZXRVbmNvbnRyb2xsZWRQcm9wKG5leHRWYWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBbaXNDb250cm9sbGVkLCBwcm9wLCBzZXRVbmNvbnRyb2xsZWRQcm9wLCBoYW5kbGVDaGFuZ2VdXHJcbiAgKTtcclxuICByZXR1cm4gW3ZhbHVlLCBzZXRWYWx1ZV07XHJcbn1cclxuZnVuY3Rpb24gdXNlVW5jb250cm9sbGVkU3RhdGUoe1xyXG4gIGRlZmF1bHRQcm9wLFxyXG4gIG9uQ2hhbmdlXHJcbn0pIHtcclxuICBjb25zdCB1bmNvbnRyb2xsZWRTdGF0ZSA9IFJlYWN0LnVzZVN0YXRlKGRlZmF1bHRQcm9wKTtcclxuICBjb25zdCBbdmFsdWVdID0gdW5jb250cm9sbGVkU3RhdGU7XHJcbiAgY29uc3QgcHJldlZhbHVlUmVmID0gUmVhY3QudXNlUmVmKHZhbHVlKTtcclxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSB1c2VDYWxsYmFja1JlZihvbkNoYW5nZSk7XHJcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmIChwcmV2VmFsdWVSZWYuY3VycmVudCAhPT0gdmFsdWUpIHtcclxuICAgICAgaGFuZGxlQ2hhbmdlKHZhbHVlKTtcclxuICAgICAgcHJldlZhbHVlUmVmLmN1cnJlbnQgPSB2YWx1ZTtcclxuICAgIH1cclxuICB9LCBbdmFsdWUsIHByZXZWYWx1ZVJlZiwgaGFuZGxlQ2hhbmdlXSk7XHJcbiAgcmV0dXJuIHVuY29udHJvbGxlZFN0YXRlO1xyXG59XHJcbmV4cG9ydCB7XHJcbiAgdXNlQ29udHJvbGxhYmxlU3RhdGVcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEscapeKeydown: () => (/* binding */ useEscapeKeydown)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n// packages/react/use-escape-keydown/src/useEscapeKeydown.tsx\r\n\r\n\r\nfunction useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {\r\n  const onEscapeKeyDown = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onEscapeKeyDownProp);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === \"Escape\") {\r\n        onEscapeKeyDown(event);\r\n      }\r\n    };\r\n    ownerDocument.addEventListener(\"keydown\", handleKeyDown, { capture: true });\r\n    return () => ownerDocument.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\r\n  }, [onEscapeKeyDown, ownerDocument]);\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWVzY2FwZS1rZXlkb3duL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQ21DO0FBQ2xFO0FBQ0EsMEJBQTBCLGdGQUFjO0FBQ3hDLEVBQUUsNENBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxlQUFlO0FBQzlFLCtFQUErRSxlQUFlO0FBQzlGLEdBQUc7QUFDSDtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHJlYWN0LXVzZS1lc2NhcGUta2V5ZG93blxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3VzZS1lc2NhcGUta2V5ZG93bi9zcmMvdXNlRXNjYXBlS2V5ZG93bi50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZUNhbGxiYWNrUmVmIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC11c2UtY2FsbGJhY2stcmVmXCI7XHJcbmZ1bmN0aW9uIHVzZUVzY2FwZUtleWRvd24ob25Fc2NhcGVLZXlEb3duUHJvcCwgb3duZXJEb2N1bWVudCA9IGdsb2JhbFRoaXM/LmRvY3VtZW50KSB7XHJcbiAgY29uc3Qgb25Fc2NhcGVLZXlEb3duID0gdXNlQ2FsbGJhY2tSZWYob25Fc2NhcGVLZXlEb3duUHJvcCk7XHJcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IGhhbmRsZUtleURvd24gPSAoZXZlbnQpID0+IHtcclxuICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgIG9uRXNjYXBlS2V5RG93bihldmVudCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICBvd25lckRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleURvd24sIHsgY2FwdHVyZTogdHJ1ZSB9KTtcclxuICAgIHJldHVybiAoKSA9PiBvd25lckRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleURvd24sIHsgY2FwdHVyZTogdHJ1ZSB9KTtcclxuICB9LCBbb25Fc2NhcGVLZXlEb3duLCBvd25lckRvY3VtZW50XSk7XHJcbn1cclxuZXhwb3J0IHtcclxuICB1c2VFc2NhcGVLZXlkb3duXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLayoutEffect: () => (/* binding */ useLayoutEffect2)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-layout-effect/src/useLayoutEffect.tsx\r\n\r\nvar useLayoutEffect2 = Boolean(globalThis?.document) ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : () => {\r\n};\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUMrQjtBQUMvQix1REFBdUQsa0RBQXFCO0FBQzVFO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3QtdXNlLWxheW91dC1lZmZlY3RcXGRpc3RcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC91c2UtbGF5b3V0LWVmZmVjdC9zcmMvdXNlTGF5b3V0RWZmZWN0LnRzeFxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxudmFyIHVzZUxheW91dEVmZmVjdDIgPSBCb29sZWFuKGdsb2JhbFRoaXM/LmRvY3VtZW50KSA/IFJlYWN0LnVzZUxheW91dEVmZmVjdCA6ICgpID0+IHtcclxufTtcclxuZXhwb3J0IHtcclxuICB1c2VMYXlvdXRFZmZlY3QyIGFzIHVzZUxheW91dEVmZmVjdFxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   VisuallyHidden: () => (/* binding */ VisuallyHidden)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/visually-hidden/src/VisuallyHidden.tsx\r\n\r\n\r\n\r\nvar NAME = \"VisuallyHidden\";\r\nvar VisuallyHidden = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(\r\n  (props, forwardedRef) => {\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\r\n      _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.Primitive.span,\r\n      {\r\n        ...props,\r\n        ref: forwardedRef,\r\n        style: {\r\n          // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss\r\n          position: \"absolute\",\r\n          border: 0,\r\n          width: 1,\r\n          height: 1,\r\n          padding: 0,\r\n          margin: -1,\r\n          overflow: \"hidden\",\r\n          clip: \"rect(0, 0, 0, 0)\",\r\n          whiteSpace: \"nowrap\",\r\n          wordWrap: \"normal\",\r\n          ...props.style\r\n        }\r\n      }\r\n    );\r\n  }\r\n);\r\nVisuallyHidden.displayName = NAME;\r\nvar Root = VisuallyHidden;\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdmlzdWFsbHktaGlkZGVuL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDdUI7QUFDZDtBQUN4QztBQUNBLHFCQUFxQiw2Q0FBZ0I7QUFDckM7QUFDQSwyQkFBMkIsc0RBQUc7QUFDOUIsTUFBTSxnRUFBUztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHJhZGl4LXVpXFxyZWFjdC12aXN1YWxseS1oaWRkZW5cXGRpc3RcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWNrYWdlcy9yZWFjdC92aXN1YWxseS1oaWRkZW4vc3JjL1Zpc3VhbGx5SGlkZGVuLnRzeFxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wcmltaXRpdmVcIjtcclxuaW1wb3J0IHsganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbnZhciBOQU1FID0gXCJWaXN1YWxseUhpZGRlblwiO1xyXG52YXIgVmlzdWFsbHlIaWRkZW4gPSBSZWFjdC5mb3J3YXJkUmVmKFxyXG4gIChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XHJcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChcclxuICAgICAgUHJpbWl0aXZlLnNwYW4sXHJcbiAgICAgIHtcclxuICAgICAgICAuLi5wcm9wcyxcclxuICAgICAgICByZWY6IGZvcndhcmRlZFJlZixcclxuICAgICAgICBzdHlsZToge1xyXG4gICAgICAgICAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL3Njc3MvbWl4aW5zL192aXN1YWxseS1oaWRkZW4uc2Nzc1xyXG4gICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcclxuICAgICAgICAgIGJvcmRlcjogMCxcclxuICAgICAgICAgIHdpZHRoOiAxLFxyXG4gICAgICAgICAgaGVpZ2h0OiAxLFxyXG4gICAgICAgICAgcGFkZGluZzogMCxcclxuICAgICAgICAgIG1hcmdpbjogLTEsXHJcbiAgICAgICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcclxuICAgICAgICAgIGNsaXA6IFwicmVjdCgwLCAwLCAwLCAwKVwiLFxyXG4gICAgICAgICAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcclxuICAgICAgICAgIHdvcmRXcmFwOiBcIm5vcm1hbFwiLFxyXG4gICAgICAgICAgLi4ucHJvcHMuc3R5bGVcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG4pO1xyXG5WaXN1YWxseUhpZGRlbi5kaXNwbGF5TmFtZSA9IE5BTUU7XHJcbnZhciBSb290ID0gVmlzdWFsbHlIaWRkZW47XHJcbmV4cG9ydCB7XHJcbiAgUm9vdCxcclxuICBWaXN1YWxseUhpZGRlblxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n\r\nconst AuthAdminApi = _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthAdminApi);\r\n//# sourceMappingURL=AuthAdminApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9BdXRoQWRtaW5BcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEM7QUFDOUMscUJBQXFCLHVEQUFjO0FBQ25DLGlFQUFlLFlBQVksRUFBQztBQUM1QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxBdXRoQWRtaW5BcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdvVHJ1ZUFkbWluQXBpIGZyb20gJy4vR29UcnVlQWRtaW5BcGknO1xyXG5jb25zdCBBdXRoQWRtaW5BcGkgPSBHb1RydWVBZG1pbkFwaTtcclxuZXhwb3J0IGRlZmF1bHQgQXV0aEFkbWluQXBpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoQWRtaW5BcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthClient.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n\r\nconst AuthClient = _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthClient);\r\n//# sourceMappingURL=AuthClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9BdXRoQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQzFDLG1CQUFtQixxREFBWTtBQUMvQixpRUFBZSxVQUFVLEVBQUM7QUFDMUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXGF1dGgtanNcXGRpc3RcXG1vZHVsZVxcQXV0aENsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR29UcnVlQ2xpZW50IGZyb20gJy4vR29UcnVlQ2xpZW50JztcclxuY29uc3QgQXV0aENsaWVudCA9IEdvVHJ1ZUNsaWVudDtcclxuZXhwb3J0IGRlZmF1bHQgQXV0aENsaWVudDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GoTrueAdminApi)\n/* harmony export */ });\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/types */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\nclass GoTrueAdminApi {\r\n    constructor({ url = '', headers = {}, fetch, }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\r\n        this.mfa = {\r\n            listFactors: this._listFactors.bind(this),\r\n            deleteFactor: this._deleteFactor.bind(this),\r\n        };\r\n    }\r\n    /**\r\n     * Removes a logged-in session.\r\n     * @param jwt A valid, logged-in JWT.\r\n     * @param scope The logout sope.\r\n     */\r\n    async signOut(jwt, scope = _lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES[0]) {\r\n        if (_lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\r\n            throw new Error(`@supabase/auth-js: Parameter scope must be one of ${_lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES.join(', ')}`);\r\n        }\r\n        try {\r\n            await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\r\n                headers: this.headers,\r\n                jwt,\r\n                noResolveJson: true,\r\n            });\r\n            return { data: null, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Sends an invite link to an email address.\r\n     * @param email The email address of the user.\r\n     * @param options Additional options to be included when inviting.\r\n     */\r\n    async inviteUserByEmail(email, options = {}) {\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/invite`, {\r\n                body: { email, data: options.data },\r\n                headers: this.headers,\r\n                redirectTo: options.redirectTo,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Generates email links and OTPs to be sent via a custom email provider.\r\n     * @param email The user's email.\r\n     * @param options.password User password. For signup only.\r\n     * @param options.data Optional user metadata. For signup only.\r\n     * @param options.redirectTo The redirect url which should be appended to the generated link\r\n     */\r\n    async generateLink(params) {\r\n        try {\r\n            const { options } = params, rest = __rest(params, [\"options\"]);\r\n            const body = Object.assign(Object.assign({}, rest), options);\r\n            if ('newEmail' in rest) {\r\n                // replace newEmail with new_email in request body\r\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\r\n                delete body['newEmail'];\r\n            }\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\r\n                body: body,\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._generateLinkResponse,\r\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return {\r\n                    data: {\r\n                        properties: null,\r\n                        user: null,\r\n                    },\r\n                    error,\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    // User Admin API\r\n    /**\r\n     * Creates a new user.\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async createUser(attributes) {\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\r\n                body: attributes,\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get a list of users.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\r\n     */\r\n    async listUsers(params) {\r\n        var _a, _b, _c, _d, _e, _f, _g;\r\n        try {\r\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\r\n            const response = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\r\n                headers: this.headers,\r\n                noResolveJson: true,\r\n                query: {\r\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\r\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._noResolveJsonResponse,\r\n            });\r\n            if (response.error)\r\n                throw response.error;\r\n            const users = await response.json();\r\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\r\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\r\n            if (links.length > 0) {\r\n                links.forEach((link) => {\r\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\r\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\r\n                    pagination[`${rel}Page`] = page;\r\n                });\r\n                pagination.total = parseInt(total);\r\n            }\r\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { users: [] }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get user by id.\r\n     *\r\n     * @param uid The user's unique identifier\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async getUserById(uid) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(uid);\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Updates the user data.\r\n     *\r\n     * @param attributes The data you want to update.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async updateUserById(uid, attributes) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(uid);\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\r\n                body: attributes,\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Delete a user. Requires a `service_role` key.\r\n     *\r\n     * @param id The user id you want to remove.\r\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\r\n     * Defaults to false for backward compatibility.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async deleteUser(id, shouldSoftDelete = false) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(id);\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    should_soft_delete: shouldSoftDelete,\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _listFactors(params) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.userId);\r\n        try {\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\r\n                headers: this.headers,\r\n                xform: (factors) => {\r\n                    return { data: { factors }, error: null };\r\n                },\r\n            });\r\n            return { data, error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _deleteFactor(params) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.userId);\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.id);\r\n        try {\r\n            const data = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\r\n                headers: this.headers,\r\n            });\r\n            return { data, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=GoTrueAdminApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GoTrueClient)\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/local-storage */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\");\n/* harmony import */ var _lib_polyfills__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/polyfills */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\");\n/* harmony import */ var _lib_version__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/version */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/locks */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n/* harmony import */ var _lib_base64url__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/base64url */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(0,_lib_polyfills__WEBPACK_IMPORTED_MODULE_6__.polyfillGlobalThis)(); // Make \"globalThis\" available\r\nconst DEFAULT_OPTIONS = {\r\n    url: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.GOTRUE_URL,\r\n    storageKey: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.STORAGE_KEY,\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: true,\r\n    headers: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS,\r\n    flowType: 'implicit',\r\n    debug: false,\r\n    hasCustomAuthorizationHeader: false,\r\n};\r\nasync function lockNoOp(name, acquireTimeout, fn) {\r\n    return await fn();\r\n}\r\nclass GoTrueClient {\r\n    /**\r\n     * Create a new client for use in the browser.\r\n     */\r\n    constructor(options) {\r\n        var _a, _b;\r\n        this.memoryStorage = null;\r\n        this.stateChangeEmitters = new Map();\r\n        this.autoRefreshTicker = null;\r\n        this.visibilityChangedCallback = null;\r\n        this.refreshingDeferred = null;\r\n        /**\r\n         * Keeps track of the async client initialization.\r\n         * When null or not yet resolved the auth state is `unknown`\r\n         * Once resolved the the auth state is known and it's save to call any further client methods.\r\n         * Keep extra care to never reject or throw uncaught errors\r\n         */\r\n        this.initializePromise = null;\r\n        this.detectSessionInUrl = true;\r\n        this.hasCustomAuthorizationHeader = false;\r\n        this.suppressGetSessionWarning = false;\r\n        this.lockAcquired = false;\r\n        this.pendingInLock = [];\r\n        /**\r\n         * Used to broadcast state change events to other tabs listening.\r\n         */\r\n        this.broadcastChannel = null;\r\n        this.logger = console.log;\r\n        this.instanceID = GoTrueClient.nextInstanceID;\r\n        GoTrueClient.nextInstanceID += 1;\r\n        if (this.instanceID > 0 && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) {\r\n            console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\r\n        }\r\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\r\n        this.logDebugMessages = !!settings.debug;\r\n        if (typeof settings.debug === 'function') {\r\n            this.logger = settings.debug;\r\n        }\r\n        this.persistSession = settings.persistSession;\r\n        this.storageKey = settings.storageKey;\r\n        this.autoRefreshToken = settings.autoRefreshToken;\r\n        this.admin = new _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            url: settings.url,\r\n            headers: settings.headers,\r\n            fetch: settings.fetch,\r\n        });\r\n        this.url = settings.url;\r\n        this.headers = settings.headers;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.resolveFetch)(settings.fetch);\r\n        this.lock = settings.lock || lockNoOp;\r\n        this.detectSessionInUrl = settings.detectSessionInUrl;\r\n        this.flowType = settings.flowType;\r\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\r\n        if (settings.lock) {\r\n            this.lock = settings.lock;\r\n        }\r\n        else if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\r\n            this.lock = _lib_locks__WEBPACK_IMPORTED_MODULE_8__.navigatorLock;\r\n        }\r\n        else {\r\n            this.lock = lockNoOp;\r\n        }\r\n        this.jwks = { keys: [] };\r\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\r\n        this.mfa = {\r\n            verify: this._verify.bind(this),\r\n            enroll: this._enroll.bind(this),\r\n            unenroll: this._unenroll.bind(this),\r\n            challenge: this._challenge.bind(this),\r\n            listFactors: this._listFactors.bind(this),\r\n            challengeAndVerify: this._challengeAndVerify.bind(this),\r\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\r\n        };\r\n        if (this.persistSession) {\r\n            if (settings.storage) {\r\n                this.storage = settings.storage;\r\n            }\r\n            else {\r\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.supportsLocalStorage)()) {\r\n                    this.storage = _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.localStorageAdapter;\r\n                }\r\n                else {\r\n                    this.memoryStorage = {};\r\n                    this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.memoryStorage = {};\r\n            this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\r\n        }\r\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\r\n            try {\r\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\r\n            }\r\n            catch (e) {\r\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\r\n            }\r\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async (event) => {\r\n                this._debug('received broadcast notification from other tab or client', event);\r\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\r\n            });\r\n        }\r\n        this.initialize();\r\n    }\r\n    _debug(...args) {\r\n        if (this.logDebugMessages) {\r\n            this.logger(`GoTrueClient@${this.instanceID} (${_lib_version__WEBPACK_IMPORTED_MODULE_7__.version}) ${new Date().toISOString()}`, ...args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Initializes the client session either from the url or from storage.\r\n     * This method is automatically called when instantiating the client, but should also be called\r\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\r\n     */\r\n    async initialize() {\r\n        if (this.initializePromise) {\r\n            return await this.initializePromise;\r\n        }\r\n        this.initializePromise = (async () => {\r\n            return await this._acquireLock(-1, async () => {\r\n                return await this._initialize();\r\n            });\r\n        })();\r\n        return await this.initializePromise;\r\n    }\r\n    /**\r\n     * IMPORTANT:\r\n     * 1. Never throw in this method, as it is called from the constructor\r\n     * 2. Never return a session from this method as it would be cached over\r\n     *    the whole lifetime of the client\r\n     */\r\n    async _initialize() {\r\n        var _a;\r\n        try {\r\n            const params = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.parseParametersFromURL)(window.location.href);\r\n            let callbackUrlType = 'none';\r\n            if (this._isImplicitGrantCallback(params)) {\r\n                callbackUrlType = 'implicit';\r\n            }\r\n            else if (await this._isPKCECallback(params)) {\r\n                callbackUrlType = 'pkce';\r\n            }\r\n            /**\r\n             * Attempt to get the session from the URL only if these conditions are fulfilled\r\n             *\r\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\r\n             * then there could be an existing session so we don't want to prematurely remove it\r\n             */\r\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\r\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\r\n                if (error) {\r\n                    this._debug('#_initialize()', 'error detecting session from URL', error);\r\n                    if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthImplicitGrantRedirectError)(error)) {\r\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\r\n                        if (errorCode === 'identity_already_exists' ||\r\n                            errorCode === 'identity_not_found' ||\r\n                            errorCode === 'single_identity_not_deletable') {\r\n                            return { error };\r\n                        }\r\n                    }\r\n                    // failed login attempt via url,\r\n                    // remove old session as in verifyOtp, signUp and signInWith*\r\n                    await this._removeSession();\r\n                    return { error };\r\n                }\r\n                const { session, redirectType } = data;\r\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\r\n                await this._saveSession(session);\r\n                setTimeout(async () => {\r\n                    if (redirectType === 'recovery') {\r\n                        await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\r\n                    }\r\n                    else {\r\n                        await this._notifyAllSubscribers('SIGNED_IN', session);\r\n                    }\r\n                }, 0);\r\n                return { error: null };\r\n            }\r\n            // no login attempt via callback url try to recover session from storage\r\n            await this._recoverAndRefresh();\r\n            return { error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { error };\r\n            }\r\n            return {\r\n                error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError('Unexpected error during initialization', error),\r\n            };\r\n        }\r\n        finally {\r\n            await this._handleVisibilityChange();\r\n            this._debug('#_initialize()', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new anonymous user.\r\n     *\r\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\r\n     */\r\n    async signInAnonymously(credentials) {\r\n        var _a, _b, _c;\r\n        try {\r\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\r\n                    gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken },\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            const { data, error } = res;\r\n            if (error || !data) {\r\n                return { data: { user: null, session: null }, error: error };\r\n            }\r\n            const session = data.session;\r\n            const user = data.user;\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', session);\r\n            }\r\n            return { data: { user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new user.\r\n     *\r\n     * Be aware that if a user account exists in the system you may get back an\r\n     * error message that attempts to hide this information from the user.\r\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\r\n     *\r\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\r\n     * @returns A user if the server has \"autoconfirm\" OFF\r\n     */\r\n    async signUp(credentials) {\r\n        var _a, _b, _c;\r\n        try {\r\n            let res;\r\n            if ('email' in credentials) {\r\n                const { email, password, options } = credentials;\r\n                let codeChallenge = null;\r\n                let codeChallengeMethod = null;\r\n                if (this.flowType === 'pkce') {\r\n                    ;\r\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n                }\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                    headers: this.headers,\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                    body: {\r\n                        email,\r\n                        password,\r\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        code_challenge: codeChallenge,\r\n                        code_challenge_method: codeChallengeMethod,\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n            }\r\n            else if ('phone' in credentials) {\r\n                const { phone, password, options } = credentials;\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        password,\r\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\r\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n            }\r\n            else {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\r\n            }\r\n            const { data, error } = res;\r\n            if (error || !data) {\r\n                return { data: { user: null, session: null }, error: error };\r\n            }\r\n            const session = data.session;\r\n            const user = data.user;\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', session);\r\n            }\r\n            return { data: { user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in an existing user with an email and password or phone and password.\r\n     *\r\n     * Be aware that you may get back an error message that will not distinguish\r\n     * between the cases where the account does not exist or that the\r\n     * email/phone and password combination is wrong or that the account can only\r\n     * be accessed via social login.\r\n     */\r\n    async signInWithPassword(credentials) {\r\n        try {\r\n            let res;\r\n            if ('email' in credentials) {\r\n                const { email, password, options } = credentials;\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        email,\r\n                        password,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword,\r\n                });\r\n            }\r\n            else if ('phone' in credentials) {\r\n                const { phone, password, options } = credentials;\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        password,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword,\r\n                });\r\n            }\r\n            else {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\r\n            }\r\n            const { data, error } = res;\r\n            if (error) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            else if (!data || !data.session || !data.user) {\r\n                return { data: { user: null, session: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError() };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return {\r\n                data: Object.assign({ user: data.user, session: data.session }, (data.weak_password ? { weakPassword: data.weak_password } : null)),\r\n                error,\r\n            };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in an existing user via a third-party provider.\r\n     * This method supports the PKCE flow.\r\n     */\r\n    async signInWithOAuth(credentials) {\r\n        var _a, _b, _c, _d;\r\n        return await this._handleProviderSignIn(credentials.provider, {\r\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\r\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\r\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\r\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\r\n        });\r\n    }\r\n    /**\r\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\r\n     */\r\n    async exchangeCodeForSession(authCode) {\r\n        await this.initializePromise;\r\n        return this._acquireLock(-1, async () => {\r\n            return this._exchangeCodeForSession(authCode);\r\n        });\r\n    }\r\n    /**\r\n     * Signs in a user by verifying a message signed by the user's private key.\r\n     * Only Solana supported at this time, using the Sign in with Solana standard.\r\n     */\r\n    async signInWithWeb3(credentials) {\r\n        const { chain } = credentials;\r\n        if (chain === 'solana') {\r\n            return await this.signInWithSolana(credentials);\r\n        }\r\n        throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\r\n    }\r\n    async signInWithSolana(credentials) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n        let message;\r\n        let signature;\r\n        if ('message' in credentials) {\r\n            message = credentials.message;\r\n            signature = credentials.signature;\r\n        }\r\n        else {\r\n            const { chain, wallet, statement, options } = credentials;\r\n            let resolvedWallet;\r\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) {\r\n                if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\r\n                    throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\r\n                }\r\n                resolvedWallet = wallet;\r\n            }\r\n            else if (typeof wallet === 'object') {\r\n                resolvedWallet = wallet;\r\n            }\r\n            else {\r\n                const windowAny = window;\r\n                if ('solana' in windowAny &&\r\n                    typeof windowAny.solana === 'object' &&\r\n                    (('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function') ||\r\n                        ('signMessage' in windowAny.solana &&\r\n                            typeof windowAny.solana.signMessage === 'function'))) {\r\n                    resolvedWallet = windowAny.solana;\r\n                }\r\n                else {\r\n                    throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\r\n                }\r\n            }\r\n            const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\r\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\r\n                const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({ issuedAt: new Date().toISOString() }, options === null || options === void 0 ? void 0 : options.signInWithSolana), { \r\n                    // non-overridable properties\r\n                    version: '1', domain: url.host, uri: url.href }), (statement ? { statement } : null)));\r\n                let outputToProcess;\r\n                if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\r\n                    outputToProcess = output[0];\r\n                }\r\n                else if (output &&\r\n                    typeof output === 'object' &&\r\n                    'signedMessage' in output &&\r\n                    'signature' in output) {\r\n                    outputToProcess = output;\r\n                }\r\n                else {\r\n                    throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\r\n                }\r\n                if ('signedMessage' in outputToProcess &&\r\n                    'signature' in outputToProcess &&\r\n                    (typeof outputToProcess.signedMessage === 'string' ||\r\n                        outputToProcess.signedMessage instanceof Uint8Array) &&\r\n                    outputToProcess.signature instanceof Uint8Array) {\r\n                    message =\r\n                        typeof outputToProcess.signedMessage === 'string'\r\n                            ? outputToProcess.signedMessage\r\n                            : new TextDecoder().decode(outputToProcess.signedMessage);\r\n                    signature = outputToProcess.signature;\r\n                }\r\n                else {\r\n                    throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\r\n                }\r\n            }\r\n            else {\r\n                if (!('signMessage' in resolvedWallet) ||\r\n                    typeof resolvedWallet.signMessage !== 'function' ||\r\n                    !('publicKey' in resolvedWallet) ||\r\n                    typeof resolvedWallet !== 'object' ||\r\n                    !resolvedWallet.publicKey ||\r\n                    !('toBase58' in resolvedWallet.publicKey) ||\r\n                    typeof resolvedWallet.publicKey.toBase58 !== 'function') {\r\n                    throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\r\n                }\r\n                message = [\r\n                    `${url.host} wants you to sign in with your Solana account:`,\r\n                    resolvedWallet.publicKey.toBase58(),\r\n                    ...(statement ? ['', statement, ''] : ['']),\r\n                    'Version: 1',\r\n                    `URI: ${url.href}`,\r\n                    `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`,\r\n                    ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore)\r\n                        ? [`Not Before: ${options.signInWithSolana.notBefore}`]\r\n                        : []),\r\n                    ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime)\r\n                        ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`]\r\n                        : []),\r\n                    ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId)\r\n                        ? [`Chain ID: ${options.signInWithSolana.chainId}`]\r\n                        : []),\r\n                    ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []),\r\n                    ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId)\r\n                        ? [`Request ID: ${options.signInWithSolana.requestId}`]\r\n                        : []),\r\n                    ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length)\r\n                        ? [\r\n                            'Resources',\r\n                            ...options.signInWithSolana.resources.map((resource) => `- ${resource}`),\r\n                        ]\r\n                        : []),\r\n                ].join('\\n');\r\n                const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\r\n                if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\r\n                    throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\r\n                }\r\n                signature = maybeSignature;\r\n            }\r\n        }\r\n        try {\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\r\n                headers: this.headers,\r\n                body: Object.assign({ chain: 'solana', message, signature: (0,_lib_base64url__WEBPACK_IMPORTED_MODULE_9__.bytesToBase64URL)(signature) }, (((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken)\r\n                    ? { gotrue_meta_security: { captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken } }\r\n                    : null)),\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            if (!data || !data.session || !data.user) {\r\n                return {\r\n                    data: { user: null, session: null },\r\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\r\n                };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return { data: Object.assign({}, data), error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _exchangeCodeForSession(authCode) {\r\n        const storageItem = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\r\n        try {\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    auth_code: authCode,\r\n                    code_verifier: codeVerifier,\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            if (!data || !data.session || !data.user) {\r\n                return {\r\n                    data: { user: null, session: null, redirectType: null },\r\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\r\n                };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null, redirectType: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Allows signing in with an OIDC ID token. The authentication provider used\r\n     * should be enabled and configured.\r\n     */\r\n    async signInWithIdToken(credentials) {\r\n        try {\r\n            const { options, provider, token, access_token, nonce } = credentials;\r\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    provider,\r\n                    id_token: token,\r\n                    access_token,\r\n                    nonce,\r\n                    gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            const { data, error } = res;\r\n            if (error) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            else if (!data || !data.session || !data.user) {\r\n                return {\r\n                    data: { user: null, session: null },\r\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\r\n                };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return { data, error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in a user using magiclink or a one-time password (OTP).\r\n     *\r\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\r\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\r\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\r\n     *\r\n     * Be aware that you may get back an error message that will not distinguish\r\n     * between the cases where the account does not exist or, that the account\r\n     * can only be accessed via social login.\r\n     *\r\n     * Do note that you will need to configure a Whatsapp sender on Twilio\r\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\r\n     * channel is not supported on other providers\r\n     * at this time.\r\n     * This method supports PKCE when an email is passed.\r\n     */\r\n    async signInWithOtp(credentials) {\r\n        var _a, _b, _c, _d, _e;\r\n        try {\r\n            if ('email' in credentials) {\r\n                const { email, options } = credentials;\r\n                let codeChallenge = null;\r\n                let codeChallengeMethod = null;\r\n                if (this.flowType === 'pkce') {\r\n                    ;\r\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n                }\r\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        email,\r\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\r\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        code_challenge: codeChallenge,\r\n                        code_challenge_method: codeChallengeMethod,\r\n                    },\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                });\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            if ('phone' in credentials) {\r\n                const { phone, options } = credentials;\r\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\r\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\r\n                    },\r\n                });\r\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\r\n            }\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number.');\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\r\n     */\r\n    async verifyOtp(params) {\r\n        var _a, _b;\r\n        try {\r\n            let redirectTo = undefined;\r\n            let captchaToken = undefined;\r\n            if ('options' in params) {\r\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\r\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\r\n            }\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/verify`, {\r\n                headers: this.headers,\r\n                body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),\r\n                redirectTo,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            if (!data) {\r\n                throw new Error('An error occurred on token verification.');\r\n            }\r\n            const session = data.session;\r\n            const user = data.user;\r\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\r\n                await this._saveSession(session);\r\n                await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\r\n            }\r\n            return { data: { user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Attempts a single-sign on using an enterprise Identity Provider. A\r\n     * successful SSO attempt will redirect the current page to the identity\r\n     * provider authorization page. The redirect URL is implementation and SSO\r\n     * protocol specific.\r\n     *\r\n     * You can use it by providing a SSO domain. Typically you can extract this\r\n     * domain by asking users for their email address. If this domain is\r\n     * registered on the Auth instance the redirect will use that organization's\r\n     * currently active SSO Identity Provider for the login.\r\n     *\r\n     * If you have built an organization-specific login page, you can use the\r\n     * organization's SSO Identity Provider UUID directly instead.\r\n     */\r\n    async signInWithSSO(params) {\r\n        var _a, _b, _c;\r\n        try {\r\n            let codeChallenge = null;\r\n            let codeChallengeMethod = null;\r\n            if (this.flowType === 'pkce') {\r\n                ;\r\n                [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n            }\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/sso`, {\r\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\r\n                    ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\r\n                    : null)), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._ssoResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Sends a reauthentication OTP to the user's email or phone number.\r\n     * Requires the user to be signed-in.\r\n     */\r\n    async reauthenticate() {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._reauthenticate();\r\n        });\r\n    }\r\n    async _reauthenticate() {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                const { data: { session }, error: sessionError, } = result;\r\n                if (sessionError)\r\n                    throw sessionError;\r\n                if (!session)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\r\n                    headers: this.headers,\r\n                    jwt: session.access_token,\r\n                });\r\n                return { data: { user: null, session: null }, error };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\r\n     */\r\n    async resend(credentials) {\r\n        try {\r\n            const endpoint = `${this.url}/resend`;\r\n            if ('email' in credentials) {\r\n                const { email, type, options } = credentials;\r\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        email,\r\n                        type,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                });\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            else if ('phone' in credentials) {\r\n                const { phone, type, options } = credentials;\r\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        type,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                });\r\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\r\n            }\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the session, refreshing it if necessary.\r\n     *\r\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\r\n     *\r\n     * **IMPORTANT:** This method loads values directly from the storage attached\r\n     * to the client. If that storage is based on request cookies for example,\r\n     * the values in it may not be authentic and therefore it's strongly advised\r\n     * against using this method and its results in such circumstances. A warning\r\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\r\n     */\r\n    async getSession() {\r\n        await this.initializePromise;\r\n        const result = await this._acquireLock(-1, async () => {\r\n            return this._useSession(async (result) => {\r\n                return result;\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Acquires a global lock based on the storage key.\r\n     */\r\n    async _acquireLock(acquireTimeout, fn) {\r\n        this._debug('#_acquireLock', 'begin', acquireTimeout);\r\n        try {\r\n            if (this.lockAcquired) {\r\n                const last = this.pendingInLock.length\r\n                    ? this.pendingInLock[this.pendingInLock.length - 1]\r\n                    : Promise.resolve();\r\n                const result = (async () => {\r\n                    await last;\r\n                    return await fn();\r\n                })();\r\n                this.pendingInLock.push((async () => {\r\n                    try {\r\n                        await result;\r\n                    }\r\n                    catch (e) {\r\n                        // we just care if it finished\r\n                    }\r\n                })());\r\n                return result;\r\n            }\r\n            return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\r\n                this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\r\n                try {\r\n                    this.lockAcquired = true;\r\n                    const result = fn();\r\n                    this.pendingInLock.push((async () => {\r\n                        try {\r\n                            await result;\r\n                        }\r\n                        catch (e) {\r\n                            // we just care if it finished\r\n                        }\r\n                    })());\r\n                    await result;\r\n                    // keep draining the queue until there's nothing to wait on\r\n                    while (this.pendingInLock.length) {\r\n                        const waitOn = [...this.pendingInLock];\r\n                        await Promise.all(waitOn);\r\n                        this.pendingInLock.splice(0, waitOn.length);\r\n                    }\r\n                    return await result;\r\n                }\r\n                finally {\r\n                    this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\r\n                    this.lockAcquired = false;\r\n                }\r\n            });\r\n        }\r\n        finally {\r\n            this._debug('#_acquireLock', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * Use instead of {@link #getSession} inside the library. It is\r\n     * semantically usually what you want, as getting a session involves some\r\n     * processing afterwards that requires only one client operating on the\r\n     * session at once across multiple tabs or processes.\r\n     */\r\n    async _useSession(fn) {\r\n        this._debug('#_useSession', 'begin');\r\n        try {\r\n            // the use of __loadSession here is the only correct use of the function!\r\n            const result = await this.__loadSession();\r\n            return await fn(result);\r\n        }\r\n        finally {\r\n            this._debug('#_useSession', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * NEVER USE DIRECTLY!\r\n     *\r\n     * Always use {@link #_useSession}.\r\n     */\r\n    async __loadSession() {\r\n        this._debug('#__loadSession()', 'begin');\r\n        if (!this.lockAcquired) {\r\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\r\n        }\r\n        try {\r\n            let currentSession = null;\r\n            const maybeSession = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\r\n            this._debug('#getSession()', 'session from storage', maybeSession);\r\n            if (maybeSession !== null) {\r\n                if (this._isValidSession(maybeSession)) {\r\n                    currentSession = maybeSession;\r\n                }\r\n                else {\r\n                    this._debug('#getSession()', 'session from storage is not valid');\r\n                    await this._removeSession();\r\n                }\r\n            }\r\n            if (!currentSession) {\r\n                return { data: { session: null }, error: null };\r\n            }\r\n            // A session is considered expired before the access token _actually_\r\n            // expires. When the autoRefreshToken option is off (or when the tab is\r\n            // in the background), very eager users of getSession() -- like\r\n            // realtime-js -- might send a valid JWT which will expire by the time it\r\n            // reaches the server.\r\n            const hasExpired = currentSession.expires_at\r\n                ? currentSession.expires_at * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS\r\n                : false;\r\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\r\n            if (!hasExpired) {\r\n                if (this.storage.isServer) {\r\n                    let suppressWarning = this.suppressGetSessionWarning;\r\n                    const proxySession = new Proxy(currentSession, {\r\n                        get: (target, prop, receiver) => {\r\n                            if (!suppressWarning && prop === 'user') {\r\n                                // only show warning when the user object is being accessed from the server\r\n                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\r\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\r\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\r\n                            }\r\n                            return Reflect.get(target, prop, receiver);\r\n                        },\r\n                    });\r\n                    currentSession = proxySession;\r\n                }\r\n                return { data: { session: currentSession }, error: null };\r\n            }\r\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\r\n            if (error) {\r\n                return { data: { session: null }, error };\r\n            }\r\n            return { data: { session }, error: null };\r\n        }\r\n        finally {\r\n            this._debug('#__loadSession()', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * Gets the current user details if there is an existing session. This method\r\n     * performs a network request to the Supabase Auth server, so the returned\r\n     * value is authentic and can be used to base authorization rules on.\r\n     *\r\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\r\n     */\r\n    async getUser(jwt) {\r\n        if (jwt) {\r\n            return await this._getUser(jwt);\r\n        }\r\n        await this.initializePromise;\r\n        const result = await this._acquireLock(-1, async () => {\r\n            return await this._getUser();\r\n        });\r\n        return result;\r\n    }\r\n    async _getUser(jwt) {\r\n        try {\r\n            if (jwt) {\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    jwt: jwt,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n            }\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b, _c;\r\n                const { data, error } = result;\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                // returns an error if there is no access_token or custom authorization header\r\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\r\n                    return { data: { user: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError() };\r\n                }\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthSessionMissingError)(error)) {\r\n                    // JWT contains a `session_id` which does not correspond to an active\r\n                    // session in the database, indicating the user is signed out.\r\n                    await this._removeSession();\r\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n                }\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Updates user data for a logged in user.\r\n     */\r\n    async updateUser(attributes, options = {}) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._updateUser(attributes, options);\r\n        });\r\n    }\r\n    async _updateUser(attributes, options = {}) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                const { data: sessionData, error: sessionError } = result;\r\n                if (sessionError) {\r\n                    throw sessionError;\r\n                }\r\n                if (!sessionData.session) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const session = sessionData.session;\r\n                let codeChallenge = null;\r\n                let codeChallengeMethod = null;\r\n                if (this.flowType === 'pkce' && attributes.email != null) {\r\n                    ;\r\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n                }\r\n                const { data, error: userError } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'PUT', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                    body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\r\n                    jwt: session.access_token,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n                if (userError)\r\n                    throw userError;\r\n                session.user = data.user;\r\n                await this._saveSession(session);\r\n                await this._notifyAllSubscribers('USER_UPDATED', session);\r\n                return { data: { user: session.user }, error: null };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\r\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\r\n     * @param currentSession The current session that minimally contains an access token and refresh token.\r\n     */\r\n    async setSession(currentSession) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._setSession(currentSession);\r\n        });\r\n    }\r\n    async _setSession(currentSession) {\r\n        try {\r\n            if (!currentSession.access_token || !currentSession.refresh_token) {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n            }\r\n            const timeNow = Date.now() / 1000;\r\n            let expiresAt = timeNow;\r\n            let hasExpired = true;\r\n            let session = null;\r\n            const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(currentSession.access_token);\r\n            if (payload.exp) {\r\n                expiresAt = payload.exp;\r\n                hasExpired = expiresAt <= timeNow;\r\n            }\r\n            if (hasExpired) {\r\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\r\n                if (error) {\r\n                    return { data: { user: null, session: null }, error: error };\r\n                }\r\n                if (!refreshedSession) {\r\n                    return { data: { user: null, session: null }, error: null };\r\n                }\r\n                session = refreshedSession;\r\n            }\r\n            else {\r\n                const { data, error } = await this._getUser(currentSession.access_token);\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                session = {\r\n                    access_token: currentSession.access_token,\r\n                    refresh_token: currentSession.refresh_token,\r\n                    user: data.user,\r\n                    token_type: 'bearer',\r\n                    expires_in: expiresAt - timeNow,\r\n                    expires_at: expiresAt,\r\n                };\r\n                await this._saveSession(session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', session);\r\n            }\r\n            return { data: { user: session.user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { session: null, user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new session, regardless of expiry status.\r\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\r\n     * If the current session's refresh token is invalid, an error will be thrown.\r\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\r\n     */\r\n    async refreshSession(currentSession) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._refreshSession(currentSession);\r\n        });\r\n    }\r\n    async _refreshSession(currentSession) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a;\r\n                if (!currentSession) {\r\n                    const { data, error } = result;\r\n                    if (error) {\r\n                        throw error;\r\n                    }\r\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\r\n                }\r\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\r\n                if (error) {\r\n                    return { data: { user: null, session: null }, error: error };\r\n                }\r\n                if (!session) {\r\n                    return { data: { user: null, session: null }, error: null };\r\n                }\r\n                return { data: { user: session.user, session }, error: null };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the session data from a URL string\r\n     */\r\n    async _getSessionFromURL(params, callbackUrlType) {\r\n        try {\r\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)())\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No browser detected.');\r\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\r\n            if (params.error || params.error_description || params.error_code) {\r\n                // The error class returned implies that the redirect is from an implicit grant flow\r\n                // but it could also be from a redirect error from a PKCE flow.\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\r\n                    error: params.error || 'unspecified_error',\r\n                    code: params.error_code || 'unspecified_code',\r\n                });\r\n            }\r\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\r\n            switch (callbackUrlType) {\r\n                case 'implicit':\r\n                    if (this.flowType === 'pkce') {\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\r\n                    }\r\n                    break;\r\n                case 'pkce':\r\n                    if (this.flowType === 'implicit') {\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\r\n                    }\r\n                    break;\r\n                default:\r\n                // there's no mismatch so we continue\r\n            }\r\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\r\n            if (callbackUrlType === 'pkce') {\r\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\r\n                if (!params.code)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('No code detected.');\r\n                const { data, error } = await this._exchangeCodeForSession(params.code);\r\n                if (error)\r\n                    throw error;\r\n                const url = new URL(window.location.href);\r\n                url.searchParams.delete('code');\r\n                window.history.replaceState(window.history.state, '', url.toString());\r\n                return { data: { session: data.session, redirectType: null }, error: null };\r\n            }\r\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, } = params;\r\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No session defined in URL');\r\n            }\r\n            const timeNow = Math.round(Date.now() / 1000);\r\n            const expiresIn = parseInt(expires_in);\r\n            let expiresAt = timeNow + expiresIn;\r\n            if (expires_at) {\r\n                expiresAt = parseInt(expires_at);\r\n            }\r\n            const actuallyExpiresIn = expiresAt - timeNow;\r\n            if (actuallyExpiresIn * 1000 <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS) {\r\n                console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\r\n            }\r\n            const issuedAt = expiresAt - expiresIn;\r\n            if (timeNow - issuedAt >= 120) {\r\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\r\n            }\r\n            else if (timeNow - issuedAt < 0) {\r\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\r\n            }\r\n            const { data, error } = await this._getUser(access_token);\r\n            if (error)\r\n                throw error;\r\n            const session = {\r\n                provider_token,\r\n                provider_refresh_token,\r\n                access_token,\r\n                expires_in: expiresIn,\r\n                expires_at: expiresAt,\r\n                refresh_token,\r\n                token_type,\r\n                user: data.user,\r\n            };\r\n            // Remove tokens from URL\r\n            window.location.hash = '';\r\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\r\n            return { data: { session, redirectType: params.type }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { session: null, redirectType: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\r\n     */\r\n    _isImplicitGrantCallback(params) {\r\n        return Boolean(params.access_token || params.error_description);\r\n    }\r\n    /**\r\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\r\n     */\r\n    async _isPKCECallback(params) {\r\n        const currentStorageContent = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n        return !!(params.code && currentStorageContent);\r\n    }\r\n    /**\r\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\r\n     *\r\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\r\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\r\n     *\r\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\r\n     */\r\n    async signOut(options = { scope: 'global' }) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._signOut(options);\r\n        });\r\n    }\r\n    async _signOut({ scope } = { scope: 'global' }) {\r\n        return await this._useSession(async (result) => {\r\n            var _a;\r\n            const { data, error: sessionError } = result;\r\n            if (sessionError) {\r\n                return { error: sessionError };\r\n            }\r\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\r\n            if (accessToken) {\r\n                const { error } = await this.admin.signOut(accessToken, scope);\r\n                if (error) {\r\n                    // ignore 404s since user might not exist anymore\r\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\r\n                    if (!((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthApiError)(error) &&\r\n                        (error.status === 404 || error.status === 401 || error.status === 403))) {\r\n                        return { error };\r\n                    }\r\n                }\r\n            }\r\n            if (scope !== 'others') {\r\n                await this._removeSession();\r\n                await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            }\r\n            return { error: null };\r\n        });\r\n    }\r\n    /**\r\n     * Receive a notification every time an auth event happens.\r\n     * @param callback A callback function to be invoked when an auth event happens.\r\n     */\r\n    onAuthStateChange(callback) {\r\n        const id = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.uuid)();\r\n        const subscription = {\r\n            id,\r\n            callback,\r\n            unsubscribe: () => {\r\n                this._debug('#unsubscribe()', 'state change callback with id removed', id);\r\n                this.stateChangeEmitters.delete(id);\r\n            },\r\n        };\r\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\r\n        this.stateChangeEmitters.set(id, subscription);\r\n        (async () => {\r\n            await this.initializePromise;\r\n            await this._acquireLock(-1, async () => {\r\n                this._emitInitialSession(id);\r\n            });\r\n        })();\r\n        return { data: { subscription } };\r\n    }\r\n    async _emitInitialSession(id) {\r\n        return await this._useSession(async (result) => {\r\n            var _a, _b;\r\n            try {\r\n                const { data: { session }, error, } = result;\r\n                if (error)\r\n                    throw error;\r\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\r\n                this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\r\n            }\r\n            catch (err) {\r\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\r\n                this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\r\n                console.error(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\r\n     *\r\n     * @param email The email address of the user.\r\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\r\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\r\n     */\r\n    async resetPasswordForEmail(email, options = {}) {\r\n        let codeChallenge = null;\r\n        let codeChallengeMethod = null;\r\n        if (this.flowType === 'pkce') {\r\n            ;\r\n            [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\r\n            );\r\n        }\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/recover`, {\r\n                body: {\r\n                    email,\r\n                    code_challenge: codeChallenge,\r\n                    code_challenge_method: codeChallengeMethod,\r\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\r\n                },\r\n                headers: this.headers,\r\n                redirectTo: options.redirectTo,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Gets all the identities linked to a user.\r\n     */\r\n    async getUserIdentities() {\r\n        var _a;\r\n        try {\r\n            const { data, error } = await this.getUser();\r\n            if (error)\r\n                throw error;\r\n            return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Links an oauth identity to an existing user.\r\n     * This method supports the PKCE flow.\r\n     */\r\n    async linkIdentity(credentials) {\r\n        var _a;\r\n        try {\r\n            const { data, error } = await this._useSession(async (result) => {\r\n                var _a, _b, _c, _d, _e;\r\n                const { data, error } = result;\r\n                if (error)\r\n                    throw error;\r\n                const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\r\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\r\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\r\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\r\n                    skipBrowserRedirect: true,\r\n                });\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', url, {\r\n                    headers: this.headers,\r\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined,\r\n                });\r\n            });\r\n            if (error)\r\n                throw error;\r\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\r\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\r\n            }\r\n            return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { provider: credentials.provider, url: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\r\n     */\r\n    async unlinkIdentity(identity) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b;\r\n                const { data, error } = result;\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\r\n                    headers: this.headers,\r\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\r\n                });\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Generates a new JWT.\r\n     * @param refreshToken A valid refresh token that was returned on login.\r\n     */\r\n    async _refreshAccessToken(refreshToken) {\r\n        const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\r\n        this._debug(debugName, 'begin');\r\n        try {\r\n            const startedAt = Date.now();\r\n            // will attempt to refresh the token with exponential backoff\r\n            return await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.retryable)(async (attempt) => {\r\n                if (attempt > 0) {\r\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\r\n                }\r\n                this._debug(debugName, 'refreshing attempt', attempt);\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\r\n                    body: { refresh_token: refreshToken },\r\n                    headers: this.headers,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n            }, (attempt, error) => {\r\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\r\n                return (error &&\r\n                    (0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error) &&\r\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\r\n                    Date.now() + nextBackOffInterval - startedAt < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\r\n            });\r\n        }\r\n        catch (error) {\r\n            this._debug(debugName, 'error', error);\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { session: null, user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n        finally {\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    _isValidSession(maybeSession) {\r\n        const isValidSession = typeof maybeSession === 'object' &&\r\n            maybeSession !== null &&\r\n            'access_token' in maybeSession &&\r\n            'refresh_token' in maybeSession &&\r\n            'expires_at' in maybeSession;\r\n        return isValidSession;\r\n    }\r\n    async _handleProviderSignIn(provider, options) {\r\n        const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\r\n            redirectTo: options.redirectTo,\r\n            scopes: options.scopes,\r\n            queryParams: options.queryParams,\r\n        });\r\n        this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\r\n        // try to open on the browser\r\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !options.skipBrowserRedirect) {\r\n            window.location.assign(url);\r\n        }\r\n        return { data: { provider, url }, error: null };\r\n    }\r\n    /**\r\n     * Recovers the session from LocalStorage and refreshes the token\r\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\r\n     */\r\n    async _recoverAndRefresh() {\r\n        var _a;\r\n        const debugName = '#_recoverAndRefresh()';\r\n        this._debug(debugName, 'begin');\r\n        try {\r\n            const currentSession = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\r\n            this._debug(debugName, 'session from storage', currentSession);\r\n            if (!this._isValidSession(currentSession)) {\r\n                this._debug(debugName, 'session is not valid');\r\n                if (currentSession !== null) {\r\n                    await this._removeSession();\r\n                }\r\n                return;\r\n            }\r\n            const expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS;\r\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS}s`);\r\n            if (expiresWithMargin) {\r\n                if (this.autoRefreshToken && currentSession.refresh_token) {\r\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\r\n                    if (error) {\r\n                        console.error(error);\r\n                        if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\r\n                            this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\r\n                            await this._removeSession();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no need to persist currentSession again, as we just loaded it from\r\n                // local storage; persisting it again may overwrite a value saved by\r\n                // another client with access to the same local storage\r\n                await this._notifyAllSubscribers('SIGNED_IN', currentSession);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this._debug(debugName, 'error', err);\r\n            console.error(err);\r\n            return;\r\n        }\r\n        finally {\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    async _callRefreshToken(refreshToken) {\r\n        var _a, _b;\r\n        if (!refreshToken) {\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n        }\r\n        // refreshing is already in progress\r\n        if (this.refreshingDeferred) {\r\n            return this.refreshingDeferred.promise;\r\n        }\r\n        const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\r\n        this._debug(debugName, 'begin');\r\n        try {\r\n            this.refreshingDeferred = new _lib_helpers__WEBPACK_IMPORTED_MODULE_4__.Deferred();\r\n            const { data, error } = await this._refreshAccessToken(refreshToken);\r\n            if (error)\r\n                throw error;\r\n            if (!data.session)\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n            await this._saveSession(data.session);\r\n            await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\r\n            const result = { session: data.session, error: null };\r\n            this.refreshingDeferred.resolve(result);\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            this._debug(debugName, 'error', error);\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                const result = { session: null, error };\r\n                if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\r\n                    await this._removeSession();\r\n                }\r\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\r\n                return result;\r\n            }\r\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\r\n            throw error;\r\n        }\r\n        finally {\r\n            this.refreshingDeferred = null;\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    async _notifyAllSubscribers(event, session, broadcast = true) {\r\n        const debugName = `#_notifyAllSubscribers(${event})`;\r\n        this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\r\n        try {\r\n            if (this.broadcastChannel && broadcast) {\r\n                this.broadcastChannel.postMessage({ event, session });\r\n            }\r\n            const errors = [];\r\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\r\n                try {\r\n                    await x.callback(event, session);\r\n                }\r\n                catch (e) {\r\n                    errors.push(e);\r\n                }\r\n            });\r\n            await Promise.all(promises);\r\n            if (errors.length > 0) {\r\n                for (let i = 0; i < errors.length; i += 1) {\r\n                    console.error(errors[i]);\r\n                }\r\n                throw errors[0];\r\n            }\r\n        }\r\n        finally {\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    /**\r\n     * set currentSession and currentUser\r\n     * process to _startAutoRefreshToken if possible\r\n     */\r\n    async _saveSession(session) {\r\n        this._debug('#_saveSession()', session);\r\n        // _saveSession is always called whenever a new session has been acquired\r\n        // so we can safely suppress the warning returned by future getSession calls\r\n        this.suppressGetSessionWarning = true;\r\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, this.storageKey, session);\r\n    }\r\n    async _removeSession() {\r\n        this._debug('#_removeSession()');\r\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey);\r\n        await this._notifyAllSubscribers('SIGNED_OUT', null);\r\n    }\r\n    /**\r\n     * Removes any registered visibilitychange callback.\r\n     *\r\n     * {@see #startAutoRefresh}\r\n     * {@see #stopAutoRefresh}\r\n     */\r\n    _removeVisibilityChangedCallback() {\r\n        this._debug('#_removeVisibilityChangedCallback()');\r\n        const callback = this.visibilityChangedCallback;\r\n        this.visibilityChangedCallback = null;\r\n        try {\r\n            if (callback && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\r\n                window.removeEventListener('visibilitychange', callback);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error('removing visibilitychange callback failed', e);\r\n        }\r\n    }\r\n    /**\r\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\r\n     * within the library.\r\n     */\r\n    async _startAutoRefresh() {\r\n        await this._stopAutoRefresh();\r\n        this._debug('#_startAutoRefresh()');\r\n        const ticker = setInterval(() => this._autoRefreshTokenTick(), _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\r\n        this.autoRefreshTicker = ticker;\r\n        if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\r\n            // ticker is a NodeJS Timeout object that has an `unref` method\r\n            // https://nodejs.org/api/timers.html#timeoutunref\r\n            // When auto refresh is used in NodeJS (like for testing) the\r\n            // `setInterval` is preventing the process from being marked as\r\n            // finished and tests run endlessly. This can be prevented by calling\r\n            // `unref()` on the returned object.\r\n            ticker.unref();\r\n            // @ts-expect-error TS has no context of Deno\r\n        }\r\n        else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\r\n            // similar like for NodeJS, but with the Deno API\r\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\r\n            // @ts-expect-error TS has no context of Deno\r\n            Deno.unrefTimer(ticker);\r\n        }\r\n        // run the tick immediately, but in the next pass of the event loop so that\r\n        // #_initialize can be allowed to complete without recursively waiting on\r\n        // itself\r\n        setTimeout(async () => {\r\n            await this.initializePromise;\r\n            await this._autoRefreshTokenTick();\r\n        }, 0);\r\n    }\r\n    /**\r\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\r\n     * within the library.\r\n     */\r\n    async _stopAutoRefresh() {\r\n        this._debug('#_stopAutoRefresh()');\r\n        const ticker = this.autoRefreshTicker;\r\n        this.autoRefreshTicker = null;\r\n        if (ticker) {\r\n            clearInterval(ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Starts an auto-refresh process in the background. The session is checked\r\n     * every few seconds. Close to the time of expiration a process is started to\r\n     * refresh the session. If refreshing fails it will be retried for as long as\r\n     * necessary.\r\n     *\r\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\r\n     * to call this function, it will be called for you.\r\n     *\r\n     * On browsers the refresh process works only when the tab/window is in the\r\n     * foreground to conserve resources as well as prevent race conditions and\r\n     * flooding auth with requests. If you call this method any managed\r\n     * visibility change callback will be removed and you must manage visibility\r\n     * changes on your own.\r\n     *\r\n     * On non-browser platforms the refresh process works *continuously* in the\r\n     * background, which may not be desirable. You should hook into your\r\n     * platform's foreground indication mechanism and call these methods\r\n     * appropriately to conserve resources.\r\n     *\r\n     * {@see #stopAutoRefresh}\r\n     */\r\n    async startAutoRefresh() {\r\n        this._removeVisibilityChangedCallback();\r\n        await this._startAutoRefresh();\r\n    }\r\n    /**\r\n     * Stops an active auto refresh process running in the background (if any).\r\n     *\r\n     * If you call this method any managed visibility change callback will be\r\n     * removed and you must manage visibility changes on your own.\r\n     *\r\n     * See {@link #startAutoRefresh} for more details.\r\n     */\r\n    async stopAutoRefresh() {\r\n        this._removeVisibilityChangedCallback();\r\n        await this._stopAutoRefresh();\r\n    }\r\n    /**\r\n     * Runs the auto refresh token tick.\r\n     */\r\n    async _autoRefreshTokenTick() {\r\n        this._debug('#_autoRefreshTokenTick()', 'begin');\r\n        try {\r\n            await this._acquireLock(0, async () => {\r\n                try {\r\n                    const now = Date.now();\r\n                    try {\r\n                        return await this._useSession(async (result) => {\r\n                            const { data: { session }, } = result;\r\n                            if (!session || !session.refresh_token || !session.expires_at) {\r\n                                this._debug('#_autoRefreshTokenTick()', 'no session');\r\n                                return;\r\n                            }\r\n                            // session will expire in this many ticks (or has already expired if <= 0)\r\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\r\n                            this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\r\n                            if (expiresInTicks <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD) {\r\n                                await this._callRefreshToken(session.refresh_token);\r\n                            }\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\r\n                    }\r\n                }\r\n                finally {\r\n                    this._debug('#_autoRefreshTokenTick()', 'end');\r\n                }\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e.isAcquireTimeout || e instanceof _lib_locks__WEBPACK_IMPORTED_MODULE_8__.LockAcquireTimeoutError) {\r\n                this._debug('auto refresh token tick lock not available');\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Registers callbacks on the browser / platform, which in-turn run\r\n     * algorithms when the browser window/tab are in foreground. On non-browser\r\n     * platforms it assumes always foreground.\r\n     */\r\n    async _handleVisibilityChange() {\r\n        this._debug('#_handleVisibilityChange()');\r\n        if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\r\n            if (this.autoRefreshToken) {\r\n                // in non-browser environments the refresh token ticker runs always\r\n                this.startAutoRefresh();\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\r\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\r\n            // now immediately call the visbility changed callback to setup with the\r\n            // current visbility state\r\n            await this._onVisibilityChanged(true); // initial call\r\n        }\r\n        catch (error) {\r\n            console.error('_handleVisibilityChange', error);\r\n        }\r\n    }\r\n    /**\r\n     * Callback registered with `window.addEventListener('visibilitychange')`.\r\n     */\r\n    async _onVisibilityChanged(calledFromInitialize) {\r\n        const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\r\n        this._debug(methodName, 'visibilityState', document.visibilityState);\r\n        if (document.visibilityState === 'visible') {\r\n            if (this.autoRefreshToken) {\r\n                // in browser environments the refresh token ticker runs only on focused tabs\r\n                // which prevents race conditions\r\n                this._startAutoRefresh();\r\n            }\r\n            if (!calledFromInitialize) {\r\n                // called when the visibility has changed, i.e. the browser\r\n                // transitioned from hidden -> visible so we need to see if the session\r\n                // should be recovered immediately... but to do that we need to acquire\r\n                // the lock first asynchronously\r\n                await this.initializePromise;\r\n                await this._acquireLock(-1, async () => {\r\n                    if (document.visibilityState !== 'visible') {\r\n                        this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\r\n                        // visibility has changed while waiting for the lock, abort\r\n                        return;\r\n                    }\r\n                    // recover the session\r\n                    await this._recoverAndRefresh();\r\n                });\r\n            }\r\n        }\r\n        else if (document.visibilityState === 'hidden') {\r\n            if (this.autoRefreshToken) {\r\n                this._stopAutoRefresh();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Generates the relevant login URL for a third-party provider.\r\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\r\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\r\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\r\n     */\r\n    async _getUrlForProvider(url, provider, options) {\r\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\r\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\r\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\r\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\r\n        }\r\n        if (this.flowType === 'pkce') {\r\n            const [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n            const flowParams = new URLSearchParams({\r\n                code_challenge: `${encodeURIComponent(codeChallenge)}`,\r\n                code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\r\n            });\r\n            urlParams.push(flowParams.toString());\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\r\n            const query = new URLSearchParams(options.queryParams);\r\n            urlParams.push(query.toString());\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\r\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\r\n        }\r\n        return `${url}?${urlParams.join('&')}`;\r\n    }\r\n    async _unenroll(params) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a;\r\n                const { data: sessionData, error: sessionError } = result;\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _enroll(params) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b;\r\n                const { data: sessionData, error: sessionError } = result;\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                const body = Object.assign({ friendly_name: params.friendlyName, factor_type: params.factorType }, (params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }));\r\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors`, {\r\n                    body,\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n                if (error) {\r\n                    return { data: null, error };\r\n                }\r\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\r\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\r\n                }\r\n                return { data, error: null };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#verify}\r\n     */\r\n    async _verify(params) {\r\n        return this._acquireLock(-1, async () => {\r\n            try {\r\n                return await this._useSession(async (result) => {\r\n                    var _a;\r\n                    const { data: sessionData, error: sessionError } = result;\r\n                    if (sessionError) {\r\n                        return { data: null, error: sessionError };\r\n                    }\r\n                    const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\r\n                        body: { code: params.code, challenge_id: params.challengeId },\r\n                        headers: this.headers,\r\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                    });\r\n                    if (error) {\r\n                        return { data: null, error };\r\n                    }\r\n                    await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\r\n                    await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\r\n                    return { data, error };\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#challenge}\r\n     */\r\n    async _challenge(params) {\r\n        return this._acquireLock(-1, async () => {\r\n            try {\r\n                return await this._useSession(async (result) => {\r\n                    var _a;\r\n                    const { data: sessionData, error: sessionError } = result;\r\n                    if (sessionError) {\r\n                        return { data: null, error: sessionError };\r\n                    }\r\n                    return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\r\n                        body: { channel: params.channel },\r\n                        headers: this.headers,\r\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                    });\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#challengeAndVerify}\r\n     */\r\n    async _challengeAndVerify(params) {\r\n        // both _challenge and _verify independently acquire the lock, so no need\r\n        // to acquire it here\r\n        const { data: challengeData, error: challengeError } = await this._challenge({\r\n            factorId: params.factorId,\r\n        });\r\n        if (challengeError) {\r\n            return { data: null, error: challengeError };\r\n        }\r\n        return await this._verify({\r\n            factorId: params.factorId,\r\n            challengeId: challengeData.id,\r\n            code: params.code,\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#listFactors}\r\n     */\r\n    async _listFactors() {\r\n        // use #getUser instead of #_getUser as the former acquires a lock\r\n        const { data: { user }, error: userError, } = await this.getUser();\r\n        if (userError) {\r\n            return { data: null, error: userError };\r\n        }\r\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\r\n        const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\r\n        const phone = factors.filter((factor) => factor.factor_type === 'phone' && factor.status === 'verified');\r\n        return {\r\n            data: {\r\n                all: factors,\r\n                totp,\r\n                phone,\r\n            },\r\n            error: null,\r\n        };\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\r\n     */\r\n    async _getAuthenticatorAssuranceLevel() {\r\n        return this._acquireLock(-1, async () => {\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b;\r\n                const { data: { session }, error: sessionError, } = result;\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                if (!session) {\r\n                    return {\r\n                        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\r\n                        error: null,\r\n                    };\r\n                }\r\n                const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(session.access_token);\r\n                let currentLevel = null;\r\n                if (payload.aal) {\r\n                    currentLevel = payload.aal;\r\n                }\r\n                let nextLevel = currentLevel;\r\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\r\n                if (verifiedFactors.length > 0) {\r\n                    nextLevel = 'aal2';\r\n                }\r\n                const currentAuthenticationMethods = payload.amr || [];\r\n                return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\r\n            });\r\n        });\r\n    }\r\n    async fetchJwk(kid, jwks = { keys: [] }) {\r\n        // try fetching from the supplied jwks\r\n        let jwk = jwks.keys.find((key) => key.kid === kid);\r\n        if (jwk) {\r\n            return jwk;\r\n        }\r\n        // try fetching from cache\r\n        jwk = this.jwks.keys.find((key) => key.kid === kid);\r\n        // jwk exists and jwks isn't stale\r\n        if (jwk && this.jwks_cached_at + _lib_constants__WEBPACK_IMPORTED_MODULE_1__.JWKS_TTL > Date.now()) {\r\n            return jwk;\r\n        }\r\n        // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\r\n        const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\r\n            headers: this.headers,\r\n        });\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        if (!data.keys || data.keys.length === 0) {\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError('JWKS is empty');\r\n        }\r\n        this.jwks = data;\r\n        this.jwks_cached_at = Date.now();\r\n        // Find the signing key\r\n        jwk = data.keys.find((key) => key.kid === kid);\r\n        if (!jwk) {\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError('No matching signing key found in JWKS');\r\n        }\r\n        return jwk;\r\n    }\r\n    /**\r\n     * @experimental This method may change in future versions.\r\n     * @description Gets the claims from a JWT. If the JWT is symmetric JWTs, it will call getUser() to verify against the server. If the JWT is asymmetric, it will be verified against the JWKS using the WebCrypto API.\r\n     */\r\n    async getClaims(jwt, jwks = { keys: [] }) {\r\n        try {\r\n            let token = jwt;\r\n            if (!token) {\r\n                const { data, error } = await this.getSession();\r\n                if (error || !data.session) {\r\n                    return { data: null, error };\r\n                }\r\n                token = data.session.access_token;\r\n            }\r\n            const { header, payload, signature, raw: { header: rawHeader, payload: rawPayload }, } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(token);\r\n            // Reject expired JWTs\r\n            (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.validateExp)(payload.exp);\r\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\r\n            if (!header.kid ||\r\n                header.alg === 'HS256' ||\r\n                !('crypto' in globalThis && 'subtle' in globalThis.crypto)) {\r\n                const { error } = await this.getUser(token);\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                // getUser succeeds so the claims in the JWT can be trusted\r\n                return {\r\n                    data: {\r\n                        claims: payload,\r\n                        header,\r\n                        signature,\r\n                    },\r\n                    error: null,\r\n                };\r\n            }\r\n            const algorithm = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getAlgorithm)(header.alg);\r\n            const signingKey = await this.fetchJwk(header.kid, jwks);\r\n            // Convert JWK to CryptoKey\r\n            const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, [\r\n                'verify',\r\n            ]);\r\n            // Verify the signature\r\n            const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0,_lib_base64url__WEBPACK_IMPORTED_MODULE_9__.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\r\n            if (!isValid) {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError('Invalid JWT signature');\r\n            }\r\n            // If verification succeeds, decode and return claims\r\n            return {\r\n                data: {\r\n                    claims: payload,\r\n                    header,\r\n                    signature,\r\n                },\r\n                error: null,\r\n            };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n}\r\nGoTrueClient.nextInstanceID = 0;\r\n//# sourceMappingURL=GoTrueClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthAdminApi: () => (/* reexport safe */ _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   AuthApiError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthApiError),\n/* harmony export */   AuthClient: () => (/* reexport safe */ _AuthClient__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   AuthError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthError),\n/* harmony export */   AuthImplicitGrantRedirectError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthImplicitGrantRedirectError),\n/* harmony export */   AuthInvalidCredentialsError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidCredentialsError),\n/* harmony export */   AuthInvalidJwtError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidJwtError),\n/* harmony export */   AuthInvalidTokenResponseError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidTokenResponseError),\n/* harmony export */   AuthPKCEGrantCodeExchangeError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthPKCEGrantCodeExchangeError),\n/* harmony export */   AuthRetryableFetchError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthRetryableFetchError),\n/* harmony export */   AuthSessionMissingError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthSessionMissingError),\n/* harmony export */   AuthUnknownError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthUnknownError),\n/* harmony export */   AuthWeakPasswordError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthWeakPasswordError),\n/* harmony export */   CustomAuthError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.CustomAuthError),\n/* harmony export */   GoTrueAdminApi: () => (/* reexport safe */ _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   GoTrueClient: () => (/* reexport safe */ _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   NavigatorLockAcquireTimeoutError: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.NavigatorLockAcquireTimeoutError),\n/* harmony export */   SIGN_OUT_SCOPES: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_4__.SIGN_OUT_SCOPES),\n/* harmony export */   isAuthApiError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthApiError),\n/* harmony export */   isAuthError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthError),\n/* harmony export */   isAuthImplicitGrantRedirectError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthImplicitGrantRedirectError),\n/* harmony export */   isAuthRetryableFetchError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthRetryableFetchError),\n/* harmony export */   isAuthSessionMissingError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthSessionMissingError),\n/* harmony export */   isAuthWeakPasswordError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthWeakPasswordError),\n/* harmony export */   lockInternals: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.internals),\n/* harmony export */   navigatorLock: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.navigatorLock),\n/* harmony export */   processLock: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.processLock)\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoTrueClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n/* harmony import */ var _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\");\n/* harmony import */ var _AuthClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/types */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/locks */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0o7QUFDQTtBQUNKO0FBQzRCO0FBQ3RDO0FBQ0M7QUFDMkY7QUFDeEgiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXGF1dGgtanNcXGRpc3RcXG1vZHVsZVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdvVHJ1ZUFkbWluQXBpIGZyb20gJy4vR29UcnVlQWRtaW5BcGknO1xyXG5pbXBvcnQgR29UcnVlQ2xpZW50IGZyb20gJy4vR29UcnVlQ2xpZW50JztcclxuaW1wb3J0IEF1dGhBZG1pbkFwaSBmcm9tICcuL0F1dGhBZG1pbkFwaSc7XHJcbmltcG9ydCBBdXRoQ2xpZW50IGZyb20gJy4vQXV0aENsaWVudCc7XHJcbmV4cG9ydCB7IEdvVHJ1ZUFkbWluQXBpLCBHb1RydWVDbGllbnQsIEF1dGhBZG1pbkFwaSwgQXV0aENsaWVudCB9O1xyXG5leHBvcnQgKiBmcm9tICcuL2xpYi90eXBlcyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL2Vycm9ycyc7XHJcbmV4cG9ydCB7IG5hdmlnYXRvckxvY2ssIE5hdmlnYXRvckxvY2tBY3F1aXJlVGltZW91dEVycm9yLCBpbnRlcm5hbHMgYXMgbG9ja0ludGVybmFscywgcHJvY2Vzc0xvY2ssIH0gZnJvbSAnLi9saWIvbG9ja3MnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/base64url.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64UrlToUint8Array: () => (/* binding */ base64UrlToUint8Array),\n/* harmony export */   byteFromBase64URL: () => (/* binding */ byteFromBase64URL),\n/* harmony export */   byteToBase64URL: () => (/* binding */ byteToBase64URL),\n/* harmony export */   bytesToBase64URL: () => (/* binding */ bytesToBase64URL),\n/* harmony export */   codepointToUTF8: () => (/* binding */ codepointToUTF8),\n/* harmony export */   stringFromBase64URL: () => (/* binding */ stringFromBase64URL),\n/* harmony export */   stringFromUTF8: () => (/* binding */ stringFromUTF8),\n/* harmony export */   stringToBase64URL: () => (/* binding */ stringToBase64URL),\n/* harmony export */   stringToUTF8: () => (/* binding */ stringToUTF8),\n/* harmony export */   stringToUint8Array: () => (/* binding */ stringToUint8Array)\n/* harmony export */ });\n/**\r\n * Avoid modifying this file. It's part of\r\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\r\n * that repo!\r\n */\r\n/**\r\n * An array of characters that encode 6 bits into a Base64-URL alphabet\r\n * character.\r\n */\r\nconst TO_BASE64URL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split('');\r\n/**\r\n * An array of characters that can appear in a Base64-URL encoded string but\r\n * should be ignored.\r\n */\r\nconst IGNORE_BASE64URL = ' \\t\\n\\r='.split('');\r\n/**\r\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\r\n * used to skip the character, or if -1 used to error out.\r\n */\r\nconst FROM_BASE64URL = (() => {\r\n    const charMap = new Array(128);\r\n    for (let i = 0; i < charMap.length; i += 1) {\r\n        charMap[i] = -1;\r\n    }\r\n    for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\r\n        charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\r\n    }\r\n    for (let i = 0; i < TO_BASE64URL.length; i += 1) {\r\n        charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\r\n    }\r\n    return charMap;\r\n})();\r\n/**\r\n * Converts a byte to a Base64-URL string.\r\n *\r\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\r\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\r\n * @param emit A function called with the next Base64 character when ready.\r\n */\r\nfunction byteToBase64URL(byte, state, emit) {\r\n    if (byte !== null) {\r\n        state.queue = (state.queue << 8) | byte;\r\n        state.queuedBits += 8;\r\n        while (state.queuedBits >= 6) {\r\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\r\n            emit(TO_BASE64URL[pos]);\r\n            state.queuedBits -= 6;\r\n        }\r\n    }\r\n    else if (state.queuedBits > 0) {\r\n        state.queue = state.queue << (6 - state.queuedBits);\r\n        state.queuedBits = 6;\r\n        while (state.queuedBits >= 6) {\r\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\r\n            emit(TO_BASE64URL[pos]);\r\n            state.queuedBits -= 6;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\r\n *\r\n * @param charCode The char code of the JavaScript string.\r\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\r\n * @param emit A function called with the next byte.\r\n */\r\nfunction byteFromBase64URL(charCode, state, emit) {\r\n    const bits = FROM_BASE64URL[charCode];\r\n    if (bits > -1) {\r\n        // valid Base64-URL character\r\n        state.queue = (state.queue << 6) | bits;\r\n        state.queuedBits += 6;\r\n        while (state.queuedBits >= 8) {\r\n            emit((state.queue >> (state.queuedBits - 8)) & 0xff);\r\n            state.queuedBits -= 8;\r\n        }\r\n    }\r\n    else if (bits === -2) {\r\n        // ignore spaces, tabs, newlines, =\r\n        return;\r\n    }\r\n    else {\r\n        throw new Error(`Invalid Base64-URL character \"${String.fromCharCode(charCode)}\"`);\r\n    }\r\n}\r\n/**\r\n * Converts a JavaScript string (which may include any valid character) into a\r\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\r\n * then encoded as Base64-URL.\r\n *\r\n * @param str The string to convert.\r\n */\r\nfunction stringToBase64URL(str) {\r\n    const base64 = [];\r\n    const emitter = (char) => {\r\n        base64.push(char);\r\n    };\r\n    const state = { queue: 0, queuedBits: 0 };\r\n    stringToUTF8(str, (byte) => {\r\n        byteToBase64URL(byte, state, emitter);\r\n    });\r\n    byteToBase64URL(null, state, emitter);\r\n    return base64.join('');\r\n}\r\n/**\r\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\r\n * that the underlying string has been encoded as UTF-8.\r\n *\r\n * @param str The Base64-URL encoded string.\r\n */\r\nfunction stringFromBase64URL(str) {\r\n    const conv = [];\r\n    const utf8Emit = (codepoint) => {\r\n        conv.push(String.fromCodePoint(codepoint));\r\n    };\r\n    const utf8State = {\r\n        utf8seq: 0,\r\n        codepoint: 0,\r\n    };\r\n    const b64State = { queue: 0, queuedBits: 0 };\r\n    const byteEmit = (byte) => {\r\n        stringFromUTF8(byte, utf8State, utf8Emit);\r\n    };\r\n    for (let i = 0; i < str.length; i += 1) {\r\n        byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit);\r\n    }\r\n    return conv.join('');\r\n}\r\n/**\r\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\r\n *\r\n * @param codepoint The Unicode codepoint.\r\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\r\n */\r\nfunction codepointToUTF8(codepoint, emit) {\r\n    if (codepoint <= 0x7f) {\r\n        emit(codepoint);\r\n        return;\r\n    }\r\n    else if (codepoint <= 0x7ff) {\r\n        emit(0xc0 | (codepoint >> 6));\r\n        emit(0x80 | (codepoint & 0x3f));\r\n        return;\r\n    }\r\n    else if (codepoint <= 0xffff) {\r\n        emit(0xe0 | (codepoint >> 12));\r\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\r\n        emit(0x80 | (codepoint & 0x3f));\r\n        return;\r\n    }\r\n    else if (codepoint <= 0x10ffff) {\r\n        emit(0xf0 | (codepoint >> 18));\r\n        emit(0x80 | ((codepoint >> 12) & 0x3f));\r\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\r\n        emit(0x80 | (codepoint & 0x3f));\r\n        return;\r\n    }\r\n    throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`);\r\n}\r\n/**\r\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\r\n *\r\n * @param str  The string to convert to UTF-8.\r\n * @param emit Function which will be called for each UTF-8 byte of the string.\r\n */\r\nfunction stringToUTF8(str, emit) {\r\n    for (let i = 0; i < str.length; i += 1) {\r\n        let codepoint = str.charCodeAt(i);\r\n        if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\r\n            // most UTF-16 codepoints are Unicode codepoints, except values in this\r\n            // range where the next UTF-16 codepoint needs to be combined with the\r\n            // current one to get the Unicode codepoint\r\n            const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff;\r\n            const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff;\r\n            codepoint = (lowSurrogate | highSurrogate) + 0x10000;\r\n            i += 1;\r\n        }\r\n        codepointToUTF8(codepoint, emit);\r\n    }\r\n}\r\n/**\r\n * Converts a UTF-8 byte to a Unicode codepoint.\r\n *\r\n * @param byte  The UTF-8 byte next in the sequence.\r\n * @param state The shared state between consecutive UTF-8 bytes in the\r\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\r\n * @param emit  Function which will be called for each codepoint.\r\n */\r\nfunction stringFromUTF8(byte, state, emit) {\r\n    if (state.utf8seq === 0) {\r\n        if (byte <= 0x7f) {\r\n            emit(byte);\r\n            return;\r\n        }\r\n        // count the number of 1 leading bits until you reach 0\r\n        for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\r\n            if (((byte >> (7 - leadingBit)) & 1) === 0) {\r\n                state.utf8seq = leadingBit;\r\n                break;\r\n            }\r\n        }\r\n        if (state.utf8seq === 2) {\r\n            state.codepoint = byte & 31;\r\n        }\r\n        else if (state.utf8seq === 3) {\r\n            state.codepoint = byte & 15;\r\n        }\r\n        else if (state.utf8seq === 4) {\r\n            state.codepoint = byte & 7;\r\n        }\r\n        else {\r\n            throw new Error('Invalid UTF-8 sequence');\r\n        }\r\n        state.utf8seq -= 1;\r\n    }\r\n    else if (state.utf8seq > 0) {\r\n        if (byte <= 0x7f) {\r\n            throw new Error('Invalid UTF-8 sequence');\r\n        }\r\n        state.codepoint = (state.codepoint << 6) | (byte & 63);\r\n        state.utf8seq -= 1;\r\n        if (state.utf8seq === 0) {\r\n            emit(state.codepoint);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper functions to convert different types of strings to Uint8Array\r\n */\r\nfunction base64UrlToUint8Array(str) {\r\n    const result = [];\r\n    const state = { queue: 0, queuedBits: 0 };\r\n    const onByte = (byte) => {\r\n        result.push(byte);\r\n    };\r\n    for (let i = 0; i < str.length; i += 1) {\r\n        byteFromBase64URL(str.charCodeAt(i), state, onByte);\r\n    }\r\n    return new Uint8Array(result);\r\n}\r\nfunction stringToUint8Array(str) {\r\n    const result = [];\r\n    stringToUTF8(str, (byte) => result.push(byte));\r\n    return new Uint8Array(result);\r\n}\r\nfunction bytesToBase64URL(bytes) {\r\n    const result = [];\r\n    const state = { queue: 0, queuedBits: 0 };\r\n    const onChar = (char) => {\r\n        result.push(char);\r\n    };\r\n    bytes.forEach((byte) => byteToBase64URL(byte, state, onChar));\r\n    // always call with `null` after processing all bytes\r\n    byteToBase64URL(null, state, onChar);\r\n    return result.join('');\r\n}\r\n//# sourceMappingURL=base64url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/constants.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSIONS: () => (/* binding */ API_VERSIONS),\n/* harmony export */   API_VERSION_HEADER_NAME: () => (/* binding */ API_VERSION_HEADER_NAME),\n/* harmony export */   AUDIENCE: () => (/* binding */ AUDIENCE),\n/* harmony export */   AUTO_REFRESH_TICK_DURATION_MS: () => (/* binding */ AUTO_REFRESH_TICK_DURATION_MS),\n/* harmony export */   AUTO_REFRESH_TICK_THRESHOLD: () => (/* binding */ AUTO_REFRESH_TICK_THRESHOLD),\n/* harmony export */   BASE64URL_REGEX: () => (/* binding */ BASE64URL_REGEX),\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS),\n/* harmony export */   EXPIRY_MARGIN_MS: () => (/* binding */ EXPIRY_MARGIN_MS),\n/* harmony export */   GOTRUE_URL: () => (/* binding */ GOTRUE_URL),\n/* harmony export */   JWKS_TTL: () => (/* binding */ JWKS_TTL),\n/* harmony export */   NETWORK_FAILURE: () => (/* binding */ NETWORK_FAILURE),\n/* harmony export */   STORAGE_KEY: () => (/* binding */ STORAGE_KEY)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n\r\n/** Current session will be checked for refresh at this interval. */\r\nconst AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\r\n/**\r\n * A token refresh will be attempted this many ticks before the current session expires. */\r\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\r\n/*\r\n * Earliest time before an access token expires that the session should be refreshed.\r\n */\r\nconst EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\r\nconst GOTRUE_URL = 'http://localhost:9999';\r\nconst STORAGE_KEY = 'supabase.auth.token';\r\nconst AUDIENCE = '';\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst NETWORK_FAILURE = {\r\n    MAX_RETRIES: 10,\r\n    RETRY_INTERVAL: 2, // in deciseconds\r\n};\r\nconst API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\r\nconst API_VERSIONS = {\r\n    '2024-01-01': {\r\n        timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\r\n        name: '2024-01-01',\r\n    },\r\n};\r\nconst BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\r\nconst JWKS_TTL = 600000; // 10 minutes\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDcEM7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhCQUE4Qiw2Q0FBTyxDQUFDO0FBQ2hFO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPLHNDQUFzQyxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRTtBQUN6RSx5QkFBeUI7QUFDaEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXGF1dGgtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxjb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbic7XHJcbi8qKiBDdXJyZW50IHNlc3Npb24gd2lsbCBiZSBjaGVja2VkIGZvciByZWZyZXNoIGF0IHRoaXMgaW50ZXJ2YWwuICovXHJcbmV4cG9ydCBjb25zdCBBVVRPX1JFRlJFU0hfVElDS19EVVJBVElPTl9NUyA9IDMwICogMTAwMDtcclxuLyoqXHJcbiAqIEEgdG9rZW4gcmVmcmVzaCB3aWxsIGJlIGF0dGVtcHRlZCB0aGlzIG1hbnkgdGlja3MgYmVmb3JlIHRoZSBjdXJyZW50IHNlc3Npb24gZXhwaXJlcy4gKi9cclxuZXhwb3J0IGNvbnN0IEFVVE9fUkVGUkVTSF9USUNLX1RIUkVTSE9MRCA9IDM7XHJcbi8qXHJcbiAqIEVhcmxpZXN0IHRpbWUgYmVmb3JlIGFuIGFjY2VzcyB0b2tlbiBleHBpcmVzIHRoYXQgdGhlIHNlc3Npb24gc2hvdWxkIGJlIHJlZnJlc2hlZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBFWFBJUllfTUFSR0lOX01TID0gQVVUT19SRUZSRVNIX1RJQ0tfVEhSRVNIT0xEICogQVVUT19SRUZSRVNIX1RJQ0tfRFVSQVRJT05fTVM7XHJcbmV4cG9ydCBjb25zdCBHT1RSVUVfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6OTk5OSc7XHJcbmV4cG9ydCBjb25zdCBTVE9SQUdFX0tFWSA9ICdzdXBhYmFzZS5hdXRoLnRva2VuJztcclxuZXhwb3J0IGNvbnN0IEFVRElFTkNFID0gJyc7XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYGdvdHJ1ZS1qcy8ke3ZlcnNpb259YCB9O1xyXG5leHBvcnQgY29uc3QgTkVUV09SS19GQUlMVVJFID0ge1xyXG4gICAgTUFYX1JFVFJJRVM6IDEwLFxyXG4gICAgUkVUUllfSU5URVJWQUw6IDIsIC8vIGluIGRlY2lzZWNvbmRzXHJcbn07XHJcbmV4cG9ydCBjb25zdCBBUElfVkVSU0lPTl9IRUFERVJfTkFNRSA9ICdYLVN1cGFiYXNlLUFwaS1WZXJzaW9uJztcclxuZXhwb3J0IGNvbnN0IEFQSV9WRVJTSU9OUyA9IHtcclxuICAgICcyMDI0LTAxLTAxJzoge1xyXG4gICAgICAgIHRpbWVzdGFtcDogRGF0ZS5wYXJzZSgnMjAyNC0wMS0wMVQwMDowMDowMC4wWicpLFxyXG4gICAgICAgIG5hbWU6ICcyMDI0LTAxLTAxJyxcclxuICAgIH0sXHJcbn07XHJcbmV4cG9ydCBjb25zdCBCQVNFNjRVUkxfUkVHRVggPSAvXihbYS16MC05Xy1dezR9KSooJHxbYS16MC05Xy1dezN9JHxbYS16MC05Xy1dezJ9JCkkL2k7XHJcbmV4cG9ydCBjb25zdCBKV0tTX1RUTCA9IDYwMDAwMDsgLy8gMTAgbWludXRlc1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/errors.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthApiError: () => (/* binding */ AuthApiError),\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   AuthImplicitGrantRedirectError: () => (/* binding */ AuthImplicitGrantRedirectError),\n/* harmony export */   AuthInvalidCredentialsError: () => (/* binding */ AuthInvalidCredentialsError),\n/* harmony export */   AuthInvalidJwtError: () => (/* binding */ AuthInvalidJwtError),\n/* harmony export */   AuthInvalidTokenResponseError: () => (/* binding */ AuthInvalidTokenResponseError),\n/* harmony export */   AuthPKCEGrantCodeExchangeError: () => (/* binding */ AuthPKCEGrantCodeExchangeError),\n/* harmony export */   AuthRetryableFetchError: () => (/* binding */ AuthRetryableFetchError),\n/* harmony export */   AuthSessionMissingError: () => (/* binding */ AuthSessionMissingError),\n/* harmony export */   AuthUnknownError: () => (/* binding */ AuthUnknownError),\n/* harmony export */   AuthWeakPasswordError: () => (/* binding */ AuthWeakPasswordError),\n/* harmony export */   CustomAuthError: () => (/* binding */ CustomAuthError),\n/* harmony export */   isAuthApiError: () => (/* binding */ isAuthApiError),\n/* harmony export */   isAuthError: () => (/* binding */ isAuthError),\n/* harmony export */   isAuthImplicitGrantRedirectError: () => (/* binding */ isAuthImplicitGrantRedirectError),\n/* harmony export */   isAuthRetryableFetchError: () => (/* binding */ isAuthRetryableFetchError),\n/* harmony export */   isAuthSessionMissingError: () => (/* binding */ isAuthSessionMissingError),\n/* harmony export */   isAuthWeakPasswordError: () => (/* binding */ isAuthWeakPasswordError)\n/* harmony export */ });\nclass AuthError extends Error {\r\n    constructor(message, status, code) {\r\n        super(message);\r\n        this.__isAuthError = true;\r\n        this.name = 'AuthError';\r\n        this.status = status;\r\n        this.code = code;\r\n    }\r\n}\r\nfunction isAuthError(error) {\r\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\r\n}\r\nclass AuthApiError extends AuthError {\r\n    constructor(message, status, code) {\r\n        super(message, status, code);\r\n        this.name = 'AuthApiError';\r\n        this.status = status;\r\n        this.code = code;\r\n    }\r\n}\r\nfunction isAuthApiError(error) {\r\n    return isAuthError(error) && error.name === 'AuthApiError';\r\n}\r\nclass AuthUnknownError extends AuthError {\r\n    constructor(message, originalError) {\r\n        super(message);\r\n        this.name = 'AuthUnknownError';\r\n        this.originalError = originalError;\r\n    }\r\n}\r\nclass CustomAuthError extends AuthError {\r\n    constructor(message, name, status, code) {\r\n        super(message, status, code);\r\n        this.name = name;\r\n        this.status = status;\r\n    }\r\n}\r\nclass AuthSessionMissingError extends CustomAuthError {\r\n    constructor() {\r\n        super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\r\n    }\r\n}\r\nfunction isAuthSessionMissingError(error) {\r\n    return isAuthError(error) && error.name === 'AuthSessionMissingError';\r\n}\r\nclass AuthInvalidTokenResponseError extends CustomAuthError {\r\n    constructor() {\r\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\r\n    }\r\n}\r\nclass AuthInvalidCredentialsError extends CustomAuthError {\r\n    constructor(message) {\r\n        super(message, 'AuthInvalidCredentialsError', 400, undefined);\r\n    }\r\n}\r\nclass AuthImplicitGrantRedirectError extends CustomAuthError {\r\n    constructor(message, details = null) {\r\n        super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\r\n        this.details = null;\r\n        this.details = details;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n            details: this.details,\r\n        };\r\n    }\r\n}\r\nfunction isAuthImplicitGrantRedirectError(error) {\r\n    return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError';\r\n}\r\nclass AuthPKCEGrantCodeExchangeError extends CustomAuthError {\r\n    constructor(message, details = null) {\r\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\r\n        this.details = null;\r\n        this.details = details;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n            details: this.details,\r\n        };\r\n    }\r\n}\r\nclass AuthRetryableFetchError extends CustomAuthError {\r\n    constructor(message, status) {\r\n        super(message, 'AuthRetryableFetchError', status, undefined);\r\n    }\r\n}\r\nfunction isAuthRetryableFetchError(error) {\r\n    return isAuthError(error) && error.name === 'AuthRetryableFetchError';\r\n}\r\n/**\r\n * This error is thrown on certain methods when the password used is deemed\r\n * weak. Inspect the reasons to identify what password strength rules are\r\n * inadequate.\r\n */\r\nclass AuthWeakPasswordError extends CustomAuthError {\r\n    constructor(message, status, reasons) {\r\n        super(message, 'AuthWeakPasswordError', status, 'weak_password');\r\n        this.reasons = reasons;\r\n    }\r\n}\r\nfunction isAuthWeakPasswordError(error) {\r\n    return isAuthError(error) && error.name === 'AuthWeakPasswordError';\r\n}\r\nclass AuthInvalidJwtError extends CustomAuthError {\r\n    constructor(message) {\r\n        super(message, 'AuthInvalidJwtError', 400, 'invalid_jwt');\r\n    }\r\n}\r\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXGF1dGgtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxlcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEF1dGhFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cywgY29kZSkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMuX19pc0F1dGhFcnJvciA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJ0F1dGhFcnJvcic7XHJcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XHJcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmIGVycm9yICE9PSBudWxsICYmICdfX2lzQXV0aEVycm9yJyBpbiBlcnJvcjtcclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aEFwaUVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cywgY29kZSkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIHN0YXR1cywgY29kZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJ0F1dGhBcGlFcnJvcic7XHJcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XHJcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoQXBpRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhBcGlFcnJvcic7XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhVbmtub3duRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3JpZ2luYWxFcnJvcikge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdBdXRoVW5rbm93bkVycm9yJztcclxuICAgICAgICB0aGlzLm9yaWdpbmFsRXJyb3IgPSBvcmlnaW5hbEVycm9yO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBDdXN0b21BdXRoRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgbmFtZSwgc3RhdHVzLCBjb2RlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgc3RhdHVzLCBjb2RlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoU2Vzc2lvbk1pc3NpbmdFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcignQXV0aCBzZXNzaW9uIG1pc3NpbmchJywgJ0F1dGhTZXNzaW9uTWlzc2luZ0Vycm9yJywgNDAwLCB1bmRlZmluZWQpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhTZXNzaW9uTWlzc2luZ0Vycm9yKGVycm9yKSB7XHJcbiAgICByZXR1cm4gaXNBdXRoRXJyb3IoZXJyb3IpICYmIGVycm9yLm5hbWUgPT09ICdBdXRoU2Vzc2lvbk1pc3NpbmdFcnJvcic7XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhJbnZhbGlkVG9rZW5SZXNwb25zZUVycm9yIGV4dGVuZHMgQ3VzdG9tQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCdBdXRoIHNlc3Npb24gb3IgdXNlciBtaXNzaW5nJywgJ0F1dGhJbnZhbGlkVG9rZW5SZXNwb25zZUVycm9yJywgNTAwLCB1bmRlZmluZWQpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoSW52YWxpZENyZWRlbnRpYWxzRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoSW52YWxpZENyZWRlbnRpYWxzRXJyb3InLCA0MDAsIHVuZGVmaW5lZCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhJbXBsaWNpdEdyYW50UmVkaXJlY3RFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBkZXRhaWxzID0gbnVsbCkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoSW1wbGljaXRHcmFudFJlZGlyZWN0RXJyb3InLCA1MDAsIHVuZGVmaW5lZCk7XHJcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gbnVsbDtcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBkZXRhaWxzO1xyXG4gICAgfVxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxyXG4gICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxyXG4gICAgICAgICAgICBkZXRhaWxzOiB0aGlzLmRldGFpbHMsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoSW1wbGljaXRHcmFudFJlZGlyZWN0RXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhJbXBsaWNpdEdyYW50UmVkaXJlY3RFcnJvcic7XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhQS0NFR3JhbnRDb2RlRXhjaGFuZ2VFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBkZXRhaWxzID0gbnVsbCkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoUEtDRUdyYW50Q29kZUV4Y2hhbmdlRXJyb3InLCA1MDAsIHVuZGVmaW5lZCk7XHJcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gbnVsbDtcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBkZXRhaWxzO1xyXG4gICAgfVxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxyXG4gICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxyXG4gICAgICAgICAgICBkZXRhaWxzOiB0aGlzLmRldGFpbHMsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aFJldHJ5YWJsZUZldGNoRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0F1dGhSZXRyeWFibGVGZXRjaEVycm9yJywgc3RhdHVzLCB1bmRlZmluZWQpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhSZXRyeWFibGVGZXRjaEVycm9yKGVycm9yKSB7XHJcbiAgICByZXR1cm4gaXNBdXRoRXJyb3IoZXJyb3IpICYmIGVycm9yLm5hbWUgPT09ICdBdXRoUmV0cnlhYmxlRmV0Y2hFcnJvcic7XHJcbn1cclxuLyoqXHJcbiAqIFRoaXMgZXJyb3IgaXMgdGhyb3duIG9uIGNlcnRhaW4gbWV0aG9kcyB3aGVuIHRoZSBwYXNzd29yZCB1c2VkIGlzIGRlZW1lZFxyXG4gKiB3ZWFrLiBJbnNwZWN0IHRoZSByZWFzb25zIHRvIGlkZW50aWZ5IHdoYXQgcGFzc3dvcmQgc3RyZW5ndGggcnVsZXMgYXJlXHJcbiAqIGluYWRlcXVhdGUuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQXV0aFdlYWtQYXNzd29yZEVycm9yIGV4dGVuZHMgQ3VzdG9tQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cywgcmVhc29ucykge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoV2Vha1Bhc3N3b3JkRXJyb3InLCBzdGF0dXMsICd3ZWFrX3Bhc3N3b3JkJyk7XHJcbiAgICAgICAgdGhpcy5yZWFzb25zID0gcmVhc29ucztcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoV2Vha1Bhc3N3b3JkRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhXZWFrUGFzc3dvcmRFcnJvcic7XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhJbnZhbGlkSnd0RXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoSW52YWxpZEp3dEVycm9yJywgNDAwLCAnaW52YWxpZF9qd3QnKTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/fetch.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateLinkResponse: () => (/* binding */ _generateLinkResponse),\n/* harmony export */   _noResolveJsonResponse: () => (/* binding */ _noResolveJsonResponse),\n/* harmony export */   _request: () => (/* binding */ _request),\n/* harmony export */   _sessionResponse: () => (/* binding */ _sessionResponse),\n/* harmony export */   _sessionResponsePassword: () => (/* binding */ _sessionResponsePassword),\n/* harmony export */   _ssoResponse: () => (/* binding */ _ssoResponse),\n/* harmony export */   _userResponse: () => (/* binding */ _userResponse),\n/* harmony export */   handleError: () => (/* binding */ handleError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\r\nconst NETWORK_ERROR_CODES = [502, 503, 504];\r\nasync function handleError(error) {\r\n    var _a;\r\n    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.looksLikeFetchResponse)(error)) {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), 0);\r\n    }\r\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\r\n        // status in 500...599 range - server had an error, request might be retryed.\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), error.status);\r\n    }\r\n    let data;\r\n    try {\r\n        data = await error.json();\r\n    }\r\n    catch (e) {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError(_getErrorMessage(e), e);\r\n    }\r\n    let errorCode = undefined;\r\n    const responseAPIVersion = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.parseResponseAPIVersion)(error);\r\n    if (responseAPIVersion &&\r\n        responseAPIVersion.getTime() >= _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS['2024-01-01'].timestamp &&\r\n        typeof data === 'object' &&\r\n        data &&\r\n        typeof data.code === 'string') {\r\n        errorCode = data.code;\r\n    }\r\n    else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\r\n        errorCode = data.error_code;\r\n    }\r\n    if (!errorCode) {\r\n        // Legacy support for weak password errors, when there were no error codes\r\n        if (typeof data === 'object' &&\r\n            data &&\r\n            typeof data.weak_password === 'object' &&\r\n            data.weak_password &&\r\n            Array.isArray(data.weak_password.reasons) &&\r\n            data.weak_password.reasons.length &&\r\n            data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\r\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\r\n        }\r\n    }\r\n    else if (errorCode === 'weak_password') {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\r\n    }\r\n    else if (errorCode === 'session_not_found') {\r\n        // The `session_id` inside the JWT does not correspond to a row in the\r\n        // `sessions` table. This usually means the user has signed out, has been\r\n        // deleted, or their session has somehow been terminated.\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n    }\r\n    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\r\n}\r\nconst _getRequestParams = (method, options, parameters, body) => {\r\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\r\n    if (method === 'GET') {\r\n        return params;\r\n    }\r\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\r\n    params.body = JSON.stringify(body);\r\n    return Object.assign(Object.assign({}, params), parameters);\r\n};\r\nasync function _request(fetcher, method, url, options) {\r\n    var _a;\r\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\r\n    if (!headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME]) {\r\n        headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME] = _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS['2024-01-01'].name;\r\n    }\r\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\r\n        headers['Authorization'] = `Bearer ${options.jwt}`;\r\n    }\r\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\r\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\r\n        qs['redirect_to'] = options.redirectTo;\r\n    }\r\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\r\n    const data = await _handleRequest(fetcher, method, url + queryString, {\r\n        headers,\r\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson,\r\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\r\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\r\n}\r\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\r\n    const requestParams = _getRequestParams(method, options, parameters, body);\r\n    let result;\r\n    try {\r\n        result = await fetcher(url, Object.assign({}, requestParams));\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        // fetch failed, likely due to a network or CORS error\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(e), 0);\r\n    }\r\n    if (!result.ok) {\r\n        await handleError(result);\r\n    }\r\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\r\n        return result;\r\n    }\r\n    try {\r\n        return await result.json();\r\n    }\r\n    catch (e) {\r\n        await handleError(e);\r\n    }\r\n}\r\nfunction _sessionResponse(data) {\r\n    var _a;\r\n    let session = null;\r\n    if (hasSession(data)) {\r\n        session = Object.assign({}, data);\r\n        if (!data.expires_at) {\r\n            session.expires_at = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.expiresAt)(data.expires_in);\r\n        }\r\n    }\r\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\r\n    return { data: { session, user }, error: null };\r\n}\r\nfunction _sessionResponsePassword(data) {\r\n    const response = _sessionResponse(data);\r\n    if (!response.error &&\r\n        data.weak_password &&\r\n        typeof data.weak_password === 'object' &&\r\n        Array.isArray(data.weak_password.reasons) &&\r\n        data.weak_password.reasons.length &&\r\n        data.weak_password.message &&\r\n        typeof data.weak_password.message === 'string' &&\r\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\r\n        response.data.weak_password = data.weak_password;\r\n    }\r\n    return response;\r\n}\r\nfunction _userResponse(data) {\r\n    var _a;\r\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\r\n    return { data: { user }, error: null };\r\n}\r\nfunction _ssoResponse(data) {\r\n    return { data, error: null };\r\n}\r\nfunction _generateLinkResponse(data) {\r\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\r\n    const properties = {\r\n        action_link,\r\n        email_otp,\r\n        hashed_token,\r\n        redirect_to,\r\n        verification_type,\r\n    };\r\n    const user = Object.assign({}, rest);\r\n    return {\r\n        data: {\r\n            properties,\r\n            user,\r\n        },\r\n        error: null,\r\n    };\r\n}\r\nfunction _noResolveJsonResponse(data) {\r\n    return data;\r\n}\r\n/**\r\n * hasSession checks if the response object contains a valid session\r\n * @param data A response object\r\n * @returns true if a session is in the response\r\n */\r\nfunction hasSession(data) {\r\n    return data.access_token && data.refresh_token && data.expires_in;\r\n}\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/helpers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deferred: () => (/* binding */ Deferred),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   expiresAt: () => (/* binding */ expiresAt),\n/* harmony export */   generatePKCEChallenge: () => (/* binding */ generatePKCEChallenge),\n/* harmony export */   generatePKCEVerifier: () => (/* binding */ generatePKCEVerifier),\n/* harmony export */   getAlgorithm: () => (/* binding */ getAlgorithm),\n/* harmony export */   getCodeChallengeAndMethod: () => (/* binding */ getCodeChallengeAndMethod),\n/* harmony export */   getItemAsync: () => (/* binding */ getItemAsync),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   looksLikeFetchResponse: () => (/* binding */ looksLikeFetchResponse),\n/* harmony export */   parseParametersFromURL: () => (/* binding */ parseParametersFromURL),\n/* harmony export */   parseResponseAPIVersion: () => (/* binding */ parseResponseAPIVersion),\n/* harmony export */   removeItemAsync: () => (/* binding */ removeItemAsync),\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch),\n/* harmony export */   retryable: () => (/* binding */ retryable),\n/* harmony export */   setItemAsync: () => (/* binding */ setItemAsync),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   supportsLocalStorage: () => (/* binding */ supportsLocalStorage),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   validateExp: () => (/* binding */ validateExp),\n/* harmony export */   validateUUID: () => (/* binding */ validateUUID)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _base64url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\r\n\r\n\r\nfunction expiresAt(expiresIn) {\r\n    const timeNow = Math.round(Date.now() / 1000);\r\n    return timeNow + expiresIn;\r\n}\r\nfunction uuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\nconst isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\r\nconst localStorageWriteTests = {\r\n    tested: false,\r\n    writable: false,\r\n};\r\n/**\r\n * Checks whether localStorage is supported on this browser.\r\n */\r\nconst supportsLocalStorage = () => {\r\n    if (!isBrowser()) {\r\n        return false;\r\n    }\r\n    try {\r\n        if (typeof globalThis.localStorage !== 'object') {\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // DOM exception when accessing `localStorage`\r\n        return false;\r\n    }\r\n    if (localStorageWriteTests.tested) {\r\n        return localStorageWriteTests.writable;\r\n    }\r\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\r\n    try {\r\n        globalThis.localStorage.setItem(randomKey, randomKey);\r\n        globalThis.localStorage.removeItem(randomKey);\r\n        localStorageWriteTests.tested = true;\r\n        localStorageWriteTests.writable = true;\r\n    }\r\n    catch (e) {\r\n        // localStorage can't be written to\r\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\r\n        localStorageWriteTests.tested = true;\r\n        localStorageWriteTests.writable = false;\r\n    }\r\n    return localStorageWriteTests.writable;\r\n};\r\n/**\r\n * Extracts parameters encoded in the URL both in the query and fragment.\r\n */\r\nfunction parseParametersFromURL(href) {\r\n    const result = {};\r\n    const url = new URL(href);\r\n    if (url.hash && url.hash[0] === '#') {\r\n        try {\r\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\r\n            hashSearchParams.forEach((value, key) => {\r\n                result[key] = value;\r\n            });\r\n        }\r\n        catch (e) {\r\n            // hash is not a query string\r\n        }\r\n    }\r\n    // search parameters take precedence over hash parameters\r\n    url.searchParams.forEach((value, key) => {\r\n        result[key] = value;\r\n    });\r\n    return result;\r\n}\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst looksLikeFetchResponse = (maybeResponse) => {\r\n    return (typeof maybeResponse === 'object' &&\r\n        maybeResponse !== null &&\r\n        'status' in maybeResponse &&\r\n        'ok' in maybeResponse &&\r\n        'json' in maybeResponse &&\r\n        typeof maybeResponse.json === 'function');\r\n};\r\n// Storage helpers\r\nconst setItemAsync = async (storage, key, data) => {\r\n    await storage.setItem(key, JSON.stringify(data));\r\n};\r\nconst getItemAsync = async (storage, key) => {\r\n    const value = await storage.getItem(key);\r\n    if (!value) {\r\n        return null;\r\n    }\r\n    try {\r\n        return JSON.parse(value);\r\n    }\r\n    catch (_a) {\r\n        return value;\r\n    }\r\n};\r\nconst removeItemAsync = async (storage, key) => {\r\n    await storage.removeItem(key);\r\n};\r\n/**\r\n * A deferred represents some asynchronous work that is not yet finished, which\r\n * may or may not culminate in a value.\r\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n        ;\r\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n            ;\r\n            this.resolve = res;\r\n            this.reject = rej;\r\n        });\r\n    }\r\n}\r\nDeferred.promiseConstructor = Promise;\r\nfunction decodeJWT(token) {\r\n    const parts = token.split('.');\r\n    if (parts.length !== 3) {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError('Invalid JWT structure');\r\n    }\r\n    // Regex checks for base64url format\r\n    for (let i = 0; i < parts.length; i++) {\r\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.BASE64URL_REGEX.test(parts[i])) {\r\n            throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError('JWT not in base64url format');\r\n        }\r\n    }\r\n    const data = {\r\n        // using base64url lib\r\n        header: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[0])),\r\n        payload: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[1])),\r\n        signature: (0,_base64url__WEBPACK_IMPORTED_MODULE_2__.base64UrlToUint8Array)(parts[2]),\r\n        raw: {\r\n            header: parts[0],\r\n            payload: parts[1],\r\n        },\r\n    };\r\n    return data;\r\n}\r\n/**\r\n * Creates a promise that resolves to null after some time.\r\n */\r\nasync function sleep(time) {\r\n    return await new Promise((accept) => {\r\n        setTimeout(() => accept(null), time);\r\n    });\r\n}\r\n/**\r\n * Converts the provided async function into a retryable function. Each result\r\n * or thrown error is sent to the isRetryable function which should return true\r\n * if the function should run again.\r\n */\r\nfunction retryable(fn, isRetryable) {\r\n    const promise = new Promise((accept, reject) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n        ;\r\n        (async () => {\r\n            for (let attempt = 0; attempt < Infinity; attempt++) {\r\n                try {\r\n                    const result = await fn(attempt);\r\n                    if (!isRetryable(attempt, null, result)) {\r\n                        accept(result);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!isRetryable(attempt, e)) {\r\n                        reject(e);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n    });\r\n    return promise;\r\n}\r\nfunction dec2hex(dec) {\r\n    return ('0' + dec.toString(16)).substr(-2);\r\n}\r\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\r\nfunction generatePKCEVerifier() {\r\n    const verifierLength = 56;\r\n    const array = new Uint32Array(verifierLength);\r\n    if (typeof crypto === 'undefined') {\r\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n        const charSetLen = charSet.length;\r\n        let verifier = '';\r\n        for (let i = 0; i < verifierLength; i++) {\r\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\r\n        }\r\n        return verifier;\r\n    }\r\n    crypto.getRandomValues(array);\r\n    return Array.from(array, dec2hex).join('');\r\n}\r\nasync function sha256(randomString) {\r\n    const encoder = new TextEncoder();\r\n    const encodedData = encoder.encode(randomString);\r\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\r\n    const bytes = new Uint8Array(hash);\r\n    return Array.from(bytes)\r\n        .map((c) => String.fromCharCode(c))\r\n        .join('');\r\n}\r\nasync function generatePKCEChallenge(verifier) {\r\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\r\n        typeof crypto.subtle !== 'undefined' &&\r\n        typeof TextEncoder !== 'undefined';\r\n    if (!hasCryptoSupport) {\r\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\r\n        return verifier;\r\n    }\r\n    const hashed = await sha256(verifier);\r\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n}\r\nasync function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\r\n    const codeVerifier = generatePKCEVerifier();\r\n    let storedCodeVerifier = codeVerifier;\r\n    if (isPasswordRecovery) {\r\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\r\n    }\r\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\r\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\r\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\r\n    return [codeChallenge, codeChallengeMethod];\r\n}\r\n/** Parses the API version which is 2YYY-MM-DD. */\r\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\r\nfunction parseResponseAPIVersion(response) {\r\n    const apiVersion = response.headers.get(_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME);\r\n    if (!apiVersion) {\r\n        return null;\r\n    }\r\n    if (!apiVersion.match(API_VERSION_REGEX)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\r\n        return date;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\nfunction validateExp(exp) {\r\n    if (!exp) {\r\n        throw new Error('Missing exp claim');\r\n    }\r\n    const timeNow = Math.floor(Date.now() / 1000);\r\n    if (exp <= timeNow) {\r\n        throw new Error('JWT has expired');\r\n    }\r\n}\r\nfunction getAlgorithm(alg) {\r\n    switch (alg) {\r\n        case 'RS256':\r\n            return {\r\n                name: 'RSASSA-PKCS1-v1_5',\r\n                hash: { name: 'SHA-256' },\r\n            };\r\n        case 'ES256':\r\n            return {\r\n                name: 'ECDSA',\r\n                namedCurve: 'P-256',\r\n                hash: { name: 'SHA-256' },\r\n            };\r\n        default:\r\n            throw new Error('Invalid alg claim');\r\n    }\r\n}\r\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\r\nfunction validateUUID(str) {\r\n    if (!UUID_REGEX.test(str)) {\r\n        throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\r\n    }\r\n}\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localStorageAdapter: () => (/* binding */ localStorageAdapter),\n/* harmony export */   memoryLocalStorageAdapter: () => (/* binding */ memoryLocalStorageAdapter)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n\r\n/**\r\n * Provides safe access to the globalThis.localStorage property.\r\n */\r\nconst localStorageAdapter = {\r\n    getItem: (key) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return null;\r\n        }\r\n        return globalThis.localStorage.getItem(key);\r\n    },\r\n    setItem: (key, value) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return;\r\n        }\r\n        globalThis.localStorage.setItem(key, value);\r\n    },\r\n    removeItem: (key) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return;\r\n        }\r\n        globalThis.localStorage.removeItem(key);\r\n    },\r\n};\r\n/**\r\n * Returns a localStorage-like object that stores the key-value pairs in\r\n * memory.\r\n */\r\nfunction memoryLocalStorageAdapter(store = {}) {\r\n    return {\r\n        getItem: (key) => {\r\n            return store[key] || null;\r\n        },\r\n        setItem: (key, value) => {\r\n            store[key] = value;\r\n        },\r\n        removeItem: (key) => {\r\n            delete store[key];\r\n        },\r\n    };\r\n}\r\n//# sourceMappingURL=local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsOERBQW9CO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWEsOERBQW9CO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWEsOERBQW9CO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkNBQTZDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxhdXRoLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcbG9jYWwtc3RvcmFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBwb3J0c0xvY2FsU3RvcmFnZSB9IGZyb20gJy4vaGVscGVycyc7XHJcbi8qKlxyXG4gKiBQcm92aWRlcyBzYWZlIGFjY2VzcyB0byB0aGUgZ2xvYmFsVGhpcy5sb2NhbFN0b3JhZ2UgcHJvcGVydHkuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgbG9jYWxTdG9yYWdlQWRhcHRlciA9IHtcclxuICAgIGdldEl0ZW06IChrZXkpID0+IHtcclxuICAgICAgICBpZiAoIXN1cHBvcnRzTG9jYWxTdG9yYWdlKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XHJcbiAgICB9LFxyXG4gICAgc2V0SXRlbTogKGtleSwgdmFsdWUpID0+IHtcclxuICAgICAgICBpZiAoIXN1cHBvcnRzTG9jYWxTdG9yYWdlKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpO1xyXG4gICAgfSxcclxuICAgIHJlbW92ZUl0ZW06IChrZXkpID0+IHtcclxuICAgICAgICBpZiAoIXN1cHBvcnRzTG9jYWxTdG9yYWdlKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogUmV0dXJucyBhIGxvY2FsU3RvcmFnZS1saWtlIG9iamVjdCB0aGF0IHN0b3JlcyB0aGUga2V5LXZhbHVlIHBhaXJzIGluXHJcbiAqIG1lbW9yeS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBtZW1vcnlMb2NhbFN0b3JhZ2VBZGFwdGVyKHN0b3JlID0ge30pIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgZ2V0SXRlbTogKGtleSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gc3RvcmVba2V5XSB8fCBudWxsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2V0SXRlbTogKGtleSwgdmFsdWUpID0+IHtcclxuICAgICAgICAgICAgc3RvcmVba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmVtb3ZlSXRlbTogKGtleSkgPT4ge1xyXG4gICAgICAgICAgICBkZWxldGUgc3RvcmVba2V5XTtcclxuICAgICAgICB9LFxyXG4gICAgfTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2NhbC1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/locks.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LockAcquireTimeoutError: () => (/* binding */ LockAcquireTimeoutError),\n/* harmony export */   NavigatorLockAcquireTimeoutError: () => (/* binding */ NavigatorLockAcquireTimeoutError),\n/* harmony export */   ProcessLockAcquireTimeoutError: () => (/* binding */ ProcessLockAcquireTimeoutError),\n/* harmony export */   internals: () => (/* binding */ internals),\n/* harmony export */   navigatorLock: () => (/* binding */ navigatorLock),\n/* harmony export */   processLock: () => (/* binding */ processLock)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n\r\n/**\r\n * @experimental\r\n */\r\nconst internals = {\r\n    /**\r\n     * @experimental\r\n     */\r\n    debug: !!(globalThis &&\r\n        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)() &&\r\n        globalThis.localStorage &&\r\n        globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'),\r\n};\r\n/**\r\n * An error thrown when a lock cannot be acquired after some amount of time.\r\n *\r\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\r\n */\r\nclass LockAcquireTimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.isAcquireTimeout = true;\r\n    }\r\n}\r\nclass NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\r\n}\r\nclass ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\r\n}\r\n/**\r\n * Implements a global exclusive lock using the Navigator LockManager API. It\r\n * is available on all browsers released after 2022-03-15 with Safari being the\r\n * last one to release support. If the API is not available, this function will\r\n * throw. Make sure you check availablility before configuring {@link\r\n * GoTrueClient}.\r\n *\r\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\r\n * local storage item to `true`.\r\n *\r\n * Internals:\r\n *\r\n * Since the LockManager API does not preserve stack traces for the async\r\n * function passed in the `request` method, a trick is used where acquiring the\r\n * lock releases a previously started promise to run the operation in the `fn`\r\n * function. The lock waits for that promise to finish (with or without error),\r\n * while the function will finally wait for the result anyway.\r\n *\r\n * @param name Name of the lock to be acquired.\r\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\r\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\r\n *                       will time out after so many milliseconds. An error is\r\n *                       a timeout if it has `isAcquireTimeout` set to true.\r\n * @param fn The operation to run once the lock is acquired.\r\n */\r\nasync function navigatorLock(name, acquireTimeout, fn) {\r\n    if (internals.debug) {\r\n        console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\r\n    }\r\n    const abortController = new globalThis.AbortController();\r\n    if (acquireTimeout > 0) {\r\n        setTimeout(() => {\r\n            abortController.abort();\r\n            if (internals.debug) {\r\n                console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\r\n            }\r\n        }, acquireTimeout);\r\n    }\r\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\r\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\r\n    // libraries like zone.js patch the Promise object to track the execution\r\n    // context. However, it appears that most browsers use an internal promise\r\n    // implementation when using the navigator.locks.request() API causing them\r\n    // to lose context and emit confusing log messages or break certain features.\r\n    // This wrapping is believed to help zone.js track the execution context\r\n    // better.\r\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0\r\n        ? {\r\n            mode: 'exclusive',\r\n            ifAvailable: true,\r\n        }\r\n        : {\r\n            mode: 'exclusive',\r\n            signal: abortController.signal,\r\n        }, async (lock) => {\r\n        if (lock) {\r\n            if (internals.debug) {\r\n                console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\r\n            }\r\n            try {\r\n                return await fn();\r\n            }\r\n            finally {\r\n                if (internals.debug) {\r\n                    console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (acquireTimeout === 0) {\r\n                if (internals.debug) {\r\n                    console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\r\n                }\r\n                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\r\n            }\r\n            else {\r\n                if (internals.debug) {\r\n                    try {\r\n                        const result = await globalThis.navigator.locks.query();\r\n                        console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\r\n                    }\r\n                    catch (e) {\r\n                        console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\r\n                    }\r\n                }\r\n                // Browser is not following the Navigator LockManager spec, it\r\n                // returned a null lock when we didn't use ifAvailable. So we can\r\n                // pretend the lock is acquired in the name of backward compatibility\r\n                // and user experience and just run the function.\r\n                console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\r\n                return await fn();\r\n            }\r\n        }\r\n    }));\r\n}\r\nconst PROCESS_LOCKS = {};\r\n/**\r\n * Implements a global exclusive lock that works only in the current process.\r\n * Useful for environments like React Native or other non-browser\r\n * single-process (i.e. no concept of \"tabs\") environments.\r\n *\r\n * Use {@link #navigatorLock} in browser environments.\r\n *\r\n * @param name Name of the lock to be acquired.\r\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\r\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\r\n *                       will time out after so many milliseconds. An error is\r\n *                       a timeout if it has `isAcquireTimeout` set to true.\r\n * @param fn The operation to run once the lock is acquired.\r\n */\r\nasync function processLock(name, acquireTimeout, fn) {\r\n    var _a;\r\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\r\n    const currentOperation = Promise.race([\r\n        previousOperation.catch(() => {\r\n            // ignore error of previous operation that we're waiting to finish\r\n            return null;\r\n        }),\r\n        acquireTimeout >= 0\r\n            ? new Promise((_, reject) => {\r\n                setTimeout(() => {\r\n                    reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\r\n                }, acquireTimeout);\r\n            })\r\n            : null,\r\n    ].filter((x) => x))\r\n        .catch((e) => {\r\n        if (e && e.isAcquireTimeout) {\r\n            throw e;\r\n        }\r\n        return null;\r\n    })\r\n        .then(async () => {\r\n        // previous operations finished and we didn't get a race on the acquire\r\n        // timeout, so the current operation can finally start\r\n        return await fn();\r\n    });\r\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e) => {\r\n        if (e && e.isAcquireTimeout) {\r\n            // if the current operation timed out, it doesn't mean that the previous\r\n            // operation finished, so we need contnue waiting for it to finish\r\n            await previousOperation;\r\n            return null;\r\n        }\r\n        throw e;\r\n    });\r\n    // finally wait for the current operation to finish successfully, with an\r\n    // error or with an acquire timeout error\r\n    return await currentOperation;\r\n}\r\n//# sourceMappingURL=locks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   polyfillGlobalThis: () => (/* binding */ polyfillGlobalThis)\n/* harmony export */ });\n/**\r\n * https://mathiasbynens.be/notes/globalthis\r\n */\r\nfunction polyfillGlobalThis() {\r\n    if (typeof globalThis === 'object')\r\n        return;\r\n    try {\r\n        Object.defineProperty(Object.prototype, '__magic__', {\r\n            get: function () {\r\n                return this;\r\n            },\r\n            configurable: true,\r\n        });\r\n        // @ts-expect-error 'Allow access to magic'\r\n        __magic__.globalThis = __magic__;\r\n        // @ts-expect-error 'Allow access to magic'\r\n        delete Object.prototype.__magic__;\r\n    }\r\n    catch (e) {\r\n        if (typeof self !== 'undefined') {\r\n            // @ts-expect-error 'Allow access to globals'\r\n            self.globalThis = self;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=polyfills.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvcG9seWZpbGxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXHBvbHlmaWxscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2dsb2JhbHRoaXNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBwb2x5ZmlsbEdsb2JhbFRoaXMoKSB7XHJcbiAgICBpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE9iamVjdC5wcm90b3R5cGUsICdfX21hZ2ljX18nLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yICdBbGxvdyBhY2Nlc3MgdG8gbWFnaWMnXHJcbiAgICAgICAgX19tYWdpY19fLmdsb2JhbFRoaXMgPSBfX21hZ2ljX187XHJcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAnQWxsb3cgYWNjZXNzIHRvIG1hZ2ljJ1xyXG4gICAgICAgIGRlbGV0ZSBPYmplY3QucHJvdG90eXBlLl9fbWFnaWNfXztcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yICdBbGxvdyBhY2Nlc3MgdG8gZ2xvYmFscydcclxuICAgICAgICAgICAgc2VsZi5nbG9iYWxUaGlzID0gc2VsZjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9seWZpbGxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/types.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIGN_OUT_SCOPES: () => (/* binding */ SIGN_OUT_SCOPES)\n/* harmony export */ });\nconst SIGN_OUT_SCOPES = ['global', 'local', 'others'];\r\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXGF1dGgtanNcXGRpc3RcXG1vZHVsZVxcbGliXFx0eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU0lHTl9PVVRfU0NPUEVTID0gWydnbG9iYWwnLCAnbG9jYWwnLCAnb3RoZXJzJ107XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = '2.70.0';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXHZlcnNpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHZlcnNpb24gPSAnMi43MC4wJztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionsClient: () => (/* binding */ FunctionsClient)\n/* harmony export */ });\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nclass FunctionsClient {\r\n    constructor(url, { headers = {}, customFetch, region = _types__WEBPACK_IMPORTED_MODULE_0__.FunctionRegion.Any, } = {}) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.region = region;\r\n        this.fetch = (0,_helper__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(customFetch);\r\n    }\r\n    /**\r\n     * Updates the authorization header\r\n     * @param token - the new jwt token sent in the authorisation header\r\n     */\r\n    setAuth(token) {\r\n        this.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    /**\r\n     * Invokes a function\r\n     * @param functionName - The name of the Function to invoke.\r\n     * @param options - Options for invoking the Function.\r\n     */\r\n    invoke(functionName, options = {}) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { headers, method, body: functionArgs } = options;\r\n                let _headers = {};\r\n                let { region } = options;\r\n                if (!region) {\r\n                    region = this.region;\r\n                }\r\n                if (region && region !== 'any') {\r\n                    _headers['x-region'] = region;\r\n                }\r\n                let body;\r\n                if (functionArgs &&\r\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\r\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\r\n                        functionArgs instanceof ArrayBuffer) {\r\n                        // will work for File as File inherits Blob\r\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\r\n                        _headers['Content-Type'] = 'application/octet-stream';\r\n                        body = functionArgs;\r\n                    }\r\n                    else if (typeof functionArgs === 'string') {\r\n                        // plain string\r\n                        _headers['Content-Type'] = 'text/plain';\r\n                        body = functionArgs;\r\n                    }\r\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\r\n                        // don't set content-type headers\r\n                        // Request will automatically add the right boundary value\r\n                        body = functionArgs;\r\n                    }\r\n                    else {\r\n                        // default, assume this is JSON\r\n                        _headers['Content-Type'] = 'application/json';\r\n                        body = JSON.stringify(functionArgs);\r\n                    }\r\n                }\r\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\r\n                    method: method || 'POST',\r\n                    // headers priority is (high to low):\r\n                    // 1. invoke-level headers\r\n                    // 2. client-level headers\r\n                    // 3. default Content-Type header\r\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\r\n                    body,\r\n                }).catch((fetchError) => {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsFetchError(fetchError);\r\n                });\r\n                const isRelayError = response.headers.get('x-relay-error');\r\n                if (isRelayError && isRelayError === 'true') {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsRelayError(response);\r\n                }\r\n                if (!response.ok) {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsHttpError(response);\r\n                }\r\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\r\n                let data;\r\n                if (responseType === 'application/json') {\r\n                    data = yield response.json();\r\n                }\r\n                else if (responseType === 'application/octet-stream') {\r\n                    data = yield response.blob();\r\n                }\r\n                else if (responseType === 'text/event-stream') {\r\n                    data = response;\r\n                }\r\n                else if (responseType === 'multipart/form-data') {\r\n                    data = yield response.formData();\r\n                }\r\n                else {\r\n                    // default to text\r\n                    data = yield response.text();\r\n                }\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                return { data: null, error };\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=FunctionsClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/helper.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch)\n/* harmony export */ });\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\n//# sourceMappingURL=helper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZnVuY3Rpb25zLWpzL2Rpc3QvbW9kdWxlL2hlbHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHNMQUE4QixTQUFTLGdCQUFnQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcZnVuY3Rpb25zLWpzXFxkaXN0XFxtb2R1bGVcXGhlbHBlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmVzb2x2ZUZldGNoID0gKGN1c3RvbUZldGNoKSA9PiB7XHJcbiAgICBsZXQgX2ZldGNoO1xyXG4gICAgaWYgKGN1c3RvbUZldGNoKSB7XHJcbiAgICAgICAgX2ZldGNoID0gY3VzdG9tRmV0Y2g7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0eXBlb2YgZmV0Y2ggPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgX2ZldGNoID0gKC4uLmFyZ3MpID0+IGltcG9ydCgnQHN1cGFiYXNlL25vZGUtZmV0Y2gnKS50aGVuKCh7IGRlZmF1bHQ6IGZldGNoIH0pID0+IGZldGNoKC4uLmFyZ3MpKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIF9mZXRjaCA9IGZldGNoO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiBfZmV0Y2goLi4uYXJncyk7XHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/types.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionRegion: () => (/* binding */ FunctionRegion),\n/* harmony export */   FunctionsError: () => (/* binding */ FunctionsError),\n/* harmony export */   FunctionsFetchError: () => (/* binding */ FunctionsFetchError),\n/* harmony export */   FunctionsHttpError: () => (/* binding */ FunctionsHttpError),\n/* harmony export */   FunctionsRelayError: () => (/* binding */ FunctionsRelayError)\n/* harmony export */ });\nclass FunctionsError extends Error {\r\n    constructor(message, name = 'FunctionsError', context) {\r\n        super(message);\r\n        this.name = name;\r\n        this.context = context;\r\n    }\r\n}\r\nclass FunctionsFetchError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\r\n    }\r\n}\r\nclass FunctionsRelayError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\r\n    }\r\n}\r\nclass FunctionsHttpError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\r\n    }\r\n}\r\n// Define the enum for the 'region' property\r\nvar FunctionRegion;\r\n(function (FunctionRegion) {\r\n    FunctionRegion[\"Any\"] = \"any\";\r\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\r\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\r\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\r\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\r\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\r\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\r\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\r\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\r\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\r\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\r\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\r\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\r\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\r\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\r\n})(FunctionRegion || (FunctionRegion = {}));\r\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZnVuY3Rpb25zLWpzL2Rpc3QvbW9kdWxlL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUN6QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcZnVuY3Rpb25zLWpzXFxkaXN0XFxtb2R1bGVcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBGdW5jdGlvbnNFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG5hbWUgPSAnRnVuY3Rpb25zRXJyb3InLCBjb250ZXh0KSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBGdW5jdGlvbnNGZXRjaEVycm9yIGV4dGVuZHMgRnVuY3Rpb25zRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCkge1xyXG4gICAgICAgIHN1cGVyKCdGYWlsZWQgdG8gc2VuZCBhIHJlcXVlc3QgdG8gdGhlIEVkZ2UgRnVuY3Rpb24nLCAnRnVuY3Rpb25zRmV0Y2hFcnJvcicsIGNvbnRleHQpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBGdW5jdGlvbnNSZWxheUVycm9yIGV4dGVuZHMgRnVuY3Rpb25zRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCkge1xyXG4gICAgICAgIHN1cGVyKCdSZWxheSBFcnJvciBpbnZva2luZyB0aGUgRWRnZSBGdW5jdGlvbicsICdGdW5jdGlvbnNSZWxheUVycm9yJywgY29udGV4dCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEZ1bmN0aW9uc0h0dHBFcnJvciBleHRlbmRzIEZ1bmN0aW9uc0Vycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcclxuICAgICAgICBzdXBlcignRWRnZSBGdW5jdGlvbiByZXR1cm5lZCBhIG5vbi0yeHggc3RhdHVzIGNvZGUnLCAnRnVuY3Rpb25zSHR0cEVycm9yJywgY29udGV4dCk7XHJcbiAgICB9XHJcbn1cclxuLy8gRGVmaW5lIHRoZSBlbnVtIGZvciB0aGUgJ3JlZ2lvbicgcHJvcGVydHlcclxuZXhwb3J0IHZhciBGdW5jdGlvblJlZ2lvbjtcclxuKGZ1bmN0aW9uIChGdW5jdGlvblJlZ2lvbikge1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJBbnlcIl0gPSBcImFueVwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcE5vcnRoZWFzdDFcIl0gPSBcImFwLW5vcnRoZWFzdC0xXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFwTm9ydGhlYXN0MlwiXSA9IFwiYXAtbm9ydGhlYXN0LTJcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQXBTb3V0aDFcIl0gPSBcImFwLXNvdXRoLTFcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQXBTb3V0aGVhc3QxXCJdID0gXCJhcC1zb3V0aGVhc3QtMVwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcFNvdXRoZWFzdDJcIl0gPSBcImFwLXNvdXRoZWFzdC0yXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkNhQ2VudHJhbDFcIl0gPSBcImNhLWNlbnRyYWwtMVwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJFdUNlbnRyYWwxXCJdID0gXCJldS1jZW50cmFsLTFcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiRXVXZXN0MVwiXSA9IFwiZXUtd2VzdC0xXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkV1V2VzdDJcIl0gPSBcImV1LXdlc3QtMlwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJFdVdlc3QzXCJdID0gXCJldS13ZXN0LTNcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiU2FFYXN0MVwiXSA9IFwic2EtZWFzdC0xXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIlVzRWFzdDFcIl0gPSBcInVzLWVhc3QtMVwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJVc1dlc3QxXCJdID0gXCJ1cy13ZXN0LTFcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiVXNXZXN0MlwiXSA9IFwidXMtd2VzdC0yXCI7XHJcbn0pKEZ1bmN0aW9uUmVnaW9uIHx8IChGdW5jdGlvblJlZ2lvbiA9IHt9KSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/@supabase/node-fetch/browser.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n\r\n\r\n// ref: https://github.com/tc39/proposal-global\r\nvar getGlobal = function() {\r\n    // the only reliable means to get the global object is\r\n    // `Function('return this')()`\r\n    // However, this causes CSP violations in Chrome apps.\r\n    if (typeof self !== 'undefined') { return self; }\r\n    if (typeof window !== 'undefined') { return window; }\r\n    if (typeof __webpack_require__.g !== 'undefined') { return __webpack_require__.g; }\r\n    throw new Error('unable to locate global object');\r\n}\r\n\r\nvar globalObject = getGlobal();\r\n\r\nconst fetch = globalObject.fetch;\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (globalObject.fetch.bind(globalObject));\r\n\r\nconst Headers = globalObject.Headers;\r\nconst Request = globalObject.Request;\r\nconst Response = globalObject.Response;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvbm9kZS1mZXRjaC9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMseUNBQXlDO0FBQ3pDLGVBQWUscUJBQU0sb0JBQW9CLE9BQU8scUJBQU07QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpRUFBZSxxQ0FBcUMsRUFBQztBQUNyRDtBQUNPO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcbm9kZS1mZXRjaFxcYnJvd3Nlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXHJcbnZhciBnZXRHbG9iYWwgPSBmdW5jdGlvbigpIHtcclxuICAgIC8vIHRoZSBvbmx5IHJlbGlhYmxlIG1lYW5zIHRvIGdldCB0aGUgZ2xvYmFsIG9iamVjdCBpc1xyXG4gICAgLy8gYEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKClgXHJcbiAgICAvLyBIb3dldmVyLCB0aGlzIGNhdXNlcyBDU1AgdmlvbGF0aW9ucyBpbiBDaHJvbWUgYXBwcy5cclxuICAgIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHsgcmV0dXJuIHNlbGY7IH1cclxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gd2luZG93OyB9XHJcbiAgICBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHsgcmV0dXJuIGdsb2JhbDsgfVxyXG4gICAgdGhyb3cgbmV3IEVycm9yKCd1bmFibGUgdG8gbG9jYXRlIGdsb2JhbCBvYmplY3QnKTtcclxufVxyXG5cclxudmFyIGdsb2JhbE9iamVjdCA9IGdldEdsb2JhbCgpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoID0gZ2xvYmFsT2JqZWN0LmZldGNoO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZ2xvYmFsT2JqZWN0LmZldGNoLmJpbmQoZ2xvYmFsT2JqZWN0KTtcclxuXHJcbmV4cG9ydCBjb25zdCBIZWFkZXJzID0gZ2xvYmFsT2JqZWN0LkhlYWRlcnM7XHJcbmV4cG9ydCBjb25zdCBSZXF1ZXN0ID0gZ2xvYmFsT2JqZWN0LlJlcXVlc3Q7XHJcbmV4cG9ydCBjb25zdCBSZXNwb25zZSA9IGdsb2JhbE9iamVjdC5SZXNwb25zZTtcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n// @ts-ignore\r\nconst node_fetch_1 = __importDefault(__webpack_require__(/*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\"));\r\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\r\nclass PostgrestBuilder {\r\n    constructor(builder) {\r\n        this.shouldThrowOnError = false;\r\n        this.method = builder.method;\r\n        this.url = builder.url;\r\n        this.headers = builder.headers;\r\n        this.schema = builder.schema;\r\n        this.body = builder.body;\r\n        this.shouldThrowOnError = builder.shouldThrowOnError;\r\n        this.signal = builder.signal;\r\n        this.isMaybeSingle = builder.isMaybeSingle;\r\n        if (builder.fetch) {\r\n            this.fetch = builder.fetch;\r\n        }\r\n        else if (typeof fetch === 'undefined') {\r\n            this.fetch = node_fetch_1.default;\r\n        }\r\n        else {\r\n            this.fetch = fetch;\r\n        }\r\n    }\r\n    /**\r\n     * If there's an error with the query, throwOnError will reject the promise by\r\n     * throwing the error instead of returning it as part of a successful response.\r\n     *\r\n     * {@link https://github.com/supabase/supabase-js/issues/92}\r\n     */\r\n    throwOnError() {\r\n        this.shouldThrowOnError = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Set an HTTP header for the request.\r\n     */\r\n    setHeader(name, value) {\r\n        this.headers = Object.assign({}, this.headers);\r\n        this.headers[name] = value;\r\n        return this;\r\n    }\r\n    then(onfulfilled, onrejected) {\r\n        // https://postgrest.org/en/stable/api.html#switching-schemas\r\n        if (this.schema === undefined) {\r\n            // skip\r\n        }\r\n        else if (['GET', 'HEAD'].includes(this.method)) {\r\n            this.headers['Accept-Profile'] = this.schema;\r\n        }\r\n        else {\r\n            this.headers['Content-Profile'] = this.schema;\r\n        }\r\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\r\n            this.headers['Content-Type'] = 'application/json';\r\n        }\r\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\r\n        // https://github.com/supabase/postgrest-js/pull/247\r\n        const _fetch = this.fetch;\r\n        let res = _fetch(this.url.toString(), {\r\n            method: this.method,\r\n            headers: this.headers,\r\n            body: JSON.stringify(this.body),\r\n            signal: this.signal,\r\n        }).then(async (res) => {\r\n            var _a, _b, _c;\r\n            let error = null;\r\n            let data = null;\r\n            let count = null;\r\n            let status = res.status;\r\n            let statusText = res.statusText;\r\n            if (res.ok) {\r\n                if (this.method !== 'HEAD') {\r\n                    const body = await res.text();\r\n                    if (body === '') {\r\n                        // Prefer: return=minimal\r\n                    }\r\n                    else if (this.headers['Accept'] === 'text/csv') {\r\n                        data = body;\r\n                    }\r\n                    else if (this.headers['Accept'] &&\r\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\r\n                        data = body;\r\n                    }\r\n                    else {\r\n                        data = JSON.parse(body);\r\n                    }\r\n                }\r\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\r\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\r\n                if (countHeader && contentRange && contentRange.length > 1) {\r\n                    count = parseInt(contentRange[1]);\r\n                }\r\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\r\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\r\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\r\n                    if (data.length > 1) {\r\n                        error = {\r\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\r\n                            code: 'PGRST116',\r\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\r\n                            hint: null,\r\n                            message: 'JSON object requested, multiple (or no) rows returned',\r\n                        };\r\n                        data = null;\r\n                        count = null;\r\n                        status = 406;\r\n                        statusText = 'Not Acceptable';\r\n                    }\r\n                    else if (data.length === 1) {\r\n                        data = data[0];\r\n                    }\r\n                    else {\r\n                        data = null;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                const body = await res.text();\r\n                try {\r\n                    error = JSON.parse(body);\r\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\r\n                    if (Array.isArray(error) && res.status === 404) {\r\n                        data = [];\r\n                        error = null;\r\n                        status = 200;\r\n                        statusText = 'OK';\r\n                    }\r\n                }\r\n                catch (_d) {\r\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\r\n                    if (res.status === 404 && body === '') {\r\n                        status = 204;\r\n                        statusText = 'No Content';\r\n                    }\r\n                    else {\r\n                        error = {\r\n                            message: body,\r\n                        };\r\n                    }\r\n                }\r\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('0 rows'))) {\r\n                    error = null;\r\n                    status = 200;\r\n                    statusText = 'OK';\r\n                }\r\n                if (error && this.shouldThrowOnError) {\r\n                    throw new PostgrestError_1.default(error);\r\n                }\r\n            }\r\n            const postgrestResponse = {\r\n                error,\r\n                data,\r\n                count,\r\n                status,\r\n                statusText,\r\n            };\r\n            return postgrestResponse;\r\n        });\r\n        if (!this.shouldThrowOnError) {\r\n            res = res.catch((fetchError) => {\r\n                var _a, _b, _c;\r\n                return ({\r\n                    error: {\r\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\r\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\r\n                        hint: '',\r\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\r\n                    },\r\n                    data: null,\r\n                    count: null,\r\n                    status: 0,\r\n                    statusText: '',\r\n                });\r\n            });\r\n        }\r\n        return res.then(onfulfilled, onrejected);\r\n    }\r\n    /**\r\n     * Override the type of the returned `data`.\r\n     *\r\n     * @typeParam NewResult - The new result type to override with\r\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\r\n     */\r\n    returns() {\r\n        /* istanbul ignore next */\r\n        return this;\r\n    }\r\n    /**\r\n     * Override the type of the returned `data` field in the response.\r\n     *\r\n     * @typeParam NewResult - The new type to cast the response data to\r\n     * @typeParam Options - Optional type configuration (defaults to { merge: true })\r\n     * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\r\n     * @example\r\n     * ```typescript\r\n     * // Merge with existing types (default behavior)\r\n     * const query = supabase\r\n     *   .from('users')\r\n     *   .select()\r\n     *   .overrideTypes<{ custom_field: string }>()\r\n     *\r\n     * // Replace existing types completely\r\n     * const replaceQuery = supabase\r\n     *   .from('users')\r\n     *   .select()\r\n     *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\r\n     * ```\r\n     * @returns A PostgrestBuilder instance with the new type\r\n     */\r\n    overrideTypes() {\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestBuilder;\r\n//# sourceMappingURL=PostgrestBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\r\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\");\r\n/**\r\n * PostgREST client.\r\n *\r\n * @typeParam Database - Types for the schema from the [type\r\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\r\n *\r\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\r\n * literal, the same one passed to the constructor. If the schema is not\r\n * `\"public\"`, this must be supplied manually.\r\n */\r\nclass PostgrestClient {\r\n    // TODO: Add back shouldThrowOnError once we figure out the typings\r\n    /**\r\n     * Creates a PostgREST client.\r\n     *\r\n     * @param url - URL of the PostgREST endpoint\r\n     * @param options - Named parameters\r\n     * @param options.headers - Custom headers\r\n     * @param options.schema - Postgres schema to switch to\r\n     * @param options.fetch - Custom fetch\r\n     */\r\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\r\n        this.url = url;\r\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\r\n        this.schemaName = schema;\r\n        this.fetch = fetch;\r\n    }\r\n    /**\r\n     * Perform a query on a table or a view.\r\n     *\r\n     * @param relation - The table or view name to query\r\n     */\r\n    from(relation) {\r\n        const url = new URL(`${this.url}/${relation}`);\r\n        return new PostgrestQueryBuilder_1.default(url, {\r\n            headers: Object.assign({}, this.headers),\r\n            schema: this.schemaName,\r\n            fetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Select a schema to query or perform an function (rpc) call.\r\n     *\r\n     * The schema needs to be on the list of exposed schemas inside Supabase.\r\n     *\r\n     * @param schema - The schema to query\r\n     */\r\n    schema(schema) {\r\n        return new PostgrestClient(this.url, {\r\n            headers: this.headers,\r\n            schema,\r\n            fetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Perform a function call.\r\n     *\r\n     * @param fn - The function name to call\r\n     * @param args - The arguments to pass to the function call\r\n     * @param options - Named parameters\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     * @param options.get - When set to `true`, the function will be called with\r\n     * read-only access mode.\r\n     * @param options.count - Count algorithm to use to count rows returned by the\r\n     * function. Only applicable for [set-returning\r\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    rpc(fn, args = {}, { head = false, get = false, count, } = {}) {\r\n        let method;\r\n        const url = new URL(`${this.url}/rpc/${fn}`);\r\n        let body;\r\n        if (head || get) {\r\n            method = head ? 'HEAD' : 'GET';\r\n            Object.entries(args)\r\n                // params with undefined value needs to be filtered out, otherwise it'll\r\n                // show up as `?param=undefined`\r\n                .filter(([_, value]) => value !== undefined)\r\n                // array values need special syntax\r\n                .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\r\n                .forEach(([name, value]) => {\r\n                url.searchParams.append(name, value);\r\n            });\r\n        }\r\n        else {\r\n            method = 'POST';\r\n            body = args;\r\n        }\r\n        const headers = Object.assign({}, this.headers);\r\n        if (count) {\r\n            headers['Prefer'] = `count=${count}`;\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url,\r\n            headers,\r\n            schema: this.schemaName,\r\n            body,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestClient;\r\n//# sourceMappingURL=PostgrestClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n/**\r\n * Error format\r\n *\r\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\r\n */\r\nclass PostgrestError extends Error {\r\n    constructor(context) {\r\n        super(context.message);\r\n        this.name = 'PostgrestError';\r\n        this.details = context.details;\r\n        this.hint = context.hint;\r\n        this.code = context.code;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestError;\r\n//# sourceMappingURL=PostgrestError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL1Bvc3RncmVzdEVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHBvc3RncmVzdC1qc1xcZGlzdFxcY2pzXFxQb3N0Z3Jlc3RFcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG4vKipcclxuICogRXJyb3IgZm9ybWF0XHJcbiAqXHJcbiAqIHtAbGluayBodHRwczovL3Bvc3RncmVzdC5vcmcvZW4vc3RhYmxlL2FwaS5odG1sP2hpZ2hsaWdodD1vcHRpb25zI2Vycm9ycy1hbmQtaHR0cC1zdGF0dXMtY29kZXN9XHJcbiAqL1xyXG5jbGFzcyBQb3N0Z3Jlc3RFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcclxuICAgICAgICBzdXBlcihjb250ZXh0Lm1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdQb3N0Z3Jlc3RFcnJvcic7XHJcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gY29udGV4dC5kZXRhaWxzO1xyXG4gICAgICAgIHRoaXMuaGludCA9IGNvbnRleHQuaGludDtcclxuICAgICAgICB0aGlzLmNvZGUgPSBjb250ZXh0LmNvZGU7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5kZWZhdWx0ID0gUG9zdGdyZXN0RXJyb3I7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBvc3RncmVzdEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\r\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\r\n    /**\r\n     * Match only rows where `column` is equal to `value`.\r\n     *\r\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    eq(column, value) {\r\n        this.url.searchParams.append(column, `eq.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is not equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    neq(column, value) {\r\n        this.url.searchParams.append(column, `neq.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is greater than `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    gt(column, value) {\r\n        this.url.searchParams.append(column, `gt.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is greater than or equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    gte(column, value) {\r\n        this.url.searchParams.append(column, `gte.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is less than `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    lt(column, value) {\r\n        this.url.searchParams.append(column, `lt.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is less than or equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    lte(column, value) {\r\n        this.url.searchParams.append(column, `lte.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches `pattern` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param pattern - The pattern to match with\r\n     */\r\n    like(column, pattern) {\r\n        this.url.searchParams.append(column, `like.${pattern}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    likeAllOf(column, patterns) {\r\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    likeAnyOf(column, patterns) {\r\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches `pattern` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param pattern - The pattern to match with\r\n     */\r\n    ilike(column, pattern) {\r\n        this.url.searchParams.append(column, `ilike.${pattern}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    ilikeAllOf(column, patterns) {\r\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    ilikeAnyOf(column, patterns) {\r\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` IS `value`.\r\n     *\r\n     * For non-boolean columns, this is only relevant for checking if the value of\r\n     * `column` is NULL by setting `value` to `null`.\r\n     *\r\n     * For boolean columns, you can also set `value` to `true` or `false` and it\r\n     * will behave the same way as `.eq()`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    is(column, value) {\r\n        this.url.searchParams.append(column, `is.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is included in the `values` array.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param values - The values array to filter with\r\n     */\r\n    in(column, values) {\r\n        const cleanedValues = Array.from(new Set(values))\r\n            .map((s) => {\r\n            // handle postgrest reserved characters\r\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\r\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\r\n                return `\"${s}\"`;\r\n            else\r\n                return `${s}`;\r\n        })\r\n            .join(',');\r\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for jsonb, array, and range columns. Match only rows where\r\n     * `column` contains every element appearing in `value`.\r\n     *\r\n     * @param column - The jsonb, array, or range column to filter on\r\n     * @param value - The jsonb, array, or range value to filter with\r\n     */\r\n    contains(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\r\n            // keep it simple and accept a string\r\n            this.url.searchParams.append(column, `cs.${value}`);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            // array\r\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\r\n        }\r\n        else {\r\n            // json\r\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for jsonb, array, and range columns. Match only rows where\r\n     * every element appearing in `column` is contained by `value`.\r\n     *\r\n     * @param column - The jsonb, array, or range column to filter on\r\n     * @param value - The jsonb, array, or range value to filter with\r\n     */\r\n    containedBy(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range\r\n            this.url.searchParams.append(column, `cd.${value}`);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            // array\r\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\r\n        }\r\n        else {\r\n            // json\r\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is greater than any element in `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeGt(column, range) {\r\n        this.url.searchParams.append(column, `sr.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is either contained in `range` or greater than any element in\r\n     * `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeGte(column, range) {\r\n        this.url.searchParams.append(column, `nxl.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is less than any element in `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeLt(column, range) {\r\n        this.url.searchParams.append(column, `sl.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is either contained in `range` or less than any element in\r\n     * `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeLte(column, range) {\r\n        this.url.searchParams.append(column, `nxr.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where `column` is\r\n     * mutually exclusive to `range` and there can be no element between the two\r\n     * ranges.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeAdjacent(column, range) {\r\n        this.url.searchParams.append(column, `adj.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for array and range columns. Match only rows where\r\n     * `column` and `value` have an element in common.\r\n     *\r\n     * @param column - The array or range column to filter on\r\n     * @param value - The array or range value to filter with\r\n     */\r\n    overlaps(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range\r\n            this.url.searchParams.append(column, `ov.${value}`);\r\n        }\r\n        else {\r\n            // array\r\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for text and tsvector columns. Match only rows where\r\n     * `column` matches the query string in `query`.\r\n     *\r\n     * @param column - The text or tsvector column to filter on\r\n     * @param query - The query text to match with\r\n     * @param options - Named parameters\r\n     * @param options.config - The text search configuration to use\r\n     * @param options.type - Change how the `query` text is interpreted\r\n     */\r\n    textSearch(column, query, { config, type } = {}) {\r\n        let typePart = '';\r\n        if (type === 'plain') {\r\n            typePart = 'pl';\r\n        }\r\n        else if (type === 'phrase') {\r\n            typePart = 'ph';\r\n        }\r\n        else if (type === 'websearch') {\r\n            typePart = 'w';\r\n        }\r\n        const configPart = config === undefined ? '' : `(${config})`;\r\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where each column in `query` keys is equal to its\r\n     * associated value. Shorthand for multiple `.eq()`s.\r\n     *\r\n     * @param query - The object to filter with, with column names as keys mapped\r\n     * to their filter values\r\n     */\r\n    match(query) {\r\n        Object.entries(query).forEach(([column, value]) => {\r\n            this.url.searchParams.append(column, `eq.${value}`);\r\n        });\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which doesn't satisfy the filter.\r\n     *\r\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\r\n     * follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure they are properly sanitized.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param operator - The operator to be negated to filter with, following\r\n     * PostgREST syntax\r\n     * @param value - The value to filter with, following PostgREST syntax\r\n     */\r\n    not(column, operator, value) {\r\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which satisfy at least one of the filters.\r\n     *\r\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure it's properly sanitized.\r\n     *\r\n     * It's currently not possible to do an `.or()` filter across multiple tables.\r\n     *\r\n     * @param filters - The filters to use, following PostgREST syntax\r\n     * @param options - Named parameters\r\n     * @param options.referencedTable - Set this to filter on referenced tables\r\n     * instead of the parent table\r\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\r\n     */\r\n    or(filters, { foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const key = referencedTable ? `${referencedTable}.or` : 'or';\r\n        this.url.searchParams.append(key, `(${filters})`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which satisfy the filter. This is an escape hatch - you\r\n     * should use the specific filter methods wherever possible.\r\n     *\r\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\r\n     * follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure they are properly sanitized.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param operator - The operator to filter with, following PostgREST syntax\r\n     * @param value - The value to filter with, following PostgREST syntax\r\n     */\r\n    filter(column, operator, value) {\r\n        this.url.searchParams.append(column, `${operator}.${value}`);\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestFilterBuilder;\r\n//# sourceMappingURL=PostgrestFilterBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\r\nclass PostgrestQueryBuilder {\r\n    constructor(url, { headers = {}, schema, fetch, }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.schema = schema;\r\n        this.fetch = fetch;\r\n    }\r\n    /**\r\n     * Perform a SELECT query on the table or view.\r\n     *\r\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     *\r\n     * @param options.count - Count algorithm to use to count rows in the table or view.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    select(columns, { head = false, count, } = {}) {\r\n        const method = head ? 'HEAD' : 'GET';\r\n        // Remove whitespaces except when quoted\r\n        let quoted = false;\r\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\r\n            .split('')\r\n            .map((c) => {\r\n            if (/\\s/.test(c) && !quoted) {\r\n                return '';\r\n            }\r\n            if (c === '\"') {\r\n                quoted = !quoted;\r\n            }\r\n            return c;\r\n        })\r\n            .join('');\r\n        this.url.searchParams.set('select', cleanedColumns);\r\n        if (count) {\r\n            this.headers['Prefer'] = `count=${count}`;\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an INSERT into the table or view.\r\n     *\r\n     * By default, inserted rows are not returned. To return it, chain the call\r\n     * with `.select()`.\r\n     *\r\n     * @param values - The values to insert. Pass an object to insert a single row\r\n     * or an array to insert multiple rows.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count inserted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     *\r\n     * @param options.defaultToNull - Make missing fields default to `null`.\r\n     * Otherwise, use the default value for the column. Only applies for bulk\r\n     * inserts.\r\n     */\r\n    insert(values, { count, defaultToNull = true, } = {}) {\r\n        const method = 'POST';\r\n        const prefersHeaders = [];\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (!defaultToNull) {\r\n            prefersHeaders.push('missing=default');\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        if (Array.isArray(values)) {\r\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\r\n            if (columns.length > 0) {\r\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\r\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\r\n            }\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\r\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\r\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\r\n     * exist, or if it does exist, perform an alternative action depending on\r\n     * `ignoreDuplicates`.\r\n     *\r\n     * By default, upserted rows are not returned. To return it, chain the call\r\n     * with `.select()`.\r\n     *\r\n     * @param values - The values to upsert with. Pass an object to upsert a\r\n     * single row or an array to upsert multiple rows.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\r\n     * duplicate rows are determined. Two rows are duplicates if all the\r\n     * `onConflict` columns are equal.\r\n     *\r\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\r\n     * `false`, duplicate rows are merged with existing rows.\r\n     *\r\n     * @param options.count - Count algorithm to use to count upserted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     *\r\n     * @param options.defaultToNull - Make missing fields default to `null`.\r\n     * Otherwise, use the default value for the column. This only applies when\r\n     * inserting new rows, not when merging with existing rows under\r\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\r\n     */\r\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\r\n        const method = 'POST';\r\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\r\n        if (onConflict !== undefined)\r\n            this.url.searchParams.set('on_conflict', onConflict);\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (!defaultToNull) {\r\n            prefersHeaders.push('missing=default');\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        if (Array.isArray(values)) {\r\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\r\n            if (columns.length > 0) {\r\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\r\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\r\n            }\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an UPDATE on the table or view.\r\n     *\r\n     * By default, updated rows are not returned. To return it, chain the call\r\n     * with `.select()` after filters.\r\n     *\r\n     * @param values - The values to update with\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count updated rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    update(values, { count, } = {}) {\r\n        const method = 'PATCH';\r\n        const prefersHeaders = [];\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform a DELETE on the table or view.\r\n     *\r\n     * By default, deleted rows are not returned. To return it, chain the call\r\n     * with `.select()` after filters.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count deleted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    delete({ count, } = {}) {\r\n        const method = 'DELETE';\r\n        const prefersHeaders = [];\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.unshift(this.headers['Prefer']);\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestQueryBuilder;\r\n//# sourceMappingURL=PostgrestQueryBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\r\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\r\n    /**\r\n     * Perform a SELECT on the query result.\r\n     *\r\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\r\n     * return modified rows. By calling this method, modified rows are returned in\r\n     * `data`.\r\n     *\r\n     * @param columns - The columns to retrieve, separated by commas\r\n     */\r\n    select(columns) {\r\n        // Remove whitespaces except when quoted\r\n        let quoted = false;\r\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\r\n            .split('')\r\n            .map((c) => {\r\n            if (/\\s/.test(c) && !quoted) {\r\n                return '';\r\n            }\r\n            if (c === '\"') {\r\n                quoted = !quoted;\r\n            }\r\n            return c;\r\n        })\r\n            .join('');\r\n        this.url.searchParams.set('select', cleanedColumns);\r\n        if (this.headers['Prefer']) {\r\n            this.headers['Prefer'] += ',';\r\n        }\r\n        this.headers['Prefer'] += 'return=representation';\r\n        return this;\r\n    }\r\n    /**\r\n     * Order the query result by `column`.\r\n     *\r\n     * You can call this method multiple times to order by multiple columns.\r\n     *\r\n     * You can order referenced tables, but it only affects the ordering of the\r\n     * parent table if you use `!inner` in the query.\r\n     *\r\n     * @param column - The column to order by\r\n     * @param options - Named parameters\r\n     * @param options.ascending - If `true`, the result will be in ascending order\r\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\r\n     * `null`s appear last.\r\n     * @param options.referencedTable - Set this to order a referenced table by\r\n     * its columns\r\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\r\n     * instead\r\n     */\r\n    order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const key = referencedTable ? `${referencedTable}.order` : 'order';\r\n        const existingOrder = this.url.searchParams.get(key);\r\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Limit the query result by `count`.\r\n     *\r\n     * @param count - The maximum number of rows to return\r\n     * @param options - Named parameters\r\n     * @param options.referencedTable - Set this to limit rows of referenced\r\n     * tables instead of the parent table\r\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\r\n     * instead\r\n     */\r\n    limit(count, { foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\r\n        this.url.searchParams.set(key, `${count}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\r\n     * Only records within this range are returned.\r\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\r\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\r\n     * and fourth rows of the query.\r\n     *\r\n     * @param from - The starting index from which to limit the result\r\n     * @param to - The last index to which to limit the result\r\n     * @param options - Named parameters\r\n     * @param options.referencedTable - Set this to limit rows of referenced\r\n     * tables instead of the parent table\r\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\r\n     * instead\r\n     */\r\n    range(from, to, { foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const keyOffset = typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`;\r\n        const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\r\n        this.url.searchParams.set(keyOffset, `${from}`);\r\n        // Range is inclusive, so add 1\r\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the AbortSignal for the fetch request.\r\n     *\r\n     * @param signal - The AbortSignal to use for the fetch request\r\n     */\r\n    abortSignal(signal) {\r\n        this.signal = signal;\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a single object instead of an array of objects.\r\n     *\r\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\r\n     * returns an error.\r\n     */\r\n    single() {\r\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a single object instead of an array of objects.\r\n     *\r\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\r\n     * this returns an error.\r\n     */\r\n    maybeSingle() {\r\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\r\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\r\n        if (this.method === 'GET') {\r\n            this.headers['Accept'] = 'application/json';\r\n        }\r\n        else {\r\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\r\n        }\r\n        this.isMaybeSingle = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a string in CSV format.\r\n     */\r\n    csv() {\r\n        this.headers['Accept'] = 'text/csv';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\r\n     */\r\n    geojson() {\r\n        this.headers['Accept'] = 'application/geo+json';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as the EXPLAIN plan for the query.\r\n     *\r\n     * You need to enable the\r\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\r\n     * setting before using this method.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.analyze - If `true`, the query will be executed and the\r\n     * actual run time will be returned\r\n     *\r\n     * @param options.verbose - If `true`, the query identifier will be returned\r\n     * and `data` will include the output columns of the query\r\n     *\r\n     * @param options.settings - If `true`, include information on configuration\r\n     * parameters that affect query planning\r\n     *\r\n     * @param options.buffers - If `true`, include information on buffer usage\r\n     *\r\n     * @param options.wal - If `true`, include information on WAL record generation\r\n     *\r\n     * @param options.format - The format of the output, can be `\"text\"` (default)\r\n     * or `\"json\"`\r\n     */\r\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\r\n        var _a;\r\n        const options = [\r\n            analyze ? 'analyze' : null,\r\n            verbose ? 'verbose' : null,\r\n            settings ? 'settings' : null,\r\n            buffers ? 'buffers' : null,\r\n            wal ? 'wal' : null,\r\n        ]\r\n            .filter(Boolean)\r\n            .join('|');\r\n        // An Accept header can carry multiple media types but postgrest-js always sends one\r\n        const forMediatype = (_a = this.headers['Accept']) !== null && _a !== void 0 ? _a : 'application/json';\r\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\r\n        if (format === 'json')\r\n            return this;\r\n        else\r\n            return this;\r\n    }\r\n    /**\r\n     * Rollback the query.\r\n     *\r\n     * `data` will still be returned, but the query is not committed.\r\n     */\r\n    rollback() {\r\n        var _a;\r\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\r\n            this.headers['Prefer'] += ',tx=rollback';\r\n        }\r\n        else {\r\n            this.headers['Prefer'] = 'tx=rollback';\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Override the type of the returned `data`.\r\n     *\r\n     * @typeParam NewResult - The new result type to override with\r\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\r\n     */\r\n    returns() {\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestTransformBuilder;\r\n//# sourceMappingURL=PostgrestTransformBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/constants.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DEFAULT_HEADERS = void 0;\r\nconst version_1 = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js\");\r\nexports.DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version_1.version}` };\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsa0JBQWtCLG1CQUFPLENBQUMsZ0dBQVc7QUFDckMsdUJBQXVCLEtBQUssaUNBQWlDLGtCQUFrQjtBQUMvRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccG9zdGdyZXN0LWpzXFxkaXN0XFxjanNcXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLkRFRkFVTFRfSEVBREVSUyA9IHZvaWQgMDtcclxuY29uc3QgdmVyc2lvbl8xID0gcmVxdWlyZShcIi4vdmVyc2lvblwiKTtcclxuZXhwb3J0cy5ERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHBvc3RncmVzdC1qcy8ke3ZlcnNpb25fMS52ZXJzaW9ufWAgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\r\n// Always update wrapper.mjs when updating this file.\r\nconst PostgrestClient_1 = __importDefault(__webpack_require__(/*! ./PostgrestClient */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\"));\r\nexports.PostgrestClient = PostgrestClient_1.default;\r\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\r\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\r\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\r\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\r\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\r\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\r\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\r\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\r\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\r\nexports.PostgrestError = PostgrestError_1.default;\r\nexports[\"default\"] = {\r\n    PostgrestClient: PostgrestClient_1.default,\r\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\r\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\r\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\r\n    PostgrestBuilder: PostgrestBuilder_1.default,\r\n    PostgrestError: PostgrestError_1.default,\r\n};\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsd0JBQXdCLEdBQUcsaUNBQWlDLEdBQUcsOEJBQThCLEdBQUcsNkJBQTZCLEdBQUcsdUJBQXVCO0FBQ2hMO0FBQ0EsMENBQTBDLG1CQUFPLENBQUMsZ0hBQW1CO0FBQ3JFLHVCQUF1QjtBQUN2QixnREFBZ0QsbUJBQU8sQ0FBQyw0SEFBeUI7QUFDakYsNkJBQTZCO0FBQzdCLGlEQUFpRCxtQkFBTyxDQUFDLDhIQUEwQjtBQUNuRiw4QkFBOEI7QUFDOUIsb0RBQW9ELG1CQUFPLENBQUMsb0lBQTZCO0FBQ3pGLGlDQUFpQztBQUNqQywyQ0FBMkMsbUJBQU8sQ0FBQyxrSEFBb0I7QUFDdkUsd0JBQXdCO0FBQ3hCLHlDQUF5QyxtQkFBTyxDQUFDLDhHQUFrQjtBQUNuRSxzQkFBc0I7QUFDdEIsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxwb3N0Z3Jlc3QtanNcXGRpc3RcXGNqc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xyXG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5Qb3N0Z3Jlc3RFcnJvciA9IGV4cG9ydHMuUG9zdGdyZXN0QnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0RmlsdGVyQnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0UXVlcnlCdWlsZGVyID0gZXhwb3J0cy5Qb3N0Z3Jlc3RDbGllbnQgPSB2b2lkIDA7XHJcbi8vIEFsd2F5cyB1cGRhdGUgd3JhcHBlci5tanMgd2hlbiB1cGRhdGluZyB0aGlzIGZpbGUuXHJcbmNvbnN0IFBvc3RncmVzdENsaWVudF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdENsaWVudFwiKSk7XHJcbmV4cG9ydHMuUG9zdGdyZXN0Q2xpZW50ID0gUG9zdGdyZXN0Q2xpZW50XzEuZGVmYXVsdDtcclxuY29uc3QgUG9zdGdyZXN0UXVlcnlCdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0UXVlcnlCdWlsZGVyXCIpKTtcclxuZXhwb3J0cy5Qb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIgPSBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXJfMS5kZWZhdWx0O1xyXG5jb25zdCBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0RmlsdGVyQnVpbGRlclwiKSk7XHJcbmV4cG9ydHMuUG9zdGdyZXN0RmlsdGVyQnVpbGRlciA9IFBvc3RncmVzdEZpbHRlckJ1aWxkZXJfMS5kZWZhdWx0O1xyXG5jb25zdCBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlclwiKSk7XHJcbmV4cG9ydHMuUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlciA9IFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMS5kZWZhdWx0O1xyXG5jb25zdCBQb3N0Z3Jlc3RCdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0QnVpbGRlclwiKSk7XHJcbmV4cG9ydHMuUG9zdGdyZXN0QnVpbGRlciA9IFBvc3RncmVzdEJ1aWxkZXJfMS5kZWZhdWx0O1xyXG5jb25zdCBQb3N0Z3Jlc3RFcnJvcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdEVycm9yXCIpKTtcclxuZXhwb3J0cy5Qb3N0Z3Jlc3RFcnJvciA9IFBvc3RncmVzdEVycm9yXzEuZGVmYXVsdDtcclxuZXhwb3J0cy5kZWZhdWx0ID0ge1xyXG4gICAgUG9zdGdyZXN0Q2xpZW50OiBQb3N0Z3Jlc3RDbGllbnRfMS5kZWZhdWx0LFxyXG4gICAgUG9zdGdyZXN0UXVlcnlCdWlsZGVyOiBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXJfMS5kZWZhdWx0LFxyXG4gICAgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcjogUG9zdGdyZXN0RmlsdGVyQnVpbGRlcl8xLmRlZmF1bHQsXHJcbiAgICBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyOiBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyXzEuZGVmYXVsdCxcclxuICAgIFBvc3RncmVzdEJ1aWxkZXI6IFBvc3RncmVzdEJ1aWxkZXJfMS5kZWZhdWx0LFxyXG4gICAgUG9zdGdyZXN0RXJyb3I6IFBvc3RncmVzdEVycm9yXzEuZGVmYXVsdCxcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.version = void 0;\r\nexports.version = '0.0.0-automated';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccG9zdGdyZXN0LWpzXFxkaXN0XFxjanNcXHZlcnNpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy52ZXJzaW9uID0gdm9pZCAwO1xyXG5leHBvcnRzLnZlcnNpb24gPSAnMC4wLjAtYXV0b21hdGVkJztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgrestBuilder: () => (/* binding */ PostgrestBuilder),\n/* harmony export */   PostgrestClient: () => (/* binding */ PostgrestClient),\n/* harmony export */   PostgrestError: () => (/* binding */ PostgrestError),\n/* harmony export */   PostgrestFilterBuilder: () => (/* binding */ PostgrestFilterBuilder),\n/* harmony export */   PostgrestQueryBuilder: () => (/* binding */ PostgrestQueryBuilder),\n/* harmony export */   PostgrestTransformBuilder: () => (/* binding */ PostgrestTransformBuilder),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cjs/index.js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js\");\n\r\nconst {\r\n  PostgrestClient,\r\n  PostgrestQueryBuilder,\r\n  PostgrestFilterBuilder,\r\n  PostgrestTransformBuilder,\r\n  PostgrestBuilder,\r\n  PostgrestError,\r\n} = _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__\r\n\r\n\r\n\r\n// compatibility with CJS output\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  PostgrestClient,\r\n  PostgrestQueryBuilder,\r\n  PostgrestFilterBuilder,\r\n  PostgrestTransformBuilder,\r\n  PostgrestBuilder,\r\n  PostgrestError,\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvZXNtL3dyYXBwZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLDBDQUFLO0FBQ1Q7QUFRQztBQUNEO0FBQ0E7QUFDQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHBvc3RncmVzdC1qc1xcZGlzdFxcZXNtXFx3cmFwcGVyLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW5kZXggZnJvbSAnLi4vY2pzL2luZGV4LmpzJ1xyXG5jb25zdCB7XHJcbiAgUG9zdGdyZXN0Q2xpZW50LFxyXG4gIFBvc3RncmVzdFF1ZXJ5QnVpbGRlcixcclxuICBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyLFxyXG4gIFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0QnVpbGRlcixcclxuICBQb3N0Z3Jlc3RFcnJvcixcclxufSA9IGluZGV4XHJcblxyXG5leHBvcnQge1xyXG4gIFBvc3RncmVzdEJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0Q2xpZW50LFxyXG4gIFBvc3RncmVzdEZpbHRlckJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0UXVlcnlCdWlsZGVyLFxyXG4gIFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0RXJyb3IsXHJcbn1cclxuXHJcbi8vIGNvbXBhdGliaWxpdHkgd2l0aCBDSlMgb3V0cHV0XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBQb3N0Z3Jlc3RDbGllbnQsXHJcbiAgUG9zdGdyZXN0UXVlcnlCdWlsZGVyLFxyXG4gIFBvc3RncmVzdEZpbHRlckJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlcixcclxuICBQb3N0Z3Jlc3RCdWlsZGVyLFxyXG4gIFBvc3RncmVzdEVycm9yLFxyXG59XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: () => (/* binding */ REALTIME_CHANNEL_STATES),\n/* harmony export */   REALTIME_LISTEN_TYPES: () => (/* binding */ REALTIME_LISTEN_TYPES),\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: () => (/* binding */ REALTIME_POSTGRES_CHANGES_LISTEN_EVENT),\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: () => (/* binding */ REALTIME_SUBSCRIBE_STATES),\n/* harmony export */   \"default\": () => (/* binding */ RealtimeChannel)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_push__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/push */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/timer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RealtimePresence */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nvar REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\r\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\r\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\r\nvar REALTIME_LISTEN_TYPES;\r\n(function (REALTIME_LISTEN_TYPES) {\r\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\r\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\r\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\r\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\r\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\r\nvar REALTIME_SUBSCRIBE_STATES;\r\n(function (REALTIME_SUBSCRIBE_STATES) {\r\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\r\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\r\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\r\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\r\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\r\nconst REALTIME_CHANNEL_STATES = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES;\r\n/** A channel is the basic building block of Realtime\r\n * and narrows the scope of data flow to subscribed clients.\r\n * You can think of a channel as a chatroom where participants are able to see who's online\r\n * and send and receive messages.\r\n */\r\nclass RealtimeChannel {\r\n    constructor(\r\n    /** Topic name can be any string. */\r\n    topic, params = { config: {} }, socket) {\r\n        this.topic = topic;\r\n        this.params = params;\r\n        this.socket = socket;\r\n        this.bindings = {};\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n        this.joinedOnce = false;\r\n        this.pushBuffer = [];\r\n        this.subTopic = topic.replace(/^realtime:/i, '');\r\n        this.params.config = Object.assign({\r\n            broadcast: { ack: false, self: false },\r\n            presence: { key: '' },\r\n            private: false,\r\n        }, params.config);\r\n        this.timeout = this.socket.timeout;\r\n        this.joinPush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.join, this.params, this.timeout);\r\n        this.rejoinTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\r\n        this.joinPush.receive('ok', () => {\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\r\n            this.rejoinTimer.reset();\r\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\r\n            this.pushBuffer = [];\r\n        });\r\n        this._onClose(() => {\r\n            this.rejoinTimer.reset();\r\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n            this.socket._remove(this);\r\n        });\r\n        this._onError((reason) => {\r\n            if (this._isLeaving() || this._isClosed()) {\r\n                return;\r\n            }\r\n            this.socket.log('channel', `error ${this.topic}`, reason);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n            this.rejoinTimer.scheduleTimeout();\r\n        });\r\n        this.joinPush.receive('timeout', () => {\r\n            if (!this._isJoining()) {\r\n                return;\r\n            }\r\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n            this.rejoinTimer.scheduleTimeout();\r\n        });\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.reply, {}, (payload, ref) => {\r\n            this._trigger(this._replyEventName(ref), payload);\r\n        });\r\n        this.presence = new _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\r\n        this.broadcastEndpointURL =\r\n            (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_4__.httpEndpointURL)(this.socket.endPoint) + '/api/broadcast';\r\n        this.private = this.params.config.private || false;\r\n    }\r\n    /** Subscribe registers your client with the server */\r\n    subscribe(callback, timeout = this.timeout) {\r\n        var _a, _b;\r\n        if (!this.socket.isConnected()) {\r\n            this.socket.connect();\r\n        }\r\n        if (this.joinedOnce) {\r\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\r\n        }\r\n        else {\r\n            const { config: { broadcast, presence, private: isPrivate }, } = this.params;\r\n            this._onError((e) => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\r\n            this._onClose(() => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\r\n            const accessTokenPayload = {};\r\n            const config = {\r\n                broadcast,\r\n                presence,\r\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\r\n                private: isPrivate,\r\n            };\r\n            if (this.socket.accessTokenValue) {\r\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\r\n            }\r\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\r\n            this.joinedOnce = true;\r\n            this._rejoin(timeout);\r\n            this.joinPush\r\n                .receive('ok', async ({ postgres_changes }) => {\r\n                var _a;\r\n                this.socket.setAuth();\r\n                if (postgres_changes === undefined) {\r\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\r\n                    return;\r\n                }\r\n                else {\r\n                    const clientPostgresBindings = this.bindings.postgres_changes;\r\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\r\n                    const newPostgresBindings = [];\r\n                    for (let i = 0; i < bindingsLen; i++) {\r\n                        const clientPostgresBinding = clientPostgresBindings[i];\r\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\r\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\r\n                        if (serverPostgresFilter &&\r\n                            serverPostgresFilter.event === event &&\r\n                            serverPostgresFilter.schema === schema &&\r\n                            serverPostgresFilter.table === table &&\r\n                            serverPostgresFilter.filter === filter) {\r\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\r\n                        }\r\n                        else {\r\n                            this.unsubscribe();\r\n                            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error('mismatch between server and client bindings for postgres changes'));\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.bindings.postgres_changes = newPostgresBindings;\r\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\r\n                    return;\r\n                }\r\n            })\r\n                .receive('error', (error) => {\r\n                this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\r\n                return;\r\n            })\r\n                .receive('timeout', () => {\r\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\r\n                return;\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    presenceState() {\r\n        return this.presence.state;\r\n    }\r\n    async track(payload, opts = {}) {\r\n        return await this.send({\r\n            type: 'presence',\r\n            event: 'track',\r\n            payload,\r\n        }, opts.timeout || this.timeout);\r\n    }\r\n    async untrack(opts = {}) {\r\n        return await this.send({\r\n            type: 'presence',\r\n            event: 'untrack',\r\n        }, opts);\r\n    }\r\n    on(type, filter, callback) {\r\n        return this._on(type, filter, callback);\r\n    }\r\n    /**\r\n     * Sends a message into the channel.\r\n     *\r\n     * @param args Arguments to send to channel\r\n     * @param args.type The type of event to send\r\n     * @param args.event The name of the event being sent\r\n     * @param args.payload Payload to be sent\r\n     * @param opts Options to be used during the send process\r\n     */\r\n    async send(args, opts = {}) {\r\n        var _a, _b;\r\n        if (!this._canPush() && args.type === 'broadcast') {\r\n            const { event, payload: endpoint_payload } = args;\r\n            const authorization = this.socket.accessTokenValue\r\n                ? `Bearer ${this.socket.accessTokenValue}`\r\n                : '';\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: authorization,\r\n                    apikey: this.socket.apiKey ? this.socket.apiKey : '',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    messages: [\r\n                        {\r\n                            topic: this.subTopic,\r\n                            event,\r\n                            payload: endpoint_payload,\r\n                            private: this.private,\r\n                        },\r\n                    ],\r\n                }),\r\n            };\r\n            try {\r\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\r\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\r\n                return response.ok ? 'ok' : 'error';\r\n            }\r\n            catch (error) {\r\n                if (error.name === 'AbortError') {\r\n                    return 'timed out';\r\n                }\r\n                else {\r\n                    return 'error';\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return new Promise((resolve) => {\r\n                var _a, _b, _c;\r\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\r\n                if (args.type === 'broadcast' && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\r\n                    resolve('ok');\r\n                }\r\n                push.receive('ok', () => resolve('ok'));\r\n                push.receive('error', () => resolve('error'));\r\n                push.receive('timeout', () => resolve('timed out'));\r\n            });\r\n        }\r\n    }\r\n    updateJoinPayload(payload) {\r\n        this.joinPush.updatePayload(payload);\r\n    }\r\n    /**\r\n     * Leaves the channel.\r\n     *\r\n     * Unsubscribes from server events, and instructs channel to terminate on server.\r\n     * Triggers onClose() hooks.\r\n     *\r\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\r\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\r\n     */\r\n    unsubscribe(timeout = this.timeout) {\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\r\n        const onClose = () => {\r\n            this.socket.log('channel', `leave ${this.topic}`);\r\n            this._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, 'leave', this._joinRef());\r\n        };\r\n        this.joinPush.destroy();\r\n        return new Promise((resolve) => {\r\n            const leavePush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.leave, {}, timeout);\r\n            leavePush\r\n                .receive('ok', () => {\r\n                onClose();\r\n                resolve('ok');\r\n            })\r\n                .receive('timeout', () => {\r\n                onClose();\r\n                resolve('timed out');\r\n            })\r\n                .receive('error', () => {\r\n                resolve('error');\r\n            });\r\n            leavePush.send();\r\n            if (!this._canPush()) {\r\n                leavePush.trigger('ok', {});\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Teardown the channel.\r\n     *\r\n     * Destroys and stops related timers.\r\n     */\r\n    teardown() {\r\n        this.pushBuffer.forEach((push) => push.destroy());\r\n        this.rejoinTimer && clearTimeout(this.rejoinTimer.timer);\r\n        this.joinPush.destroy();\r\n    }\r\n    /** @internal */\r\n    async _fetchWithTimeout(url, options, timeout) {\r\n        const controller = new AbortController();\r\n        const id = setTimeout(() => controller.abort(), timeout);\r\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));\r\n        clearTimeout(id);\r\n        return response;\r\n    }\r\n    /** @internal */\r\n    _push(event, payload, timeout = this.timeout) {\r\n        if (!this.joinedOnce) {\r\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\r\n        }\r\n        let pushEvent = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, event, payload, timeout);\r\n        if (this._canPush()) {\r\n            pushEvent.send();\r\n        }\r\n        else {\r\n            pushEvent.startTimeout();\r\n            this.pushBuffer.push(pushEvent);\r\n        }\r\n        return pushEvent;\r\n    }\r\n    /**\r\n     * Overridable message hook\r\n     *\r\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\r\n     * Must return the payload, modified or unmodified.\r\n     *\r\n     * @internal\r\n     */\r\n    _onMessage(_event, payload, _ref) {\r\n        return payload;\r\n    }\r\n    /** @internal */\r\n    _isMember(topic) {\r\n        return this.topic === topic;\r\n    }\r\n    /** @internal */\r\n    _joinRef() {\r\n        return this.joinPush.ref;\r\n    }\r\n    /** @internal */\r\n    _trigger(type, payload, ref) {\r\n        var _a, _b;\r\n        const typeLower = type.toLocaleLowerCase();\r\n        const { close, error, leave, join } = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS;\r\n        const events = [close, error, leave, join];\r\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\r\n            return;\r\n        }\r\n        let handledPayload = this._onMessage(typeLower, payload, ref);\r\n        if (payload && !handledPayload) {\r\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\r\n        }\r\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\r\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\r\n                var _a, _b, _c;\r\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\r\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\r\n            }).map((bind) => bind.callback(handledPayload, ref));\r\n        }\r\n        else {\r\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\r\n                var _a, _b, _c, _d, _e, _f;\r\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\r\n                    if ('id' in bind) {\r\n                        const bindId = bind.id;\r\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\r\n                        return (bindId &&\r\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\r\n                            (bindEvent === '*' ||\r\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\r\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\r\n                    }\r\n                    else {\r\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\r\n                        return (bindEvent === '*' ||\r\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\r\n                    }\r\n                }\r\n                else {\r\n                    return bind.type.toLocaleLowerCase() === typeLower;\r\n                }\r\n            }).map((bind) => {\r\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\r\n                    const postgresChanges = handledPayload.data;\r\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\r\n                    const enrichedPayload = {\r\n                        schema: schema,\r\n                        table: table,\r\n                        commit_timestamp: commit_timestamp,\r\n                        eventType: type,\r\n                        new: {},\r\n                        old: {},\r\n                        errors: errors,\r\n                    };\r\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\r\n                }\r\n                bind.callback(handledPayload, ref);\r\n            });\r\n        }\r\n    }\r\n    /** @internal */\r\n    _isClosed() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n    }\r\n    /** @internal */\r\n    _isJoined() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\r\n    }\r\n    /** @internal */\r\n    _isJoining() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\r\n    }\r\n    /** @internal */\r\n    _isLeaving() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\r\n    }\r\n    /** @internal */\r\n    _replyEventName(ref) {\r\n        return `chan_reply_${ref}`;\r\n    }\r\n    /** @internal */\r\n    _on(type, filter, callback) {\r\n        const typeLower = type.toLocaleLowerCase();\r\n        const binding = {\r\n            type: typeLower,\r\n            filter: filter,\r\n            callback: callback,\r\n        };\r\n        if (this.bindings[typeLower]) {\r\n            this.bindings[typeLower].push(binding);\r\n        }\r\n        else {\r\n            this.bindings[typeLower] = [binding];\r\n        }\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    _off(type, filter) {\r\n        const typeLower = type.toLocaleLowerCase();\r\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\r\n            var _a;\r\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\r\n                RealtimeChannel.isEqual(bind.filter, filter));\r\n        });\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    static isEqual(obj1, obj2) {\r\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n            return false;\r\n        }\r\n        for (const k in obj1) {\r\n            if (obj1[k] !== obj2[k]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /** @internal */\r\n    _rejoinUntilConnected() {\r\n        this.rejoinTimer.scheduleTimeout();\r\n        if (this.socket.isConnected()) {\r\n            this._rejoin();\r\n        }\r\n    }\r\n    /**\r\n     * Registers a callback that will be executed when the channel closes.\r\n     *\r\n     * @internal\r\n     */\r\n    _onClose(callback) {\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, {}, callback);\r\n    }\r\n    /**\r\n     * Registers a callback that will be executed when the channel encounteres an error.\r\n     *\r\n     * @internal\r\n     */\r\n    _onError(callback) {\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\r\n    }\r\n    /**\r\n     * Returns `true` if the socket is connected and the channel has been joined.\r\n     *\r\n     * @internal\r\n     */\r\n    _canPush() {\r\n        return this.socket.isConnected() && this._isJoined();\r\n    }\r\n    /** @internal */\r\n    _rejoin(timeout = this.timeout) {\r\n        if (this._isLeaving()) {\r\n            return;\r\n        }\r\n        this.socket._leaveOpenTopic(this.topic);\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\r\n        this.joinPush.resend(timeout);\r\n    }\r\n    /** @internal */\r\n    _getPayloadRecords(payload) {\r\n        const records = {\r\n            new: {},\r\n            old: {},\r\n        };\r\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\r\n            records.new = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.record);\r\n        }\r\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\r\n            records.old = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.old_record);\r\n        }\r\n        return records;\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimeChannel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RealtimeClient)\n/* harmony export */ });\n/* harmony import */ var _WebSocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebSocket */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/WebSocket.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/serializer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/timer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RealtimeChannel */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst noop = () => { };\r\nconst WORKER_SCRIPT = `\r\n  addEventListener(\"message\", (e) => {\r\n    if (e.data.event === \"start\") {\r\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\r\n    }\r\n  });`;\r\nclass RealtimeClient {\r\n    /**\r\n     * Initializes the Socket.\r\n     *\r\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\r\n     * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\r\n     * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation\r\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\r\n     * @param options.params The optional params to pass when connecting.\r\n     * @param options.headers The optional headers to pass when connecting.\r\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\r\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\r\n     * @param options.logLevel Sets the log level for Realtime\r\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\r\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\r\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\r\n     * @param options.worker Use Web Worker to set a side flow. Defaults to false.\r\n     * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\r\n     */\r\n    constructor(endPoint, options) {\r\n        var _a;\r\n        this.accessTokenValue = null;\r\n        this.apiKey = null;\r\n        this.channels = new Array();\r\n        this.endPoint = '';\r\n        this.httpEndpoint = '';\r\n        this.headers = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS;\r\n        this.params = {};\r\n        this.timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_TIMEOUT;\r\n        this.heartbeatIntervalMs = 25000;\r\n        this.heartbeatTimer = undefined;\r\n        this.pendingHeartbeatRef = null;\r\n        this.heartbeatCallback = noop;\r\n        this.ref = 0;\r\n        this.logger = noop;\r\n        this.conn = null;\r\n        this.sendBuffer = [];\r\n        this.serializer = new _lib_serializer__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        this.stateChangeCallbacks = {\r\n            open: [],\r\n            close: [],\r\n            error: [],\r\n            message: [],\r\n        };\r\n        this.accessToken = null;\r\n        /**\r\n         * Use either custom fetch, if provided, or default fetch to make HTTP requests\r\n         *\r\n         * @internal\r\n         */\r\n        this._resolveFetch = (customFetch) => {\r\n            let _fetch;\r\n            if (customFetch) {\r\n                _fetch = customFetch;\r\n            }\r\n            else if (typeof fetch === 'undefined') {\r\n                _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n            }\r\n            else {\r\n                _fetch = fetch;\r\n            }\r\n            return (...args) => _fetch(...args);\r\n        };\r\n        this.endPoint = `${endPoint}/${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.TRANSPORTS.websocket}`;\r\n        this.httpEndpoint = (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_4__.httpEndpointURL)(endPoint);\r\n        if (options === null || options === void 0 ? void 0 : options.transport) {\r\n            this.transport = options.transport;\r\n        }\r\n        else {\r\n            this.transport = null;\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.params)\r\n            this.params = options.params;\r\n        if (options === null || options === void 0 ? void 0 : options.headers)\r\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\r\n        if (options === null || options === void 0 ? void 0 : options.timeout)\r\n            this.timeout = options.timeout;\r\n        if (options === null || options === void 0 ? void 0 : options.logger)\r\n            this.logger = options.logger;\r\n        if ((options === null || options === void 0 ? void 0 : options.logLevel) || (options === null || options === void 0 ? void 0 : options.log_level)) {\r\n            this.logLevel = options.logLevel || options.log_level;\r\n            this.params = Object.assign(Object.assign({}, this.params), { log_level: this.logLevel });\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\r\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\r\n        const accessTokenValue = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey;\r\n        if (accessTokenValue) {\r\n            this.accessTokenValue = accessTokenValue;\r\n            this.apiKey = accessTokenValue;\r\n        }\r\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\r\n            ? options.reconnectAfterMs\r\n            : (tries) => {\r\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\r\n            };\r\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\r\n            ? options.encode\r\n            : (payload, callback) => {\r\n                return callback(JSON.stringify(payload));\r\n            };\r\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\r\n            ? options.decode\r\n            : this.serializer.decode.bind(this.serializer);\r\n        this.reconnectTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](async () => {\r\n            this.disconnect();\r\n            this.connect();\r\n        }, this.reconnectAfterMs);\r\n        this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);\r\n        if (options === null || options === void 0 ? void 0 : options.worker) {\r\n            if (typeof window !== 'undefined' && !window.Worker) {\r\n                throw new Error('Web Worker is not supported');\r\n            }\r\n            this.worker = (options === null || options === void 0 ? void 0 : options.worker) || false;\r\n            this.workerUrl = options === null || options === void 0 ? void 0 : options.workerUrl;\r\n        }\r\n        this.accessToken = (options === null || options === void 0 ? void 0 : options.accessToken) || null;\r\n    }\r\n    /**\r\n     * Connects the socket, unless already connected.\r\n     */\r\n    connect() {\r\n        if (this.conn) {\r\n            return;\r\n        }\r\n        if (!this.transport) {\r\n            this.transport = _WebSocket__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n        }\r\n        if (this.transport) {\r\n            // Detect if using the native browser WebSocket\r\n            const isBrowser = typeof window !== 'undefined' && this.transport === window.WebSocket;\r\n            if (isBrowser) {\r\n                this.conn = new this.transport(this.endpointURL());\r\n            }\r\n            else {\r\n                this.conn = new this.transport(this.endpointURL(), undefined, {\r\n                    headers: this.headers,\r\n                });\r\n            }\r\n            this.setupConnection();\r\n            return;\r\n        }\r\n        this.conn = new WSWebSocketDummy(this.endpointURL(), undefined, {\r\n            close: () => {\r\n                this.conn = null;\r\n            },\r\n        });\r\n    }\r\n    /**\r\n     * Returns the URL of the websocket.\r\n     * @returns string The URL of the websocket.\r\n     */\r\n    endpointURL() {\r\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.VSN }));\r\n    }\r\n    /**\r\n     * Disconnects the socket.\r\n     *\r\n     * @param code A numeric status code to send on disconnect.\r\n     * @param reason A custom reason for the disconnect.\r\n     */\r\n    disconnect(code, reason) {\r\n        if (this.conn) {\r\n            this.conn.onclose = function () { }; // noop\r\n            if (code) {\r\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\r\n            }\r\n            else {\r\n                this.conn.close();\r\n            }\r\n            this.conn = null;\r\n            // remove open handles\r\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n            this.reconnectTimer.reset();\r\n            this.channels.forEach((channel) => channel.teardown());\r\n        }\r\n    }\r\n    /**\r\n     * Returns all created channels\r\n     */\r\n    getChannels() {\r\n        return this.channels;\r\n    }\r\n    /**\r\n     * Unsubscribes and removes a single channel\r\n     * @param channel A RealtimeChannel instance\r\n     */\r\n    async removeChannel(channel) {\r\n        const status = await channel.unsubscribe();\r\n        this.channels = this.channels.filter((c) => c._joinRef !== channel._joinRef);\r\n        if (this.channels.length === 0) {\r\n            this.disconnect();\r\n        }\r\n        return status;\r\n    }\r\n    /**\r\n     * Unsubscribes and removes all channels\r\n     */\r\n    async removeAllChannels() {\r\n        const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()));\r\n        this.channels = [];\r\n        this.disconnect();\r\n        return values_1;\r\n    }\r\n    /**\r\n     * Logs the message.\r\n     *\r\n     * For customized logging, `this.logger` can be overridden.\r\n     */\r\n    log(kind, msg, data) {\r\n        this.logger(kind, msg, data);\r\n    }\r\n    /**\r\n     * Returns the current state of the socket.\r\n     */\r\n    connectionState() {\r\n        switch (this.conn && this.conn.readyState) {\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.connecting:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Connecting;\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.open:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.closing:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closing;\r\n            default:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closed;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` is the connection is open.\r\n     */\r\n    isConnected() {\r\n        return this.connectionState() === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\r\n    }\r\n    channel(topic, params = { config: {} }) {\r\n        const realtimeTopic = `realtime:${topic}`;\r\n        const exists = this.getChannels().find((c) => c.topic === realtimeTopic);\r\n        if (!exists) {\r\n            const chan = new _RealtimeChannel__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`realtime:${topic}`, params, this);\r\n            this.channels.push(chan);\r\n            return chan;\r\n        }\r\n        else {\r\n            return exists;\r\n        }\r\n    }\r\n    /**\r\n     * Push out a message if the socket is connected.\r\n     *\r\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\r\n     */\r\n    push(data) {\r\n        const { topic, event, payload, ref } = data;\r\n        const callback = () => {\r\n            this.encode(data, (result) => {\r\n                var _a;\r\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\r\n            });\r\n        };\r\n        this.log('push', `${topic} ${event} (${ref})`, payload);\r\n        if (this.isConnected()) {\r\n            callback();\r\n        }\r\n        else {\r\n            this.sendBuffer.push(callback);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\r\n     *\r\n     * If param is null it will use the `accessToken` callback function or the token set on the client.\r\n     *\r\n     * On callback used, it will set the value of the token internal to the client.\r\n     *\r\n     * @param token A JWT string to override the token set on the client.\r\n     */\r\n    async setAuth(token = null) {\r\n        let tokenToSend = token ||\r\n            (this.accessToken && (await this.accessToken())) ||\r\n            this.accessTokenValue;\r\n        if (this.accessTokenValue != tokenToSend) {\r\n            this.accessTokenValue = tokenToSend;\r\n            this.channels.forEach((channel) => {\r\n                tokenToSend &&\r\n                    channel.updateJoinPayload({\r\n                        access_token: tokenToSend,\r\n                        version: this.headers && this.headers['X-Client-Info'],\r\n                    });\r\n                if (channel.joinedOnce && channel._isJoined()) {\r\n                    channel._push(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.access_token, {\r\n                        access_token: tokenToSend,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sends a heartbeat message if the socket is connected.\r\n     */\r\n    async sendHeartbeat() {\r\n        var _a;\r\n        if (!this.isConnected()) {\r\n            this.heartbeatCallback('disconnected');\r\n            return;\r\n        }\r\n        if (this.pendingHeartbeatRef) {\r\n            this.pendingHeartbeatRef = null;\r\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\r\n            this.heartbeatCallback('timeout');\r\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.WS_CLOSE_NORMAL, 'hearbeat timeout');\r\n            return;\r\n        }\r\n        this.pendingHeartbeatRef = this._makeRef();\r\n        this.push({\r\n            topic: 'phoenix',\r\n            event: 'heartbeat',\r\n            payload: {},\r\n            ref: this.pendingHeartbeatRef,\r\n        });\r\n        this.heartbeatCallback('sent');\r\n        await this.setAuth();\r\n    }\r\n    onHeartbeat(callback) {\r\n        this.heartbeatCallback = callback;\r\n    }\r\n    /**\r\n     * Flushes send buffer\r\n     */\r\n    flushSendBuffer() {\r\n        if (this.isConnected() && this.sendBuffer.length > 0) {\r\n            this.sendBuffer.forEach((callback) => callback());\r\n            this.sendBuffer = [];\r\n        }\r\n    }\r\n    /**\r\n     * Return the next message ref, accounting for overflows\r\n     *\r\n     * @internal\r\n     */\r\n    _makeRef() {\r\n        let newRef = this.ref + 1;\r\n        if (newRef === this.ref) {\r\n            this.ref = 0;\r\n        }\r\n        else {\r\n            this.ref = newRef;\r\n        }\r\n        return this.ref.toString();\r\n    }\r\n    /**\r\n     * Unsubscribe from channels with the specified topic.\r\n     *\r\n     * @internal\r\n     */\r\n    _leaveOpenTopic(topic) {\r\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\r\n        if (dupChannel) {\r\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\r\n            dupChannel.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * Removes a subscription from the socket.\r\n     *\r\n     * @param channel An open subscription.\r\n     *\r\n     * @internal\r\n     */\r\n    _remove(channel) {\r\n        this.channels = this.channels.filter((c) => c.topic !== channel.topic);\r\n    }\r\n    /**\r\n     * Sets up connection handlers.\r\n     *\r\n     * @internal\r\n     */\r\n    setupConnection() {\r\n        if (this.conn) {\r\n            this.conn.binaryType = 'arraybuffer';\r\n            this.conn.onopen = () => this._onConnOpen();\r\n            this.conn.onerror = (error) => this._onConnError(error);\r\n            this.conn.onmessage = (event) => this._onConnMessage(event);\r\n            this.conn.onclose = (event) => this._onConnClose(event);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _onConnMessage(rawMessage) {\r\n        this.decode(rawMessage.data, (msg) => {\r\n            let { topic, event, payload, ref } = msg;\r\n            if (topic === 'phoenix' && event === 'phx_reply') {\r\n                this.heartbeatCallback(msg.payload.status == 'ok' ? 'ok' : 'error');\r\n            }\r\n            if (ref && ref === this.pendingHeartbeatRef) {\r\n                this.pendingHeartbeatRef = null;\r\n            }\r\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\r\n            Array.from(this.channels)\r\n                .filter((channel) => channel._isMember(topic))\r\n                .forEach((channel) => channel._trigger(event, payload, ref));\r\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\r\n        });\r\n    }\r\n    /** @internal */\r\n    _onConnOpen() {\r\n        this.log('transport', `connected to ${this.endpointURL()}`);\r\n        this.flushSendBuffer();\r\n        this.reconnectTimer.reset();\r\n        if (!this.worker) {\r\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n            this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\r\n        }\r\n        else {\r\n            if (this.workerUrl) {\r\n                this.log('worker', `starting worker for from ${this.workerUrl}`);\r\n            }\r\n            else {\r\n                this.log('worker', `starting default worker`);\r\n            }\r\n            const objectUrl = this._workerObjectUrl(this.workerUrl);\r\n            this.workerRef = new Worker(objectUrl);\r\n            this.workerRef.onerror = (error) => {\r\n                this.log('worker', 'worker error', error.message);\r\n                this.workerRef.terminate();\r\n            };\r\n            this.workerRef.onmessage = (event) => {\r\n                if (event.data.event === 'keepAlive') {\r\n                    this.sendHeartbeat();\r\n                }\r\n            };\r\n            this.workerRef.postMessage({\r\n                event: 'start',\r\n                interval: this.heartbeatIntervalMs,\r\n            });\r\n        }\r\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\r\n    }\r\n    /** @internal */\r\n    _onConnClose(event) {\r\n        this.log('transport', 'close', event);\r\n        this._triggerChanError();\r\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n        this.reconnectTimer.scheduleTimeout();\r\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\r\n    }\r\n    /** @internal */\r\n    _onConnError(error) {\r\n        this.log('transport', error.message);\r\n        this._triggerChanError();\r\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\r\n    }\r\n    /** @internal */\r\n    _triggerChanError() {\r\n        this.channels.forEach((channel) => channel._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.error));\r\n    }\r\n    /** @internal */\r\n    _appendParams(url, params) {\r\n        if (Object.keys(params).length === 0) {\r\n            return url;\r\n        }\r\n        const prefix = url.match(/\\?/) ? '&' : '?';\r\n        const query = new URLSearchParams(params);\r\n        return `${url}${prefix}${query}`;\r\n    }\r\n    _workerObjectUrl(url) {\r\n        let result_url;\r\n        if (url) {\r\n            result_url = url;\r\n        }\r\n        else {\r\n            const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' });\r\n            result_url = URL.createObjectURL(blob);\r\n        }\r\n        return result_url;\r\n    }\r\n}\r\nclass WSWebSocketDummy {\r\n    constructor(address, _protocols, options) {\r\n        this.binaryType = 'arraybuffer';\r\n        this.onclose = () => { };\r\n        this.onerror = () => { };\r\n        this.onmessage = () => { };\r\n        this.onopen = () => { };\r\n        this.readyState = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.connecting;\r\n        this.send = () => { };\r\n        this.url = null;\r\n        this.url = address;\r\n        this.close = options.close;\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimeClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvUmVhbHRpbWVDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvQztBQUNtSDtBQUM3RztBQUNWO0FBQ3FCO0FBQ0w7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msb0JBQW9CO0FBQzFEO0FBQ0EsR0FBRyxFQUFFO0FBQ1U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtHQUErRyxlQUFlLEtBQUssSUFBSSxJQUFJO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMkRBQWU7QUFDdEM7QUFDQSx1QkFBdUIsMkRBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix1REFBVTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msc0xBQThCLFNBQVMsZ0JBQWdCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixTQUFTLEdBQUcsc0RBQVUsV0FBVztBQUM1RCw0QkFBNEIsa0VBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxrQkFBa0IsMEJBQTBCO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxrREFBSztBQUN2QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixrREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLGlCQUFpQixLQUFLLCtDQUFHLEVBQUU7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseURBQWE7QUFDOUIsdUJBQXVCLDREQUFnQjtBQUN2QyxpQkFBaUIseURBQWE7QUFDOUIsdUJBQXVCLDREQUFnQjtBQUN2QyxpQkFBaUIseURBQWE7QUFDOUIsdUJBQXVCLDREQUFnQjtBQUN2QztBQUNBLHVCQUF1Qiw0REFBZ0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLDREQUFnQjtBQUMxRDtBQUNBLDhCQUE4QixZQUFZO0FBQzFDLDBDQUEwQyxNQUFNO0FBQ2hEO0FBQ0E7QUFDQSw2QkFBNkIsd0RBQWUsYUFBYSxNQUFNO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZCQUE2QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLDRCQUE0QixPQUFPLEVBQUUsT0FBTyxHQUFHLElBQUk7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0Esa0NBQWtDLDBEQUFjO0FBQ2hEO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSwyREFBZTtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxNQUFNO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsK0JBQStCO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxtQkFBbUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxlQUFlO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCwwREFBYztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxnQ0FBZ0M7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlEQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxyZWFsdGltZS1qc1xcZGlzdFxcbW9kdWxlXFxSZWFsdGltZUNsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgV2ViU29ja2V0IGZyb20gJy4vV2ViU29ja2V0JztcclxuaW1wb3J0IHsgQ0hBTk5FTF9FVkVOVFMsIENPTk5FQ1RJT05fU1RBVEUsIERFRkFVTFRfSEVBREVSUywgREVGQVVMVF9USU1FT1VULCBTT0NLRVRfU1RBVEVTLCBUUkFOU1BPUlRTLCBWU04sIFdTX0NMT1NFX05PUk1BTCwgfSBmcm9tICcuL2xpYi9jb25zdGFudHMnO1xyXG5pbXBvcnQgU2VyaWFsaXplciBmcm9tICcuL2xpYi9zZXJpYWxpemVyJztcclxuaW1wb3J0IFRpbWVyIGZyb20gJy4vbGliL3RpbWVyJztcclxuaW1wb3J0IHsgaHR0cEVuZHBvaW50VVJMIH0gZnJvbSAnLi9saWIvdHJhbnNmb3JtZXJzJztcclxuaW1wb3J0IFJlYWx0aW1lQ2hhbm5lbCBmcm9tICcuL1JlYWx0aW1lQ2hhbm5lbCc7XHJcbmNvbnN0IG5vb3AgPSAoKSA9PiB7IH07XHJcbmNvbnN0IFdPUktFUl9TQ1JJUFQgPSBgXHJcbiAgYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgKGUpID0+IHtcclxuICAgIGlmIChlLmRhdGEuZXZlbnQgPT09IFwic3RhcnRcIikge1xyXG4gICAgICBzZXRJbnRlcnZhbCgoKSA9PiBwb3N0TWVzc2FnZSh7IGV2ZW50OiBcImtlZXBBbGl2ZVwiIH0pLCBlLmRhdGEuaW50ZXJ2YWwpO1xyXG4gICAgfVxyXG4gIH0pO2A7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlYWx0aW1lQ2xpZW50IHtcclxuICAgIC8qKlxyXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIFNvY2tldC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZW5kUG9pbnQgVGhlIHN0cmluZyBXZWJTb2NrZXQgZW5kcG9pbnQsIGllLCBcIndzOi8vZXhhbXBsZS5jb20vc29ja2V0XCIsIFwid3NzOi8vZXhhbXBsZS5jb21cIiwgXCIvc29ja2V0XCIgKGluaGVyaXRlZCBob3N0ICYgcHJvdG9jb2wpXHJcbiAgICAgKiBAcGFyYW0gaHR0cEVuZHBvaW50IFRoZSBzdHJpbmcgSFRUUCBlbmRwb2ludCwgaWUsIFwiaHR0cHM6Ly9leGFtcGxlLmNvbVwiLCBcIi9cIiAoaW5oZXJpdGVkIGhvc3QgJiBwcm90b2NvbClcclxuICAgICAqIEBwYXJhbSBvcHRpb25zLnRyYW5zcG9ydCBUaGUgV2Vic29ja2V0IFRyYW5zcG9ydCwgZm9yIGV4YW1wbGUgV2ViU29ja2V0LiBUaGlzIGNhbiBiZSBhIGN1c3RvbSBpbXBsZW1lbnRhdGlvblxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMudGltZW91dCBUaGUgZGVmYXVsdCB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byB0cmlnZ2VyIHB1c2ggdGltZW91dHMuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5wYXJhbXMgVGhlIG9wdGlvbmFsIHBhcmFtcyB0byBwYXNzIHdoZW4gY29ubmVjdGluZy5cclxuICAgICAqIEBwYXJhbSBvcHRpb25zLmhlYWRlcnMgVGhlIG9wdGlvbmFsIGhlYWRlcnMgdG8gcGFzcyB3aGVuIGNvbm5lY3RpbmcuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5oZWFydGJlYXRJbnRlcnZhbE1zIFRoZSBtaWxsaXNlYyBpbnRlcnZhbCB0byBzZW5kIGEgaGVhcnRiZWF0IG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5sb2dnZXIgVGhlIG9wdGlvbmFsIGZ1bmN0aW9uIGZvciBzcGVjaWFsaXplZCBsb2dnaW5nLCBpZTogbG9nZ2VyOiAoa2luZCwgbXNnLCBkYXRhKSA9PiB7IGNvbnNvbGUubG9nKGAke2tpbmR9OiAke21zZ31gLCBkYXRhKSB9XHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5sb2dMZXZlbCBTZXRzIHRoZSBsb2cgbGV2ZWwgZm9yIFJlYWx0aW1lXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5lbmNvZGUgVGhlIGZ1bmN0aW9uIHRvIGVuY29kZSBvdXRnb2luZyBtZXNzYWdlcy4gRGVmYXVsdHMgdG8gSlNPTjogKHBheWxvYWQsIGNhbGxiYWNrKSA9PiBjYWxsYmFjayhKU09OLnN0cmluZ2lmeShwYXlsb2FkKSlcclxuICAgICAqIEBwYXJhbSBvcHRpb25zLmRlY29kZSBUaGUgZnVuY3Rpb24gdG8gZGVjb2RlIGluY29taW5nIG1lc3NhZ2VzLiBEZWZhdWx0cyB0byBTZXJpYWxpemVyJ3MgZGVjb2RlLlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMucmVjb25uZWN0QWZ0ZXJNcyBoZSBvcHRpb25hbCBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG1pbGxzZWMgcmVjb25uZWN0IGludGVydmFsLiBEZWZhdWx0cyB0byBzdGVwcGVkIGJhY2tvZmYgb2ZmLlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMud29ya2VyIFVzZSBXZWIgV29ya2VyIHRvIHNldCBhIHNpZGUgZmxvdy4gRGVmYXVsdHMgdG8gZmFsc2UuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy53b3JrZXJVcmwgVGhlIFVSTCBvZiB0aGUgd29ya2VyIHNjcmlwdC4gRGVmYXVsdHMgdG8gaHR0cHM6Ly9yZWFsdGltZS5zdXBhYmFzZS5jb20vd29ya2VyLmpzIHRoYXQgaW5jbHVkZXMgYSBoZWFydGJlYXQgZXZlbnQgY2FsbCB0byBrZWVwIHRoZSBjb25uZWN0aW9uIGFsaXZlLlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihlbmRQb2ludCwgb3B0aW9ucykge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuVmFsdWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuYXBpS2V5ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmNoYW5uZWxzID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgdGhpcy5lbmRQb2ludCA9ICcnO1xyXG4gICAgICAgIHRoaXMuaHR0cEVuZHBvaW50ID0gJyc7XHJcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gREVGQVVMVF9IRUFERVJTO1xyXG4gICAgICAgIHRoaXMucGFyYW1zID0ge307XHJcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gREVGQVVMVF9USU1FT1VUO1xyXG4gICAgICAgIHRoaXMuaGVhcnRiZWF0SW50ZXJ2YWxNcyA9IDI1MDAwO1xyXG4gICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5wZW5kaW5nSGVhcnRiZWF0UmVmID0gbnVsbDtcclxuICAgICAgICB0aGlzLmhlYXJ0YmVhdENhbGxiYWNrID0gbm9vcDtcclxuICAgICAgICB0aGlzLnJlZiA9IDA7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIgPSBub29wO1xyXG4gICAgICAgIHRoaXMuY29ubiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zZW5kQnVmZmVyID0gW107XHJcbiAgICAgICAgdGhpcy5zZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcclxuICAgICAgICB0aGlzLnN0YXRlQ2hhbmdlQ2FsbGJhY2tzID0ge1xyXG4gICAgICAgICAgICBvcGVuOiBbXSxcclxuICAgICAgICAgICAgY2xvc2U6IFtdLFxyXG4gICAgICAgICAgICBlcnJvcjogW10sXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IFtdLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hY2Nlc3NUb2tlbiA9IG51bGw7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVXNlIGVpdGhlciBjdXN0b20gZmV0Y2gsIGlmIHByb3ZpZGVkLCBvciBkZWZhdWx0IGZldGNoIHRvIG1ha2UgSFRUUCByZXF1ZXN0c1xyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGludGVybmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fcmVzb2x2ZUZldGNoID0gKGN1c3RvbUZldGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBfZmV0Y2g7XHJcbiAgICAgICAgICAgIGlmIChjdXN0b21GZXRjaCkge1xyXG4gICAgICAgICAgICAgICAgX2ZldGNoID0gY3VzdG9tRmV0Y2g7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGZldGNoID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAgICAgX2ZldGNoID0gKC4uLmFyZ3MpID0+IGltcG9ydCgnQHN1cGFiYXNlL25vZGUtZmV0Y2gnKS50aGVuKCh7IGRlZmF1bHQ6IGZldGNoIH0pID0+IGZldGNoKC4uLmFyZ3MpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIF9mZXRjaCA9IGZldGNoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiAoLi4uYXJncykgPT4gX2ZldGNoKC4uLmFyZ3MpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5lbmRQb2ludCA9IGAke2VuZFBvaW50fS8ke1RSQU5TUE9SVFMud2Vic29ja2V0fWA7XHJcbiAgICAgICAgdGhpcy5odHRwRW5kcG9pbnQgPSBodHRwRW5kcG9pbnRVUkwoZW5kUG9pbnQpO1xyXG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudHJhbnNwb3J0KSB7XHJcbiAgICAgICAgICAgIHRoaXMudHJhbnNwb3J0ID0gb3B0aW9ucy50cmFuc3BvcnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnRyYW5zcG9ydCA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucGFyYW1zKVxyXG4gICAgICAgICAgICB0aGlzLnBhcmFtcyA9IG9wdGlvbnMucGFyYW1zO1xyXG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaGVhZGVycylcclxuICAgICAgICAgICAgdGhpcy5oZWFkZXJzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLmhlYWRlcnMpLCBvcHRpb25zLmhlYWRlcnMpO1xyXG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudGltZW91dClcclxuICAgICAgICAgICAgdGhpcy50aW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0O1xyXG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubG9nZ2VyKVxyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlciA9IG9wdGlvbnMubG9nZ2VyO1xyXG4gICAgICAgIGlmICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmxvZ0xldmVsKSB8fCAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmxvZ19sZXZlbCkpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dMZXZlbCA9IG9wdGlvbnMubG9nTGV2ZWwgfHwgb3B0aW9ucy5sb2dfbGV2ZWw7XHJcbiAgICAgICAgICAgIHRoaXMucGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLnBhcmFtcyksIHsgbG9nX2xldmVsOiB0aGlzLmxvZ0xldmVsIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmhlYXJ0YmVhdEludGVydmFsTXMpXHJcbiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0SW50ZXJ2YWxNcyA9IG9wdGlvbnMuaGVhcnRiZWF0SW50ZXJ2YWxNcztcclxuICAgICAgICBjb25zdCBhY2Nlc3NUb2tlblZhbHVlID0gKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnBhcmFtcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFwaWtleTtcclxuICAgICAgICBpZiAoYWNjZXNzVG9rZW5WYWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuVmFsdWUgPSBhY2Nlc3NUb2tlblZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLmFwaUtleSA9IGFjY2Vzc1Rva2VuVmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVjb25uZWN0QWZ0ZXJNcyA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucmVjb25uZWN0QWZ0ZXJNcylcclxuICAgICAgICAgICAgPyBvcHRpb25zLnJlY29ubmVjdEFmdGVyTXNcclxuICAgICAgICAgICAgOiAodHJpZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBbMTAwMCwgMjAwMCwgNTAwMCwgMTAwMDBdW3RyaWVzIC0gMV0gfHwgMTAwMDA7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5lbmNvZGUgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmVuY29kZSlcclxuICAgICAgICAgICAgPyBvcHRpb25zLmVuY29kZVxyXG4gICAgICAgICAgICA6IChwYXlsb2FkLCBjYWxsYmFjaykgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmRlY29kZSA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZGVjb2RlKVxyXG4gICAgICAgICAgICA/IG9wdGlvbnMuZGVjb2RlXHJcbiAgICAgICAgICAgIDogdGhpcy5zZXJpYWxpemVyLmRlY29kZS5iaW5kKHRoaXMuc2VyaWFsaXplcik7XHJcbiAgICAgICAgdGhpcy5yZWNvbm5lY3RUaW1lciA9IG5ldyBUaW1lcihhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZGlzY29ubmVjdCgpO1xyXG4gICAgICAgICAgICB0aGlzLmNvbm5lY3QoKTtcclxuICAgICAgICB9LCB0aGlzLnJlY29ubmVjdEFmdGVyTXMpO1xyXG4gICAgICAgIHRoaXMuZmV0Y2ggPSB0aGlzLl9yZXNvbHZlRmV0Y2gob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmZldGNoKTtcclxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndvcmtlcikge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgIXdpbmRvdy5Xb3JrZXIpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignV2ViIFdvcmtlciBpcyBub3Qgc3VwcG9ydGVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy53b3JrZXIgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndvcmtlcikgfHwgZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMud29ya2VyVXJsID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndvcmtlclVybDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hY2Nlc3NUb2tlbiA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWNjZXNzVG9rZW4pIHx8IG51bGw7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENvbm5lY3RzIHRoZSBzb2NrZXQsIHVubGVzcyBhbHJlYWR5IGNvbm5lY3RlZC5cclxuICAgICAqL1xyXG4gICAgY29ubmVjdCgpIHtcclxuICAgICAgICBpZiAodGhpcy5jb25uKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLnRyYW5zcG9ydCkge1xyXG4gICAgICAgICAgICB0aGlzLnRyYW5zcG9ydCA9IFdlYlNvY2tldDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMudHJhbnNwb3J0KSB7XHJcbiAgICAgICAgICAgIC8vIERldGVjdCBpZiB1c2luZyB0aGUgbmF0aXZlIGJyb3dzZXIgV2ViU29ja2V0XHJcbiAgICAgICAgICAgIGNvbnN0IGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHRoaXMudHJhbnNwb3J0ID09PSB3aW5kb3cuV2ViU29ja2V0O1xyXG4gICAgICAgICAgICBpZiAoaXNCcm93c2VyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbm4gPSBuZXcgdGhpcy50cmFuc3BvcnQodGhpcy5lbmRwb2ludFVSTCgpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29ubiA9IG5ldyB0aGlzLnRyYW5zcG9ydCh0aGlzLmVuZHBvaW50VVJMKCksIHVuZGVmaW5lZCwge1xyXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuc2V0dXBDb25uZWN0aW9uKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jb25uID0gbmV3IFdTV2ViU29ja2V0RHVtbXkodGhpcy5lbmRwb2ludFVSTCgpLCB1bmRlZmluZWQsIHtcclxuICAgICAgICAgICAgY2xvc2U6ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29ubiA9IG51bGw7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIFVSTCBvZiB0aGUgd2Vic29ja2V0LlxyXG4gICAgICogQHJldHVybnMgc3RyaW5nIFRoZSBVUkwgb2YgdGhlIHdlYnNvY2tldC5cclxuICAgICAqL1xyXG4gICAgZW5kcG9pbnRVUkwoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FwcGVuZFBhcmFtcyh0aGlzLmVuZFBvaW50LCBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnBhcmFtcywgeyB2c246IFZTTiB9KSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIERpc2Nvbm5lY3RzIHRoZSBzb2NrZXQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNvZGUgQSBudW1lcmljIHN0YXR1cyBjb2RlIHRvIHNlbmQgb24gZGlzY29ubmVjdC5cclxuICAgICAqIEBwYXJhbSByZWFzb24gQSBjdXN0b20gcmVhc29uIGZvciB0aGUgZGlzY29ubmVjdC5cclxuICAgICAqL1xyXG4gICAgZGlzY29ubmVjdChjb2RlLCByZWFzb24pIHtcclxuICAgICAgICBpZiAodGhpcy5jb25uKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29ubi5vbmNsb3NlID0gZnVuY3Rpb24gKCkgeyB9OyAvLyBub29wXHJcbiAgICAgICAgICAgIGlmIChjb2RlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbm4uY2xvc2UoY29kZSwgcmVhc29uICE9PSBudWxsICYmIHJlYXNvbiAhPT0gdm9pZCAwID8gcmVhc29uIDogJycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb25uLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5jb25uID0gbnVsbDtcclxuICAgICAgICAgICAgLy8gcmVtb3ZlIG9wZW4gaGFuZGxlc1xyXG4gICAgICAgICAgICB0aGlzLmhlYXJ0YmVhdFRpbWVyICYmIGNsZWFySW50ZXJ2YWwodGhpcy5oZWFydGJlYXRUaW1lcik7XHJcbiAgICAgICAgICAgIHRoaXMucmVjb25uZWN0VGltZXIucmVzZXQoKTtcclxuICAgICAgICAgICAgdGhpcy5jaGFubmVscy5mb3JFYWNoKChjaGFubmVsKSA9PiBjaGFubmVsLnRlYXJkb3duKCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbGwgY3JlYXRlZCBjaGFubmVsc1xyXG4gICAgICovXHJcbiAgICBnZXRDaGFubmVscygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jaGFubmVscztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVW5zdWJzY3JpYmVzIGFuZCByZW1vdmVzIGEgc2luZ2xlIGNoYW5uZWxcclxuICAgICAqIEBwYXJhbSBjaGFubmVsIEEgUmVhbHRpbWVDaGFubmVsIGluc3RhbmNlXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHJlbW92ZUNoYW5uZWwoY2hhbm5lbCkge1xyXG4gICAgICAgIGNvbnN0IHN0YXR1cyA9IGF3YWl0IGNoYW5uZWwudW5zdWJzY3JpYmUoKTtcclxuICAgICAgICB0aGlzLmNoYW5uZWxzID0gdGhpcy5jaGFubmVscy5maWx0ZXIoKGMpID0+IGMuX2pvaW5SZWYgIT09IGNoYW5uZWwuX2pvaW5SZWYpO1xyXG4gICAgICAgIGlmICh0aGlzLmNoYW5uZWxzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHN0YXR1cztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVW5zdWJzY3JpYmVzIGFuZCByZW1vdmVzIGFsbCBjaGFubmVsc1xyXG4gICAgICovXHJcbiAgICBhc3luYyByZW1vdmVBbGxDaGFubmVscygpIHtcclxuICAgICAgICBjb25zdCB2YWx1ZXNfMSA9IGF3YWl0IFByb21pc2UuYWxsKHRoaXMuY2hhbm5lbHMubWFwKChjaGFubmVsKSA9PiBjaGFubmVsLnVuc3Vic2NyaWJlKCkpKTtcclxuICAgICAgICB0aGlzLmNoYW5uZWxzID0gW107XHJcbiAgICAgICAgdGhpcy5kaXNjb25uZWN0KCk7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlc18xO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIHRoZSBtZXNzYWdlLlxyXG4gICAgICpcclxuICAgICAqIEZvciBjdXN0b21pemVkIGxvZ2dpbmcsIGB0aGlzLmxvZ2dlcmAgY2FuIGJlIG92ZXJyaWRkZW4uXHJcbiAgICAgKi9cclxuICAgIGxvZyhraW5kLCBtc2csIGRhdGEpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlcihraW5kLCBtc2csIGRhdGEpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBzb2NrZXQuXHJcbiAgICAgKi9cclxuICAgIGNvbm5lY3Rpb25TdGF0ZSgpIHtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMuY29ubiAmJiB0aGlzLmNvbm4ucmVhZHlTdGF0ZSkge1xyXG4gICAgICAgICAgICBjYXNlIFNPQ0tFVF9TVEFURVMuY29ubmVjdGluZzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBDT05ORUNUSU9OX1NUQVRFLkNvbm5lY3Rpbmc7XHJcbiAgICAgICAgICAgIGNhc2UgU09DS0VUX1NUQVRFUy5vcGVuOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIENPTk5FQ1RJT05fU1RBVEUuT3BlbjtcclxuICAgICAgICAgICAgY2FzZSBTT0NLRVRfU1RBVEVTLmNsb3Npbmc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gQ09OTkVDVElPTl9TVEFURS5DbG9zaW5nO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIENPTk5FQ1RJT05fU1RBVEUuQ2xvc2VkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaXMgdGhlIGNvbm5lY3Rpb24gaXMgb3Blbi5cclxuICAgICAqL1xyXG4gICAgaXNDb25uZWN0ZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdGlvblN0YXRlKCkgPT09IENPTk5FQ1RJT05fU1RBVEUuT3BlbjtcclxuICAgIH1cclxuICAgIGNoYW5uZWwodG9waWMsIHBhcmFtcyA9IHsgY29uZmlnOiB7fSB9KSB7XHJcbiAgICAgICAgY29uc3QgcmVhbHRpbWVUb3BpYyA9IGByZWFsdGltZToke3RvcGljfWA7XHJcbiAgICAgICAgY29uc3QgZXhpc3RzID0gdGhpcy5nZXRDaGFubmVscygpLmZpbmQoKGMpID0+IGMudG9waWMgPT09IHJlYWx0aW1lVG9waWMpO1xyXG4gICAgICAgIGlmICghZXhpc3RzKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNoYW4gPSBuZXcgUmVhbHRpbWVDaGFubmVsKGByZWFsdGltZToke3RvcGljfWAsIHBhcmFtcywgdGhpcyk7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbHMucHVzaChjaGFuKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNoYW47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gZXhpc3RzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUHVzaCBvdXQgYSBtZXNzYWdlIGlmIHRoZSBzb2NrZXQgaXMgY29ubmVjdGVkLlxyXG4gICAgICpcclxuICAgICAqIElmIHRoZSBzb2NrZXQgaXMgbm90IGNvbm5lY3RlZCwgdGhlIG1lc3NhZ2UgZ2V0cyBlbnF1ZXVlZCB3aXRoaW4gYSBsb2NhbCBidWZmZXIsIGFuZCBzZW50IG91dCB3aGVuIGEgY29ubmVjdGlvbiBpcyBuZXh0IGVzdGFibGlzaGVkLlxyXG4gICAgICovXHJcbiAgICBwdXNoKGRhdGEpIHtcclxuICAgICAgICBjb25zdCB7IHRvcGljLCBldmVudCwgcGF5bG9hZCwgcmVmIH0gPSBkYXRhO1xyXG4gICAgICAgIGNvbnN0IGNhbGxiYWNrID0gKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmVuY29kZShkYXRhLCAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgICAgICAgICAoX2EgPSB0aGlzLmNvbm4pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zZW5kKHJlc3VsdCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5sb2coJ3B1c2gnLCBgJHt0b3BpY30gJHtldmVudH0gKCR7cmVmfSlgLCBwYXlsb2FkKTtcclxuICAgICAgICBpZiAodGhpcy5pc0Nvbm5lY3RlZCgpKSB7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRCdWZmZXIucHVzaChjYWxsYmFjayk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBKV1QgYWNjZXNzIHRva2VuIHVzZWQgZm9yIGNoYW5uZWwgc3Vic2NyaXB0aW9uIGF1dGhvcml6YXRpb24gYW5kIFJlYWx0aW1lIFJMUy5cclxuICAgICAqXHJcbiAgICAgKiBJZiBwYXJhbSBpcyBudWxsIGl0IHdpbGwgdXNlIHRoZSBgYWNjZXNzVG9rZW5gIGNhbGxiYWNrIGZ1bmN0aW9uIG9yIHRoZSB0b2tlbiBzZXQgb24gdGhlIGNsaWVudC5cclxuICAgICAqXHJcbiAgICAgKiBPbiBjYWxsYmFjayB1c2VkLCBpdCB3aWxsIHNldCB0aGUgdmFsdWUgb2YgdGhlIHRva2VuIGludGVybmFsIHRvIHRoZSBjbGllbnQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHRva2VuIEEgSldUIHN0cmluZyB0byBvdmVycmlkZSB0aGUgdG9rZW4gc2V0IG9uIHRoZSBjbGllbnQuXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHNldEF1dGgodG9rZW4gPSBudWxsKSB7XHJcbiAgICAgICAgbGV0IHRva2VuVG9TZW5kID0gdG9rZW4gfHxcclxuICAgICAgICAgICAgKHRoaXMuYWNjZXNzVG9rZW4gJiYgKGF3YWl0IHRoaXMuYWNjZXNzVG9rZW4oKSkpIHx8XHJcbiAgICAgICAgICAgIHRoaXMuYWNjZXNzVG9rZW5WYWx1ZTtcclxuICAgICAgICBpZiAodGhpcy5hY2Nlc3NUb2tlblZhbHVlICE9IHRva2VuVG9TZW5kKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYWNjZXNzVG9rZW5WYWx1ZSA9IHRva2VuVG9TZW5kO1xyXG4gICAgICAgICAgICB0aGlzLmNoYW5uZWxzLmZvckVhY2goKGNoYW5uZWwpID0+IHtcclxuICAgICAgICAgICAgICAgIHRva2VuVG9TZW5kICYmXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbC51cGRhdGVKb2luUGF5bG9hZCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc190b2tlbjogdG9rZW5Ub1NlbmQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnNpb246IHRoaXMuaGVhZGVycyAmJiB0aGlzLmhlYWRlcnNbJ1gtQ2xpZW50LUluZm8nXSxcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGlmIChjaGFubmVsLmpvaW5lZE9uY2UgJiYgY2hhbm5lbC5faXNKb2luZWQoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWwuX3B1c2goQ0hBTk5FTF9FVkVOVFMuYWNjZXNzX3Rva2VuLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc190b2tlbjogdG9rZW5Ub1NlbmQsXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2VuZHMgYSBoZWFydGJlYXQgbWVzc2FnZSBpZiB0aGUgc29ja2V0IGlzIGNvbm5lY3RlZC5cclxuICAgICAqL1xyXG4gICAgYXN5bmMgc2VuZEhlYXJ0YmVhdCgpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzQ29ubmVjdGVkKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5oZWFydGJlYXRDYWxsYmFjaygnZGlzY29ubmVjdGVkJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMucGVuZGluZ0hlYXJ0YmVhdFJlZikge1xyXG4gICAgICAgICAgICB0aGlzLnBlbmRpbmdIZWFydGJlYXRSZWYgPSBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLmxvZygndHJhbnNwb3J0JywgJ2hlYXJ0YmVhdCB0aW1lb3V0LiBBdHRlbXB0aW5nIHRvIHJlLWVzdGFibGlzaCBjb25uZWN0aW9uJyk7XHJcbiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0Q2FsbGJhY2soJ3RpbWVvdXQnKTtcclxuICAgICAgICAgICAgKF9hID0gdGhpcy5jb25uKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2xvc2UoV1NfQ0xPU0VfTk9STUFMLCAnaGVhcmJlYXQgdGltZW91dCcpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucGVuZGluZ0hlYXJ0YmVhdFJlZiA9IHRoaXMuX21ha2VSZWYoKTtcclxuICAgICAgICB0aGlzLnB1c2goe1xyXG4gICAgICAgICAgICB0b3BpYzogJ3Bob2VuaXgnLFxyXG4gICAgICAgICAgICBldmVudDogJ2hlYXJ0YmVhdCcsXHJcbiAgICAgICAgICAgIHBheWxvYWQ6IHt9LFxyXG4gICAgICAgICAgICByZWY6IHRoaXMucGVuZGluZ0hlYXJ0YmVhdFJlZixcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmhlYXJ0YmVhdENhbGxiYWNrKCdzZW50Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5zZXRBdXRoKCk7XHJcbiAgICB9XHJcbiAgICBvbkhlYXJ0YmVhdChjYWxsYmFjaykge1xyXG4gICAgICAgIHRoaXMuaGVhcnRiZWF0Q2FsbGJhY2sgPSBjYWxsYmFjaztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRmx1c2hlcyBzZW5kIGJ1ZmZlclxyXG4gICAgICovXHJcbiAgICBmbHVzaFNlbmRCdWZmZXIoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNDb25uZWN0ZWQoKSAmJiB0aGlzLnNlbmRCdWZmZXIubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRCdWZmZXIuZm9yRWFjaCgoY2FsbGJhY2spID0+IGNhbGxiYWNrKCkpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRCdWZmZXIgPSBbXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiB0aGUgbmV4dCBtZXNzYWdlIHJlZiwgYWNjb3VudGluZyBmb3Igb3ZlcmZsb3dzXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIF9tYWtlUmVmKCkge1xyXG4gICAgICAgIGxldCBuZXdSZWYgPSB0aGlzLnJlZiArIDE7XHJcbiAgICAgICAgaWYgKG5ld1JlZiA9PT0gdGhpcy5yZWYpIHtcclxuICAgICAgICAgICAgdGhpcy5yZWYgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5yZWYgPSBuZXdSZWY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLnJlZi50b1N0cmluZygpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVbnN1YnNjcmliZSBmcm9tIGNoYW5uZWxzIHdpdGggdGhlIHNwZWNpZmllZCB0b3BpYy5cclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgX2xlYXZlT3BlblRvcGljKHRvcGljKSB7XHJcbiAgICAgICAgbGV0IGR1cENoYW5uZWwgPSB0aGlzLmNoYW5uZWxzLmZpbmQoKGMpID0+IGMudG9waWMgPT09IHRvcGljICYmIChjLl9pc0pvaW5lZCgpIHx8IGMuX2lzSm9pbmluZygpKSk7XHJcbiAgICAgICAgaWYgKGR1cENoYW5uZWwpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2coJ3RyYW5zcG9ydCcsIGBsZWF2aW5nIGR1cGxpY2F0ZSB0b3BpYyBcIiR7dG9waWN9XCJgKTtcclxuICAgICAgICAgICAgZHVwQ2hhbm5lbC51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyBhIHN1YnNjcmlwdGlvbiBmcm9tIHRoZSBzb2NrZXQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNoYW5uZWwgQW4gb3BlbiBzdWJzY3JpcHRpb24uXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIF9yZW1vdmUoY2hhbm5lbCkge1xyXG4gICAgICAgIHRoaXMuY2hhbm5lbHMgPSB0aGlzLmNoYW5uZWxzLmZpbHRlcigoYykgPT4gYy50b3BpYyAhPT0gY2hhbm5lbC50b3BpYyk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdXAgY29ubmVjdGlvbiBoYW5kbGVycy5cclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgc2V0dXBDb25uZWN0aW9uKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmNvbm4pIHtcclxuICAgICAgICAgICAgdGhpcy5jb25uLmJpbmFyeVR5cGUgPSAnYXJyYXlidWZmZXInO1xyXG4gICAgICAgICAgICB0aGlzLmNvbm4ub25vcGVuID0gKCkgPT4gdGhpcy5fb25Db25uT3BlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmNvbm4ub25lcnJvciA9IChlcnJvcikgPT4gdGhpcy5fb25Db25uRXJyb3IoZXJyb3IpO1xyXG4gICAgICAgICAgICB0aGlzLmNvbm4ub25tZXNzYWdlID0gKGV2ZW50KSA9PiB0aGlzLl9vbkNvbm5NZXNzYWdlKGV2ZW50KTtcclxuICAgICAgICAgICAgdGhpcy5jb25uLm9uY2xvc2UgPSAoZXZlbnQpID0+IHRoaXMuX29uQ29ubkNsb3NlKGV2ZW50KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfb25Db25uTWVzc2FnZShyYXdNZXNzYWdlKSB7XHJcbiAgICAgICAgdGhpcy5kZWNvZGUocmF3TWVzc2FnZS5kYXRhLCAobXNnKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCB7IHRvcGljLCBldmVudCwgcGF5bG9hZCwgcmVmIH0gPSBtc2c7XHJcbiAgICAgICAgICAgIGlmICh0b3BpYyA9PT0gJ3Bob2VuaXgnICYmIGV2ZW50ID09PSAncGh4X3JlcGx5Jykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oZWFydGJlYXRDYWxsYmFjayhtc2cucGF5bG9hZC5zdGF0dXMgPT0gJ29rJyA/ICdvaycgOiAnZXJyb3InKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAocmVmICYmIHJlZiA9PT0gdGhpcy5wZW5kaW5nSGVhcnRiZWF0UmVmKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBlbmRpbmdIZWFydGJlYXRSZWYgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubG9nKCdyZWNlaXZlJywgYCR7cGF5bG9hZC5zdGF0dXMgfHwgJyd9ICR7dG9waWN9ICR7ZXZlbnR9ICR7KHJlZiAmJiAnKCcgKyByZWYgKyAnKScpIHx8ICcnfWAsIHBheWxvYWQpO1xyXG4gICAgICAgICAgICBBcnJheS5mcm9tKHRoaXMuY2hhbm5lbHMpXHJcbiAgICAgICAgICAgICAgICAuZmlsdGVyKChjaGFubmVsKSA9PiBjaGFubmVsLl9pc01lbWJlcih0b3BpYykpXHJcbiAgICAgICAgICAgICAgICAuZm9yRWFjaCgoY2hhbm5lbCkgPT4gY2hhbm5lbC5fdHJpZ2dlcihldmVudCwgcGF5bG9hZCwgcmVmKSk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGVDaGFuZ2VDYWxsYmFja3MubWVzc2FnZS5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2sobXNnKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfb25Db25uT3BlbigpIHtcclxuICAgICAgICB0aGlzLmxvZygndHJhbnNwb3J0JywgYGNvbm5lY3RlZCB0byAke3RoaXMuZW5kcG9pbnRVUkwoKX1gKTtcclxuICAgICAgICB0aGlzLmZsdXNoU2VuZEJ1ZmZlcigpO1xyXG4gICAgICAgIHRoaXMucmVjb25uZWN0VGltZXIucmVzZXQoKTtcclxuICAgICAgICBpZiAoIXRoaXMud29ya2VyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0YmVhdFRpbWVyKTtcclxuICAgICAgICAgICAgdGhpcy5oZWFydGJlYXRUaW1lciA9IHNldEludGVydmFsKCgpID0+IHRoaXMuc2VuZEhlYXJ0YmVhdCgpLCB0aGlzLmhlYXJ0YmVhdEludGVydmFsTXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMud29ya2VyVXJsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvZygnd29ya2VyJywgYHN0YXJ0aW5nIHdvcmtlciBmb3IgZnJvbSAke3RoaXMud29ya2VyVXJsfWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2coJ3dvcmtlcicsIGBzdGFydGluZyBkZWZhdWx0IHdvcmtlcmApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IG9iamVjdFVybCA9IHRoaXMuX3dvcmtlck9iamVjdFVybCh0aGlzLndvcmtlclVybCk7XHJcbiAgICAgICAgICAgIHRoaXMud29ya2VyUmVmID0gbmV3IFdvcmtlcihvYmplY3RVcmwpO1xyXG4gICAgICAgICAgICB0aGlzLndvcmtlclJlZi5vbmVycm9yID0gKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvZygnd29ya2VyJywgJ3dvcmtlciBlcnJvcicsIGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy53b3JrZXJSZWYudGVybWluYXRlKCk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHRoaXMud29ya2VyUmVmLm9ubWVzc2FnZSA9IChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50LmRhdGEuZXZlbnQgPT09ICdrZWVwQWxpdmUnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZW5kSGVhcnRiZWF0KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHRoaXMud29ya2VyUmVmLnBvc3RNZXNzYWdlKHtcclxuICAgICAgICAgICAgICAgIGV2ZW50OiAnc3RhcnQnLFxyXG4gICAgICAgICAgICAgICAgaW50ZXJ2YWw6IHRoaXMuaGVhcnRiZWF0SW50ZXJ2YWxNcyxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3RhdGVDaGFuZ2VDYWxsYmFja3Mub3Blbi5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2soKSk7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfb25Db25uQ2xvc2UoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmxvZygndHJhbnNwb3J0JywgJ2Nsb3NlJywgZXZlbnQpO1xyXG4gICAgICAgIHRoaXMuX3RyaWdnZXJDaGFuRXJyb3IoKTtcclxuICAgICAgICB0aGlzLmhlYXJ0YmVhdFRpbWVyICYmIGNsZWFySW50ZXJ2YWwodGhpcy5oZWFydGJlYXRUaW1lcik7XHJcbiAgICAgICAgdGhpcy5yZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKTtcclxuICAgICAgICB0aGlzLnN0YXRlQ2hhbmdlQ2FsbGJhY2tzLmNsb3NlLmZvckVhY2goKGNhbGxiYWNrKSA9PiBjYWxsYmFjayhldmVudCkpO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgX29uQ29ubkVycm9yKGVycm9yKSB7XHJcbiAgICAgICAgdGhpcy5sb2coJ3RyYW5zcG9ydCcsIGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMuX3RyaWdnZXJDaGFuRXJyb3IoKTtcclxuICAgICAgICB0aGlzLnN0YXRlQ2hhbmdlQ2FsbGJhY2tzLmVycm9yLmZvckVhY2goKGNhbGxiYWNrKSA9PiBjYWxsYmFjayhlcnJvcikpO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgX3RyaWdnZXJDaGFuRXJyb3IoKSB7XHJcbiAgICAgICAgdGhpcy5jaGFubmVscy5mb3JFYWNoKChjaGFubmVsKSA9PiBjaGFubmVsLl90cmlnZ2VyKENIQU5ORUxfRVZFTlRTLmVycm9yKSk7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfYXBwZW5kUGFyYW1zKHVybCwgcGFyYW1zKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKHBhcmFtcykubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB1cmw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHByZWZpeCA9IHVybC5tYXRjaCgvXFw/LykgPyAnJicgOiAnPyc7XHJcbiAgICAgICAgY29uc3QgcXVlcnkgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHBhcmFtcyk7XHJcbiAgICAgICAgcmV0dXJuIGAke3VybH0ke3ByZWZpeH0ke3F1ZXJ5fWA7XHJcbiAgICB9XHJcbiAgICBfd29ya2VyT2JqZWN0VXJsKHVybCkge1xyXG4gICAgICAgIGxldCByZXN1bHRfdXJsO1xyXG4gICAgICAgIGlmICh1cmwpIHtcclxuICAgICAgICAgICAgcmVzdWx0X3VybCA9IHVybDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbV09SS0VSX1NDUklQVF0sIHsgdHlwZTogJ2FwcGxpY2F0aW9uL2phdmFzY3JpcHQnIH0pO1xyXG4gICAgICAgICAgICByZXN1bHRfdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdF91cmw7XHJcbiAgICB9XHJcbn1cclxuY2xhc3MgV1NXZWJTb2NrZXREdW1teSB7XHJcbiAgICBjb25zdHJ1Y3RvcihhZGRyZXNzLCBfcHJvdG9jb2xzLCBvcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5iaW5hcnlUeXBlID0gJ2FycmF5YnVmZmVyJztcclxuICAgICAgICB0aGlzLm9uY2xvc2UgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy5vbmVycm9yID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25tZXNzYWdlID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25vcGVuID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMucmVhZHlTdGF0ZSA9IFNPQ0tFVF9TVEFURVMuY29ubmVjdGluZztcclxuICAgICAgICB0aGlzLnNlbmQgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy51cmwgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudXJsID0gYWRkcmVzcztcclxuICAgICAgICB0aGlzLmNsb3NlID0gb3B0aW9ucy5jbG9zZTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWFsdGltZUNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: () => (/* binding */ REALTIME_PRESENCE_LISTEN_EVENTS),\n/* harmony export */   \"default\": () => (/* binding */ RealtimePresence)\n/* harmony export */ });\n/*\r\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\r\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\r\n*/\r\nvar REALTIME_PRESENCE_LISTEN_EVENTS;\r\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\r\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\r\nclass RealtimePresence {\r\n    /**\r\n     * Initializes the Presence.\r\n     *\r\n     * @param channel - The RealtimeChannel\r\n     * @param opts - The options,\r\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\r\n     */\r\n    constructor(channel, opts) {\r\n        this.channel = channel;\r\n        this.state = {};\r\n        this.pendingDiffs = [];\r\n        this.joinRef = null;\r\n        this.caller = {\r\n            onJoin: () => { },\r\n            onLeave: () => { },\r\n            onSync: () => { },\r\n        };\r\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\r\n            state: 'presence_state',\r\n            diff: 'presence_diff',\r\n        };\r\n        this.channel._on(events.state, {}, (newState) => {\r\n            const { onJoin, onLeave, onSync } = this.caller;\r\n            this.joinRef = this.channel._joinRef();\r\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\r\n            this.pendingDiffs.forEach((diff) => {\r\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\r\n            });\r\n            this.pendingDiffs = [];\r\n            onSync();\r\n        });\r\n        this.channel._on(events.diff, {}, (diff) => {\r\n            const { onJoin, onLeave, onSync } = this.caller;\r\n            if (this.inPendingSyncState()) {\r\n                this.pendingDiffs.push(diff);\r\n            }\r\n            else {\r\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\r\n                onSync();\r\n            }\r\n        });\r\n        this.onJoin((key, currentPresences, newPresences) => {\r\n            this.channel._trigger('presence', {\r\n                event: 'join',\r\n                key,\r\n                currentPresences,\r\n                newPresences,\r\n            });\r\n        });\r\n        this.onLeave((key, currentPresences, leftPresences) => {\r\n            this.channel._trigger('presence', {\r\n                event: 'leave',\r\n                key,\r\n                currentPresences,\r\n                leftPresences,\r\n            });\r\n        });\r\n        this.onSync(() => {\r\n            this.channel._trigger('presence', { event: 'sync' });\r\n        });\r\n    }\r\n    /**\r\n     * Used to sync the list of presences on the server with the\r\n     * client's state.\r\n     *\r\n     * An optional `onJoin` and `onLeave` callback can be provided to\r\n     * react to changes in the client's local presences across\r\n     * disconnects and reconnects with the server.\r\n     *\r\n     * @internal\r\n     */\r\n    static syncState(currentState, newState, onJoin, onLeave) {\r\n        const state = this.cloneDeep(currentState);\r\n        const transformedState = this.transformState(newState);\r\n        const joins = {};\r\n        const leaves = {};\r\n        this.map(state, (key, presences) => {\r\n            if (!transformedState[key]) {\r\n                leaves[key] = presences;\r\n            }\r\n        });\r\n        this.map(transformedState, (key, newPresences) => {\r\n            const currentPresences = state[key];\r\n            if (currentPresences) {\r\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\r\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\r\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                if (joinedPresences.length > 0) {\r\n                    joins[key] = joinedPresences;\r\n                }\r\n                if (leftPresences.length > 0) {\r\n                    leaves[key] = leftPresences;\r\n                }\r\n            }\r\n            else {\r\n                joins[key] = newPresences;\r\n            }\r\n        });\r\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\r\n    }\r\n    /**\r\n     * Used to sync a diff of presence join and leave events from the\r\n     * server, as they happen.\r\n     *\r\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\r\n     * `onLeave` callbacks to react to a user joining or leaving from a\r\n     * device.\r\n     *\r\n     * @internal\r\n     */\r\n    static syncDiff(state, diff, onJoin, onLeave) {\r\n        const { joins, leaves } = {\r\n            joins: this.transformState(diff.joins),\r\n            leaves: this.transformState(diff.leaves),\r\n        };\r\n        if (!onJoin) {\r\n            onJoin = () => { };\r\n        }\r\n        if (!onLeave) {\r\n            onLeave = () => { };\r\n        }\r\n        this.map(joins, (key, newPresences) => {\r\n            var _a;\r\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\r\n            state[key] = this.cloneDeep(newPresences);\r\n            if (currentPresences.length > 0) {\r\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\r\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                state[key].unshift(...curPresences);\r\n            }\r\n            onJoin(key, currentPresences, newPresences);\r\n        });\r\n        this.map(leaves, (key, leftPresences) => {\r\n            let currentPresences = state[key];\r\n            if (!currentPresences)\r\n                return;\r\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\r\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\r\n            state[key] = currentPresences;\r\n            onLeave(key, currentPresences, leftPresences);\r\n            if (currentPresences.length === 0)\r\n                delete state[key];\r\n        });\r\n        return state;\r\n    }\r\n    /** @internal */\r\n    static map(obj, func) {\r\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\r\n    }\r\n    /**\r\n     * Remove 'metas' key\r\n     * Change 'phx_ref' to 'presence_ref'\r\n     * Remove 'phx_ref' and 'phx_ref_prev'\r\n     *\r\n     * @example\r\n     * // returns {\r\n     *  abc123: [\r\n     *    { presence_ref: '2', user_id: 1 },\r\n     *    { presence_ref: '3', user_id: 2 }\r\n     *  ]\r\n     * }\r\n     * RealtimePresence.transformState({\r\n     *  abc123: {\r\n     *    metas: [\r\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\r\n     *      { phx_ref: '3', user_id: 2 }\r\n     *    ]\r\n     *  }\r\n     * })\r\n     *\r\n     * @internal\r\n     */\r\n    static transformState(state) {\r\n        state = this.cloneDeep(state);\r\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\r\n            const presences = state[key];\r\n            if ('metas' in presences) {\r\n                newState[key] = presences.metas.map((presence) => {\r\n                    presence['presence_ref'] = presence['phx_ref'];\r\n                    delete presence['phx_ref'];\r\n                    delete presence['phx_ref_prev'];\r\n                    return presence;\r\n                });\r\n            }\r\n            else {\r\n                newState[key] = presences;\r\n            }\r\n            return newState;\r\n        }, {});\r\n    }\r\n    /** @internal */\r\n    static cloneDeep(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n    /** @internal */\r\n    onJoin(callback) {\r\n        this.caller.onJoin = callback;\r\n    }\r\n    /** @internal */\r\n    onLeave(callback) {\r\n        this.caller.onLeave = callback;\r\n    }\r\n    /** @internal */\r\n    onSync(callback) {\r\n        this.caller.onSync = callback;\r\n    }\r\n    /** @internal */\r\n    inPendingSyncState() {\r\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimePresence.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/WebSocket.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/WebSocket.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Node.js WebSocket entry point\r\nlet WebSocketImpl;\r\nif (typeof window === 'undefined') {\r\n    // Node.js environment\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    WebSocketImpl = __webpack_require__(/*! ws */ \"(app-pages-browser)/./node_modules/ws/browser.js\");\r\n}\r\nelse {\r\n    // Browser environment\r\n    WebSocketImpl = window.WebSocket;\r\n}\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WebSocketImpl);\r\n//# sourceMappingURL=WebSocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvV2ViU29ja2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFPLENBQUMsNERBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGFBQWEsRUFBQztBQUM3QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccmVhbHRpbWUtanNcXGRpc3RcXG1vZHVsZVxcV2ViU29ja2V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vZGUuanMgV2ViU29ja2V0IGVudHJ5IHBvaW50XHJcbmxldCBXZWJTb2NrZXRJbXBsO1xyXG5pZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIC8vIE5vZGUuanMgZW52aXJvbm1lbnRcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzXHJcbiAgICBXZWJTb2NrZXRJbXBsID0gcmVxdWlyZSgnd3MnKTtcclxufVxyXG5lbHNlIHtcclxuICAgIC8vIEJyb3dzZXIgZW52aXJvbm1lbnRcclxuICAgIFdlYlNvY2tldEltcGwgPSB3aW5kb3cuV2ViU29ja2V0O1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IFdlYlNvY2tldEltcGw7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYlNvY2tldC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/WebSocket.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_CHANNEL_STATES),\n/* harmony export */   REALTIME_LISTEN_TYPES: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_LISTEN_TYPES),\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT),\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: () => (/* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__.REALTIME_PRESENCE_LISTEN_EVENTS),\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_SUBSCRIBE_STATES),\n/* harmony export */   RealtimeChannel: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   RealtimeClient: () => (/* reexport safe */ _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   RealtimePresence: () => (/* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RealtimeClient */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealtimeChannel */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealtimePresence */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDMEg7QUFDaEY7QUFDMEg7QUFDbE4iLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHJlYWx0aW1lLWpzXFxkaXN0XFxtb2R1bGVcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFsdGltZUNsaWVudCBmcm9tICcuL1JlYWx0aW1lQ2xpZW50JztcclxuaW1wb3J0IFJlYWx0aW1lQ2hhbm5lbCwgeyBSRUFMVElNRV9MSVNURU5fVFlQRVMsIFJFQUxUSU1FX1BPU1RHUkVTX0NIQU5HRVNfTElTVEVOX0VWRU5ULCBSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTLCBSRUFMVElNRV9DSEFOTkVMX1NUQVRFUywgfSBmcm9tICcuL1JlYWx0aW1lQ2hhbm5lbCc7XHJcbmltcG9ydCBSZWFsdGltZVByZXNlbmNlLCB7IFJFQUxUSU1FX1BSRVNFTkNFX0xJU1RFTl9FVkVOVFMsIH0gZnJvbSAnLi9SZWFsdGltZVByZXNlbmNlJztcclxuZXhwb3J0IHsgUmVhbHRpbWVQcmVzZW5jZSwgUmVhbHRpbWVDaGFubmVsLCBSZWFsdGltZUNsaWVudCwgUkVBTFRJTUVfTElTVEVOX1RZUEVTLCBSRUFMVElNRV9QT1NUR1JFU19DSEFOR0VTX0xJU1RFTl9FVkVOVCwgUkVBTFRJTUVfUFJFU0VOQ0VfTElTVEVOX0VWRU5UUywgUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUywgUkVBTFRJTUVfQ0hBTk5FTF9TVEFURVMsIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHANNEL_EVENTS: () => (/* binding */ CHANNEL_EVENTS),\n/* harmony export */   CHANNEL_STATES: () => (/* binding */ CHANNEL_STATES),\n/* harmony export */   CONNECTION_STATE: () => (/* binding */ CONNECTION_STATE),\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS),\n/* harmony export */   DEFAULT_TIMEOUT: () => (/* binding */ DEFAULT_TIMEOUT),\n/* harmony export */   SOCKET_STATES: () => (/* binding */ SOCKET_STATES),\n/* harmony export */   TRANSPORTS: () => (/* binding */ TRANSPORTS),\n/* harmony export */   VERSION: () => (/* binding */ VERSION),\n/* harmony export */   VSN: () => (/* binding */ VSN),\n/* harmony export */   WS_CLOSE_NORMAL: () => (/* binding */ WS_CLOSE_NORMAL)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js\");\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst VSN = '1.0.0';\r\nconst VERSION = _version__WEBPACK_IMPORTED_MODULE_0__.version;\r\nconst DEFAULT_TIMEOUT = 10000;\r\nconst WS_CLOSE_NORMAL = 1000;\r\nvar SOCKET_STATES;\r\n(function (SOCKET_STATES) {\r\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\r\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\r\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\r\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\r\n})(SOCKET_STATES || (SOCKET_STATES = {}));\r\nvar CHANNEL_STATES;\r\n(function (CHANNEL_STATES) {\r\n    CHANNEL_STATES[\"closed\"] = \"closed\";\r\n    CHANNEL_STATES[\"errored\"] = \"errored\";\r\n    CHANNEL_STATES[\"joined\"] = \"joined\";\r\n    CHANNEL_STATES[\"joining\"] = \"joining\";\r\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\r\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\r\nvar CHANNEL_EVENTS;\r\n(function (CHANNEL_EVENTS) {\r\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\r\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\r\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\r\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\r\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\r\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\r\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\r\nvar TRANSPORTS;\r\n(function (TRANSPORTS) {\r\n    TRANSPORTS[\"websocket\"] = \"websocket\";\r\n})(TRANSPORTS || (TRANSPORTS = {}));\r\nvar CONNECTION_STATE;\r\n(function (CONNECTION_STATE) {\r\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\r\n    CONNECTION_STATE[\"Open\"] = \"open\";\r\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\r\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\r\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QiwwQkFBMEIsZ0NBQWdDLDZDQUFPLENBQUM7QUFDbEU7QUFDQSxnQkFBZ0IsNkNBQU87QUFDdkI7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0NBQXNDO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDO0FBQ2xDO0FBQ1A7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQzFCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxyZWFsdGltZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgcmVhbHRpbWUtanMvJHt2ZXJzaW9ufWAgfTtcclxuZXhwb3J0IGNvbnN0IFZTTiA9ICcxLjAuMCc7XHJcbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gdmVyc2lvbjtcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfVElNRU9VVCA9IDEwMDAwO1xyXG5leHBvcnQgY29uc3QgV1NfQ0xPU0VfTk9STUFMID0gMTAwMDtcclxuZXhwb3J0IHZhciBTT0NLRVRfU1RBVEVTO1xyXG4oZnVuY3Rpb24gKFNPQ0tFVF9TVEFURVMpIHtcclxuICAgIFNPQ0tFVF9TVEFURVNbU09DS0VUX1NUQVRFU1tcImNvbm5lY3RpbmdcIl0gPSAwXSA9IFwiY29ubmVjdGluZ1wiO1xyXG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wib3BlblwiXSA9IDFdID0gXCJvcGVuXCI7XHJcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJjbG9zaW5nXCJdID0gMl0gPSBcImNsb3NpbmdcIjtcclxuICAgIFNPQ0tFVF9TVEFURVNbU09DS0VUX1NUQVRFU1tcImNsb3NlZFwiXSA9IDNdID0gXCJjbG9zZWRcIjtcclxufSkoU09DS0VUX1NUQVRFUyB8fCAoU09DS0VUX1NUQVRFUyA9IHt9KSk7XHJcbmV4cG9ydCB2YXIgQ0hBTk5FTF9TVEFURVM7XHJcbihmdW5jdGlvbiAoQ0hBTk5FTF9TVEFURVMpIHtcclxuICAgIENIQU5ORUxfU1RBVEVTW1wiY2xvc2VkXCJdID0gXCJjbG9zZWRcIjtcclxuICAgIENIQU5ORUxfU1RBVEVTW1wiZXJyb3JlZFwiXSA9IFwiZXJyb3JlZFwiO1xyXG4gICAgQ0hBTk5FTF9TVEFURVNbXCJqb2luZWRcIl0gPSBcImpvaW5lZFwiO1xyXG4gICAgQ0hBTk5FTF9TVEFURVNbXCJqb2luaW5nXCJdID0gXCJqb2luaW5nXCI7XHJcbiAgICBDSEFOTkVMX1NUQVRFU1tcImxlYXZpbmdcIl0gPSBcImxlYXZpbmdcIjtcclxufSkoQ0hBTk5FTF9TVEFURVMgfHwgKENIQU5ORUxfU1RBVEVTID0ge30pKTtcclxuZXhwb3J0IHZhciBDSEFOTkVMX0VWRU5UUztcclxuKGZ1bmN0aW9uIChDSEFOTkVMX0VWRU5UUykge1xyXG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJjbG9zZVwiXSA9IFwicGh4X2Nsb3NlXCI7XHJcbiAgICBDSEFOTkVMX0VWRU5UU1tcImVycm9yXCJdID0gXCJwaHhfZXJyb3JcIjtcclxuICAgIENIQU5ORUxfRVZFTlRTW1wiam9pblwiXSA9IFwicGh4X2pvaW5cIjtcclxuICAgIENIQU5ORUxfRVZFTlRTW1wicmVwbHlcIl0gPSBcInBoeF9yZXBseVwiO1xyXG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJsZWF2ZVwiXSA9IFwicGh4X2xlYXZlXCI7XHJcbiAgICBDSEFOTkVMX0VWRU5UU1tcImFjY2Vzc190b2tlblwiXSA9IFwiYWNjZXNzX3Rva2VuXCI7XHJcbn0pKENIQU5ORUxfRVZFTlRTIHx8IChDSEFOTkVMX0VWRU5UUyA9IHt9KSk7XHJcbmV4cG9ydCB2YXIgVFJBTlNQT1JUUztcclxuKGZ1bmN0aW9uIChUUkFOU1BPUlRTKSB7XHJcbiAgICBUUkFOU1BPUlRTW1wid2Vic29ja2V0XCJdID0gXCJ3ZWJzb2NrZXRcIjtcclxufSkoVFJBTlNQT1JUUyB8fCAoVFJBTlNQT1JUUyA9IHt9KSk7XHJcbmV4cG9ydCB2YXIgQ09OTkVDVElPTl9TVEFURTtcclxuKGZ1bmN0aW9uIChDT05ORUNUSU9OX1NUQVRFKSB7XHJcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiQ29ubmVjdGluZ1wiXSA9IFwiY29ubmVjdGluZ1wiO1xyXG4gICAgQ09OTkVDVElPTl9TVEFURVtcIk9wZW5cIl0gPSBcIm9wZW5cIjtcclxuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDbG9zaW5nXCJdID0gXCJjbG9zaW5nXCI7XHJcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiQ2xvc2VkXCJdID0gXCJjbG9zZWRcIjtcclxufSkoQ09OTkVDVElPTl9TVEFURSB8fCAoQ09OTkVDVElPTl9TVEFURSA9IHt9KSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/push.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Push)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n\r\nclass Push {\r\n    /**\r\n     * Initializes the Push\r\n     *\r\n     * @param channel The Channel\r\n     * @param event The event, for example `\"phx_join\"`\r\n     * @param payload The payload, for example `{user_id: 123}`\r\n     * @param timeout The push timeout in milliseconds\r\n     */\r\n    constructor(channel, event, payload = {}, timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT) {\r\n        this.channel = channel;\r\n        this.event = event;\r\n        this.payload = payload;\r\n        this.timeout = timeout;\r\n        this.sent = false;\r\n        this.timeoutTimer = undefined;\r\n        this.ref = '';\r\n        this.receivedResp = null;\r\n        this.recHooks = [];\r\n        this.refEvent = null;\r\n    }\r\n    resend(timeout) {\r\n        this.timeout = timeout;\r\n        this._cancelRefEvent();\r\n        this.ref = '';\r\n        this.refEvent = null;\r\n        this.receivedResp = null;\r\n        this.sent = false;\r\n        this.send();\r\n    }\r\n    send() {\r\n        if (this._hasReceived('timeout')) {\r\n            return;\r\n        }\r\n        this.startTimeout();\r\n        this.sent = true;\r\n        this.channel.socket.push({\r\n            topic: this.channel.topic,\r\n            event: this.event,\r\n            payload: this.payload,\r\n            ref: this.ref,\r\n            join_ref: this.channel._joinRef(),\r\n        });\r\n    }\r\n    updatePayload(payload) {\r\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\r\n    }\r\n    receive(status, callback) {\r\n        var _a;\r\n        if (this._hasReceived(status)) {\r\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\r\n        }\r\n        this.recHooks.push({ status, callback });\r\n        return this;\r\n    }\r\n    startTimeout() {\r\n        if (this.timeoutTimer) {\r\n            return;\r\n        }\r\n        this.ref = this.channel.socket._makeRef();\r\n        this.refEvent = this.channel._replyEventName(this.ref);\r\n        const callback = (payload) => {\r\n            this._cancelRefEvent();\r\n            this._cancelTimeout();\r\n            this.receivedResp = payload;\r\n            this._matchReceive(payload);\r\n        };\r\n        this.channel._on(this.refEvent, {}, callback);\r\n        this.timeoutTimer = setTimeout(() => {\r\n            this.trigger('timeout', {});\r\n        }, this.timeout);\r\n    }\r\n    trigger(status, response) {\r\n        if (this.refEvent)\r\n            this.channel._trigger(this.refEvent, { status, response });\r\n    }\r\n    destroy() {\r\n        this._cancelRefEvent();\r\n        this._cancelTimeout();\r\n    }\r\n    _cancelRefEvent() {\r\n        if (!this.refEvent) {\r\n            return;\r\n        }\r\n        this.channel._off(this.refEvent, {});\r\n    }\r\n    _cancelTimeout() {\r\n        clearTimeout(this.timeoutTimer);\r\n        this.timeoutTimer = undefined;\r\n    }\r\n    _matchReceive({ status, response, }) {\r\n        this.recHooks\r\n            .filter((h) => h.status === status)\r\n            .forEach((h) => h.callback(response));\r\n    }\r\n    _hasReceived(status) {\r\n        return this.receivedResp && this.receivedResp.status === status;\r\n    }\r\n}\r\n//# sourceMappingURL=push.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3B1c2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDcEM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGFBQWE7QUFDOUQ7QUFDQTtBQUNBLDRDQUE0QyxZQUFZLDJEQUFlO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0JBQWtCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSxzQ0FBc0M7QUFDdEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxrQkFBa0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccmVhbHRpbWUtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxwdXNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFRkFVTFRfVElNRU9VVCB9IGZyb20gJy4uL2xpYi9jb25zdGFudHMnO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQdXNoIHtcclxuICAgIC8qKlxyXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIFB1c2hcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gY2hhbm5lbCBUaGUgQ2hhbm5lbFxyXG4gICAgICogQHBhcmFtIGV2ZW50IFRoZSBldmVudCwgZm9yIGV4YW1wbGUgYFwicGh4X2pvaW5cImBcclxuICAgICAqIEBwYXJhbSBwYXlsb2FkIFRoZSBwYXlsb2FkLCBmb3IgZXhhbXBsZSBge3VzZXJfaWQ6IDEyM31gXHJcbiAgICAgKiBAcGFyYW0gdGltZW91dCBUaGUgcHVzaCB0aW1lb3V0IGluIG1pbGxpc2Vjb25kc1xyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihjaGFubmVsLCBldmVudCwgcGF5bG9hZCA9IHt9LCB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VUKSB7XHJcbiAgICAgICAgdGhpcy5jaGFubmVsID0gY2hhbm5lbDtcclxuICAgICAgICB0aGlzLmV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcclxuICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aW1lb3V0O1xyXG4gICAgICAgIHRoaXMuc2VudCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudGltZW91dFRpbWVyID0gdW5kZWZpbmVkO1xyXG4gICAgICAgIHRoaXMucmVmID0gJyc7XHJcbiAgICAgICAgdGhpcy5yZWNlaXZlZFJlc3AgPSBudWxsO1xyXG4gICAgICAgIHRoaXMucmVjSG9va3MgPSBbXTtcclxuICAgICAgICB0aGlzLnJlZkV2ZW50ID0gbnVsbDtcclxuICAgIH1cclxuICAgIHJlc2VuZCh0aW1lb3V0KSB7XHJcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gdGltZW91dDtcclxuICAgICAgICB0aGlzLl9jYW5jZWxSZWZFdmVudCgpO1xyXG4gICAgICAgIHRoaXMucmVmID0gJyc7XHJcbiAgICAgICAgdGhpcy5yZWZFdmVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZWNlaXZlZFJlc3AgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc2VudCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuc2VuZCgpO1xyXG4gICAgfVxyXG4gICAgc2VuZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5faGFzUmVjZWl2ZWQoJ3RpbWVvdXQnKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3RhcnRUaW1lb3V0KCk7XHJcbiAgICAgICAgdGhpcy5zZW50ID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmNoYW5uZWwuc29ja2V0LnB1c2goe1xyXG4gICAgICAgICAgICB0b3BpYzogdGhpcy5jaGFubmVsLnRvcGljLFxyXG4gICAgICAgICAgICBldmVudDogdGhpcy5ldmVudCxcclxuICAgICAgICAgICAgcGF5bG9hZDogdGhpcy5wYXlsb2FkLFxyXG4gICAgICAgICAgICByZWY6IHRoaXMucmVmLFxyXG4gICAgICAgICAgICBqb2luX3JlZjogdGhpcy5jaGFubmVsLl9qb2luUmVmKCksXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICB1cGRhdGVQYXlsb2FkKHBheWxvYWQpIHtcclxuICAgICAgICB0aGlzLnBheWxvYWQgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMucGF5bG9hZCksIHBheWxvYWQpO1xyXG4gICAgfVxyXG4gICAgcmVjZWl2ZShzdGF0dXMsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIGlmICh0aGlzLl9oYXNSZWNlaXZlZChzdGF0dXMpKSB7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrKChfYSA9IHRoaXMucmVjZWl2ZWRSZXNwKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVzcG9uc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnJlY0hvb2tzLnB1c2goeyBzdGF0dXMsIGNhbGxiYWNrIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgc3RhcnRUaW1lb3V0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLnRpbWVvdXRUaW1lcikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVmID0gdGhpcy5jaGFubmVsLnNvY2tldC5fbWFrZVJlZigpO1xyXG4gICAgICAgIHRoaXMucmVmRXZlbnQgPSB0aGlzLmNoYW5uZWwuX3JlcGx5RXZlbnROYW1lKHRoaXMucmVmKTtcclxuICAgICAgICBjb25zdCBjYWxsYmFjayA9IChwYXlsb2FkKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhbmNlbFJlZkV2ZW50KCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhbmNlbFRpbWVvdXQoKTtcclxuICAgICAgICAgICAgdGhpcy5yZWNlaXZlZFJlc3AgPSBwYXlsb2FkO1xyXG4gICAgICAgICAgICB0aGlzLl9tYXRjaFJlY2VpdmUocGF5bG9hZCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmNoYW5uZWwuX29uKHRoaXMucmVmRXZlbnQsIHt9LCBjYWxsYmFjayk7XHJcbiAgICAgICAgdGhpcy50aW1lb3V0VGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy50cmlnZ2VyKCd0aW1lb3V0Jywge30pO1xyXG4gICAgICAgIH0sIHRoaXMudGltZW91dCk7XHJcbiAgICB9XHJcbiAgICB0cmlnZ2VyKHN0YXR1cywgcmVzcG9uc2UpIHtcclxuICAgICAgICBpZiAodGhpcy5yZWZFdmVudClcclxuICAgICAgICAgICAgdGhpcy5jaGFubmVsLl90cmlnZ2VyKHRoaXMucmVmRXZlbnQsIHsgc3RhdHVzLCByZXNwb25zZSB9KTtcclxuICAgIH1cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fY2FuY2VsUmVmRXZlbnQoKTtcclxuICAgICAgICB0aGlzLl9jYW5jZWxUaW1lb3V0KCk7XHJcbiAgICB9XHJcbiAgICBfY2FuY2VsUmVmRXZlbnQoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnJlZkV2ZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jaGFubmVsLl9vZmYodGhpcy5yZWZFdmVudCwge30pO1xyXG4gICAgfVxyXG4gICAgX2NhbmNlbFRpbWVvdXQoKSB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dFRpbWVyKTtcclxuICAgICAgICB0aGlzLnRpbWVvdXRUaW1lciA9IHVuZGVmaW5lZDtcclxuICAgIH1cclxuICAgIF9tYXRjaFJlY2VpdmUoeyBzdGF0dXMsIHJlc3BvbnNlLCB9KSB7XHJcbiAgICAgICAgdGhpcy5yZWNIb29rc1xyXG4gICAgICAgICAgICAuZmlsdGVyKChoKSA9PiBoLnN0YXR1cyA9PT0gc3RhdHVzKVxyXG4gICAgICAgICAgICAuZm9yRWFjaCgoaCkgPT4gaC5jYWxsYmFjayhyZXNwb25zZSkpO1xyXG4gICAgfVxyXG4gICAgX2hhc1JlY2VpdmVkKHN0YXR1cykge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlY2VpdmVkUmVzcCAmJiB0aGlzLnJlY2VpdmVkUmVzcC5zdGF0dXMgPT09IHN0YXR1cztcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Serializer)\n/* harmony export */ });\n// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\r\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\r\nclass Serializer {\r\n    constructor() {\r\n        this.HEADER_LENGTH = 1;\r\n    }\r\n    decode(rawPayload, callback) {\r\n        if (rawPayload.constructor === ArrayBuffer) {\r\n            return callback(this._binaryDecode(rawPayload));\r\n        }\r\n        if (typeof rawPayload === 'string') {\r\n            return callback(JSON.parse(rawPayload));\r\n        }\r\n        return callback({});\r\n    }\r\n    _binaryDecode(buffer) {\r\n        const view = new DataView(buffer);\r\n        const decoder = new TextDecoder();\r\n        return this._decodeBroadcast(buffer, view, decoder);\r\n    }\r\n    _decodeBroadcast(buffer, view, decoder) {\r\n        const topicSize = view.getUint8(1);\r\n        const eventSize = view.getUint8(2);\r\n        let offset = this.HEADER_LENGTH + 2;\r\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\r\n        offset = offset + topicSize;\r\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\r\n        offset = offset + eventSize;\r\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\r\n        return { ref: null, topic: topic, event: event, payload: data };\r\n    }\r\n}\r\n//# sourceMappingURL=serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3NlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHJlYWx0aW1lLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcc2VyaWFsaXplci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgZHJhd3MgaGVhdmlseSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9waG9lbml4ZnJhbWV3b3JrL3Bob2VuaXgvY29tbWl0L2NmMDk4ZTljZjdhNDRlZTY0NzlkMzFkOTExYTk3ZDNjNzQzMGM2ZmVcclxuLy8gTGljZW5zZTogaHR0cHM6Ly9naXRodWIuY29tL3Bob2VuaXhmcmFtZXdvcmsvcGhvZW5peC9ibG9iL21hc3Rlci9MSUNFTlNFLm1kXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlcmlhbGl6ZXIge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5IRUFERVJfTEVOR1RIID0gMTtcclxuICAgIH1cclxuICAgIGRlY29kZShyYXdQYXlsb2FkLCBjYWxsYmFjaykge1xyXG4gICAgICAgIGlmIChyYXdQYXlsb2FkLmNvbnN0cnVjdG9yID09PSBBcnJheUJ1ZmZlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sodGhpcy5fYmluYXJ5RGVjb2RlKHJhd1BheWxvYWQpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiByYXdQYXlsb2FkID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soSlNPTi5wYXJzZShyYXdQYXlsb2FkKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayh7fSk7XHJcbiAgICB9XHJcbiAgICBfYmluYXJ5RGVjb2RlKGJ1ZmZlcikge1xyXG4gICAgICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcclxuICAgICAgICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlY29kZUJyb2FkY2FzdChidWZmZXIsIHZpZXcsIGRlY29kZXIpO1xyXG4gICAgfVxyXG4gICAgX2RlY29kZUJyb2FkY2FzdChidWZmZXIsIHZpZXcsIGRlY29kZXIpIHtcclxuICAgICAgICBjb25zdCB0b3BpY1NpemUgPSB2aWV3LmdldFVpbnQ4KDEpO1xyXG4gICAgICAgIGNvbnN0IGV2ZW50U2l6ZSA9IHZpZXcuZ2V0VWludDgoMik7XHJcbiAgICAgICAgbGV0IG9mZnNldCA9IHRoaXMuSEVBREVSX0xFTkdUSCArIDI7XHJcbiAgICAgICAgY29uc3QgdG9waWMgPSBkZWNvZGVyLmRlY29kZShidWZmZXIuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyB0b3BpY1NpemUpKTtcclxuICAgICAgICBvZmZzZXQgPSBvZmZzZXQgKyB0b3BpY1NpemU7XHJcbiAgICAgICAgY29uc3QgZXZlbnQgPSBkZWNvZGVyLmRlY29kZShidWZmZXIuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBldmVudFNpemUpKTtcclxuICAgICAgICBvZmZzZXQgPSBvZmZzZXQgKyBldmVudFNpemU7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZGVjb2Rlci5kZWNvZGUoYnVmZmVyLnNsaWNlKG9mZnNldCwgYnVmZmVyLmJ5dGVMZW5ndGgpKSk7XHJcbiAgICAgICAgcmV0dXJuIHsgcmVmOiBudWxsLCB0b3BpYzogdG9waWMsIGV2ZW50OiBldmVudCwgcGF5bG9hZDogZGF0YSB9O1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/timer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Timer)\n/* harmony export */ });\n/**\r\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\r\n *\r\n * @example\r\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n *      return [1000, 5000, 10000][tries - 1] || 10000\r\n *    })\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n *    reconnectTimer.scheduleTimeout() // fires after 5000\r\n *    reconnectTimer.reset()\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n */\r\nclass Timer {\r\n    constructor(callback, timerCalc) {\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n        this.timer = undefined;\r\n        this.tries = 0;\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n    }\r\n    reset() {\r\n        this.tries = 0;\r\n        clearTimeout(this.timer);\r\n    }\r\n    // Cancels any previous scheduleTimeout and schedules callback\r\n    scheduleTimeout() {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            this.tries = this.tries + 1;\r\n            this.callback();\r\n        }, this.timerCalc(this.tries + 1));\r\n    }\r\n}\r\n//# sourceMappingURL=timer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3RpbWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccmVhbHRpbWUtanNcXGRpc3RcXG1vZHVsZVxcbGliXFx0aW1lci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlcyBhIHRpbWVyIHRoYXQgYWNjZXB0cyBhIGB0aW1lckNhbGNgIGZ1bmN0aW9uIHRvIHBlcmZvcm0gY2FsY3VsYXRlZCB0aW1lb3V0IHJldHJpZXMsIHN1Y2ggYXMgZXhwb25lbnRpYWwgYmFja29mZi5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogICAgbGV0IHJlY29ubmVjdFRpbWVyID0gbmV3IFRpbWVyKCgpID0+IHRoaXMuY29ubmVjdCgpLCBmdW5jdGlvbih0cmllcyl7XHJcbiAqICAgICAgcmV0dXJuIFsxMDAwLCA1MDAwLCAxMDAwMF1bdHJpZXMgLSAxXSB8fCAxMDAwMFxyXG4gKiAgICB9KVxyXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXHJcbiAqICAgIHJlY29ubmVjdFRpbWVyLnNjaGVkdWxlVGltZW91dCgpIC8vIGZpcmVzIGFmdGVyIDUwMDBcclxuICogICAgcmVjb25uZWN0VGltZXIucmVzZXQoKVxyXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaW1lciB7XHJcbiAgICBjb25zdHJ1Y3RvcihjYWxsYmFjaywgdGltZXJDYWxjKSB7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xyXG4gICAgICAgIHRoaXMudGltZXJDYWxjID0gdGltZXJDYWxjO1xyXG4gICAgICAgIHRoaXMudGltZXIgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy50cmllcyA9IDA7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xyXG4gICAgICAgIHRoaXMudGltZXJDYWxjID0gdGltZXJDYWxjO1xyXG4gICAgfVxyXG4gICAgcmVzZXQoKSB7XHJcbiAgICAgICAgdGhpcy50cmllcyA9IDA7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xyXG4gICAgfVxyXG4gICAgLy8gQ2FuY2VscyBhbnkgcHJldmlvdXMgc2NoZWR1bGVUaW1lb3V0IGFuZCBzY2hlZHVsZXMgY2FsbGJhY2tcclxuICAgIHNjaGVkdWxlVGltZW91dCgpIHtcclxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XHJcbiAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnRyaWVzID0gdGhpcy50cmllcyArIDE7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2soKTtcclxuICAgICAgICB9LCB0aGlzLnRpbWVyQ2FsYyh0aGlzLnRyaWVzICsgMSkpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgresTypes: () => (/* binding */ PostgresTypes),\n/* harmony export */   convertCell: () => (/* binding */ convertCell),\n/* harmony export */   convertChangeData: () => (/* binding */ convertChangeData),\n/* harmony export */   convertColumn: () => (/* binding */ convertColumn),\n/* harmony export */   httpEndpointURL: () => (/* binding */ httpEndpointURL),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   toBoolean: () => (/* binding */ toBoolean),\n/* harmony export */   toJson: () => (/* binding */ toJson),\n/* harmony export */   toNumber: () => (/* binding */ toNumber),\n/* harmony export */   toTimestampString: () => (/* binding */ toTimestampString)\n/* harmony export */ });\n/**\r\n * Helpers to convert the change Payload into native JS types.\r\n */\r\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\r\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\r\nvar PostgresTypes;\r\n(function (PostgresTypes) {\r\n    PostgresTypes[\"abstime\"] = \"abstime\";\r\n    PostgresTypes[\"bool\"] = \"bool\";\r\n    PostgresTypes[\"date\"] = \"date\";\r\n    PostgresTypes[\"daterange\"] = \"daterange\";\r\n    PostgresTypes[\"float4\"] = \"float4\";\r\n    PostgresTypes[\"float8\"] = \"float8\";\r\n    PostgresTypes[\"int2\"] = \"int2\";\r\n    PostgresTypes[\"int4\"] = \"int4\";\r\n    PostgresTypes[\"int4range\"] = \"int4range\";\r\n    PostgresTypes[\"int8\"] = \"int8\";\r\n    PostgresTypes[\"int8range\"] = \"int8range\";\r\n    PostgresTypes[\"json\"] = \"json\";\r\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\r\n    PostgresTypes[\"money\"] = \"money\";\r\n    PostgresTypes[\"numeric\"] = \"numeric\";\r\n    PostgresTypes[\"oid\"] = \"oid\";\r\n    PostgresTypes[\"reltime\"] = \"reltime\";\r\n    PostgresTypes[\"text\"] = \"text\";\r\n    PostgresTypes[\"time\"] = \"time\";\r\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\r\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\r\n    PostgresTypes[\"timetz\"] = \"timetz\";\r\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\r\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\r\n})(PostgresTypes || (PostgresTypes = {}));\r\n/**\r\n * Takes an array of columns and an object of string values then converts each string value\r\n * to its mapped type.\r\n *\r\n * @param {{name: String, type: String}[]} columns\r\n * @param {Object} record\r\n * @param {Object} options The map of various options that can be applied to the mapper\r\n * @param {Array} options.skipTypes The array of types that should not be converted\r\n *\r\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\r\n * //=>{ first_name: 'Paul', age: 33 }\r\n */\r\nconst convertChangeData = (columns, record, options = {}) => {\r\n    var _a;\r\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\r\n    return Object.keys(record).reduce((acc, rec_key) => {\r\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\r\n        return acc;\r\n    }, {});\r\n};\r\n/**\r\n * Converts the value of an individual column.\r\n *\r\n * @param {String} columnName The column that you want to convert\r\n * @param {{name: String, type: String}[]} columns All of the columns\r\n * @param {Object} record The map of string values\r\n * @param {Array} skipTypes An array of types that should not be converted\r\n * @return {object} Useless information\r\n *\r\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\r\n * //=> 33\r\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\r\n * //=> \"33\"\r\n */\r\nconst convertColumn = (columnName, columns, record, skipTypes) => {\r\n    const column = columns.find((x) => x.name === columnName);\r\n    const colType = column === null || column === void 0 ? void 0 : column.type;\r\n    const value = record[columnName];\r\n    if (colType && !skipTypes.includes(colType)) {\r\n        return convertCell(colType, value);\r\n    }\r\n    return noop(value);\r\n};\r\n/**\r\n * If the value of the cell is `null`, returns null.\r\n * Otherwise converts the string value to the correct type.\r\n * @param {String} type A postgres column type\r\n * @param {String} value The cell value\r\n *\r\n * @example convertCell('bool', 't')\r\n * //=> true\r\n * @example convertCell('int8', '10')\r\n * //=> 10\r\n * @example convertCell('_int4', '{1,2,3,4}')\r\n * //=> [1,2,3,4]\r\n */\r\nconst convertCell = (type, value) => {\r\n    // if data type is an array\r\n    if (type.charAt(0) === '_') {\r\n        const dataType = type.slice(1, type.length);\r\n        return toArray(value, dataType);\r\n    }\r\n    // If not null, convert to correct type.\r\n    switch (type) {\r\n        case PostgresTypes.bool:\r\n            return toBoolean(value);\r\n        case PostgresTypes.float4:\r\n        case PostgresTypes.float8:\r\n        case PostgresTypes.int2:\r\n        case PostgresTypes.int4:\r\n        case PostgresTypes.int8:\r\n        case PostgresTypes.numeric:\r\n        case PostgresTypes.oid:\r\n            return toNumber(value);\r\n        case PostgresTypes.json:\r\n        case PostgresTypes.jsonb:\r\n            return toJson(value);\r\n        case PostgresTypes.timestamp:\r\n            return toTimestampString(value); // Format to be consistent with PostgREST\r\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.daterange:\r\n        case PostgresTypes.int4range:\r\n        case PostgresTypes.int8range:\r\n        case PostgresTypes.money:\r\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.text:\r\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.tsrange:\r\n        case PostgresTypes.tstzrange:\r\n            return noop(value);\r\n        default:\r\n            // Return the value for remaining types\r\n            return noop(value);\r\n    }\r\n};\r\nconst noop = (value) => {\r\n    return value;\r\n};\r\nconst toBoolean = (value) => {\r\n    switch (value) {\r\n        case 't':\r\n            return true;\r\n        case 'f':\r\n            return false;\r\n        default:\r\n            return value;\r\n    }\r\n};\r\nconst toNumber = (value) => {\r\n    if (typeof value === 'string') {\r\n        const parsedValue = parseFloat(value);\r\n        if (!Number.isNaN(parsedValue)) {\r\n            return parsedValue;\r\n        }\r\n    }\r\n    return value;\r\n};\r\nconst toJson = (value) => {\r\n    if (typeof value === 'string') {\r\n        try {\r\n            return JSON.parse(value);\r\n        }\r\n        catch (error) {\r\n            console.log(`JSON parse error: ${error}`);\r\n            return value;\r\n        }\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * Converts a Postgres Array into a native JS array\r\n *\r\n * @example toArray('{}', 'int4')\r\n * //=> []\r\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\r\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\r\n * @example toArray([1,2,3,4], 'int4')\r\n * //=> [1,2,3,4]\r\n */\r\nconst toArray = (value, type) => {\r\n    if (typeof value !== 'string') {\r\n        return value;\r\n    }\r\n    const lastIdx = value.length - 1;\r\n    const closeBrace = value[lastIdx];\r\n    const openBrace = value[0];\r\n    // Confirm value is a Postgres array by checking curly brackets\r\n    if (openBrace === '{' && closeBrace === '}') {\r\n        let arr;\r\n        const valTrim = value.slice(1, lastIdx);\r\n        // TODO: find a better solution to separate Postgres array data\r\n        try {\r\n            arr = JSON.parse('[' + valTrim + ']');\r\n        }\r\n        catch (_) {\r\n            // WARNING: splitting on comma does not cover all edge cases\r\n            arr = valTrim ? valTrim.split(',') : [];\r\n        }\r\n        return arr.map((val) => convertCell(type, val));\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\r\n * See https://github.com/supabase/supabase/issues/18\r\n *\r\n * @example toTimestampString('2019-09-10 00:00:00')\r\n * //=> '2019-09-10T00:00:00'\r\n */\r\nconst toTimestampString = (value) => {\r\n    if (typeof value === 'string') {\r\n        return value.replace(' ', 'T');\r\n    }\r\n    return value;\r\n};\r\nconst httpEndpointURL = (socketUrl) => {\r\n    let url = socketUrl;\r\n    url = url.replace(/^ws/i, 'http');\r\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '');\r\n    return url.replace(/\\/+$/, '');\r\n};\r\n//# sourceMappingURL=transformers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = '2.11.10';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHJlYWx0aW1lLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjExLjEwJztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/StorageClient.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageClient: () => (/* binding */ StorageClient)\n/* harmony export */ });\n/* harmony import */ var _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packages/StorageFileApi */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\");\n/* harmony import */ var _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packages/StorageBucketApi */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\");\n\r\n\r\nclass StorageClient extends _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(url, headers = {}, fetch) {\r\n        super(url, headers, fetch);\r\n    }\r\n    /**\r\n     * Perform file operation in a bucket.\r\n     *\r\n     * @param id The bucket id to operate on.\r\n     */\r\n    from(id) {\r\n        return new _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.url, this.headers, id, this.fetch);\r\n    }\r\n}\r\n//# sourceMappingURL=StorageClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9TdG9yYWdlQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUNJO0FBQ3BELDRCQUE0QixrRUFBZ0I7QUFDbkQsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQWM7QUFDakM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdG9yYWdlLWpzXFxkaXN0XFxtb2R1bGVcXFN0b3JhZ2VDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0b3JhZ2VGaWxlQXBpIGZyb20gJy4vcGFja2FnZXMvU3RvcmFnZUZpbGVBcGknO1xyXG5pbXBvcnQgU3RvcmFnZUJ1Y2tldEFwaSBmcm9tICcuL3BhY2thZ2VzL1N0b3JhZ2VCdWNrZXRBcGknO1xyXG5leHBvcnQgY2xhc3MgU3RvcmFnZUNsaWVudCBleHRlbmRzIFN0b3JhZ2VCdWNrZXRBcGkge1xyXG4gICAgY29uc3RydWN0b3IodXJsLCBoZWFkZXJzID0ge30sIGZldGNoKSB7XHJcbiAgICAgICAgc3VwZXIodXJsLCBoZWFkZXJzLCBmZXRjaCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFBlcmZvcm0gZmlsZSBvcGVyYXRpb24gaW4gYSBidWNrZXQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGlkIFRoZSBidWNrZXQgaWQgdG8gb3BlcmF0ZSBvbi5cclxuICAgICAqL1xyXG4gICAgZnJvbShpZCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgU3RvcmFnZUZpbGVBcGkodGhpcy51cmwsIHRoaXMuaGVhZGVycywgaWQsIHRoaXMuZmV0Y2gpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0b3JhZ2VDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/constants.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js\");\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLDBCQUEwQiwrQkFBK0IsNkNBQU8sQ0FBQztBQUN4RSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3RvcmFnZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgc3RvcmFnZS1qcy8ke3ZlcnNpb259YCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/errors.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageApiError: () => (/* binding */ StorageApiError),\n/* harmony export */   StorageError: () => (/* binding */ StorageError),\n/* harmony export */   StorageUnknownError: () => (/* binding */ StorageUnknownError),\n/* harmony export */   isStorageError: () => (/* binding */ isStorageError)\n/* harmony export */ });\nclass StorageError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.__isStorageError = true;\r\n        this.name = 'StorageError';\r\n    }\r\n}\r\nfunction isStorageError(error) {\r\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\r\n}\r\nclass StorageApiError extends StorageError {\r\n    constructor(message, status) {\r\n        super(message);\r\n        this.name = 'StorageApiError';\r\n        this.status = status;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n        };\r\n    }\r\n}\r\nclass StorageUnknownError extends StorageError {\r\n    constructor(message, originalError) {\r\n        super(message);\r\n        this.name = 'StorageUnknownError';\r\n        this.originalError = originalError;\r\n    }\r\n}\r\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdG9yYWdlLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTdG9yYWdlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5fX2lzU3RvcmFnZUVycm9yID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSAnU3RvcmFnZUVycm9yJztcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNTdG9yYWdlRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmIGVycm9yICE9PSBudWxsICYmICdfX2lzU3RvcmFnZUVycm9yJyBpbiBlcnJvcjtcclxufVxyXG5leHBvcnQgY2xhc3MgU3RvcmFnZUFwaUVycm9yIGV4dGVuZHMgU3RvcmFnZUVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cykge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdTdG9yYWdlQXBpRXJyb3InO1xyXG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xyXG4gICAgfVxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxyXG4gICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VVbmtub3duRXJyb3IgZXh0ZW5kcyBTdG9yYWdlRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3JpZ2luYWxFcnJvcikge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdTdG9yYWdlVW5rbm93bkVycm9yJztcclxuICAgICAgICB0aGlzLm9yaWdpbmFsRXJyb3IgPSBvcmlnaW5hbEVycm9yO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/fetch.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   head: () => (/* binding */ head),\n/* harmony export */   post: () => (/* binding */ post),\n/* harmony export */   put: () => (/* binding */ put),\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\r\nconst handleError = (error, reject, options) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const Res = yield (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveResponse)();\r\n    if (error instanceof Res && !(options === null || options === void 0 ? void 0 : options.noResolveJson)) {\r\n        error\r\n            .json()\r\n            .then((err) => {\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageApiError(_getErrorMessage(err), error.status || 500));\r\n        })\r\n            .catch((err) => {\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(err), err));\r\n        });\r\n    }\r\n    else {\r\n        reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(error), error));\r\n    }\r\n});\r\nconst _getRequestParams = (method, options, parameters, body) => {\r\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\r\n    if (method === 'GET') {\r\n        return params;\r\n    }\r\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\r\n    if (body) {\r\n        params.body = JSON.stringify(body);\r\n    }\r\n    return Object.assign(Object.assign({}, params), parameters);\r\n};\r\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((resolve, reject) => {\r\n            fetcher(url, _getRequestParams(method, options, parameters, body))\r\n                .then((result) => {\r\n                if (!result.ok)\r\n                    throw result;\r\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\r\n                    return result;\r\n                return result.json();\r\n            })\r\n                .then((data) => resolve(data))\r\n                .catch((error) => handleError(error, reject, options));\r\n        });\r\n    });\r\n}\r\nfunction get(fetcher, url, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\r\n    });\r\n}\r\nfunction post(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\r\n    });\r\n}\r\nfunction put(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\r\n    });\r\n}\r\nfunction head(fetcher, url, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'HEAD', url, Object.assign(Object.assign({}, options), { noResolveJson: true }), parameters);\r\n    });\r\n}\r\nfunction remove(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\r\n    });\r\n}\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNnRTtBQUNwQjtBQUM1QztBQUNBO0FBQ0Esc0JBQXNCLHlEQUFlO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9EQUFlO0FBQ3RDLFNBQVM7QUFDVDtBQUNBLHVCQUF1Qix3REFBbUI7QUFDMUMsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsd0RBQW1CO0FBQ3RDO0FBQ0EsQ0FBQztBQUNEO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxvQ0FBb0M7QUFDekU7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0Esa0ZBQWtGLGNBQWMscUJBQXFCO0FBQ3JILEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdG9yYWdlLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcZmV0Y2guanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG5pbXBvcnQgeyBTdG9yYWdlQXBpRXJyb3IsIFN0b3JhZ2VVbmtub3duRXJyb3IgfSBmcm9tICcuL2Vycm9ycyc7XHJcbmltcG9ydCB7IHJlc29sdmVSZXNwb25zZSB9IGZyb20gJy4vaGVscGVycyc7XHJcbmNvbnN0IF9nZXRFcnJvck1lc3NhZ2UgPSAoZXJyKSA9PiBlcnIubXNnIHx8IGVyci5tZXNzYWdlIHx8IGVyci5lcnJvcl9kZXNjcmlwdGlvbiB8fCBlcnIuZXJyb3IgfHwgSlNPTi5zdHJpbmdpZnkoZXJyKTtcclxuY29uc3QgaGFuZGxlRXJyb3IgPSAoZXJyb3IsIHJlamVjdCwgb3B0aW9ucykgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICBjb25zdCBSZXMgPSB5aWVsZCByZXNvbHZlUmVzcG9uc2UoKTtcclxuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIFJlcyAmJiAhKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ub1Jlc29sdmVKc29uKSkge1xyXG4gICAgICAgIGVycm9yXHJcbiAgICAgICAgICAgIC5qc29uKClcclxuICAgICAgICAgICAgLnRoZW4oKGVycikgPT4ge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IFN0b3JhZ2VBcGlFcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVyciksIGVycm9yLnN0YXR1cyB8fCA1MDApKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IFN0b3JhZ2VVbmtub3duRXJyb3IoX2dldEVycm9yTWVzc2FnZShlcnIpLCBlcnIpKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJlamVjdChuZXcgU3RvcmFnZVVua25vd25FcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVycm9yKSwgZXJyb3IpKTtcclxuICAgIH1cclxufSk7XHJcbmNvbnN0IF9nZXRSZXF1ZXN0UGFyYW1zID0gKG1ldGhvZCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSkgPT4ge1xyXG4gICAgY29uc3QgcGFyYW1zID0geyBtZXRob2QsIGhlYWRlcnM6IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaGVhZGVycykgfHwge30gfTtcclxuICAgIGlmIChtZXRob2QgPT09ICdHRVQnKSB7XHJcbiAgICAgICAgcmV0dXJuIHBhcmFtcztcclxuICAgIH1cclxuICAgIHBhcmFtcy5oZWFkZXJzID0gT2JqZWN0LmFzc2lnbih7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSwgb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmhlYWRlcnMpO1xyXG4gICAgaWYgKGJvZHkpIHtcclxuICAgICAgICBwYXJhbXMuYm9keSA9IEpTT04uc3RyaW5naWZ5KGJvZHkpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgcGFyYW1ldGVycyk7XHJcbn07XHJcbmZ1bmN0aW9uIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsIG1ldGhvZCwgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGZldGNoZXIodXJsLCBfZ2V0UmVxdWVzdFBhcmFtcyhtZXRob2QsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFyZXN1bHQub2spXHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgcmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ub1Jlc29sdmVKc29uKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiByZXNvbHZlKGRhdGEpKVxyXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gaGFuZGxlRXJyb3IoZXJyb3IsIHJlamVjdCwgb3B0aW9ucykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGdldChmZXRjaGVyLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdHRVQnLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHBvc3QoZmV0Y2hlciwgdXJsLCBib2R5LCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHJldHVybiBfaGFuZGxlUmVxdWVzdChmZXRjaGVyLCAnUE9TVCcsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gcHV0KGZldGNoZXIsIHVybCwgYm9keSwgb3B0aW9ucywgcGFyYW1ldGVycykge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ1BVVCcsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaGVhZChmZXRjaGVyLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdIRUFEJywgdXJsLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IG5vUmVzb2x2ZUpzb246IHRydWUgfSksIHBhcmFtZXRlcnMpO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShmZXRjaGVyLCB1cmwsIGJvZHksIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdERUxFVEUnLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpO1xyXG4gICAgfSk7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/helpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   recursiveToCamel: () => (/* binding */ recursiveToCamel),\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch),\n/* harmony export */   resolveResponse: () => (/* binding */ resolveResponse)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    if (typeof Response === 'undefined') {\r\n        // @ts-ignore\r\n        return (yield Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\"))).Response;\r\n    }\r\n    return Response;\r\n});\r\nconst recursiveToCamel = (item) => {\r\n    if (Array.isArray(item)) {\r\n        return item.map((el) => recursiveToCamel(el));\r\n    }\r\n    else if (typeof item === 'function' || item !== Object(item)) {\r\n        return item;\r\n    }\r\n    const result = {};\r\n    Object.entries(item).forEach(([key, value]) => {\r\n        const newKey = key.replace(/([-_][a-z])/gi, (c) => c.toUpperCase().replace(/[-_]/g, ''));\r\n        result[newKey] = recursiveToCamel(value);\r\n    });\r\n    return result;\r\n};\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0xBQThCLFNBQVMsZ0JBQWdCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQixzTEFBOEI7QUFDcEQ7QUFDQTtBQUNBLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3RvcmFnZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXGhlbHBlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG5leHBvcnQgY29uc3QgcmVzb2x2ZUZldGNoID0gKGN1c3RvbUZldGNoKSA9PiB7XHJcbiAgICBsZXQgX2ZldGNoO1xyXG4gICAgaWYgKGN1c3RvbUZldGNoKSB7XHJcbiAgICAgICAgX2ZldGNoID0gY3VzdG9tRmV0Y2g7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0eXBlb2YgZmV0Y2ggPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgX2ZldGNoID0gKC4uLmFyZ3MpID0+IGltcG9ydCgnQHN1cGFiYXNlL25vZGUtZmV0Y2gnKS50aGVuKCh7IGRlZmF1bHQ6IGZldGNoIH0pID0+IGZldGNoKC4uLmFyZ3MpKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIF9mZXRjaCA9IGZldGNoO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiBfZmV0Y2goLi4uYXJncyk7XHJcbn07XHJcbmV4cG9ydCBjb25zdCByZXNvbHZlUmVzcG9uc2UgPSAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgIGlmICh0eXBlb2YgUmVzcG9uc2UgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgIHJldHVybiAoeWllbGQgaW1wb3J0KCdAc3VwYWJhc2Uvbm9kZS1mZXRjaCcpKS5SZXNwb25zZTtcclxuICAgIH1cclxuICAgIHJldHVybiBSZXNwb25zZTtcclxufSk7XHJcbmV4cG9ydCBjb25zdCByZWN1cnNpdmVUb0NhbWVsID0gKGl0ZW0pID0+IHtcclxuICAgIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7XHJcbiAgICAgICAgcmV0dXJuIGl0ZW0ubWFwKChlbCkgPT4gcmVjdXJzaXZlVG9DYW1lbChlbCkpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAodHlwZW9mIGl0ZW0gPT09ICdmdW5jdGlvbicgfHwgaXRlbSAhPT0gT2JqZWN0KGl0ZW0pKSB7XHJcbiAgICAgICAgcmV0dXJuIGl0ZW07XHJcbiAgICB9XHJcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcclxuICAgIE9iamVjdC5lbnRyaWVzKGl0ZW0pLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5ld0tleSA9IGtleS5yZXBsYWNlKC8oWy1fXVthLXpdKS9naSwgKGMpID0+IGMudG9VcHBlckNhc2UoKS5yZXBsYWNlKC9bLV9dL2csICcnKSk7XHJcbiAgICAgICAgcmVzdWx0W25ld0tleV0gPSByZWN1cnNpdmVUb0NhbWVsKHZhbHVlKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/version.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n// generated by genversion\r\nconst version = '2.7.1';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDTztBQUNQIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdG9yYWdlLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBnZW5lcmF0ZWQgYnkgZ2VudmVyc2lvblxyXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjcuMSc7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StorageBucketApi)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nclass StorageBucketApi {\r\n    constructor(url, headers = {}, fetch) {\r\n        this.url = url;\r\n        this.headers = Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_HEADERS), headers);\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\r\n    }\r\n    /**\r\n     * Retrieves the details of all Storage buckets within an existing project.\r\n     */\r\n    listBuckets() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket`, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Retrieves the details of an existing Storage bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to retrieve.\r\n     */\r\n    getBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a new Storage bucket\r\n     *\r\n     * @param id A unique identifier for the bucket you are creating.\r\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\r\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\r\n     * The global file size limit takes precedence over this value.\r\n     * The default value is null, which doesn't set a per bucket file size limit.\r\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\r\n     * The default value is null, which allows files with all mime types to be uploaded.\r\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\r\n     * @returns newly created bucket id\r\n     */\r\n    createBucket(id, options = {\r\n        public: false,\r\n    }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket`, {\r\n                    id,\r\n                    name: id,\r\n                    public: options.public,\r\n                    file_size_limit: options.fileSizeLimit,\r\n                    allowed_mime_types: options.allowedMimeTypes,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Updates a Storage bucket\r\n     *\r\n     * @param id A unique identifier for the bucket you are updating.\r\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\r\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\r\n     * The global file size limit takes precedence over this value.\r\n     * The default value is null, which doesn't set a per bucket file size limit.\r\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\r\n     * The default value is null, which allows files with all mime types to be uploaded.\r\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\r\n     */\r\n    updateBucket(id, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.put)(this.fetch, `${this.url}/bucket/${id}`, {\r\n                    id,\r\n                    name: id,\r\n                    public: options.public,\r\n                    file_size_limit: options.fileSizeLimit,\r\n                    allowed_mime_types: options.allowedMimeTypes,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all objects inside a single bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to empty.\r\n     */\r\n    emptyBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\r\n     * You must first `empty()` the bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to delete.\r\n     */\r\n    deleteBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=StorageBucketApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StorageFileApi)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\nconst DEFAULT_SEARCH_OPTIONS = {\r\n    limit: 100,\r\n    offset: 0,\r\n    sortBy: {\r\n        column: 'name',\r\n        order: 'asc',\r\n    },\r\n};\r\nconst DEFAULT_FILE_OPTIONS = {\r\n    cacheControl: '3600',\r\n    contentType: 'text/plain;charset=UTF-8',\r\n    upsert: false,\r\n};\r\nclass StorageFileApi {\r\n    constructor(url, headers = {}, bucketId, fetch) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.bucketId = bucketId;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveFetch)(fetch);\r\n    }\r\n    /**\r\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\r\n     *\r\n     * @param method HTTP method.\r\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let body;\r\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\r\n                let headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\r\n                const metadata = options.metadata;\r\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\r\n                    body = new FormData();\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    if (metadata) {\r\n                        body.append('metadata', this.encodeMetadata(metadata));\r\n                    }\r\n                    body.append('', fileBody);\r\n                }\r\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\r\n                    body = fileBody;\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    if (metadata) {\r\n                        body.append('metadata', this.encodeMetadata(metadata));\r\n                    }\r\n                }\r\n                else {\r\n                    body = fileBody;\r\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\r\n                    headers['content-type'] = options.contentType;\r\n                    if (metadata) {\r\n                        headers['x-metadata'] = this.toBase64(this.encodeMetadata(metadata));\r\n                    }\r\n                }\r\n                if (fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.headers) {\r\n                    headers = Object.assign(Object.assign({}, headers), fileOptions.headers);\r\n                }\r\n                const cleanPath = this._removeEmptyFolders(path);\r\n                const _path = this._getFinalPath(cleanPath);\r\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\r\n                const data = yield res.json();\r\n                if (res.ok) {\r\n                    return {\r\n                        data: { path: cleanPath, id: data.Id, fullPath: data.Key },\r\n                        error: null,\r\n                    };\r\n                }\r\n                else {\r\n                    const error = data;\r\n                    return { data: null, error };\r\n                }\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Uploads a file to an existing bucket.\r\n     *\r\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    upload(path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\r\n        });\r\n    }\r\n    /**\r\n     * Upload a file with a token generated from `createSignedUploadUrl`.\r\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param token The token generated from `createSignedUploadUrl`\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const cleanPath = this._removeEmptyFolders(path);\r\n            const _path = this._getFinalPath(cleanPath);\r\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\r\n            url.searchParams.set('token', token);\r\n            try {\r\n                let body;\r\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\r\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\r\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\r\n                    body = new FormData();\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    body.append('', fileBody);\r\n                }\r\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\r\n                    body = fileBody;\r\n                    body.append('cacheControl', options.cacheControl);\r\n                }\r\n                else {\r\n                    body = fileBody;\r\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\r\n                    headers['content-type'] = options.contentType;\r\n                }\r\n                const res = yield this.fetch(url.toString(), {\r\n                    method: 'PUT',\r\n                    body: body,\r\n                    headers,\r\n                });\r\n                const data = yield res.json();\r\n                if (res.ok) {\r\n                    return {\r\n                        data: { path: cleanPath, fullPath: data.Key },\r\n                        error: null,\r\n                    };\r\n                }\r\n                else {\r\n                    const error = data;\r\n                    return { data: null, error };\r\n                }\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a signed upload URL.\r\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\r\n     * They are valid for 2 hours.\r\n     * @param path The file path, including the current file name. For example `folder/image.png`.\r\n     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\r\n     */\r\n    createSignedUploadUrl(path, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let _path = this._getFinalPath(path);\r\n                const headers = Object.assign({}, this.headers);\r\n                if (options === null || options === void 0 ? void 0 : options.upsert) {\r\n                    headers['x-upsert'] = 'true';\r\n                }\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers });\r\n                const url = new URL(this.url + data.url);\r\n                const token = url.searchParams.get('token');\r\n                if (!token) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_1__.StorageError('No token returned by API');\r\n                }\r\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Replaces an existing file at the specified path with a new one.\r\n     *\r\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    update(path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\r\n        });\r\n    }\r\n    /**\r\n     * Moves an existing file to a new path in the same bucket.\r\n     *\r\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\r\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\r\n     * @param options The destination options.\r\n     */\r\n    move(fromPath, toPath, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/move`, {\r\n                    bucketId: this.bucketId,\r\n                    sourceKey: fromPath,\r\n                    destinationKey: toPath,\r\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Copies an existing file to a new path in the same bucket.\r\n     *\r\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\r\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\r\n     * @param options The destination options.\r\n     */\r\n    copy(fromPath, toPath, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/copy`, {\r\n                    bucketId: this.bucketId,\r\n                    sourceKey: fromPath,\r\n                    destinationKey: toPath,\r\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\r\n                }, { headers: this.headers });\r\n                return { data: { path: data.Key }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\r\n     *\r\n     * @param path The file path, including the current file name. For example `folder/image.png`.\r\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\r\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    createSignedUrl(path, expiresIn, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let _path = this._getFinalPath(path);\r\n                let data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\r\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n                    ? `&download=${options.download === true ? '' : options.download}`\r\n                    : '';\r\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\r\n                data = { signedUrl };\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\r\n     *\r\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\r\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\r\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     */\r\n    createSignedUrls(paths, expiresIn, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\r\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n                    ? `&download=${options.download === true ? '' : options.download}`\r\n                    : '';\r\n                return {\r\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\r\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\r\n                            : null }))),\r\n                    error: null,\r\n                };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\r\n     *\r\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    download(path, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\r\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\r\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\r\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\r\n            try {\r\n                const _path = this._getFinalPath(path);\r\n                const res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\r\n                    headers: this.headers,\r\n                    noResolveJson: true,\r\n                });\r\n                const data = yield res.blob();\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Retrieves the details of an existing file.\r\n     * @param path\r\n     */\r\n    info(path) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const _path = this._getFinalPath(path);\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/object/info/${_path}`, {\r\n                    headers: this.headers,\r\n                });\r\n                return { data: (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.recursiveToCamel)(data), error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks the existence of a file.\r\n     * @param path\r\n     */\r\n    exists(path) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const _path = this._getFinalPath(path);\r\n            try {\r\n                yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.head)(this.fetch, `${this.url}/object/${_path}`, {\r\n                    headers: this.headers,\r\n                });\r\n                return { data: true, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error) && error instanceof _lib_errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError) {\r\n                    const originalError = error.originalError;\r\n                    if ([400, 404].includes(originalError === null || originalError === void 0 ? void 0 : originalError.status)) {\r\n                        return { data: false, error };\r\n                    }\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\r\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\r\n     *\r\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\r\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    getPublicUrl(path, options) {\r\n        const _path = this._getFinalPath(path);\r\n        const _queryString = [];\r\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n            ? `download=${options.download === true ? '' : options.download}`\r\n            : '';\r\n        if (downloadQueryParam !== '') {\r\n            _queryString.push(downloadQueryParam);\r\n        }\r\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\r\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\r\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\r\n        if (transformationQuery !== '') {\r\n            _queryString.push(transformationQuery);\r\n        }\r\n        let queryString = _queryString.join('&');\r\n        if (queryString !== '') {\r\n            queryString = `?${queryString}`;\r\n        }\r\n        return {\r\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\r\n        };\r\n    }\r\n    /**\r\n     * Deletes files within the same bucket\r\n     *\r\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\r\n     */\r\n    remove(paths) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.remove)(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Get file metadata\r\n     * @param id the file id to retrieve metadata\r\n     */\r\n    // async getMetadata(\r\n    //   id: string\r\n    // ): Promise<\r\n    //   | {\r\n    //       data: Metadata\r\n    //       error: null\r\n    //     }\r\n    //   | {\r\n    //       data: null\r\n    //       error: StorageError\r\n    //     }\r\n    // > {\r\n    //   try {\r\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\r\n    //     return { data, error: null }\r\n    //   } catch (error) {\r\n    //     if (isStorageError(error)) {\r\n    //       return { data: null, error }\r\n    //     }\r\n    //     throw error\r\n    //   }\r\n    // }\r\n    /**\r\n     * Update file metadata\r\n     * @param id the file id to update metadata\r\n     * @param meta the new file metadata\r\n     */\r\n    // async updateMetadata(\r\n    //   id: string,\r\n    //   meta: Metadata\r\n    // ): Promise<\r\n    //   | {\r\n    //       data: Metadata\r\n    //       error: null\r\n    //     }\r\n    //   | {\r\n    //       data: null\r\n    //       error: StorageError\r\n    //     }\r\n    // > {\r\n    //   try {\r\n    //     const data = await post(\r\n    //       this.fetch,\r\n    //       `${this.url}/metadata/${id}`,\r\n    //       { ...meta },\r\n    //       { headers: this.headers }\r\n    //     )\r\n    //     return { data, error: null }\r\n    //   } catch (error) {\r\n    //     if (isStorageError(error)) {\r\n    //       return { data: null, error }\r\n    //     }\r\n    //     throw error\r\n    //   }\r\n    // }\r\n    /**\r\n     * Lists all the files within a bucket.\r\n     * @param path The folder path.\r\n     */\r\n    list(path, options, parameters) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    encodeMetadata(metadata) {\r\n        return JSON.stringify(metadata);\r\n    }\r\n    toBase64(data) {\r\n        if (typeof Buffer !== 'undefined') {\r\n            return Buffer.from(data).toString('base64');\r\n        }\r\n        return btoa(data);\r\n    }\r\n    _getFinalPath(path) {\r\n        return `${this.bucketId}/${path}`;\r\n    }\r\n    _removeEmptyFolders(path) {\r\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\r\n    }\r\n    transformOptsToQueryString(transform) {\r\n        const params = [];\r\n        if (transform.width) {\r\n            params.push(`width=${transform.width}`);\r\n        }\r\n        if (transform.height) {\r\n            params.push(`height=${transform.height}`);\r\n        }\r\n        if (transform.resize) {\r\n            params.push(`resize=${transform.resize}`);\r\n        }\r\n        if (transform.format) {\r\n            params.push(`format=${transform.format}`);\r\n        }\r\n        if (transform.quality) {\r\n            params.push(`quality=${transform.quality}`);\r\n        }\r\n        return params.join('&');\r\n    }\r\n}\r\n//# sourceMappingURL=StorageFileApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SupabaseClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @supabase/functions-js */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/postgrest-js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/realtime-js */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\");\n/* harmony import */ var _supabase_storage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @supabase/storage-js */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/SupabaseAuthClient */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Supabase Client.\r\n *\r\n * An isomorphic Javascript client for interacting with Postgres.\r\n */\r\nclass SupabaseClient {\r\n    /**\r\n     * Create a new client for use in the browser.\r\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\r\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\r\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\r\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\r\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\r\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\r\n     * @param options.realtime Options passed along to realtime-js constructor.\r\n     * @param options.global.fetch A custom fetch implementation.\r\n     * @param options.global.headers Any additional headers to send with each network request.\r\n     */\r\n    constructor(supabaseUrl, supabaseKey, options) {\r\n        var _a, _b, _c;\r\n        this.supabaseUrl = supabaseUrl;\r\n        this.supabaseKey = supabaseKey;\r\n        if (!supabaseUrl)\r\n            throw new Error('supabaseUrl is required.');\r\n        if (!supabaseKey)\r\n            throw new Error('supabaseKey is required.');\r\n        const _supabaseUrl = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.ensureTrailingSlash)(supabaseUrl);\r\n        const baseUrl = new URL(_supabaseUrl);\r\n        this.realtimeUrl = new URL('realtime/v1', baseUrl);\r\n        this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\r\n        this.authUrl = new URL('auth/v1', baseUrl);\r\n        this.storageUrl = new URL('storage/v1', baseUrl);\r\n        this.functionsUrl = new URL('functions/v1', baseUrl);\r\n        // default storage key uses the supabase project ref as a namespace\r\n        const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\r\n        const DEFAULTS = {\r\n            db: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_DB_OPTIONS,\r\n            realtime: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_REALTIME_OPTIONS,\r\n            auth: Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\r\n            global: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_GLOBAL_OPTIONS,\r\n        };\r\n        const settings = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\r\n        this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\r\n        this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\r\n        if (!settings.accessToken) {\r\n            this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\r\n        }\r\n        else {\r\n            this.accessToken = settings.accessToken;\r\n            this.auth = new Proxy({}, {\r\n                get: (_, prop) => {\r\n                    throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\r\n                },\r\n            });\r\n        }\r\n        this.fetch = (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_4__.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\r\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers, accessToken: this._getAccessToken.bind(this) }, settings.realtime));\r\n        this.rest = new _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__.PostgrestClient(new URL('rest/v1', baseUrl).href, {\r\n            headers: this.headers,\r\n            schema: settings.db.schema,\r\n            fetch: this.fetch,\r\n        });\r\n        if (!settings.accessToken) {\r\n            this._listenForAuthEvents();\r\n        }\r\n    }\r\n    /**\r\n     * Supabase Functions allows you to deploy and invoke edge functions.\r\n     */\r\n    get functions() {\r\n        return new _supabase_functions_js__WEBPACK_IMPORTED_MODULE_5__.FunctionsClient(this.functionsUrl.href, {\r\n            headers: this.headers,\r\n            customFetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\r\n     */\r\n    get storage() {\r\n        return new _supabase_storage_js__WEBPACK_IMPORTED_MODULE_6__.StorageClient(this.storageUrl.href, this.headers, this.fetch);\r\n    }\r\n    /**\r\n     * Perform a query on a table or a view.\r\n     *\r\n     * @param relation - The table or view name to query\r\n     */\r\n    from(relation) {\r\n        return this.rest.from(relation);\r\n    }\r\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\r\n    /**\r\n     * Select a schema to query or perform an function (rpc) call.\r\n     *\r\n     * The schema needs to be on the list of exposed schemas inside Supabase.\r\n     *\r\n     * @param schema - The schema to query\r\n     */\r\n    schema(schema) {\r\n        return this.rest.schema(schema);\r\n    }\r\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\r\n    /**\r\n     * Perform a function call.\r\n     *\r\n     * @param fn - The function name to call\r\n     * @param args - The arguments to pass to the function call\r\n     * @param options - Named parameters\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     * @param options.get - When set to `true`, the function will be called with\r\n     * read-only access mode.\r\n     * @param options.count - Count algorithm to use to count rows returned by the\r\n     * function. Only applicable for [set-returning\r\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    rpc(fn, args = {}, options = {}) {\r\n        return this.rest.rpc(fn, args, options);\r\n    }\r\n    /**\r\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\r\n     *\r\n     * @param {string} name - The name of the Realtime channel.\r\n     * @param {Object} opts - The options to pass to the Realtime channel.\r\n     *\r\n     */\r\n    channel(name, opts = { config: {} }) {\r\n        return this.realtime.channel(name, opts);\r\n    }\r\n    /**\r\n     * Returns all Realtime channels.\r\n     */\r\n    getChannels() {\r\n        return this.realtime.getChannels();\r\n    }\r\n    /**\r\n     * Unsubscribes and removes Realtime channel from Realtime client.\r\n     *\r\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\r\n     *\r\n     */\r\n    removeChannel(channel) {\r\n        return this.realtime.removeChannel(channel);\r\n    }\r\n    /**\r\n     * Unsubscribes and removes all Realtime channels from Realtime client.\r\n     */\r\n    removeAllChannels() {\r\n        return this.realtime.removeAllChannels();\r\n    }\r\n    _getAccessToken() {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.accessToken) {\r\n                return yield this.accessToken();\r\n            }\r\n            const { data } = yield this.auth.getSession();\r\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\r\n        });\r\n    }\r\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, lock, debug, }, headers, fetch) {\r\n        const authHeaders = {\r\n            Authorization: `Bearer ${this.supabaseKey}`,\r\n            apikey: `${this.supabaseKey}`,\r\n        };\r\n        return new _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__.SupabaseAuthClient({\r\n            url: this.authUrl.href,\r\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\r\n            storageKey: storageKey,\r\n            autoRefreshToken,\r\n            persistSession,\r\n            detectSessionInUrl,\r\n            storage,\r\n            flowType,\r\n            lock,\r\n            debug,\r\n            fetch,\r\n            // auth checks if there is a custom authorizaiton header using this flag\r\n            // so it knows whether to return an error when getUser is called with no session\r\n            hasCustomAuthorizationHeader: 'Authorization' in this.headers,\r\n        });\r\n    }\r\n    _initRealtimeClient(options) {\r\n        return new _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\r\n    }\r\n    _listenForAuthEvents() {\r\n        let data = this.auth.onAuthStateChange((event, session) => {\r\n            this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\r\n        });\r\n        return data;\r\n    }\r\n    _handleTokenChanged(event, source, token) {\r\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\r\n            this.changedAccessToken !== token) {\r\n            this.changedAccessToken = token;\r\n        }\r\n        else if (event === 'SIGNED_OUT') {\r\n            this.realtime.setAuth();\r\n            if (source == 'STORAGE')\r\n                this.auth.signOut();\r\n            this.changedAccessToken = undefined;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=SupabaseClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthAdminApi: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthAdminApi),\n/* harmony export */   AuthApiError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthApiError),\n/* harmony export */   AuthClient: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthClient),\n/* harmony export */   AuthError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthError),\n/* harmony export */   AuthImplicitGrantRedirectError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthImplicitGrantRedirectError),\n/* harmony export */   AuthInvalidCredentialsError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidCredentialsError),\n/* harmony export */   AuthInvalidJwtError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidJwtError),\n/* harmony export */   AuthInvalidTokenResponseError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidTokenResponseError),\n/* harmony export */   AuthPKCEGrantCodeExchangeError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthPKCEGrantCodeExchangeError),\n/* harmony export */   AuthRetryableFetchError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthRetryableFetchError),\n/* harmony export */   AuthSessionMissingError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthSessionMissingError),\n/* harmony export */   AuthUnknownError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthUnknownError),\n/* harmony export */   AuthWeakPasswordError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthWeakPasswordError),\n/* harmony export */   CustomAuthError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.CustomAuthError),\n/* harmony export */   FunctionRegion: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionRegion),\n/* harmony export */   FunctionsError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsError),\n/* harmony export */   FunctionsFetchError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsFetchError),\n/* harmony export */   FunctionsHttpError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsHttpError),\n/* harmony export */   FunctionsRelayError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsRelayError),\n/* harmony export */   GoTrueAdminApi: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.GoTrueAdminApi),\n/* harmony export */   GoTrueClient: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.GoTrueClient),\n/* harmony export */   NavigatorLockAcquireTimeoutError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.NavigatorLockAcquireTimeoutError),\n/* harmony export */   PostgrestError: () => (/* reexport safe */ _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__.PostgrestError),\n/* harmony export */   REALTIME_CHANNEL_STATES: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_CHANNEL_STATES),\n/* harmony export */   REALTIME_LISTEN_TYPES: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_LISTEN_TYPES),\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT),\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_PRESENCE_LISTEN_EVENTS),\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_SUBSCRIBE_STATES),\n/* harmony export */   RealtimeChannel: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimeChannel),\n/* harmony export */   RealtimeClient: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimeClient),\n/* harmony export */   RealtimePresence: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimePresence),\n/* harmony export */   SIGN_OUT_SCOPES: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.SIGN_OUT_SCOPES),\n/* harmony export */   SupabaseClient: () => (/* reexport safe */ _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   isAuthApiError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthApiError),\n/* harmony export */   isAuthError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthError),\n/* harmony export */   isAuthImplicitGrantRedirectError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthImplicitGrantRedirectError),\n/* harmony export */   isAuthRetryableFetchError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthRetryableFetchError),\n/* harmony export */   isAuthSessionMissingError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthSessionMissingError),\n/* harmony export */   isAuthWeakPasswordError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthWeakPasswordError),\n/* harmony export */   lockInternals: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.lockInternals),\n/* harmony export */   navigatorLock: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.navigatorLock),\n/* harmony export */   processLock: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.processLock)\n/* harmony export */ });\n/* harmony import */ var _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SupabaseClient */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\");\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/postgrest-js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/functions-js */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/realtime-js */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a new Supabase Client.\r\n */\r\nconst createClient = (supabaseUrl, supabaseKey, options) => {\r\n    return new _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"](supabaseUrl, supabaseKey, options);\r\n};\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ1o7QUFDdUI7QUFDOEU7QUFDakc7QUFDdUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ087QUFDUCxlQUFlLHVEQUFjO0FBQzdCO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHN1cGFiYXNlLWpzXFxkaXN0XFxtb2R1bGVcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdXBhYmFzZUNsaWVudCBmcm9tICcuL1N1cGFiYXNlQ2xpZW50JztcclxuZXhwb3J0ICogZnJvbSAnQHN1cGFiYXNlL2F1dGgtanMnO1xyXG5leHBvcnQgeyBQb3N0Z3Jlc3RFcnJvciwgfSBmcm9tICdAc3VwYWJhc2UvcG9zdGdyZXN0LWpzJztcclxuZXhwb3J0IHsgRnVuY3Rpb25zSHR0cEVycm9yLCBGdW5jdGlvbnNGZXRjaEVycm9yLCBGdW5jdGlvbnNSZWxheUVycm9yLCBGdW5jdGlvbnNFcnJvciwgRnVuY3Rpb25SZWdpb24sIH0gZnJvbSAnQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcyc7XHJcbmV4cG9ydCAqIGZyb20gJ0BzdXBhYmFzZS9yZWFsdGltZS1qcyc7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU3VwYWJhc2VDbGllbnQgfSBmcm9tICcuL1N1cGFiYXNlQ2xpZW50JztcclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBuZXcgU3VwYWJhc2UgQ2xpZW50LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZUNsaWVudCA9IChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXksIG9wdGlvbnMpID0+IHtcclxuICAgIHJldHVybiBuZXcgU3VwYWJhc2VDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlS2V5LCBvcHRpb25zKTtcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseAuthClient: () => (/* binding */ SupabaseAuthClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\");\n\r\nclass SupabaseAuthClient extends _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthClient {\r\n    constructor(options) {\r\n        super(options);\r\n    }\r\n}\r\n//# sourceMappingURL=SupabaseAuthClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL1N1cGFiYXNlQXV0aENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUN4QyxpQ0FBaUMseURBQVU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3VwYWJhc2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxTdXBhYmFzZUF1dGhDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXV0aENsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9hdXRoLWpzJztcclxuZXhwb3J0IGNsYXNzIFN1cGFiYXNlQXV0aENsaWVudCBleHRlbmRzIEF1dGhDbGllbnQge1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1cGFiYXNlQXV0aENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_AUTH_OPTIONS: () => (/* binding */ DEFAULT_AUTH_OPTIONS),\n/* harmony export */   DEFAULT_DB_OPTIONS: () => (/* binding */ DEFAULT_DB_OPTIONS),\n/* harmony export */   DEFAULT_GLOBAL_OPTIONS: () => (/* binding */ DEFAULT_GLOBAL_OPTIONS),\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS),\n/* harmony export */   DEFAULT_REALTIME_OPTIONS: () => (/* binding */ DEFAULT_REALTIME_OPTIONS)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js\");\n\r\nlet JS_ENV = '';\r\n// @ts-ignore\r\nif (typeof Deno !== 'undefined') {\r\n    JS_ENV = 'deno';\r\n}\r\nelse if (typeof document !== 'undefined') {\r\n    JS_ENV = 'web';\r\n}\r\nelse if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\r\n    JS_ENV = 'react-native';\r\n}\r\nelse {\r\n    JS_ENV = 'node';\r\n}\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst DEFAULT_GLOBAL_OPTIONS = {\r\n    headers: DEFAULT_HEADERS,\r\n};\r\nconst DEFAULT_DB_OPTIONS = {\r\n    schema: 'public',\r\n};\r\nconst DEFAULT_AUTH_OPTIONS = {\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: true,\r\n    flowType: 'implicit',\r\n};\r\nconst DEFAULT_REALTIME_OPTIONS = {};\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQixnQ0FBZ0MsT0FBTyxHQUFHLDZDQUFPLENBQUM7QUFDNUU7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3VwYWJhc2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxjb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbic7XHJcbmxldCBKU19FTlYgPSAnJztcclxuLy8gQHRzLWlnbm9yZVxyXG5pZiAodHlwZW9mIERlbm8gIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBKU19FTlYgPSAnZGVubyc7XHJcbn1cclxuZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgSlNfRU5WID0gJ3dlYic7XHJcbn1cclxuZWxzZSBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcclxuICAgIEpTX0VOViA9ICdyZWFjdC1uYXRpdmUnO1xyXG59XHJcbmVsc2Uge1xyXG4gICAgSlNfRU5WID0gJ25vZGUnO1xyXG59XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHN1cGFiYXNlLWpzLSR7SlNfRU5WfS8ke3ZlcnNpb259YCB9O1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9HTE9CQUxfT1BUSU9OUyA9IHtcclxuICAgIGhlYWRlcnM6IERFRkFVTFRfSEVBREVSUyxcclxufTtcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfREJfT1BUSU9OUyA9IHtcclxuICAgIHNjaGVtYTogJ3B1YmxpYycsXHJcbn07XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0FVVEhfT1BUSU9OUyA9IHtcclxuICAgIGF1dG9SZWZyZXNoVG9rZW46IHRydWUsXHJcbiAgICBwZXJzaXN0U2Vzc2lvbjogdHJ1ZSxcclxuICAgIGRldGVjdFNlc3Npb25JblVybDogdHJ1ZSxcclxuICAgIGZsb3dUeXBlOiAnaW1wbGljaXQnLFxyXG59O1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9SRUFMVElNRV9PUFRJT05TID0ge307XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchWithAuth: () => (/* binding */ fetchWithAuth),\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch),\n/* harmony export */   resolveHeadersConstructor: () => (/* binding */ resolveHeadersConstructor)\n/* harmony export */ });\n/* harmony import */ var _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n// @ts-ignore\r\n\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst resolveHeadersConstructor = () => {\r\n    if (typeof Headers === 'undefined') {\r\n        return _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers;\r\n    }\r\n    return Headers;\r\n};\r\nconst fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\r\n    const fetch = resolveFetch(customFetch);\r\n    const HeadersConstructor = resolveHeadersConstructor();\r\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\r\n        var _a;\r\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\r\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\r\n        if (!headers.has('apikey')) {\r\n            headers.set('apikey', supabaseKey);\r\n        }\r\n        if (!headers.has('Authorization')) {\r\n            headers.set('Authorization', `Bearer ${accessToken}`);\r\n        }\r\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\r\n    });\r\n};\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUM4RTtBQUN2RTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNERBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGVBQWUseURBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsWUFBWTtBQUMvRDtBQUNBLDBEQUEwRCxXQUFXLFNBQVM7QUFDOUUsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHN1cGFiYXNlLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcZmV0Y2guanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG4vLyBAdHMtaWdub3JlXHJcbmltcG9ydCBub2RlRmV0Y2gsIHsgSGVhZGVycyBhcyBOb2RlRmV0Y2hIZWFkZXJzIH0gZnJvbSAnQHN1cGFiYXNlL25vZGUtZmV0Y2gnO1xyXG5leHBvcnQgY29uc3QgcmVzb2x2ZUZldGNoID0gKGN1c3RvbUZldGNoKSA9PiB7XHJcbiAgICBsZXQgX2ZldGNoO1xyXG4gICAgaWYgKGN1c3RvbUZldGNoKSB7XHJcbiAgICAgICAgX2ZldGNoID0gY3VzdG9tRmV0Y2g7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0eXBlb2YgZmV0Y2ggPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgX2ZldGNoID0gbm9kZUZldGNoO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgX2ZldGNoID0gZmV0Y2g7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IF9mZXRjaCguLi5hcmdzKTtcclxufTtcclxuZXhwb3J0IGNvbnN0IHJlc29sdmVIZWFkZXJzQ29uc3RydWN0b3IgPSAoKSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIEhlYWRlcnMgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIE5vZGVGZXRjaEhlYWRlcnM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gSGVhZGVycztcclxufTtcclxuZXhwb3J0IGNvbnN0IGZldGNoV2l0aEF1dGggPSAoc3VwYWJhc2VLZXksIGdldEFjY2Vzc1Rva2VuLCBjdXN0b21GZXRjaCkgPT4ge1xyXG4gICAgY29uc3QgZmV0Y2ggPSByZXNvbHZlRmV0Y2goY3VzdG9tRmV0Y2gpO1xyXG4gICAgY29uc3QgSGVhZGVyc0NvbnN0cnVjdG9yID0gcmVzb2x2ZUhlYWRlcnNDb25zdHJ1Y3RvcigpO1xyXG4gICAgcmV0dXJuIChpbnB1dCwgaW5pdCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gKF9hID0gKHlpZWxkIGdldEFjY2Vzc1Rva2VuKCkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBzdXBhYmFzZUtleTtcclxuICAgICAgICBsZXQgaGVhZGVycyA9IG5ldyBIZWFkZXJzQ29uc3RydWN0b3IoaW5pdCA9PT0gbnVsbCB8fCBpbml0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbml0LmhlYWRlcnMpO1xyXG4gICAgICAgIGlmICghaGVhZGVycy5oYXMoJ2FwaWtleScpKSB7XHJcbiAgICAgICAgICAgIGhlYWRlcnMuc2V0KCdhcGlrZXknLCBzdXBhYmFzZUtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghaGVhZGVycy5oYXMoJ0F1dGhvcml6YXRpb24nKSkge1xyXG4gICAgICAgICAgICBoZWFkZXJzLnNldCgnQXV0aG9yaXphdGlvbicsIGBCZWFyZXIgJHthY2Nlc3NUb2tlbn1gKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGlucHV0LCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGluaXQpLCB7IGhlYWRlcnMgfSkpO1xyXG4gICAgfSk7XHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySettingDefaults: () => (/* binding */ applySettingDefaults),\n/* harmony export */   ensureTrailingSlash: () => (/* binding */ ensureTrailingSlash),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   uuid: () => (/* binding */ uuid)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nfunction uuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\nfunction ensureTrailingSlash(url) {\r\n    return url.endsWith('/') ? url : url + '/';\r\n}\r\nconst isBrowser = () => typeof window !== 'undefined';\r\nfunction applySettingDefaults(options, defaults) {\r\n    var _a, _b;\r\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\r\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\r\n    const result = {\r\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\r\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\r\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\r\n        global: Object.assign(Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions), { headers: Object.assign(Object.assign({}, ((_a = DEFAULT_GLOBAL_OPTIONS === null || DEFAULT_GLOBAL_OPTIONS === void 0 ? void 0 : DEFAULT_GLOBAL_OPTIONS.headers) !== null && _a !== void 0 ? _a : {})), ((_b = globalOptions === null || globalOptions === void 0 ? void 0 : globalOptions.headers) !== null && _b !== void 0 ? _b : {})) }),\r\n        accessToken: () => __awaiter(this, void 0, void 0, function* () { return ''; }),\r\n    };\r\n    if (options.accessToken) {\r\n        result.accessToken = options.accessToken;\r\n    }\r\n    else {\r\n        // hack around Required<>\r\n        delete result.accessToken;\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0EsWUFBWSxzRkFBc0Y7QUFDbEcsWUFBWSwwSEFBMEg7QUFDdEk7QUFDQSwwQ0FBMEM7QUFDMUMsNENBQTRDO0FBQzVDLGdEQUFnRDtBQUNoRCw0REFBNEQsNkNBQTZDLHVDQUF1Qyw0SkFBNEosbUlBQW1JLElBQUk7QUFDbmIsMEVBQTBFLFlBQVk7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3VwYWJhc2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxoZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufTtcclxuZXhwb3J0IGZ1bmN0aW9uIHV1aWQoKSB7XHJcbiAgICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbiAoYykge1xyXG4gICAgICAgIHZhciByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwLCB2ID0gYyA9PSAneCcgPyByIDogKHIgJiAweDMpIHwgMHg4O1xyXG4gICAgICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVUcmFpbGluZ1NsYXNoKHVybCkge1xyXG4gICAgcmV0dXJuIHVybC5lbmRzV2l0aCgnLycpID8gdXJsIDogdXJsICsgJy8nO1xyXG59XHJcbmV4cG9ydCBjb25zdCBpc0Jyb3dzZXIgPSAoKSA9PiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcclxuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5U2V0dGluZ0RlZmF1bHRzKG9wdGlvbnMsIGRlZmF1bHRzKSB7XHJcbiAgICB2YXIgX2EsIF9iO1xyXG4gICAgY29uc3QgeyBkYjogZGJPcHRpb25zLCBhdXRoOiBhdXRoT3B0aW9ucywgcmVhbHRpbWU6IHJlYWx0aW1lT3B0aW9ucywgZ2xvYmFsOiBnbG9iYWxPcHRpb25zLCB9ID0gb3B0aW9ucztcclxuICAgIGNvbnN0IHsgZGI6IERFRkFVTFRfREJfT1BUSU9OUywgYXV0aDogREVGQVVMVF9BVVRIX09QVElPTlMsIHJlYWx0aW1lOiBERUZBVUxUX1JFQUxUSU1FX09QVElPTlMsIGdsb2JhbDogREVGQVVMVF9HTE9CQUxfT1BUSU9OUywgfSA9IGRlZmF1bHRzO1xyXG4gICAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgICAgIGRiOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfREJfT1BUSU9OUyksIGRiT3B0aW9ucyksXHJcbiAgICAgICAgYXV0aDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0FVVEhfT1BUSU9OUyksIGF1dGhPcHRpb25zKSxcclxuICAgICAgICByZWFsdGltZTogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX1JFQUxUSU1FX09QVElPTlMpLCByZWFsdGltZU9wdGlvbnMpLFxyXG4gICAgICAgIGdsb2JhbDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfR0xPQkFMX09QVElPTlMpLCBnbG9iYWxPcHRpb25zKSwgeyBoZWFkZXJzOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sICgoX2EgPSBERUZBVUxUX0dMT0JBTF9PUFRJT05TID09PSBudWxsIHx8IERFRkFVTFRfR0xPQkFMX09QVElPTlMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IERFRkFVTFRfR0xPQkFMX09QVElPTlMuaGVhZGVycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDoge30pKSwgKChfYiA9IGdsb2JhbE9wdGlvbnMgPT09IG51bGwgfHwgZ2xvYmFsT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsT3B0aW9ucy5oZWFkZXJzKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB7fSkpIH0pLFxyXG4gICAgICAgIGFjY2Vzc1Rva2VuOiAoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAnJzsgfSksXHJcbiAgICB9O1xyXG4gICAgaWYgKG9wdGlvbnMuYWNjZXNzVG9rZW4pIHtcclxuICAgICAgICByZXN1bHQuYWNjZXNzVG9rZW4gPSBvcHRpb25zLmFjY2Vzc1Rva2VuO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgLy8gaGFjayBhcm91bmQgUmVxdWlyZWQ8PlxyXG4gICAgICAgIGRlbGV0ZSByZXN1bHQuYWNjZXNzVG9rZW47XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = '2.50.0';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHN1cGFiYXNlLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjUwLjAnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/class-variance-authority/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cva: () => (/* binding */ cva),\n/* harmony export */   cx: () => (/* binding */ cx)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/**\r\n * Copyright 2022 Joe Bell. All rights reserved.\r\n *\r\n * This file is licensed to you under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with the\r\n * License. You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations under\r\n * the License.\r\n */ \r\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\r\nconst cx = clsx__WEBPACK_IMPORTED_MODULE_0__.clsx;\r\nconst cva = (base, config)=>(props)=>{\r\n        var _config_compoundVariants;\r\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\r\n        const { variants, defaultVariants } = config;\r\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\r\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\r\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\r\n            if (variantProp === null) return null;\r\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\r\n            return variants[variant][variantKey];\r\n        });\r\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\r\n            let [key, value] = param;\r\n            if (value === undefined) {\r\n                return acc;\r\n            }\r\n            acc[key] = value;\r\n            return acc;\r\n        }, {});\r\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\r\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\r\n            return Object.entries(compoundVariantOptions).every((param)=>{\r\n                let [key, value] = param;\r\n                return Array.isArray(value) ? value.includes({\r\n                    ...defaultVariants,\r\n                    ...propsWithoutUndefined\r\n                }[key]) : ({\r\n                    ...defaultVariants,\r\n                    ...propsWithoutUndefined\r\n                })[key] === value;\r\n            }) ? [\r\n                ...acc,\r\n                cvClass,\r\n                cvClassName\r\n            ] : acc;\r\n        }, []);\r\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\r\n    };\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbGFzcy12YXJpYW5jZS1hdXRob3JpdHkvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBZ0M7QUFDaEMsK0RBQStELE1BQU07QUFDOUQsV0FBVyxzQ0FBSTtBQUNmO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQiw0QkFBNEI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2I7QUFDQSxrQkFBa0Isb0VBQW9FO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcY2xhc3MtdmFyaWFuY2UtYXV0aG9yaXR5XFxkaXN0XFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAyMDIyIEpvZSBCZWxsLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIGZpbGUgaXMgbGljZW5zZWQgdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjBcclxuICogKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGVcclxuICogTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXHJcbiAqIFdBUlJBTlRJRVMgT1IgUkVQUkVTRU5UQVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXHJcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyXHJcbiAqIHRoZSBMaWNlbnNlLlxyXG4gKi8gaW1wb3J0IHsgY2xzeCB9IGZyb20gXCJjbHN4XCI7XHJcbmNvbnN0IGZhbHN5VG9TdHJpbmcgPSAodmFsdWUpPT50eXBlb2YgdmFsdWUgPT09IFwiYm9vbGVhblwiID8gYCR7dmFsdWV9YCA6IHZhbHVlID09PSAwID8gXCIwXCIgOiB2YWx1ZTtcclxuZXhwb3J0IGNvbnN0IGN4ID0gY2xzeDtcclxuZXhwb3J0IGNvbnN0IGN2YSA9IChiYXNlLCBjb25maWcpPT4ocHJvcHMpPT57XHJcbiAgICAgICAgdmFyIF9jb25maWdfY29tcG91bmRWYXJpYW50cztcclxuICAgICAgICBpZiAoKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy52YXJpYW50cykgPT0gbnVsbCkgcmV0dXJuIGN4KGJhc2UsIHByb3BzID09PSBudWxsIHx8IHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm9wcy5jbGFzcywgcHJvcHMgPT09IG51bGwgfHwgcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3BzLmNsYXNzTmFtZSk7XHJcbiAgICAgICAgY29uc3QgeyB2YXJpYW50cywgZGVmYXVsdFZhcmlhbnRzIH0gPSBjb25maWc7XHJcbiAgICAgICAgY29uc3QgZ2V0VmFyaWFudENsYXNzTmFtZXMgPSBPYmplY3Qua2V5cyh2YXJpYW50cykubWFwKCh2YXJpYW50KT0+e1xyXG4gICAgICAgICAgICBjb25zdCB2YXJpYW50UHJvcCA9IHByb3BzID09PSBudWxsIHx8IHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm9wc1t2YXJpYW50XTtcclxuICAgICAgICAgICAgY29uc3QgZGVmYXVsdFZhcmlhbnRQcm9wID0gZGVmYXVsdFZhcmlhbnRzID09PSBudWxsIHx8IGRlZmF1bHRWYXJpYW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGVmYXVsdFZhcmlhbnRzW3ZhcmlhbnRdO1xyXG4gICAgICAgICAgICBpZiAodmFyaWFudFByb3AgPT09IG51bGwpIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICBjb25zdCB2YXJpYW50S2V5ID0gZmFsc3lUb1N0cmluZyh2YXJpYW50UHJvcCkgfHwgZmFsc3lUb1N0cmluZyhkZWZhdWx0VmFyaWFudFByb3ApO1xyXG4gICAgICAgICAgICByZXR1cm4gdmFyaWFudHNbdmFyaWFudF1bdmFyaWFudEtleV07XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3QgcHJvcHNXaXRob3V0VW5kZWZpbmVkID0gcHJvcHMgJiYgT2JqZWN0LmVudHJpZXMocHJvcHMpLnJlZHVjZSgoYWNjLCBwYXJhbSk9PntcclxuICAgICAgICAgICAgbGV0IFtrZXksIHZhbHVlXSA9IHBhcmFtO1xyXG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhY2Nba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgICAgICByZXR1cm4gYWNjO1xyXG4gICAgICAgIH0sIHt9KTtcclxuICAgICAgICBjb25zdCBnZXRDb21wb3VuZFZhcmlhbnRDbGFzc05hbWVzID0gY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9jb25maWdfY29tcG91bmRWYXJpYW50cyA9IGNvbmZpZy5jb21wb3VuZFZhcmlhbnRzKSA9PT0gbnVsbCB8fCBfY29uZmlnX2NvbXBvdW5kVmFyaWFudHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jb25maWdfY29tcG91bmRWYXJpYW50cy5yZWR1Y2UoKGFjYywgcGFyYW0pPT57XHJcbiAgICAgICAgICAgIGxldCB7IGNsYXNzOiBjdkNsYXNzLCBjbGFzc05hbWU6IGN2Q2xhc3NOYW1lLCAuLi5jb21wb3VuZFZhcmlhbnRPcHRpb25zIH0gPSBwYXJhbTtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGNvbXBvdW5kVmFyaWFudE9wdGlvbnMpLmV2ZXJ5KChwYXJhbSk9PntcclxuICAgICAgICAgICAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBwYXJhbTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLmluY2x1ZGVzKHtcclxuICAgICAgICAgICAgICAgICAgICAuLi5kZWZhdWx0VmFyaWFudHMsXHJcbiAgICAgICAgICAgICAgICAgICAgLi4ucHJvcHNXaXRob3V0VW5kZWZpbmVkXHJcbiAgICAgICAgICAgICAgICB9W2tleV0pIDogKHtcclxuICAgICAgICAgICAgICAgICAgICAuLi5kZWZhdWx0VmFyaWFudHMsXHJcbiAgICAgICAgICAgICAgICAgICAgLi4ucHJvcHNXaXRob3V0VW5kZWZpbmVkXHJcbiAgICAgICAgICAgICAgICB9KVtrZXldID09PSB2YWx1ZTtcclxuICAgICAgICAgICAgfSkgPyBbXHJcbiAgICAgICAgICAgICAgICAuLi5hY2MsXHJcbiAgICAgICAgICAgICAgICBjdkNsYXNzLFxyXG4gICAgICAgICAgICAgICAgY3ZDbGFzc05hbWVcclxuICAgICAgICAgICAgXSA6IGFjYztcclxuICAgICAgICB9LCBbXSk7XHJcbiAgICAgICAgcmV0dXJuIGN4KGJhc2UsIGdldFZhcmlhbnRDbGFzc05hbWVzLCBnZXRDb21wb3VuZFZhcmlhbnRDbGFzc05hbWVzLCBwcm9wcyA9PT0gbnVsbCB8fCBwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvcHMuY2xhc3MsIHByb3BzID09PSBudWxsIHx8IHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm9wcy5jbGFzc05hbWUpO1xyXG4gICAgfTtcclxuXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: () => (/* binding */ clsx),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjLGFBQWEsK0NBQStDLGdEQUFnRCxlQUFlLFFBQVEsSUFBSSwwQ0FBMEMseUNBQXlDLFNBQWdCLGdCQUFnQix3Q0FBd0MsSUFBSSxtREFBbUQsU0FBUyxpRUFBZSxJQUFJIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcY2xzeFxcZGlzdFxcY2xzeC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcihlKXt2YXIgdCxmLG49XCJcIjtpZihcInN0cmluZ1wiPT10eXBlb2YgZXx8XCJudW1iZXJcIj09dHlwZW9mIGUpbis9ZTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBlKWlmKEFycmF5LmlzQXJyYXkoZSkpe3ZhciBvPWUubGVuZ3RoO2Zvcih0PTA7dDxvO3QrKyllW3RdJiYoZj1yKGVbdF0pKSYmKG4mJihuKz1cIiBcIiksbis9Zil9ZWxzZSBmb3IoZiBpbiBlKWVbZl0mJihuJiYobis9XCIgXCIpLG4rPWYpO3JldHVybiBufWV4cG9ydCBmdW5jdGlvbiBjbHN4KCl7Zm9yKHZhciBlLHQsZj0wLG49XCJcIixvPWFyZ3VtZW50cy5sZW5ndGg7ZjxvO2YrKykoZT1hcmd1bWVudHNbZl0pJiYodD1yKGUpKSYmKG4mJihuKz1cIiBcIiksbis9dCk7cmV0dXJuIG59ZXhwb3J0IGRlZmF1bHQgY2xzeDsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/Icon.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Icon)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \n\n\nconst Icon = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c = (param, ref)=>{\n    let { color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, iconNode, ...rest } = param;\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n        ref,\n        ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide\", className),\n        ...rest\n    }, [\n        ...iconNode.map((param)=>{\n            let [tag, attrs] = param;\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs);\n        }),\n        ...Array.isArray(children) ? children : [\n            children\n        ]\n    ]);\n});\n_c1 = Icon;\n //# sourceMappingURL=Icon.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Icon$forwardRef\");\n$RefreshReg$(_c1, \"Icon\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRWlEO0FBQ0s7QUFDRjtBQUVyRCxNQUFNSSxxQkFBT0osaURBQVVBLE1BQ3JCLFFBU0dLO1FBVEYsRUFDQ0MsUUFBUSxjQUFjLEVBQ3RCQyxPQUFPLEVBQUUsRUFDVEMsY0FBYyxDQUFDLEVBQ2ZDLG1CQUFtQixFQUNuQkMsWUFBWSxFQUFFLEVBQ2RDLFFBQVEsRUFDUkMsUUFBUSxFQUNSLEdBQUdDLE1BQ0o7SUFDQyxxQkFBT1osb0RBQWFBLENBQ2xCLE9BQ0E7UUFDRUk7UUFDQSxHQUFHSCw2REFBaUI7UUFDcEJZLE9BQU9QO1FBQ1BRLFFBQVFSO1FBQ1JTLFFBQVFWO1FBQ1JFLGFBQWFDLHNCQUFzQlEsT0FBT1QsZUFBZSxLQUFLUyxPQUFPVixRQUFRQztRQUM3RUUsV0FBV1Asa0VBQVlBLENBQUMsVUFBVU87UUFDbEMsR0FBR0csSUFBSTtJQUNULEdBQ0E7V0FDS0QsU0FBU00sR0FBRyxDQUFDO2dCQUFDLENBQUNDLEtBQUtDLE1BQU07aUNBQUtuQixvREFBYUEsQ0FBQ2tCLEtBQUtDOztXQUNsREMsTUFBTUMsT0FBTyxDQUFDWCxZQUFZQSxXQUFXO1lBQUNBO1NBQVM7S0FDbkQ7QUFFTDs7QUFHeUIsQ0FDM0IsZ0NBQWdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXEljb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTQuMCAtIElTQ1xyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cclxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgZm9yd2FyZFJlZiwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGRlZmF1bHRBdHRyaWJ1dGVzIGZyb20gJy4vZGVmYXVsdEF0dHJpYnV0ZXMuanMnO1xyXG5pbXBvcnQgeyBtZXJnZUNsYXNzZXMgfSBmcm9tICcuL3NoYXJlZC9zcmMvdXRpbHMuanMnO1xyXG5cclxuY29uc3QgSWNvbiA9IGZvcndhcmRSZWYoXHJcbiAgKHtcclxuICAgIGNvbG9yID0gXCJjdXJyZW50Q29sb3JcIixcclxuICAgIHNpemUgPSAyNCxcclxuICAgIHN0cm9rZVdpZHRoID0gMixcclxuICAgIGFic29sdXRlU3Ryb2tlV2lkdGgsXHJcbiAgICBjbGFzc05hbWUgPSBcIlwiLFxyXG4gICAgY2hpbGRyZW4sXHJcbiAgICBpY29uTm9kZSxcclxuICAgIC4uLnJlc3RcclxuICB9LCByZWYpID0+IHtcclxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFxyXG4gICAgICBcInN2Z1wiLFxyXG4gICAgICB7XHJcbiAgICAgICAgcmVmLFxyXG4gICAgICAgIC4uLmRlZmF1bHRBdHRyaWJ1dGVzLFxyXG4gICAgICAgIHdpZHRoOiBzaXplLFxyXG4gICAgICAgIGhlaWdodDogc2l6ZSxcclxuICAgICAgICBzdHJva2U6IGNvbG9yLFxyXG4gICAgICAgIHN0cm9rZVdpZHRoOiBhYnNvbHV0ZVN0cm9rZVdpZHRoID8gTnVtYmVyKHN0cm9rZVdpZHRoKSAqIDI0IC8gTnVtYmVyKHNpemUpIDogc3Ryb2tlV2lkdGgsXHJcbiAgICAgICAgY2xhc3NOYW1lOiBtZXJnZUNsYXNzZXMoXCJsdWNpZGVcIiwgY2xhc3NOYW1lKSxcclxuICAgICAgICAuLi5yZXN0XHJcbiAgICAgIH0sXHJcbiAgICAgIFtcclxuICAgICAgICAuLi5pY29uTm9kZS5tYXAoKFt0YWcsIGF0dHJzXSkgPT4gY3JlYXRlRWxlbWVudCh0YWcsIGF0dHJzKSksXHJcbiAgICAgICAgLi4uQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cclxuICAgICAgXVxyXG4gICAgKTtcclxuICB9XHJcbik7XHJcblxyXG5leHBvcnQgeyBJY29uIGFzIGRlZmF1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SWNvbi5qcy5tYXBcclxuIl0sIm5hbWVzIjpbImZvcndhcmRSZWYiLCJjcmVhdGVFbGVtZW50IiwiZGVmYXVsdEF0dHJpYnV0ZXMiLCJtZXJnZUNsYXNzZXMiLCJJY29uIiwicmVmIiwiY29sb3IiLCJzaXplIiwic3Ryb2tlV2lkdGgiLCJhYnNvbHV0ZVN0cm9rZVdpZHRoIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJpY29uTm9kZSIsInJlc3QiLCJ3aWR0aCIsImhlaWdodCIsInN0cm9rZSIsIk51bWJlciIsIm1hcCIsInRhZyIsImF0dHJzIiwiQXJyYXkiLCJpc0FycmF5IiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createLucideIcon)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \n\n\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((param, ref)=>{\n        let { className, ...props } = param;\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Icon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n            ref,\n            iconNode,\n            className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide-\".concat((0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toKebabCase)(iconName)), className),\n            ...props\n        });\n    });\n    Component.displayName = \"\".concat(iconName);\n    return Component;\n};\n //# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRWlEO0FBQ2dCO0FBQ3JDO0FBRTdCLE1BQU1LLG1CQUFtQixDQUFDQyxVQUFVQztJQUNsQyxNQUFNQywwQkFBWVIsaURBQVVBLENBQzFCLFFBQTBCUztZQUF6QixFQUFFQyxTQUFTLEVBQUUsR0FBR0MsT0FBTzs2QkFBVVYsb0RBQWFBLENBQUNHLGdEQUFJQSxFQUFFO1lBQ3BESztZQUNBRjtZQUNBRyxXQUFXUixrRUFBWUEsQ0FBQyxVQUFnQyxPQUF0QkMsaUVBQVdBLENBQUNHLFlBQWFJO1lBQzNELEdBQUdDLEtBQUs7UUFDVjs7SUFFRkgsVUFBVUksV0FBVyxHQUFHLEdBQVksT0FBVE47SUFDM0IsT0FBT0U7QUFDVDtBQUV1QyxDQUN2Qyw0Q0FBNEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxsdWNpZGUtcmVhY3RcXGRpc3RcXGVzbVxcY3JlYXRlTHVjaWRlSWNvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1NC4wIC0gSVNDXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxyXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG5pbXBvcnQgeyBmb3J3YXJkUmVmLCBjcmVhdGVFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBtZXJnZUNsYXNzZXMsIHRvS2ViYWJDYXNlIH0gZnJvbSAnLi9zaGFyZWQvc3JjL3V0aWxzLmpzJztcclxuaW1wb3J0IEljb24gZnJvbSAnLi9JY29uLmpzJztcclxuXHJcbmNvbnN0IGNyZWF0ZUx1Y2lkZUljb24gPSAoaWNvbk5hbWUsIGljb25Ob2RlKSA9PiB7XHJcbiAgY29uc3QgQ29tcG9uZW50ID0gZm9yd2FyZFJlZihcclxuICAgICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiBjcmVhdGVFbGVtZW50KEljb24sIHtcclxuICAgICAgcmVmLFxyXG4gICAgICBpY29uTm9kZSxcclxuICAgICAgY2xhc3NOYW1lOiBtZXJnZUNsYXNzZXMoYGx1Y2lkZS0ke3RvS2ViYWJDYXNlKGljb25OYW1lKX1gLCBjbGFzc05hbWUpLFxyXG4gICAgICAuLi5wcm9wc1xyXG4gICAgfSlcclxuICApO1xyXG4gIENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGAke2ljb25OYW1lfWA7XHJcbiAgcmV0dXJuIENvbXBvbmVudDtcclxufTtcclxuXHJcbmV4cG9ydCB7IGNyZWF0ZUx1Y2lkZUljb24gYXMgZGVmYXVsdCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVMdWNpZGVJY29uLmpzLm1hcFxyXG4iXSwibmFtZXMiOlsiZm9yd2FyZFJlZiIsImNyZWF0ZUVsZW1lbnQiLCJtZXJnZUNsYXNzZXMiLCJ0b0tlYmFiQ2FzZSIsIkljb24iLCJjcmVhdGVMdWNpZGVJY29uIiwiaWNvbk5hbWUiLCJpY29uTm9kZSIsIkNvbXBvbmVudCIsInJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwiZGlzcGxheU5hbWUiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ defaultAttributes)\n/* harmony export */ });\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\n //# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBRUQsSUFBSUEsb0JBQW9CO0lBQ3RCQyxPQUFPO0lBQ1BDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxTQUFTO0lBQ1RDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxhQUFhO0lBQ2JDLGVBQWU7SUFDZkMsZ0JBQWdCO0FBQ2xCO0FBRXdDLENBQ3hDLDZDQUE2QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXGx1Y2lkZS1yZWFjdFxcZGlzdFxcZXNtXFxkZWZhdWx0QXR0cmlidXRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1NC4wIC0gSVNDXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxyXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG52YXIgZGVmYXVsdEF0dHJpYnV0ZXMgPSB7XHJcbiAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcclxuICB3aWR0aDogMjQsXHJcbiAgaGVpZ2h0OiAyNCxcclxuICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxyXG4gIGZpbGw6IFwibm9uZVwiLFxyXG4gIHN0cm9rZTogXCJjdXJyZW50Q29sb3JcIixcclxuICBzdHJva2VXaWR0aDogMixcclxuICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXHJcbiAgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIlxyXG59O1xyXG5cclxuZXhwb3J0IHsgZGVmYXVsdEF0dHJpYnV0ZXMgYXMgZGVmYXVsdCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0QXR0cmlidXRlcy5qcy5tYXBcclxuIl0sIm5hbWVzIjpbImRlZmF1bHRBdHRyaWJ1dGVzIiwieG1sbnMiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-alert.js":
/*!******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/circle-alert.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CircleAlert)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst CircleAlert = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"CircleAlert\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"12\",\n            key: \"1pkeuh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"4dfq90\"\n        }\n    ]\n]);\n //# sourceMappingURL=circle-alert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2lyY2xlLWFsZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFcUQ7QUFFdEQsTUFBTUMsY0FBY0QsZ0VBQWdCQSxDQUFDLGVBQWU7SUFDbEQ7UUFBQztRQUFVO1lBQUVFLElBQUk7WUFBTUMsSUFBSTtZQUFNQyxHQUFHO1lBQU1DLEtBQUs7UUFBUztLQUFFO0lBQzFEO1FBQUM7UUFBUTtZQUFFQyxJQUFJO1lBQU1DLElBQUk7WUFBTUMsSUFBSTtZQUFLQyxJQUFJO1lBQU1KLEtBQUs7UUFBUztLQUFFO0lBQ2xFO1FBQUM7UUFBUTtZQUFFQyxJQUFJO1lBQU1DLElBQUk7WUFBU0MsSUFBSTtZQUFNQyxJQUFJO1lBQU1KLEtBQUs7UUFBUztLQUFFO0NBQ3ZFO0FBRWlDLENBQ2xDLHdDQUF3QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXGx1Y2lkZS1yZWFjdFxcZGlzdFxcZXNtXFxpY29uc1xcY2lyY2xlLWFsZXJ0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDU0LjAgLSBJU0NcclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXHJcbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xyXG5cclxuY29uc3QgQ2lyY2xlQWxlcnQgPSBjcmVhdGVMdWNpZGVJY29uKFwiQ2lyY2xlQWxlcnRcIiwgW1xyXG4gIFtcImNpcmNsZVwiLCB7IGN4OiBcIjEyXCIsIGN5OiBcIjEyXCIsIHI6IFwiMTBcIiwga2V5OiBcIjFtZ2xheVwiIH1dLFxyXG4gIFtcImxpbmVcIiwgeyB4MTogXCIxMlwiLCB4MjogXCIxMlwiLCB5MTogXCI4XCIsIHkyOiBcIjEyXCIsIGtleTogXCIxcGtldWhcIiB9XSxcclxuICBbXCJsaW5lXCIsIHsgeDE6IFwiMTJcIiwgeDI6IFwiMTIuMDFcIiwgeTE6IFwiMTZcIiwgeTI6IFwiMTZcIiwga2V5OiBcIjRkZnE5MFwiIH1dXHJcbl0pO1xyXG5cclxuZXhwb3J0IHsgQ2lyY2xlQWxlcnQgYXMgZGVmYXVsdCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaXJjbGUtYWxlcnQuanMubWFwXHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVMdWNpZGVJY29uIiwiQ2lyY2xlQWxlcnQiLCJjeCIsImN5IiwiciIsImtleSIsIngxIiwieDIiLCJ5MSIsInkyIiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-alert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/loader-circle.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LoaderCircle)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst LoaderCircle = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"LoaderCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 1 1-6.219-8.56\",\n            key: \"13zald\"\n        }\n    ]\n]);\n //# sourceMappingURL=loader-circle.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvbG9hZGVyLWNpcmNsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLGVBQWVELGdFQUFnQkEsQ0FBQyxnQkFBZ0I7SUFDcEQ7UUFBQztRQUFRO1lBQUVFLEdBQUc7WUFBK0JDLEtBQUs7UUFBUztLQUFFO0NBQzlEO0FBRWtDLENBQ25DLHlDQUF5QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXGx1Y2lkZS1yZWFjdFxcZGlzdFxcZXNtXFxpY29uc1xcbG9hZGVyLWNpcmNsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1NC4wIC0gSVNDXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxyXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcclxuXHJcbmNvbnN0IExvYWRlckNpcmNsZSA9IGNyZWF0ZUx1Y2lkZUljb24oXCJMb2FkZXJDaXJjbGVcIiwgW1xyXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yMSAxMmE5IDkgMCAxIDEtNi4yMTktOC41NlwiLCBrZXk6IFwiMTN6YWxkXCIgfV1cclxuXSk7XHJcblxyXG5leHBvcnQgeyBMb2FkZXJDaXJjbGUgYXMgZGVmYXVsdCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2FkZXItY2lyY2xlLmpzLm1hcFxyXG4iXSwibmFtZXMiOlsiY3JlYXRlTHVjaWRlSWNvbiIsIkxvYWRlckNpcmNsZSIsImQiLCJrZXkiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/refresh-cw.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshCw)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst RefreshCw = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"RefreshCw\", [\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\",\n            key: \"v9h5vc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v5h-5\",\n            key: \"1q7to0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\",\n            key: \"3uifl3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16H3v5\",\n            key: \"1cv678\"\n        }\n    ]\n]);\n //# sourceMappingURL=refresh-cw.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcmVmcmVzaC1jdy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLFlBQVlELGdFQUFnQkEsQ0FBQyxhQUFhO0lBQzlDO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQXNEQyxLQUFLO1FBQVM7S0FBRTtJQUNwRjtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFjQyxLQUFLO1FBQVM7S0FBRTtJQUM1QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUF1REMsS0FBSztRQUFTO0tBQUU7SUFDckY7UUFBQztRQUFRO1lBQUVELEdBQUc7WUFBYUMsS0FBSztRQUFTO0tBQUU7Q0FDNUM7QUFFK0IsQ0FDaEMsc0NBQXNDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXGljb25zXFxyZWZyZXNoLWN3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDU0LjAgLSBJU0NcclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXHJcbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xyXG5cclxuY29uc3QgUmVmcmVzaEN3ID0gY3JlYXRlTHVjaWRlSWNvbihcIlJlZnJlc2hDd1wiLCBbXHJcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTMgMTJhOSA5IDAgMCAxIDktOSA5Ljc1IDkuNzUgMCAwIDEgNi43NCAyLjc0TDIxIDhcIiwga2V5OiBcInY5aDV2Y1wiIH1dLFxyXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yMSAzdjVoLTVcIiwga2V5OiBcIjFxN3RvMFwiIH1dLFxyXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yMSAxMmE5IDkgMCAwIDEtOSA5IDkuNzUgOS43NSAwIDAgMS02Ljc0LTIuNzRMMyAxNlwiLCBrZXk6IFwiM3VpZmwzXCIgfV0sXHJcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTggMTZIM3Y1XCIsIGtleTogXCIxY3Y2NzhcIiB9XVxyXG5dKTtcclxuXHJcbmV4cG9ydCB7IFJlZnJlc2hDdyBhcyBkZWZhdWx0IH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZnJlc2gtY3cuanMubWFwXHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVMdWNpZGVJY29uIiwiUmVmcmVzaEN3IiwiZCIsImtleSIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js":
/*!*******************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/x.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ X)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst X = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"X\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6 6 18\",\n            key: \"1bl5f8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 6 12 12\",\n            key: \"d8bk6v\"\n        }\n    ]\n]);\n //# sourceMappingURL=x.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMveC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLElBQUlELGdFQUFnQkEsQ0FBQyxLQUFLO0lBQzlCO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQWNDLEtBQUs7UUFBUztLQUFFO0lBQzVDO1FBQUM7UUFBUTtZQUFFRCxHQUFHO1lBQWNDLEtBQUs7UUFBUztLQUFFO0NBQzdDO0FBRXVCLENBQ3hCLDZCQUE2QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXGx1Y2lkZS1yZWFjdFxcZGlzdFxcZXNtXFxpY29uc1xceC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1NC4wIC0gSVNDXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxyXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcclxuXHJcbmNvbnN0IFggPSBjcmVhdGVMdWNpZGVJY29uKFwiWFwiLCBbXHJcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTE4IDYgNiAxOFwiLCBrZXk6IFwiMWJsNWY4XCIgfV0sXHJcbiAgW1wicGF0aFwiLCB7IGQ6IFwibTYgNiAxMiAxMlwiLCBrZXk6IFwiZDhiazZ2XCIgfV1cclxuXSk7XHJcblxyXG5leHBvcnQgeyBYIGFzIGRlZmF1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eC5qcy5tYXBcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUx1Y2lkZUljb24iLCJYIiwiZCIsImtleSIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/shared/src/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeClasses: () => (/* binding */ mergeClasses),\n/* harmony export */   toKebabCase: () => (/* binding */ toKebabCase)\n/* harmony export */ });\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = function() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    return classes.filter((className, index, array)=>{\n        return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n    }).join(\" \").trim();\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vc2hhcmVkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRUQsTUFBTUEsY0FBYyxDQUFDQyxTQUFXQSxPQUFPQyxPQUFPLENBQUMsc0JBQXNCLFNBQVNDLFdBQVc7QUFDekYsTUFBTUMsZUFBZTtxQ0FBSUM7UUFBQUE7O1dBQVlBLFFBQVFDLE1BQU0sQ0FBQyxDQUFDQyxXQUFXQyxPQUFPQztRQUNyRSxPQUFPQyxRQUFRSCxjQUFjQSxVQUFVSSxJQUFJLE9BQU8sTUFBTUYsTUFBTUcsT0FBTyxDQUFDTCxlQUFlQztJQUN2RixHQUFHSyxJQUFJLENBQUMsS0FBS0YsSUFBSTs7QUFFb0IsQ0FDckMsaUNBQWlDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXHNoYXJlZFxcc3JjXFx1dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1NC4wIC0gSVNDXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxyXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG5jb25zdCB0b0tlYmFiQ2FzZSA9IChzdHJpbmcpID0+IHN0cmluZy5yZXBsYWNlKC8oW2EtejAtOV0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpLnRvTG93ZXJDYXNlKCk7XHJcbmNvbnN0IG1lcmdlQ2xhc3NlcyA9ICguLi5jbGFzc2VzKSA9PiBjbGFzc2VzLmZpbHRlcigoY2xhc3NOYW1lLCBpbmRleCwgYXJyYXkpID0+IHtcclxuICByZXR1cm4gQm9vbGVhbihjbGFzc05hbWUpICYmIGNsYXNzTmFtZS50cmltKCkgIT09IFwiXCIgJiYgYXJyYXkuaW5kZXhPZihjbGFzc05hbWUpID09PSBpbmRleDtcclxufSkuam9pbihcIiBcIikudHJpbSgpO1xyXG5cclxuZXhwb3J0IHsgbWVyZ2VDbGFzc2VzLCB0b0tlYmFiQ2FzZSB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcclxuIl0sIm5hbWVzIjpbInRvS2ViYWJDYXNlIiwic3RyaW5nIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwibWVyZ2VDbGFzc2VzIiwiY2xhc3NlcyIsImZpbHRlciIsImNsYXNzTmFtZSIsImluZGV4IiwiYXJyYXkiLCJCb29sZWFuIiwidHJpbSIsImluZGV4T2YiLCJqb2luIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-themes/dist/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/next-themes/dist/index.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ J),\n/* harmony export */   useTheme: () => (/* binding */ z)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider,useTheme auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\nvar M = (e, i, s, u, m, a, l, h)=>{\n    let d = document.documentElement, w = [\n        \"light\",\n        \"dark\"\n    ];\n    function p(n) {\n        (Array.isArray(e) ? e : [\n            e\n        ]).forEach((y)=>{\n            let k = y === \"class\", S = k && a ? m.map((f)=>a[f] || f) : m;\n            k ? (d.classList.remove(...S), d.classList.add(a && a[n] ? a[n] : n)) : d.setAttribute(y, n);\n        }), R(n);\n    }\n    function R(n) {\n        h && w.includes(n) && (d.style.colorScheme = n);\n    }\n    function c() {\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    }\n    if (u) p(u);\n    else try {\n        let n = localStorage.getItem(i) || s, y = l && n === \"system\" ? c() : n;\n        p(y);\n    } catch (n) {}\n};\n_c = M;\nvar b = [\n    \"light\",\n    \"dark\"\n], I = \"(prefers-color-scheme: dark)\", O = \"object\" == \"undefined\", x = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0), U = {\n    setTheme: (e)=>{},\n    themes: []\n}, z = ()=>{\n    _s();\n    var e;\n    return (e = react__WEBPACK_IMPORTED_MODULE_0__.useContext(x)) != null ? e : U;\n}, J = (e)=>{\n    _s1();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(x) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, e.children) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(V, {\n        ...e\n    });\n}, N = [\n    \"light\",\n    \"dark\"\n], V = (param)=>{\n    let { forcedTheme: e, disableTransitionOnChange: i = !1, enableSystem: s = !0, enableColorScheme: u = !0, storageKey: m = \"theme\", themes: a = N, defaultTheme: l = s ? \"system\" : \"light\", attribute: h = \"data-theme\", value: d, children: w, nonce: p, scriptProps: R } = param;\n    _s2();\n    let [c, n] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        \"V.useState\": ()=>H(m, l)\n    }[\"V.useState\"]), [T, y] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        \"V.useState\": ()=>c === \"system\" ? E() : c\n    }[\"V.useState\"]), k = d ? Object.values(d) : a, S = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"V.useCallback[S]\": (o)=>{\n            let r = o;\n            if (!r) return;\n            o === \"system\" && s && (r = E());\n            let v = d ? d[r] : r, C = i ? W(p) : null, P = document.documentElement, L = {\n                \"V.useCallback[S].L\": (g)=>{\n                    g === \"class\" ? (P.classList.remove(...k), v && P.classList.add(v)) : g.startsWith(\"data-\") && (v ? P.setAttribute(g, v) : P.removeAttribute(g));\n                }\n            }[\"V.useCallback[S].L\"];\n            if (Array.isArray(h) ? h.forEach(L) : L(h), u) {\n                let g = b.includes(l) ? l : null, D = b.includes(r) ? r : g;\n                P.style.colorScheme = D;\n            }\n            C == null || C();\n        }\n    }[\"V.useCallback[S]\"], [\n        p\n    ]), f = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"V.useCallback[f]\": (o)=>{\n            let r = typeof o == \"function\" ? o(c) : o;\n            n(r);\n            try {\n                localStorage.setItem(m, r);\n            } catch (v) {}\n        }\n    }[\"V.useCallback[f]\"], [\n        c\n    ]), A = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"V.useCallback[A]\": (o)=>{\n            let r = E(o);\n            y(r), c === \"system\" && s && !e && S(\"system\");\n        }\n    }[\"V.useCallback[A]\"], [\n        c,\n        e\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"V.useEffect\": ()=>{\n            let o = window.matchMedia(I);\n            return o.addListener(A), A(o), ({\n                \"V.useEffect\": ()=>o.removeListener(A)\n            })[\"V.useEffect\"];\n        }\n    }[\"V.useEffect\"], [\n        A\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"V.useEffect\": ()=>{\n            let o = {\n                \"V.useEffect.o\": (r)=>{\n                    r.key === m && (r.newValue ? n(r.newValue) : f(l));\n                }\n            }[\"V.useEffect.o\"];\n            return window.addEventListener(\"storage\", o), ({\n                \"V.useEffect\": ()=>window.removeEventListener(\"storage\", o)\n            })[\"V.useEffect\"];\n        }\n    }[\"V.useEffect\"], [\n        f\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"V.useEffect\": ()=>{\n            S(e != null ? e : c);\n        }\n    }[\"V.useEffect\"], [\n        e,\n        c\n    ]);\n    let Q = react__WEBPACK_IMPORTED_MODULE_0__.useMemo({\n        \"V.useMemo[Q]\": ()=>({\n                theme: c,\n                setTheme: f,\n                forcedTheme: e,\n                resolvedTheme: c === \"system\" ? T : c,\n                themes: s ? [\n                    ...a,\n                    \"system\"\n                ] : a,\n                systemTheme: s ? T : void 0\n            })\n    }[\"V.useMemo[Q]\"], [\n        c,\n        f,\n        e,\n        T,\n        s,\n        a\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(x.Provider, {\n        value: Q\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_, {\n        forcedTheme: e,\n        storageKey: m,\n        attribute: h,\n        enableSystem: s,\n        enableColorScheme: u,\n        defaultTheme: l,\n        value: d,\n        themes: a,\n        nonce: p,\n        scriptProps: R\n    }), w);\n}, _ = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.memo((param)=>{\n    let { forcedTheme: e, storageKey: i, attribute: s, enableSystem: u, enableColorScheme: m, defaultTheme: a, value: l, themes: h, nonce: d, scriptProps: w } = param;\n    let p = JSON.stringify([\n        s,\n        i,\n        a,\n        e,\n        h,\n        l,\n        u,\n        m\n    ]).slice(1, -1);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"script\", {\n        ...w,\n        suppressHydrationWarning: !0,\n        nonce:  false ? 0 : \"\",\n        dangerouslySetInnerHTML: {\n            __html: \"(\".concat(M.toString(), \")(\").concat(p, \")\")\n        }\n    });\n}), H = (e, i)=>{\n    if (O) return;\n    let s;\n    try {\n        s = localStorage.getItem(e) || void 0;\n    } catch (u) {}\n    return s || i;\n}, W = (e)=>{\n    let i = document.createElement(\"style\");\n    return e && i.setAttribute(\"nonce\", e), i.appendChild(document.createTextNode(\"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")), document.head.appendChild(i), ()=>{\n        window.getComputedStyle(document.body), setTimeout(()=>{\n            document.head.removeChild(i);\n        }, 1);\n    };\n}, E = (e)=>(e || (e = window.matchMedia(I)), e.matches ? \"dark\" : \"light\");\n_s(z, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_s1(J, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_s2(V, \"UCkmxL+2pKwquH5a3QithkhUKcE=\");\n\nvar _c;\n$RefreshReg$(_c, \"M\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\r\n\r\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEO0FBQ2hEO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxhcGlcXG5hdmlnYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi4vY2xpZW50L2NvbXBvbmVudHMvbmF2aWdhdGlvbic7XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1uYXZpZ2F0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/auth/enhanced-auth-provider.tsx */ \"(app-pages-browser)/./components/auth/enhanced-auth-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/theme-provider.tsx */ \"(app-pages-browser)/./components/theme-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ui/toaster.tsx */ \"(app-pages-browser)/./components/ui/toaster.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./lib/language-context.tsx */ \"(app-pages-browser)/./lib/language-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDa2thY3AlNUMlNUNEZXNrdG9wJTVDJTVDU3BlY3RyZXNHcm91cENSTSU1QyU1Q2Rhc2hib2FyZCU1QyU1Q2FwcCU1QyU1Q2dsb2JhbHMuY3NzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2trYWNwJTVDJTVDRGVza3RvcCU1QyU1Q1NwZWN0cmVzR3JvdXBDUk0lNUMlNUNkYXNoYm9hcmQlNUMlNUNjb21wb25lbnRzJTVDJTVDYXV0aCU1QyU1Q2VuaGFuY2VkLWF1dGgtcHJvdmlkZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyRW5oYW5jZWRBdXRoUHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDa2thY3AlNUMlNUNEZXNrdG9wJTVDJTVDU3BlY3RyZXNHcm91cENSTSU1QyU1Q2Rhc2hib2FyZCU1QyU1Q2NvbXBvbmVudHMlNUMlNUN0aGVtZS1wcm92aWRlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJUaGVtZVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2trYWNwJTVDJTVDRGVza3RvcCU1QyU1Q1NwZWN0cmVzR3JvdXBDUk0lNUMlNUNkYXNoYm9hcmQlNUMlNUNjb21wb25lbnRzJTVDJTVDdWklNUMlNUN0b2FzdGVyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDa2thY3AlNUMlNUNEZXNrdG9wJTVDJTVDU3BlY3RyZXNHcm91cENSTSU1QyU1Q2Rhc2hib2FyZCU1QyU1Q2xpYiU1QyU1Q2xhbmd1YWdlLWNvbnRleHQudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyTGFuZ3VhZ2VQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNra2FjcCU1QyU1Q0Rlc2t0b3AlNUMlNUNTcGVjdHJlc0dyb3VwQ1JNJTVDJTVDZGFzaGJvYXJkJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2ZvbnQlNUMlNUNnb29nbGUlNUMlNUN0YXJnZXQuY3NzJTNGJTdCJTVDJTIycGF0aCU1QyUyMiUzQSU1QyUyMmFwcCU1QyU1QyU1QyU1Q2xheW91dC50c3glNUMlMjIlMkMlNUMlMjJpbXBvcnQlNUMlMjIlM0ElNUMlMjJJbnRlciU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnN1YnNldHMlNUMlMjIlM0ElNUIlNUMlMjJsYXRpbiU1QyUyMiU1RCU3RCU1RCUyQyU1QyUyMnZhcmlhYmxlTmFtZSU1QyUyMiUzQSU1QyUyMmludGVyJTVDJTIyJTdEJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsNEpBQTZHO0FBQzdHO0FBQ0Esa05BQW1MO0FBQ25MO0FBQ0Esd0xBQThKO0FBQzlKO0FBQ0EsZ0xBQXFKO0FBQ3JKO0FBQ0EsOEtBQTRKO0FBQzVKO0FBQ0Esc2JBQW9RIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxra2FjcFxcXFxEZXNrdG9wXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGFwcFxcXFxnbG9iYWxzLmNzc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiRW5oYW5jZWRBdXRoUHJvdmlkZXJcIl0gKi8gXCJDOlxcXFxVc2Vyc1xcXFxra2FjcFxcXFxEZXNrdG9wXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGNvbXBvbmVudHNcXFxcYXV0aFxcXFxlbmhhbmNlZC1hdXRoLXByb3ZpZGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVGhlbWVQcm92aWRlclwiXSAqLyBcIkM6XFxcXFVzZXJzXFxcXGtrYWNwXFxcXERlc2t0b3BcXFxcU3BlY3RyZXNHcm91cENSTVxcXFxkYXNoYm9hcmRcXFxcY29tcG9uZW50c1xcXFx0aGVtZS1wcm92aWRlci50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIlRvYXN0ZXJcIl0gKi8gXCJDOlxcXFxVc2Vyc1xcXFxra2FjcFxcXFxEZXNrdG9wXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGNvbXBvbmVudHNcXFxcdWlcXFxcdG9hc3Rlci50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIkxhbmd1YWdlUHJvdmlkZXJcIl0gKi8gXCJDOlxcXFxVc2Vyc1xcXFxra2FjcFxcXFxEZXNrdG9wXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGxpYlxcXFxsYW5ndWFnZS1jb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxca2thY3BcXFxcRGVza3RvcFxcXFxTcGVjdHJlc0dyb3VwQ1JNXFxcXGRhc2hib2FyZFxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxmb250XFxcXGdvb2dsZVxcXFx0YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcImFwcFxcXFxcXFxcbGF5b3V0LnRzeFxcXCIsXFxcImltcG9ydFxcXCI6XFxcIkludGVyXFxcIixcXFwiYXJndW1lbnRzXFxcIjpbe1xcXCJzdWJzZXRzXFxcIjpbXFxcImxhdGluXFxcIl19XSxcXFwidmFyaWFibGVOYW1lXFxcIjpcXFwiaW50ZXJcXFwifVwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\r\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={529:(e,r,t)=>{var n=t(191);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},191:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(529);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGNvbXBpbGVkXFxtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxcaG1yXFxob3RNb2R1bGVSZXBsYWNlbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIoKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZT17NTI5OihlLHIsdCk9Pnt2YXIgbj10KDE5MSk7dmFyIGk9T2JqZWN0LmNyZWF0ZShudWxsKTt2YXIgYT10eXBlb2YgZG9jdW1lbnQ9PT1cInVuZGVmaW5lZFwiO3ZhciBvPUFycmF5LnByb3RvdHlwZS5mb3JFYWNoO2Z1bmN0aW9uIGRlYm91bmNlKGUscil7dmFyIHQ9MDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj10aGlzO3ZhciBpPWFyZ3VtZW50czt2YXIgYT1mdW5jdGlvbiBmdW5jdGlvbkNhbGwoKXtyZXR1cm4gZS5hcHBseShuLGkpfTtjbGVhclRpbWVvdXQodCk7dD1zZXRUaW1lb3V0KGEscil9fWZ1bmN0aW9uIG5vb3AoKXt9ZnVuY3Rpb24gZ2V0Q3VycmVudFNjcmlwdFVybChlKXt2YXIgcj1pW2VdO2lmKCFyKXtpZihkb2N1bWVudC5jdXJyZW50U2NyaXB0KXtyPWRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjfWVsc2V7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7dmFyIGE9dFt0Lmxlbmd0aC0xXTtpZihhKXtyPWEuc3JjfX1pW2VdPXJ9cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKCFyKXtyZXR1cm4gbnVsbH12YXIgdD1yLnNwbGl0KC8oW15cXFxcL10rKVxcLmpzJC8pO3ZhciBpPXQmJnRbMV07aWYoIWkpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfWlmKCFlKXtyZXR1cm5bci5yZXBsYWNlKFwiLmpzXCIsXCIuY3NzXCIpXX1yZXR1cm4gZS5zcGxpdChcIixcIikubWFwKChmdW5jdGlvbihlKXt2YXIgdD1uZXcgUmVnRXhwKFwiXCIuY29uY2F0KGksXCJcXFxcLmpzJFwiKSxcImdcIik7cmV0dXJuIG4oci5yZXBsYWNlKHQsXCJcIi5jb25jYXQoZS5yZXBsYWNlKC97ZmlsZU5hbWV9L2csaSksXCIuY3NzXCIpKSl9KSl9fWZ1bmN0aW9uIHVwZGF0ZUNzcyhlLHIpe2lmKCFyKXtpZighZS5ocmVmKXtyZXR1cm59cj1lLmhyZWYuc3BsaXQoXCI/XCIpWzBdfWlmKCFpc1VybFJlcXVlc3Qocikpe3JldHVybn1pZihlLmlzTG9hZGVkPT09ZmFsc2Upe3JldHVybn1pZighcnx8IShyLmluZGV4T2YoXCIuY3NzXCIpPi0xKSl7cmV0dXJufWUudmlzaXRlZD10cnVlO3ZhciB0PWUuY2xvbmVOb2RlKCk7dC5pc0xvYWRlZD1mYWxzZTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7aWYodC5pc0xvYWRlZCl7cmV0dXJufXQuaXNMb2FkZWQ9dHJ1ZTtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9KSk7dC5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmhyZWY9XCJcIi5jb25jYXQocixcIj9cIikuY29uY2F0KERhdGUubm93KCkpO2lmKGUubmV4dFNpYmxpbmcpe2UucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodCxlLm5leHRTaWJsaW5nKX1lbHNle2UucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh0KX19ZnVuY3Rpb24gZ2V0UmVsb2FkVXJsKGUscil7dmFyIHQ7ZT1uKGUse3N0cmlwV1dXOmZhbHNlfSk7ci5zb21lKChmdW5jdGlvbihuKXtpZihlLmluZGV4T2Yocik+LTEpe3Q9bn19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkU3R5bGUoZSl7aWYoIWUpe3JldHVybiBmYWxzZX12YXIgcj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwibGlua1wiKTt2YXIgdD1mYWxzZTtvLmNhbGwociwoZnVuY3Rpb24ocil7aWYoIXIuaHJlZil7cmV0dXJufXZhciBuPWdldFJlbG9hZFVybChyLmhyZWYsZSk7aWYoIWlzVXJsUmVxdWVzdChuKSl7cmV0dXJufWlmKHIudmlzaXRlZD09PXRydWUpe3JldHVybn1pZihuKXt1cGRhdGVDc3MocixuKTt0PXRydWV9fSkpO3JldHVybiB0fWZ1bmN0aW9uIHJlbG9hZEFsbCgpe3ZhciBlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO28uY2FsbChlLChmdW5jdGlvbihlKXtpZihlLnZpc2l0ZWQ9PT10cnVlKXtyZXR1cm59dXBkYXRlQ3NzKGUpfSkpfWZ1bmN0aW9uIGlzVXJsUmVxdWVzdChlKXtpZighL15bYS16QS1aXVthLXpBLVpcXGQrXFwtLl0qOi8udGVzdChlKSl7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfWUuZXhwb3J0cz1mdW5jdGlvbihlLHIpe2lmKGEpe2NvbnNvbGUubG9nKFwibm8gd2luZG93LmRvY3VtZW50IGZvdW5kLCB3aWxsIG5vdCBITVIgQ1NTXCIpO3JldHVybiBub29wfXZhciB0PWdldEN1cnJlbnRTY3JpcHRVcmwoZSk7ZnVuY3Rpb24gdXBkYXRlKCl7dmFyIGU9dChyLmZpbGVuYW1lKTt2YXIgbj1yZWxvYWRTdHlsZShlKTtpZihyLmxvY2Fscyl7Y29uc29sZS5sb2coXCJbSE1SXSBEZXRlY3RlZCBsb2NhbCBjc3MgbW9kdWxlcy4gUmVsb2FkIGFsbCBjc3NcIik7cmVsb2FkQWxsKCk7cmV0dXJufWlmKG4pe2NvbnNvbGUubG9nKFwiW0hNUl0gY3NzIHJlbG9hZCAlc1wiLGUuam9pbihcIiBcIikpfWVsc2V7Y29uc29sZS5sb2coXCJbSE1SXSBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKX19cmV0dXJuIGRlYm91bmNlKHVwZGF0ZSw1MCl9fSwxOTE6ZT0+e2Z1bmN0aW9uIG5vcm1hbGl6ZVVybChlKXtyZXR1cm4gZS5yZWR1Y2UoKGZ1bmN0aW9uKGUscil7c3dpdGNoKHIpe2Nhc2VcIi4uXCI6ZS5wb3AoKTticmVhaztjYXNlXCIuXCI6YnJlYWs7ZGVmYXVsdDplLnB1c2gocil9cmV0dXJuIGV9KSxbXSkuam9pbihcIi9cIil9ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2U9ZS50cmltKCk7aWYoL15kYXRhOi9pLnRlc3QoZSkpe3JldHVybiBlfXZhciByPWUuaW5kZXhPZihcIi8vXCIpIT09LTE/ZS5zcGxpdChcIi8vXCIpWzBdK1wiLy9cIjpcIlwiO3ZhciB0PWUucmVwbGFjZShuZXcgUmVnRXhwKHIsXCJpXCIpLFwiXCIpLnNwbGl0KFwiL1wiKTt2YXIgbj10WzBdLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXFwuJC8sXCJcIik7dFswXT1cIlwiO3ZhciBpPW5vcm1hbGl6ZVVybCh0KTtyZXR1cm4gcituK2l9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyh0KXt2YXIgbj1yW3RdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9clt0XT17ZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVt0XShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgclt0XX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgdD1fX25jY3dwY2tfcmVxdWlyZV9fKDUyOSk7bW9kdWxlLmV4cG9ydHM9dH0pKCk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\r\n * @license React\r\n * react-jsx-dev-runtime.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n true &&\r\n  (function () {\r\n    function getComponentNameFromType(type) {\r\n      if (null == type) return null;\r\n      if (\"function\" === typeof type)\r\n        return type.$$typeof === REACT_CLIENT_REFERENCE\r\n          ? null\r\n          : type.displayName || type.name || null;\r\n      if (\"string\" === typeof type) return type;\r\n      switch (type) {\r\n        case REACT_FRAGMENT_TYPE:\r\n          return \"Fragment\";\r\n        case REACT_PORTAL_TYPE:\r\n          return \"Portal\";\r\n        case REACT_PROFILER_TYPE:\r\n          return \"Profiler\";\r\n        case REACT_STRICT_MODE_TYPE:\r\n          return \"StrictMode\";\r\n        case REACT_SUSPENSE_TYPE:\r\n          return \"Suspense\";\r\n        case REACT_SUSPENSE_LIST_TYPE:\r\n          return \"SuspenseList\";\r\n      }\r\n      if (\"object\" === typeof type)\r\n        switch (\r\n          (\"number\" === typeof type.tag &&\r\n            console.error(\r\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\r\n            ),\r\n          type.$$typeof)\r\n        ) {\r\n          case REACT_CONTEXT_TYPE:\r\n            return (type.displayName || \"Context\") + \".Provider\";\r\n          case REACT_CONSUMER_TYPE:\r\n            return (type._context.displayName || \"Context\") + \".Consumer\";\r\n          case REACT_FORWARD_REF_TYPE:\r\n            var innerType = type.render;\r\n            type = type.displayName;\r\n            type ||\r\n              ((type = innerType.displayName || innerType.name || \"\"),\r\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\r\n            return type;\r\n          case REACT_MEMO_TYPE:\r\n            return (\r\n              (innerType = type.displayName || null),\r\n              null !== innerType\r\n                ? innerType\r\n                : getComponentNameFromType(type.type) || \"Memo\"\r\n            );\r\n          case REACT_LAZY_TYPE:\r\n            innerType = type._payload;\r\n            type = type._init;\r\n            try {\r\n              return getComponentNameFromType(type(innerType));\r\n            } catch (x) {}\r\n        }\r\n      return null;\r\n    }\r\n    function testStringCoercion(value) {\r\n      return \"\" + value;\r\n    }\r\n    function checkKeyStringCoercion(value) {\r\n      try {\r\n        testStringCoercion(value);\r\n        var JSCompiler_inline_result = !1;\r\n      } catch (e) {\r\n        JSCompiler_inline_result = !0;\r\n      }\r\n      if (JSCompiler_inline_result) {\r\n        JSCompiler_inline_result = console;\r\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\r\n        var JSCompiler_inline_result$jscomp$0 =\r\n          (\"function\" === typeof Symbol &&\r\n            Symbol.toStringTag &&\r\n            value[Symbol.toStringTag]) ||\r\n          value.constructor.name ||\r\n          \"Object\";\r\n        JSCompiler_temp_const.call(\r\n          JSCompiler_inline_result,\r\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\r\n          JSCompiler_inline_result$jscomp$0\r\n        );\r\n        return testStringCoercion(value);\r\n      }\r\n    }\r\n    function getTaskName(type) {\r\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\r\n      if (\r\n        \"object\" === typeof type &&\r\n        null !== type &&\r\n        type.$$typeof === REACT_LAZY_TYPE\r\n      )\r\n        return \"<...>\";\r\n      try {\r\n        var name = getComponentNameFromType(type);\r\n        return name ? \"<\" + name + \">\" : \"<...>\";\r\n      } catch (x) {\r\n        return \"<...>\";\r\n      }\r\n    }\r\n    function getOwner() {\r\n      var dispatcher = ReactSharedInternals.A;\r\n      return null === dispatcher ? null : dispatcher.getOwner();\r\n    }\r\n    function hasValidKey(config) {\r\n      if (hasOwnProperty.call(config, \"key\")) {\r\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\r\n        if (getter && getter.isReactWarning) return !1;\r\n      }\r\n      return void 0 !== config.key;\r\n    }\r\n    function defineKeyPropWarningGetter(props, displayName) {\r\n      function warnAboutAccessingKey() {\r\n        specialPropKeyWarningShown ||\r\n          ((specialPropKeyWarningShown = !0),\r\n          console.error(\r\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\r\n            displayName\r\n          ));\r\n      }\r\n      warnAboutAccessingKey.isReactWarning = !0;\r\n      Object.defineProperty(props, \"key\", {\r\n        get: warnAboutAccessingKey,\r\n        configurable: !0\r\n      });\r\n    }\r\n    function elementRefGetterWithDeprecationWarning() {\r\n      var componentName = getComponentNameFromType(this.type);\r\n      didWarnAboutElementRef[componentName] ||\r\n        ((didWarnAboutElementRef[componentName] = !0),\r\n        console.error(\r\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\r\n        ));\r\n      componentName = this.props.ref;\r\n      return void 0 !== componentName ? componentName : null;\r\n    }\r\n    function ReactElement(\r\n      type,\r\n      key,\r\n      self,\r\n      source,\r\n      owner,\r\n      props,\r\n      debugStack,\r\n      debugTask\r\n    ) {\r\n      self = props.ref;\r\n      type = {\r\n        $$typeof: REACT_ELEMENT_TYPE,\r\n        type: type,\r\n        key: key,\r\n        props: props,\r\n        _owner: owner\r\n      };\r\n      null !== (void 0 !== self ? self : null)\r\n        ? Object.defineProperty(type, \"ref\", {\r\n            enumerable: !1,\r\n            get: elementRefGetterWithDeprecationWarning\r\n          })\r\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\r\n      type._store = {};\r\n      Object.defineProperty(type._store, \"validated\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: 0\r\n      });\r\n      Object.defineProperty(type, \"_debugInfo\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: null\r\n      });\r\n      Object.defineProperty(type, \"_debugStack\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugStack\r\n      });\r\n      Object.defineProperty(type, \"_debugTask\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugTask\r\n      });\r\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\r\n      return type;\r\n    }\r\n    function jsxDEVImpl(\r\n      type,\r\n      config,\r\n      maybeKey,\r\n      isStaticChildren,\r\n      source,\r\n      self,\r\n      debugStack,\r\n      debugTask\r\n    ) {\r\n      var children = config.children;\r\n      if (void 0 !== children)\r\n        if (isStaticChildren)\r\n          if (isArrayImpl(children)) {\r\n            for (\r\n              isStaticChildren = 0;\r\n              isStaticChildren < children.length;\r\n              isStaticChildren++\r\n            )\r\n              validateChildKeys(children[isStaticChildren]);\r\n            Object.freeze && Object.freeze(children);\r\n          } else\r\n            console.error(\r\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\r\n            );\r\n        else validateChildKeys(children);\r\n      if (hasOwnProperty.call(config, \"key\")) {\r\n        children = getComponentNameFromType(type);\r\n        var keys = Object.keys(config).filter(function (k) {\r\n          return \"key\" !== k;\r\n        });\r\n        isStaticChildren =\r\n          0 < keys.length\r\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\r\n            : \"{key: someKey}\";\r\n        didWarnAboutKeySpread[children + isStaticChildren] ||\r\n          ((keys =\r\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\r\n          console.error(\r\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\r\n            isStaticChildren,\r\n            children,\r\n            keys,\r\n            children\r\n          ),\r\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\r\n      }\r\n      children = null;\r\n      void 0 !== maybeKey &&\r\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\r\n      hasValidKey(config) &&\r\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\r\n      if (\"key\" in config) {\r\n        maybeKey = {};\r\n        for (var propName in config)\r\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\r\n      } else maybeKey = config;\r\n      children &&\r\n        defineKeyPropWarningGetter(\r\n          maybeKey,\r\n          \"function\" === typeof type\r\n            ? type.displayName || type.name || \"Unknown\"\r\n            : type\r\n        );\r\n      return ReactElement(\r\n        type,\r\n        children,\r\n        self,\r\n        source,\r\n        getOwner(),\r\n        maybeKey,\r\n        debugStack,\r\n        debugTask\r\n      );\r\n    }\r\n    function validateChildKeys(node) {\r\n      \"object\" === typeof node &&\r\n        null !== node &&\r\n        node.$$typeof === REACT_ELEMENT_TYPE &&\r\n        node._store &&\r\n        (node._store.validated = 1);\r\n    }\r\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\r\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\r\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\r\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\r\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\r\n    Symbol.for(\"react.provider\");\r\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\r\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\r\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\r\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\r\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\r\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\r\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\r\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\r\n      ReactSharedInternals =\r\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\r\n      hasOwnProperty = Object.prototype.hasOwnProperty,\r\n      isArrayImpl = Array.isArray,\r\n      createTask = console.createTask\r\n        ? console.createTask\r\n        : function () {\r\n            return null;\r\n          },\r\n      specialPropKeyWarningShown;\r\n    var didWarnAboutElementRef = {};\r\n    var didWarnAboutKeySpread = {};\r\n    exports.Fragment = REACT_FRAGMENT_TYPE;\r\n    exports.jsxDEV = function (\r\n      type,\r\n      config,\r\n      maybeKey,\r\n      isStaticChildren,\r\n      source,\r\n      self\r\n    ) {\r\n      return jsxDEVImpl(\r\n        type,\r\n        config,\r\n        maybeKey,\r\n        isStaticChildren,\r\n        source,\r\n        self,\r\n        Error(\"react-stack-top-frame\"),\r\n        createTask(getTaskName(type))\r\n      );\r\n    };\r\n  })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nif (false) {} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsOExBQXNFO0FBQ3hFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcY29tcGlsZWRcXHJlYWN0XFxqc3gtZGV2LXJ1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \*********************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'Inter', 'Inter Fallback'\",\"fontStyle\":\"normal\"},\"className\":\"__className_e8ce0c\"};\n    if(true) {\n      // 1750226292783\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwXFxcXGxheW91dC50c3hcIixcImltcG9ydFwiOlwiSW50ZXJcIixcImFyZ3VtZW50c1wiOlt7XCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwiaW50ZXJcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyw4REFBOEQ7QUFDekYsT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQXVJLGNBQWMsc0RBQXNEO0FBQ3pPLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxuZXh0XFxmb250XFxnb29nbGVcXHRhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwXFxsYXlvdXQudHN4XCIsXCJpbXBvcnRcIjpcIkludGVyXCIsXCJhcmd1bWVudHNcIjpbe1wic3Vic2V0c1wiOltcImxhdGluXCJdfV0sXCJ2YXJpYWJsZU5hbWVcIjpcImludGVyXCJ9fGFwcC1wYWdlcy1icm93c2VyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidJbnRlcicsICdJbnRlciBGYWxsYmFjaydcIixcImZvbnRTdHlsZVwiOlwibm9ybWFsXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV9lOGNlMGNcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTc1MDIyNjI5Mjc4M1xuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJDOi9Vc2Vycy9ra2FjcC9EZXNrdG9wL1NwZWN0cmVzR3JvdXBDUk0vZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/tailwind-merge/dist/bundle-mjs.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTailwindMerge: () => (/* binding */ createTailwindMerge),\n/* harmony export */   extendTailwindMerge: () => (/* binding */ extendTailwindMerge),\n/* harmony export */   fromTheme: () => (/* binding */ fromTheme),\n/* harmony export */   getDefaultConfig: () => (/* binding */ getDefaultConfig),\n/* harmony export */   mergeConfigs: () => (/* binding */ mergeConfigs),\n/* harmony export */   twJoin: () => (/* binding */ twJoin),\n/* harmony export */   twMerge: () => (/* binding */ twMerge),\n/* harmony export */   validators: () => (/* binding */ validators)\n/* harmony export */ });\nconst CLASS_PART_SEPARATOR = '-';\r\nconst createClassGroupUtils = config => {\r\n  const classMap = createClassMap(config);\r\n  const {\r\n    conflictingClassGroups,\r\n    conflictingClassGroupModifiers\r\n  } = config;\r\n  const getClassGroupId = className => {\r\n    const classParts = className.split(CLASS_PART_SEPARATOR);\r\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\r\n    if (classParts[0] === '' && classParts.length !== 1) {\r\n      classParts.shift();\r\n    }\r\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\r\n  };\r\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\r\n    const conflicts = conflictingClassGroups[classGroupId] || [];\r\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\r\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\r\n    }\r\n    return conflicts;\r\n  };\r\n  return {\r\n    getClassGroupId,\r\n    getConflictingClassGroupIds\r\n  };\r\n};\r\nconst getGroupRecursive = (classParts, classPartObject) => {\r\n  if (classParts.length === 0) {\r\n    return classPartObject.classGroupId;\r\n  }\r\n  const currentClassPart = classParts[0];\r\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\r\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\r\n  if (classGroupFromNextClassPart) {\r\n    return classGroupFromNextClassPart;\r\n  }\r\n  if (classPartObject.validators.length === 0) {\r\n    return undefined;\r\n  }\r\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\r\n  return classPartObject.validators.find(({\r\n    validator\r\n  }) => validator(classRest))?.classGroupId;\r\n};\r\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\r\nconst getGroupIdForArbitraryProperty = className => {\r\n  if (arbitraryPropertyRegex.test(className)) {\r\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\r\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\r\n    if (property) {\r\n      // I use two dots here because one dot is used as prefix for class groups in plugins\r\n      return 'arbitrary..' + property;\r\n    }\r\n  }\r\n};\r\n/**\r\n * Exported for testing only\r\n */\r\nconst createClassMap = config => {\r\n  const {\r\n    theme,\r\n    prefix\r\n  } = config;\r\n  const classMap = {\r\n    nextPart: new Map(),\r\n    validators: []\r\n  };\r\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\r\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\r\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\r\n  });\r\n  return classMap;\r\n};\r\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\r\n  classGroup.forEach(classDefinition => {\r\n    if (typeof classDefinition === 'string') {\r\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\r\n      classPartObjectToEdit.classGroupId = classGroupId;\r\n      return;\r\n    }\r\n    if (typeof classDefinition === 'function') {\r\n      if (isThemeGetter(classDefinition)) {\r\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\r\n        return;\r\n      }\r\n      classPartObject.validators.push({\r\n        validator: classDefinition,\r\n        classGroupId\r\n      });\r\n      return;\r\n    }\r\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\r\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\r\n    });\r\n  });\r\n};\r\nconst getPart = (classPartObject, path) => {\r\n  let currentClassPartObject = classPartObject;\r\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\r\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\r\n      currentClassPartObject.nextPart.set(pathPart, {\r\n        nextPart: new Map(),\r\n        validators: []\r\n      });\r\n    }\r\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\r\n  });\r\n  return currentClassPartObject;\r\n};\r\nconst isThemeGetter = func => func.isThemeGetter;\r\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\r\n  if (!prefix) {\r\n    return classGroupEntries;\r\n  }\r\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\r\n    const prefixedClassGroup = classGroup.map(classDefinition => {\r\n      if (typeof classDefinition === 'string') {\r\n        return prefix + classDefinition;\r\n      }\r\n      if (typeof classDefinition === 'object') {\r\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\r\n      }\r\n      return classDefinition;\r\n    });\r\n    return [classGroupId, prefixedClassGroup];\r\n  });\r\n};\r\n\r\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\r\nconst createLruCache = maxCacheSize => {\r\n  if (maxCacheSize < 1) {\r\n    return {\r\n      get: () => undefined,\r\n      set: () => {}\r\n    };\r\n  }\r\n  let cacheSize = 0;\r\n  let cache = new Map();\r\n  let previousCache = new Map();\r\n  const update = (key, value) => {\r\n    cache.set(key, value);\r\n    cacheSize++;\r\n    if (cacheSize > maxCacheSize) {\r\n      cacheSize = 0;\r\n      previousCache = cache;\r\n      cache = new Map();\r\n    }\r\n  };\r\n  return {\r\n    get(key) {\r\n      let value = cache.get(key);\r\n      if (value !== undefined) {\r\n        return value;\r\n      }\r\n      if ((value = previousCache.get(key)) !== undefined) {\r\n        update(key, value);\r\n        return value;\r\n      }\r\n    },\r\n    set(key, value) {\r\n      if (cache.has(key)) {\r\n        cache.set(key, value);\r\n      } else {\r\n        update(key, value);\r\n      }\r\n    }\r\n  };\r\n};\r\nconst IMPORTANT_MODIFIER = '!';\r\nconst createParseClassName = config => {\r\n  const {\r\n    separator,\r\n    experimentalParseClassName\r\n  } = config;\r\n  const isSeparatorSingleCharacter = separator.length === 1;\r\n  const firstSeparatorCharacter = separator[0];\r\n  const separatorLength = separator.length;\r\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\r\n  const parseClassName = className => {\r\n    const modifiers = [];\r\n    let bracketDepth = 0;\r\n    let modifierStart = 0;\r\n    let postfixModifierPosition;\r\n    for (let index = 0; index < className.length; index++) {\r\n      let currentCharacter = className[index];\r\n      if (bracketDepth === 0) {\r\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\r\n          modifiers.push(className.slice(modifierStart, index));\r\n          modifierStart = index + separatorLength;\r\n          continue;\r\n        }\r\n        if (currentCharacter === '/') {\r\n          postfixModifierPosition = index;\r\n          continue;\r\n        }\r\n      }\r\n      if (currentCharacter === '[') {\r\n        bracketDepth++;\r\n      } else if (currentCharacter === ']') {\r\n        bracketDepth--;\r\n      }\r\n    }\r\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\r\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\r\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\r\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\r\n    return {\r\n      modifiers,\r\n      hasImportantModifier,\r\n      baseClassName,\r\n      maybePostfixModifierPosition\r\n    };\r\n  };\r\n  if (experimentalParseClassName) {\r\n    return className => experimentalParseClassName({\r\n      className,\r\n      parseClassName\r\n    });\r\n  }\r\n  return parseClassName;\r\n};\r\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\r\nconst sortModifiers = modifiers => {\r\n  if (modifiers.length <= 1) {\r\n    return modifiers;\r\n  }\r\n  const sortedModifiers = [];\r\n  let unsortedModifiers = [];\r\n  modifiers.forEach(modifier => {\r\n    const isArbitraryVariant = modifier[0] === '[';\r\n    if (isArbitraryVariant) {\r\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\r\n      unsortedModifiers = [];\r\n    } else {\r\n      unsortedModifiers.push(modifier);\r\n    }\r\n  });\r\n  sortedModifiers.push(...unsortedModifiers.sort());\r\n  return sortedModifiers;\r\n};\r\nconst createConfigUtils = config => ({\r\n  cache: createLruCache(config.cacheSize),\r\n  parseClassName: createParseClassName(config),\r\n  ...createClassGroupUtils(config)\r\n});\r\nconst SPLIT_CLASSES_REGEX = /\\s+/;\r\nconst mergeClassList = (classList, configUtils) => {\r\n  const {\r\n    parseClassName,\r\n    getClassGroupId,\r\n    getConflictingClassGroupIds\r\n  } = configUtils;\r\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example 'md:!pr'\r\n   */\r\n  const classGroupsInConflict = [];\r\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\r\n  let result = '';\r\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\r\n    const originalClassName = classNames[index];\r\n    const {\r\n      modifiers,\r\n      hasImportantModifier,\r\n      baseClassName,\r\n      maybePostfixModifierPosition\r\n    } = parseClassName(originalClassName);\r\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\r\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\r\n    if (!classGroupId) {\r\n      if (!hasPostfixModifier) {\r\n        // Not a Tailwind class\r\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\r\n        continue;\r\n      }\r\n      classGroupId = getClassGroupId(baseClassName);\r\n      if (!classGroupId) {\r\n        // Not a Tailwind class\r\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\r\n        continue;\r\n      }\r\n      hasPostfixModifier = false;\r\n    }\r\n    const variantModifier = sortModifiers(modifiers).join(':');\r\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\r\n    const classId = modifierId + classGroupId;\r\n    if (classGroupsInConflict.includes(classId)) {\r\n      // Tailwind class omitted due to conflict\r\n      continue;\r\n    }\r\n    classGroupsInConflict.push(classId);\r\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\r\n    for (let i = 0; i < conflictGroups.length; ++i) {\r\n      const group = conflictGroups[i];\r\n      classGroupsInConflict.push(modifierId + group);\r\n    }\r\n    // Tailwind class not in conflict\r\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\r\nfunction twJoin() {\r\n  let index = 0;\r\n  let argument;\r\n  let resolvedValue;\r\n  let string = '';\r\n  while (index < arguments.length) {\r\n    if (argument = arguments[index++]) {\r\n      if (resolvedValue = toValue(argument)) {\r\n        string && (string += ' ');\r\n        string += resolvedValue;\r\n      }\r\n    }\r\n  }\r\n  return string;\r\n}\r\nconst toValue = mix => {\r\n  if (typeof mix === 'string') {\r\n    return mix;\r\n  }\r\n  let resolvedValue;\r\n  let string = '';\r\n  for (let k = 0; k < mix.length; k++) {\r\n    if (mix[k]) {\r\n      if (resolvedValue = toValue(mix[k])) {\r\n        string && (string += ' ');\r\n        string += resolvedValue;\r\n      }\r\n    }\r\n  }\r\n  return string;\r\n};\r\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\r\n  let configUtils;\r\n  let cacheGet;\r\n  let cacheSet;\r\n  let functionToCall = initTailwindMerge;\r\n  function initTailwindMerge(classList) {\r\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\r\n    configUtils = createConfigUtils(config);\r\n    cacheGet = configUtils.cache.get;\r\n    cacheSet = configUtils.cache.set;\r\n    functionToCall = tailwindMerge;\r\n    return tailwindMerge(classList);\r\n  }\r\n  function tailwindMerge(classList) {\r\n    const cachedResult = cacheGet(classList);\r\n    if (cachedResult) {\r\n      return cachedResult;\r\n    }\r\n    const result = mergeClassList(classList, configUtils);\r\n    cacheSet(classList, result);\r\n    return result;\r\n  }\r\n  return function callTailwindMerge() {\r\n    return functionToCall(twJoin.apply(null, arguments));\r\n  };\r\n}\r\nconst fromTheme = key => {\r\n  const themeGetter = theme => theme[key] || [];\r\n  themeGetter.isThemeGetter = true;\r\n  return themeGetter;\r\n};\r\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\r\nconst fractionRegex = /^\\d+\\/\\d+$/;\r\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\r\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\r\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\r\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\r\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\r\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\r\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\r\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\r\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\r\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\r\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\r\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\r\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\r\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\r\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\r\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\r\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\r\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\r\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\r\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\r\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\r\nconst isAny = () => true;\r\nconst getIsArbitraryValue = (value, label, testValue) => {\r\n  const result = arbitraryValueRegex.exec(value);\r\n  if (result) {\r\n    if (result[1]) {\r\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\r\n    }\r\n    return testValue(result[2]);\r\n  }\r\n  return false;\r\n};\r\nconst isLengthOnly = value =>\r\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\r\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\r\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\r\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\r\nconst isNever = () => false;\r\nconst isShadow = value => shadowRegex.test(value);\r\nconst isImage = value => imageRegex.test(value);\r\nconst validators = /*#__PURE__*/Object.defineProperty({\r\n  __proto__: null,\r\n  isAny,\r\n  isArbitraryImage,\r\n  isArbitraryLength,\r\n  isArbitraryNumber,\r\n  isArbitraryPosition,\r\n  isArbitraryShadow,\r\n  isArbitrarySize,\r\n  isArbitraryValue,\r\n  isInteger,\r\n  isLength,\r\n  isNumber,\r\n  isPercent,\r\n  isTshirtSize\r\n}, Symbol.toStringTag, {\r\n  value: 'Module'\r\n});\r\nconst getDefaultConfig = () => {\r\n  const colors = fromTheme('colors');\r\n  const spacing = fromTheme('spacing');\r\n  const blur = fromTheme('blur');\r\n  const brightness = fromTheme('brightness');\r\n  const borderColor = fromTheme('borderColor');\r\n  const borderRadius = fromTheme('borderRadius');\r\n  const borderSpacing = fromTheme('borderSpacing');\r\n  const borderWidth = fromTheme('borderWidth');\r\n  const contrast = fromTheme('contrast');\r\n  const grayscale = fromTheme('grayscale');\r\n  const hueRotate = fromTheme('hueRotate');\r\n  const invert = fromTheme('invert');\r\n  const gap = fromTheme('gap');\r\n  const gradientColorStops = fromTheme('gradientColorStops');\r\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\r\n  const inset = fromTheme('inset');\r\n  const margin = fromTheme('margin');\r\n  const opacity = fromTheme('opacity');\r\n  const padding = fromTheme('padding');\r\n  const saturate = fromTheme('saturate');\r\n  const scale = fromTheme('scale');\r\n  const sepia = fromTheme('sepia');\r\n  const skew = fromTheme('skew');\r\n  const space = fromTheme('space');\r\n  const translate = fromTheme('translate');\r\n  const getOverscroll = () => ['auto', 'contain', 'none'];\r\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\r\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\r\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\r\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\r\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\r\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\r\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\r\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\r\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\r\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\r\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\r\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\r\n  return {\r\n    cacheSize: 500,\r\n    separator: ':',\r\n    theme: {\r\n      colors: [isAny],\r\n      spacing: [isLength, isArbitraryLength],\r\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\r\n      brightness: getNumberAndArbitrary(),\r\n      borderColor: [colors],\r\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\r\n      borderSpacing: getSpacingWithArbitrary(),\r\n      borderWidth: getLengthWithEmptyAndArbitrary(),\r\n      contrast: getNumberAndArbitrary(),\r\n      grayscale: getZeroAndEmpty(),\r\n      hueRotate: getNumberAndArbitrary(),\r\n      invert: getZeroAndEmpty(),\r\n      gap: getSpacingWithArbitrary(),\r\n      gradientColorStops: [colors],\r\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\r\n      inset: getSpacingWithAutoAndArbitrary(),\r\n      margin: getSpacingWithAutoAndArbitrary(),\r\n      opacity: getNumberAndArbitrary(),\r\n      padding: getSpacingWithArbitrary(),\r\n      saturate: getNumberAndArbitrary(),\r\n      scale: getNumberAndArbitrary(),\r\n      sepia: getZeroAndEmpty(),\r\n      skew: getNumberAndArbitrary(),\r\n      space: getSpacingWithArbitrary(),\r\n      translate: getSpacingWithArbitrary()\r\n    },\r\n    classGroups: {\r\n      // Layout\r\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\r\n      aspect: [{\r\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\r\n      container: ['container'],\r\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\r\n      columns: [{\r\n        columns: [isTshirtSize]\r\n      }],\r\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\r\n      'break-after': [{\r\n        'break-after': getBreaks()\r\n      }],\r\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\r\n      'break-before': [{\r\n        'break-before': getBreaks()\r\n      }],\r\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\r\n      'break-inside': [{\r\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\r\n      }],\r\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\r\n      'box-decoration': [{\r\n        'box-decoration': ['slice', 'clone']\r\n      }],\r\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\r\n      box: [{\r\n        box: ['border', 'content']\r\n      }],\r\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\r\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\r\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\r\n      float: [{\r\n        float: ['right', 'left', 'none', 'start', 'end']\r\n      }],\r\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\r\n      clear: [{\r\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\r\n      }],\r\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\r\n      isolation: ['isolate', 'isolation-auto'],\r\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\r\n      'object-fit': [{\r\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\r\n      }],\r\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\r\n      'object-position': [{\r\n        object: [...getPositions(), isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\r\n      overflow: [{\r\n        overflow: getOverflow()\r\n      }],\r\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\r\n      'overflow-x': [{\r\n        'overflow-x': getOverflow()\r\n      }],\r\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\r\n      'overflow-y': [{\r\n        'overflow-y': getOverflow()\r\n      }],\r\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\r\n      overscroll: [{\r\n        overscroll: getOverscroll()\r\n      }],\r\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\r\n      'overscroll-x': [{\r\n        'overscroll-x': getOverscroll()\r\n      }],\r\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\r\n      'overscroll-y': [{\r\n        'overscroll-y': getOverscroll()\r\n      }],\r\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\r\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\r\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      inset: [{\r\n        inset: [inset]\r\n      }],\r\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      'inset-x': [{\r\n        'inset-x': [inset]\r\n      }],\r\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      'inset-y': [{\r\n        'inset-y': [inset]\r\n      }],\r\n      /**\r\n       * Start\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      start: [{\r\n        start: [inset]\r\n      }],\r\n      /**\r\n       * End\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      end: [{\r\n        end: [inset]\r\n      }],\r\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      top: [{\r\n        top: [inset]\r\n      }],\r\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      right: [{\r\n        right: [inset]\r\n      }],\r\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      bottom: [{\r\n        bottom: [inset]\r\n      }],\r\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      left: [{\r\n        left: [inset]\r\n      }],\r\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\r\n      visibility: ['visible', 'invisible', 'collapse'],\r\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\r\n      z: [{\r\n        z: ['auto', isInteger, isArbitraryValue]\r\n      }],\r\n      // Flexbox and Grid\r\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\r\n      basis: [{\r\n        basis: getSpacingWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\r\n      'flex-direction': [{\r\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\r\n      }],\r\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\r\n      'flex-wrap': [{\r\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\r\n      }],\r\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\r\n      flex: [{\r\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\r\n      grow: [{\r\n        grow: getZeroAndEmpty()\r\n      }],\r\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\r\n      shrink: [{\r\n        shrink: getZeroAndEmpty()\r\n      }],\r\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\r\n      order: [{\r\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\r\n      'grid-cols': [{\r\n        'grid-cols': [isAny]\r\n      }],\r\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\r\n      'col-start-end': [{\r\n        col: ['auto', {\r\n          span: ['full', isInteger, isArbitraryValue]\r\n        }, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\r\n      'col-start': [{\r\n        'col-start': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\r\n      'col-end': [{\r\n        'col-end': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\r\n      'grid-rows': [{\r\n        'grid-rows': [isAny]\r\n      }],\r\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\r\n      'row-start-end': [{\r\n        row: ['auto', {\r\n          span: [isInteger, isArbitraryValue]\r\n        }, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\r\n      'row-start': [{\r\n        'row-start': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\r\n      'row-end': [{\r\n        'row-end': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\r\n      'grid-flow': [{\r\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\r\n      }],\r\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\r\n      'auto-cols': [{\r\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\r\n      'auto-rows': [{\r\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\r\n      gap: [{\r\n        gap: [gap]\r\n      }],\r\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\r\n      'gap-x': [{\r\n        'gap-x': [gap]\r\n      }],\r\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\r\n      'gap-y': [{\r\n        'gap-y': [gap]\r\n      }],\r\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\r\n      'justify-content': [{\r\n        justify: ['normal', ...getAlign()]\r\n      }],\r\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\r\n      'justify-items': [{\r\n        'justify-items': ['start', 'end', 'center', 'stretch']\r\n      }],\r\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\r\n      'justify-self': [{\r\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\r\n      }],\r\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\r\n      'align-content': [{\r\n        content: ['normal', ...getAlign(), 'baseline']\r\n      }],\r\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\r\n      'align-items': [{\r\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\r\n      }],\r\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\r\n      'align-self': [{\r\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\r\n      }],\r\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\r\n      'place-content': [{\r\n        'place-content': [...getAlign(), 'baseline']\r\n      }],\r\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\r\n      'place-items': [{\r\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\r\n      }],\r\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\r\n      'place-self': [{\r\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\r\n      }],\r\n      // Spacing\r\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      p: [{\r\n        p: [padding]\r\n      }],\r\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      px: [{\r\n        px: [padding]\r\n      }],\r\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      py: [{\r\n        py: [padding]\r\n      }],\r\n      /**\r\n       * Padding Start\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      ps: [{\r\n        ps: [padding]\r\n      }],\r\n      /**\r\n       * Padding End\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pe: [{\r\n        pe: [padding]\r\n      }],\r\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pt: [{\r\n        pt: [padding]\r\n      }],\r\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pr: [{\r\n        pr: [padding]\r\n      }],\r\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pb: [{\r\n        pb: [padding]\r\n      }],\r\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pl: [{\r\n        pl: [padding]\r\n      }],\r\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      m: [{\r\n        m: [margin]\r\n      }],\r\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mx: [{\r\n        mx: [margin]\r\n      }],\r\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      my: [{\r\n        my: [margin]\r\n      }],\r\n      /**\r\n       * Margin Start\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      ms: [{\r\n        ms: [margin]\r\n      }],\r\n      /**\r\n       * Margin End\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      me: [{\r\n        me: [margin]\r\n      }],\r\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mt: [{\r\n        mt: [margin]\r\n      }],\r\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mr: [{\r\n        mr: [margin]\r\n      }],\r\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mb: [{\r\n        mb: [margin]\r\n      }],\r\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      ml: [{\r\n        ml: [margin]\r\n      }],\r\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-x': [{\r\n        'space-x': [space]\r\n      }],\r\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-x-reverse': ['space-x-reverse'],\r\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-y': [{\r\n        'space-y': [space]\r\n      }],\r\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-y-reverse': ['space-y-reverse'],\r\n      // Sizing\r\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\r\n      w: [{\r\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\r\n      }],\r\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\r\n      'min-w': [{\r\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\r\n      }],\r\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\r\n      'max-w': [{\r\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\r\n          screen: [isTshirtSize]\r\n        }, isTshirtSize]\r\n      }],\r\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\r\n      h: [{\r\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\r\n      }],\r\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\r\n      'min-h': [{\r\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\r\n      }],\r\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\r\n      'max-h': [{\r\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\r\n      }],\r\n      /**\r\n       * Size\r\n       * @see https://tailwindcss.com/docs/size\r\n       */\r\n      size: [{\r\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\r\n      }],\r\n      // Typography\r\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\r\n      'font-size': [{\r\n        text: ['base', isTshirtSize, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\r\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\r\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\r\n      'font-style': ['italic', 'not-italic'],\r\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\r\n      'font-weight': [{\r\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\r\n      }],\r\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\r\n      'font-family': [{\r\n        font: [isAny]\r\n      }],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-normal': ['normal-nums'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-ordinal': ['ordinal'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-slashed-zero': ['slashed-zero'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\r\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\r\n      tracking: [{\r\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Line Clamp\r\n       * @see https://tailwindcss.com/docs/line-clamp\r\n       */\r\n      'line-clamp': [{\r\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\r\n      }],\r\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\r\n      leading: [{\r\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * List Style Image\r\n       * @see https://tailwindcss.com/docs/list-style-image\r\n       */\r\n      'list-image': [{\r\n        'list-image': ['none', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\r\n      'list-style-type': [{\r\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\r\n      'list-style-position': [{\r\n        list: ['inside', 'outside']\r\n      }],\r\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\r\n      'placeholder-color': [{\r\n        placeholder: [colors]\r\n      }],\r\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\r\n      'placeholder-opacity': [{\r\n        'placeholder-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\r\n      'text-alignment': [{\r\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\r\n      }],\r\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\r\n      'text-color': [{\r\n        text: [colors]\r\n      }],\r\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\r\n      'text-opacity': [{\r\n        'text-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\r\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\r\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\r\n      'text-decoration-style': [{\r\n        decoration: [...getLineStyles(), 'wavy']\r\n      }],\r\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\r\n      'text-decoration-thickness': [{\r\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\r\n      'underline-offset': [{\r\n        'underline-offset': ['auto', isLength, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\r\n      'text-decoration-color': [{\r\n        decoration: [colors]\r\n      }],\r\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\r\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\r\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\r\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\r\n      /**\r\n       * Text Wrap\r\n       * @see https://tailwindcss.com/docs/text-wrap\r\n       */\r\n      'text-wrap': [{\r\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\r\n      }],\r\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\r\n      indent: [{\r\n        indent: getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\r\n      'vertical-align': [{\r\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\r\n      whitespace: [{\r\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\r\n      }],\r\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\r\n      break: [{\r\n        break: ['normal', 'words', 'all', 'keep']\r\n      }],\r\n      /**\r\n       * Hyphens\r\n       * @see https://tailwindcss.com/docs/hyphens\r\n       */\r\n      hyphens: [{\r\n        hyphens: ['none', 'manual', 'auto']\r\n      }],\r\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\r\n      content: [{\r\n        content: ['none', isArbitraryValue]\r\n      }],\r\n      // Backgrounds\r\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\r\n      'bg-attachment': [{\r\n        bg: ['fixed', 'local', 'scroll']\r\n      }],\r\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\r\n      'bg-clip': [{\r\n        'bg-clip': ['border', 'padding', 'content', 'text']\r\n      }],\r\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\r\n      'bg-opacity': [{\r\n        'bg-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\r\n      'bg-origin': [{\r\n        'bg-origin': ['border', 'padding', 'content']\r\n      }],\r\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\r\n      'bg-position': [{\r\n        bg: [...getPositions(), isArbitraryPosition]\r\n      }],\r\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\r\n      'bg-repeat': [{\r\n        bg: ['no-repeat', {\r\n          repeat: ['', 'x', 'y', 'round', 'space']\r\n        }]\r\n      }],\r\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\r\n      'bg-size': [{\r\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\r\n      }],\r\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\r\n      'bg-image': [{\r\n        bg: ['none', {\r\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\r\n        }, isArbitraryImage]\r\n      }],\r\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\r\n      'bg-color': [{\r\n        bg: [colors]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops From Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-from-pos': [{\r\n        from: [gradientColorStopPositions]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops Via Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-via-pos': [{\r\n        via: [gradientColorStopPositions]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops To Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-to-pos': [{\r\n        to: [gradientColorStopPositions]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-from': [{\r\n        from: [gradientColorStops]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-via': [{\r\n        via: [gradientColorStops]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-to': [{\r\n        to: [gradientColorStops]\r\n      }],\r\n      // Borders\r\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      rounded: [{\r\n        rounded: [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-s': [{\r\n        'rounded-s': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-e': [{\r\n        'rounded-e': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-t': [{\r\n        'rounded-t': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-r': [{\r\n        'rounded-r': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-b': [{\r\n        'rounded-b': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-l': [{\r\n        'rounded-l': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Start Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-ss': [{\r\n        'rounded-ss': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Start End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-se': [{\r\n        'rounded-se': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius End End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-ee': [{\r\n        'rounded-ee': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius End Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-es': [{\r\n        'rounded-es': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-tl': [{\r\n        'rounded-tl': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-tr': [{\r\n        'rounded-tr': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-br': [{\r\n        'rounded-br': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-bl': [{\r\n        'rounded-bl': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w': [{\r\n        border: [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-x': [{\r\n        'border-x': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-y': [{\r\n        'border-y': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Start\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-s': [{\r\n        'border-s': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width End\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-e': [{\r\n        'border-e': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-t': [{\r\n        'border-t': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-r': [{\r\n        'border-r': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-b': [{\r\n        'border-b': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-l': [{\r\n        'border-l': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\r\n      'border-opacity': [{\r\n        'border-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\r\n      'border-style': [{\r\n        border: [...getLineStyles(), 'hidden']\r\n      }],\r\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-x': [{\r\n        'divide-x': [borderWidth]\r\n      }],\r\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-x-reverse': ['divide-x-reverse'],\r\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-y': [{\r\n        'divide-y': [borderWidth]\r\n      }],\r\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-y-reverse': ['divide-y-reverse'],\r\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\r\n      'divide-opacity': [{\r\n        'divide-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\r\n      'divide-style': [{\r\n        divide: getLineStyles()\r\n      }],\r\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color': [{\r\n        border: [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-x': [{\r\n        'border-x': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-y': [{\r\n        'border-y': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color S\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-s': [{\r\n        'border-s': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color E\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-e': [{\r\n        'border-e': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-t': [{\r\n        'border-t': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-r': [{\r\n        'border-r': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-b': [{\r\n        'border-b': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-l': [{\r\n        'border-l': [borderColor]\r\n      }],\r\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\r\n      'divide-color': [{\r\n        divide: [borderColor]\r\n      }],\r\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\r\n      'outline-style': [{\r\n        outline: ['', ...getLineStyles()]\r\n      }],\r\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\r\n      'outline-offset': [{\r\n        'outline-offset': [isLength, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\r\n      'outline-w': [{\r\n        outline: [isLength, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\r\n      'outline-color': [{\r\n        outline: [colors]\r\n      }],\r\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\r\n      'ring-w': [{\r\n        ring: getLengthWithEmptyAndArbitrary()\r\n      }],\r\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\r\n      'ring-w-inset': ['ring-inset'],\r\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\r\n      'ring-color': [{\r\n        ring: [colors]\r\n      }],\r\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\r\n      'ring-opacity': [{\r\n        'ring-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\r\n      'ring-offset-w': [{\r\n        'ring-offset': [isLength, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\r\n      'ring-offset-color': [{\r\n        'ring-offset': [colors]\r\n      }],\r\n      // Effects\r\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\r\n      shadow: [{\r\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\r\n      }],\r\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\r\n      'shadow-color': [{\r\n        shadow: [isAny]\r\n      }],\r\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\r\n      opacity: [{\r\n        opacity: [opacity]\r\n      }],\r\n      /**\r\n       * Mix Blend Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\r\n      'mix-blend': [{\r\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\r\n      }],\r\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\r\n      'bg-blend': [{\r\n        'bg-blend': getBlendModes()\r\n      }],\r\n      // Filters\r\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\r\n      filter: [{\r\n        filter: ['', 'none']\r\n      }],\r\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\r\n      blur: [{\r\n        blur: [blur]\r\n      }],\r\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\r\n      brightness: [{\r\n        brightness: [brightness]\r\n      }],\r\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\r\n      contrast: [{\r\n        contrast: [contrast]\r\n      }],\r\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\r\n      'drop-shadow': [{\r\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\r\n      grayscale: [{\r\n        grayscale: [grayscale]\r\n      }],\r\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\r\n      'hue-rotate': [{\r\n        'hue-rotate': [hueRotate]\r\n      }],\r\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\r\n      invert: [{\r\n        invert: [invert]\r\n      }],\r\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\r\n      saturate: [{\r\n        saturate: [saturate]\r\n      }],\r\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\r\n      sepia: [{\r\n        sepia: [sepia]\r\n      }],\r\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\r\n      'backdrop-filter': [{\r\n        'backdrop-filter': ['', 'none']\r\n      }],\r\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\r\n      'backdrop-blur': [{\r\n        'backdrop-blur': [blur]\r\n      }],\r\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\r\n      'backdrop-brightness': [{\r\n        'backdrop-brightness': [brightness]\r\n      }],\r\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\r\n      'backdrop-contrast': [{\r\n        'backdrop-contrast': [contrast]\r\n      }],\r\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\r\n      'backdrop-grayscale': [{\r\n        'backdrop-grayscale': [grayscale]\r\n      }],\r\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\r\n      'backdrop-hue-rotate': [{\r\n        'backdrop-hue-rotate': [hueRotate]\r\n      }],\r\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\r\n      'backdrop-invert': [{\r\n        'backdrop-invert': [invert]\r\n      }],\r\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\r\n      'backdrop-opacity': [{\r\n        'backdrop-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\r\n      'backdrop-saturate': [{\r\n        'backdrop-saturate': [saturate]\r\n      }],\r\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\r\n      'backdrop-sepia': [{\r\n        'backdrop-sepia': [sepia]\r\n      }],\r\n      // Tables\r\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\r\n      'border-collapse': [{\r\n        border: ['collapse', 'separate']\r\n      }],\r\n      /**\r\n       * Border Spacing\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\r\n      'border-spacing': [{\r\n        'border-spacing': [borderSpacing]\r\n      }],\r\n      /**\r\n       * Border Spacing X\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\r\n      'border-spacing-x': [{\r\n        'border-spacing-x': [borderSpacing]\r\n      }],\r\n      /**\r\n       * Border Spacing Y\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\r\n      'border-spacing-y': [{\r\n        'border-spacing-y': [borderSpacing]\r\n      }],\r\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\r\n      'table-layout': [{\r\n        table: ['auto', 'fixed']\r\n      }],\r\n      /**\r\n       * Caption Side\r\n       * @see https://tailwindcss.com/docs/caption-side\r\n       */\r\n      caption: [{\r\n        caption: ['top', 'bottom']\r\n      }],\r\n      // Transitions and Animation\r\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\r\n      transition: [{\r\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\r\n      duration: [{\r\n        duration: getNumberAndArbitrary()\r\n      }],\r\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\r\n      ease: [{\r\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\r\n      delay: [{\r\n        delay: getNumberAndArbitrary()\r\n      }],\r\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\r\n      animate: [{\r\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\r\n      }],\r\n      // Transforms\r\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\r\n      transform: [{\r\n        transform: ['', 'gpu', 'none']\r\n      }],\r\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\r\n      scale: [{\r\n        scale: [scale]\r\n      }],\r\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\r\n      'scale-x': [{\r\n        'scale-x': [scale]\r\n      }],\r\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\r\n      'scale-y': [{\r\n        'scale-y': [scale]\r\n      }],\r\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\r\n      rotate: [{\r\n        rotate: [isInteger, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\r\n      'translate-x': [{\r\n        'translate-x': [translate]\r\n      }],\r\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\r\n      'translate-y': [{\r\n        'translate-y': [translate]\r\n      }],\r\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\r\n      'skew-x': [{\r\n        'skew-x': [skew]\r\n      }],\r\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\r\n      'skew-y': [{\r\n        'skew-y': [skew]\r\n      }],\r\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\r\n      'transform-origin': [{\r\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\r\n      }],\r\n      // Interactivity\r\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\r\n      accent: [{\r\n        accent: ['auto', colors]\r\n      }],\r\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\r\n      appearance: [{\r\n        appearance: ['none', 'auto']\r\n      }],\r\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\r\n      cursor: [{\r\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\r\n      'caret-color': [{\r\n        caret: [colors]\r\n      }],\r\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\r\n      'pointer-events': [{\r\n        'pointer-events': ['none', 'auto']\r\n      }],\r\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\r\n      resize: [{\r\n        resize: ['none', 'y', 'x', '']\r\n      }],\r\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\r\n      'scroll-behavior': [{\r\n        scroll: ['auto', 'smooth']\r\n      }],\r\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-m': [{\r\n        'scroll-m': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mx': [{\r\n        'scroll-mx': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-my': [{\r\n        'scroll-my': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Start\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-ms': [{\r\n        'scroll-ms': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin End\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-me': [{\r\n        'scroll-me': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mt': [{\r\n        'scroll-mt': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mr': [{\r\n        'scroll-mr': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mb': [{\r\n        'scroll-mb': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-ml': [{\r\n        'scroll-ml': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-p': [{\r\n        'scroll-p': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-px': [{\r\n        'scroll-px': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-py': [{\r\n        'scroll-py': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Start\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-ps': [{\r\n        'scroll-ps': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding End\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pe': [{\r\n        'scroll-pe': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pt': [{\r\n        'scroll-pt': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pr': [{\r\n        'scroll-pr': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pb': [{\r\n        'scroll-pb': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pl': [{\r\n        'scroll-pl': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\r\n      'snap-align': [{\r\n        snap: ['start', 'end', 'center', 'align-none']\r\n      }],\r\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\r\n      'snap-stop': [{\r\n        snap: ['normal', 'always']\r\n      }],\r\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\r\n      'snap-type': [{\r\n        snap: ['none', 'x', 'y', 'both']\r\n      }],\r\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\r\n      'snap-strictness': [{\r\n        snap: ['mandatory', 'proximity']\r\n      }],\r\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      touch: [{\r\n        touch: ['auto', 'none', 'manipulation']\r\n      }],\r\n      /**\r\n       * Touch Action X\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      'touch-x': [{\r\n        'touch-pan': ['x', 'left', 'right']\r\n      }],\r\n      /**\r\n       * Touch Action Y\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      'touch-y': [{\r\n        'touch-pan': ['y', 'up', 'down']\r\n      }],\r\n      /**\r\n       * Touch Action Pinch Zoom\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      'touch-pz': ['touch-pinch-zoom'],\r\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\r\n      select: [{\r\n        select: ['none', 'text', 'all', 'auto']\r\n      }],\r\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\r\n      'will-change': [{\r\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\r\n      }],\r\n      // SVG\r\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\r\n      fill: [{\r\n        fill: [colors, 'none']\r\n      }],\r\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\r\n      'stroke-w': [{\r\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\r\n      }],\r\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\r\n      stroke: [{\r\n        stroke: [colors, 'none']\r\n      }],\r\n      // Accessibility\r\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\r\n      sr: ['sr-only', 'not-sr-only'],\r\n      /**\r\n       * Forced Color Adjust\r\n       * @see https://tailwindcss.com/docs/forced-color-adjust\r\n       */\r\n      'forced-color-adjust': [{\r\n        'forced-color-adjust': ['auto', 'none']\r\n      }]\r\n    },\r\n    conflictingClassGroups: {\r\n      overflow: ['overflow-x', 'overflow-y'],\r\n      overscroll: ['overscroll-x', 'overscroll-y'],\r\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\r\n      'inset-x': ['right', 'left'],\r\n      'inset-y': ['top', 'bottom'],\r\n      flex: ['basis', 'grow', 'shrink'],\r\n      gap: ['gap-x', 'gap-y'],\r\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\r\n      px: ['pr', 'pl'],\r\n      py: ['pt', 'pb'],\r\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\r\n      mx: ['mr', 'ml'],\r\n      my: ['mt', 'mb'],\r\n      size: ['w', 'h'],\r\n      'font-size': ['leading'],\r\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\r\n      'fvn-ordinal': ['fvn-normal'],\r\n      'fvn-slashed-zero': ['fvn-normal'],\r\n      'fvn-figure': ['fvn-normal'],\r\n      'fvn-spacing': ['fvn-normal'],\r\n      'fvn-fraction': ['fvn-normal'],\r\n      'line-clamp': ['display', 'overflow'],\r\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\r\n      'rounded-s': ['rounded-ss', 'rounded-es'],\r\n      'rounded-e': ['rounded-se', 'rounded-ee'],\r\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\r\n      'rounded-r': ['rounded-tr', 'rounded-br'],\r\n      'rounded-b': ['rounded-br', 'rounded-bl'],\r\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\r\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\r\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\r\n      'border-w-x': ['border-w-r', 'border-w-l'],\r\n      'border-w-y': ['border-w-t', 'border-w-b'],\r\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\r\n      'border-color-x': ['border-color-r', 'border-color-l'],\r\n      'border-color-y': ['border-color-t', 'border-color-b'],\r\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\r\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\r\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\r\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\r\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\r\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\r\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\r\n      'touch-x': ['touch'],\r\n      'touch-y': ['touch'],\r\n      'touch-pz': ['touch']\r\n    },\r\n    conflictingClassGroupModifiers: {\r\n      'font-size': ['leading']\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\r\nconst mergeConfigs = (baseConfig, {\r\n  cacheSize,\r\n  prefix,\r\n  separator,\r\n  experimentalParseClassName,\r\n  extend = {},\r\n  override = {}\r\n}) => {\r\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\r\n  overrideProperty(baseConfig, 'prefix', prefix);\r\n  overrideProperty(baseConfig, 'separator', separator);\r\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\r\n  for (const configKey in override) {\r\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\r\n  }\r\n  for (const key in extend) {\r\n    mergeConfigProperties(baseConfig[key], extend[key]);\r\n  }\r\n  return baseConfig;\r\n};\r\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\r\n  if (overrideValue !== undefined) {\r\n    baseObject[overrideKey] = overrideValue;\r\n  }\r\n};\r\nconst overrideConfigProperties = (baseObject, overrideObject) => {\r\n  if (overrideObject) {\r\n    for (const key in overrideObject) {\r\n      overrideProperty(baseObject, key, overrideObject[key]);\r\n    }\r\n  }\r\n};\r\nconst mergeConfigProperties = (baseObject, mergeObject) => {\r\n  if (mergeObject) {\r\n    for (const key in mergeObject) {\r\n      const mergeValue = mergeObject[key];\r\n      if (mergeValue !== undefined) {\r\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\r\n      }\r\n    }\r\n  }\r\n};\r\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\r\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\r\n\r\n//# sourceMappingURL=bundle-mjs.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90YWlsd2luZC1tZXJnZS9kaXN0L2J1bmRsZS1tanMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsT0FBTyxtQkFBbUIsa0JBQWtCLGFBQWE7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsWUFBWTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkJBQTJCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEg7QUFDNUgiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFx0YWlsd2luZC1tZXJnZVxcZGlzdFxcYnVuZGxlLW1qcy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ0xBU1NfUEFSVF9TRVBBUkFUT1IgPSAnLSc7XHJcbmNvbnN0IGNyZWF0ZUNsYXNzR3JvdXBVdGlscyA9IGNvbmZpZyA9PiB7XHJcbiAgY29uc3QgY2xhc3NNYXAgPSBjcmVhdGVDbGFzc01hcChjb25maWcpO1xyXG4gIGNvbnN0IHtcclxuICAgIGNvbmZsaWN0aW5nQ2xhc3NHcm91cHMsXHJcbiAgICBjb25mbGljdGluZ0NsYXNzR3JvdXBNb2RpZmllcnNcclxuICB9ID0gY29uZmlnO1xyXG4gIGNvbnN0IGdldENsYXNzR3JvdXBJZCA9IGNsYXNzTmFtZSA9PiB7XHJcbiAgICBjb25zdCBjbGFzc1BhcnRzID0gY2xhc3NOYW1lLnNwbGl0KENMQVNTX1BBUlRfU0VQQVJBVE9SKTtcclxuICAgIC8vIENsYXNzZXMgbGlrZSBgLWluc2V0LTFgIHByb2R1Y2UgYW4gZW1wdHkgc3RyaW5nIGFzIGZpcnN0IGNsYXNzUGFydC4gV2UgYXNzdW1lIHRoYXQgY2xhc3NlcyBmb3IgbmVnYXRpdmUgdmFsdWVzIGFyZSB1c2VkIGNvcnJlY3RseSBhbmQgcmVtb3ZlIGl0IGZyb20gY2xhc3NQYXJ0cy5cclxuICAgIGlmIChjbGFzc1BhcnRzWzBdID09PSAnJyAmJiBjbGFzc1BhcnRzLmxlbmd0aCAhPT0gMSkge1xyXG4gICAgICBjbGFzc1BhcnRzLnNoaWZ0KCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZ2V0R3JvdXBSZWN1cnNpdmUoY2xhc3NQYXJ0cywgY2xhc3NNYXApIHx8IGdldEdyb3VwSWRGb3JBcmJpdHJhcnlQcm9wZXJ0eShjbGFzc05hbWUpO1xyXG4gIH07XHJcbiAgY29uc3QgZ2V0Q29uZmxpY3RpbmdDbGFzc0dyb3VwSWRzID0gKGNsYXNzR3JvdXBJZCwgaGFzUG9zdGZpeE1vZGlmaWVyKSA9PiB7XHJcbiAgICBjb25zdCBjb25mbGljdHMgPSBjb25mbGljdGluZ0NsYXNzR3JvdXBzW2NsYXNzR3JvdXBJZF0gfHwgW107XHJcbiAgICBpZiAoaGFzUG9zdGZpeE1vZGlmaWVyICYmIGNvbmZsaWN0aW5nQ2xhc3NHcm91cE1vZGlmaWVyc1tjbGFzc0dyb3VwSWRdKSB7XHJcbiAgICAgIHJldHVybiBbLi4uY29uZmxpY3RzLCAuLi5jb25mbGljdGluZ0NsYXNzR3JvdXBNb2RpZmllcnNbY2xhc3NHcm91cElkXV07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29uZmxpY3RzO1xyXG4gIH07XHJcbiAgcmV0dXJuIHtcclxuICAgIGdldENsYXNzR3JvdXBJZCxcclxuICAgIGdldENvbmZsaWN0aW5nQ2xhc3NHcm91cElkc1xyXG4gIH07XHJcbn07XHJcbmNvbnN0IGdldEdyb3VwUmVjdXJzaXZlID0gKGNsYXNzUGFydHMsIGNsYXNzUGFydE9iamVjdCkgPT4ge1xyXG4gIGlmIChjbGFzc1BhcnRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIGNsYXNzUGFydE9iamVjdC5jbGFzc0dyb3VwSWQ7XHJcbiAgfVxyXG4gIGNvbnN0IGN1cnJlbnRDbGFzc1BhcnQgPSBjbGFzc1BhcnRzWzBdO1xyXG4gIGNvbnN0IG5leHRDbGFzc1BhcnRPYmplY3QgPSBjbGFzc1BhcnRPYmplY3QubmV4dFBhcnQuZ2V0KGN1cnJlbnRDbGFzc1BhcnQpO1xyXG4gIGNvbnN0IGNsYXNzR3JvdXBGcm9tTmV4dENsYXNzUGFydCA9IG5leHRDbGFzc1BhcnRPYmplY3QgPyBnZXRHcm91cFJlY3Vyc2l2ZShjbGFzc1BhcnRzLnNsaWNlKDEpLCBuZXh0Q2xhc3NQYXJ0T2JqZWN0KSA6IHVuZGVmaW5lZDtcclxuICBpZiAoY2xhc3NHcm91cEZyb21OZXh0Q2xhc3NQYXJ0KSB7XHJcbiAgICByZXR1cm4gY2xhc3NHcm91cEZyb21OZXh0Q2xhc3NQYXJ0O1xyXG4gIH1cclxuICBpZiAoY2xhc3NQYXJ0T2JqZWN0LnZhbGlkYXRvcnMubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gIH1cclxuICBjb25zdCBjbGFzc1Jlc3QgPSBjbGFzc1BhcnRzLmpvaW4oQ0xBU1NfUEFSVF9TRVBBUkFUT1IpO1xyXG4gIHJldHVybiBjbGFzc1BhcnRPYmplY3QudmFsaWRhdG9ycy5maW5kKCh7XHJcbiAgICB2YWxpZGF0b3JcclxuICB9KSA9PiB2YWxpZGF0b3IoY2xhc3NSZXN0KSk/LmNsYXNzR3JvdXBJZDtcclxufTtcclxuY29uc3QgYXJiaXRyYXJ5UHJvcGVydHlSZWdleCA9IC9eXFxbKC4rKVxcXSQvO1xyXG5jb25zdCBnZXRHcm91cElkRm9yQXJiaXRyYXJ5UHJvcGVydHkgPSBjbGFzc05hbWUgPT4ge1xyXG4gIGlmIChhcmJpdHJhcnlQcm9wZXJ0eVJlZ2V4LnRlc3QoY2xhc3NOYW1lKSkge1xyXG4gICAgY29uc3QgYXJiaXRyYXJ5UHJvcGVydHlDbGFzc05hbWUgPSBhcmJpdHJhcnlQcm9wZXJ0eVJlZ2V4LmV4ZWMoY2xhc3NOYW1lKVsxXTtcclxuICAgIGNvbnN0IHByb3BlcnR5ID0gYXJiaXRyYXJ5UHJvcGVydHlDbGFzc05hbWU/LnN1YnN0cmluZygwLCBhcmJpdHJhcnlQcm9wZXJ0eUNsYXNzTmFtZS5pbmRleE9mKCc6JykpO1xyXG4gICAgaWYgKHByb3BlcnR5KSB7XHJcbiAgICAgIC8vIEkgdXNlIHR3byBkb3RzIGhlcmUgYmVjYXVzZSBvbmUgZG90IGlzIHVzZWQgYXMgcHJlZml4IGZvciBjbGFzcyBncm91cHMgaW4gcGx1Z2luc1xyXG4gICAgICByZXR1cm4gJ2FyYml0cmFyeS4uJyArIHByb3BlcnR5O1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuLyoqXHJcbiAqIEV4cG9ydGVkIGZvciB0ZXN0aW5nIG9ubHlcclxuICovXHJcbmNvbnN0IGNyZWF0ZUNsYXNzTWFwID0gY29uZmlnID0+IHtcclxuICBjb25zdCB7XHJcbiAgICB0aGVtZSxcclxuICAgIHByZWZpeFxyXG4gIH0gPSBjb25maWc7XHJcbiAgY29uc3QgY2xhc3NNYXAgPSB7XHJcbiAgICBuZXh0UGFydDogbmV3IE1hcCgpLFxyXG4gICAgdmFsaWRhdG9yczogW11cclxuICB9O1xyXG4gIGNvbnN0IHByZWZpeGVkQ2xhc3NHcm91cEVudHJpZXMgPSBnZXRQcmVmaXhlZENsYXNzR3JvdXBFbnRyaWVzKE9iamVjdC5lbnRyaWVzKGNvbmZpZy5jbGFzc0dyb3VwcyksIHByZWZpeCk7XHJcbiAgcHJlZml4ZWRDbGFzc0dyb3VwRW50cmllcy5mb3JFYWNoKChbY2xhc3NHcm91cElkLCBjbGFzc0dyb3VwXSkgPT4ge1xyXG4gICAgcHJvY2Vzc0NsYXNzZXNSZWN1cnNpdmVseShjbGFzc0dyb3VwLCBjbGFzc01hcCwgY2xhc3NHcm91cElkLCB0aGVtZSk7XHJcbiAgfSk7XHJcbiAgcmV0dXJuIGNsYXNzTWFwO1xyXG59O1xyXG5jb25zdCBwcm9jZXNzQ2xhc3Nlc1JlY3Vyc2l2ZWx5ID0gKGNsYXNzR3JvdXAsIGNsYXNzUGFydE9iamVjdCwgY2xhc3NHcm91cElkLCB0aGVtZSkgPT4ge1xyXG4gIGNsYXNzR3JvdXAuZm9yRWFjaChjbGFzc0RlZmluaXRpb24gPT4ge1xyXG4gICAgaWYgKHR5cGVvZiBjbGFzc0RlZmluaXRpb24gPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIGNvbnN0IGNsYXNzUGFydE9iamVjdFRvRWRpdCA9IGNsYXNzRGVmaW5pdGlvbiA9PT0gJycgPyBjbGFzc1BhcnRPYmplY3QgOiBnZXRQYXJ0KGNsYXNzUGFydE9iamVjdCwgY2xhc3NEZWZpbml0aW9uKTtcclxuICAgICAgY2xhc3NQYXJ0T2JqZWN0VG9FZGl0LmNsYXNzR3JvdXBJZCA9IGNsYXNzR3JvdXBJZDtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBjbGFzc0RlZmluaXRpb24gPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgaWYgKGlzVGhlbWVHZXR0ZXIoY2xhc3NEZWZpbml0aW9uKSkge1xyXG4gICAgICAgIHByb2Nlc3NDbGFzc2VzUmVjdXJzaXZlbHkoY2xhc3NEZWZpbml0aW9uKHRoZW1lKSwgY2xhc3NQYXJ0T2JqZWN0LCBjbGFzc0dyb3VwSWQsIHRoZW1lKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgY2xhc3NQYXJ0T2JqZWN0LnZhbGlkYXRvcnMucHVzaCh7XHJcbiAgICAgICAgdmFsaWRhdG9yOiBjbGFzc0RlZmluaXRpb24sXHJcbiAgICAgICAgY2xhc3NHcm91cElkXHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBPYmplY3QuZW50cmllcyhjbGFzc0RlZmluaXRpb24pLmZvckVhY2goKFtrZXksIGNsYXNzR3JvdXBdKSA9PiB7XHJcbiAgICAgIHByb2Nlc3NDbGFzc2VzUmVjdXJzaXZlbHkoY2xhc3NHcm91cCwgZ2V0UGFydChjbGFzc1BhcnRPYmplY3QsIGtleSksIGNsYXNzR3JvdXBJZCwgdGhlbWUpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn07XHJcbmNvbnN0IGdldFBhcnQgPSAoY2xhc3NQYXJ0T2JqZWN0LCBwYXRoKSA9PiB7XHJcbiAgbGV0IGN1cnJlbnRDbGFzc1BhcnRPYmplY3QgPSBjbGFzc1BhcnRPYmplY3Q7XHJcbiAgcGF0aC5zcGxpdChDTEFTU19QQVJUX1NFUEFSQVRPUikuZm9yRWFjaChwYXRoUGFydCA9PiB7XHJcbiAgICBpZiAoIWN1cnJlbnRDbGFzc1BhcnRPYmplY3QubmV4dFBhcnQuaGFzKHBhdGhQYXJ0KSkge1xyXG4gICAgICBjdXJyZW50Q2xhc3NQYXJ0T2JqZWN0Lm5leHRQYXJ0LnNldChwYXRoUGFydCwge1xyXG4gICAgICAgIG5leHRQYXJ0OiBuZXcgTWFwKCksXHJcbiAgICAgICAgdmFsaWRhdG9yczogW11cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBjdXJyZW50Q2xhc3NQYXJ0T2JqZWN0ID0gY3VycmVudENsYXNzUGFydE9iamVjdC5uZXh0UGFydC5nZXQocGF0aFBhcnQpO1xyXG4gIH0pO1xyXG4gIHJldHVybiBjdXJyZW50Q2xhc3NQYXJ0T2JqZWN0O1xyXG59O1xyXG5jb25zdCBpc1RoZW1lR2V0dGVyID0gZnVuYyA9PiBmdW5jLmlzVGhlbWVHZXR0ZXI7XHJcbmNvbnN0IGdldFByZWZpeGVkQ2xhc3NHcm91cEVudHJpZXMgPSAoY2xhc3NHcm91cEVudHJpZXMsIHByZWZpeCkgPT4ge1xyXG4gIGlmICghcHJlZml4KSB7XHJcbiAgICByZXR1cm4gY2xhc3NHcm91cEVudHJpZXM7XHJcbiAgfVxyXG4gIHJldHVybiBjbGFzc0dyb3VwRW50cmllcy5tYXAoKFtjbGFzc0dyb3VwSWQsIGNsYXNzR3JvdXBdKSA9PiB7XHJcbiAgICBjb25zdCBwcmVmaXhlZENsYXNzR3JvdXAgPSBjbGFzc0dyb3VwLm1hcChjbGFzc0RlZmluaXRpb24gPT4ge1xyXG4gICAgICBpZiAodHlwZW9mIGNsYXNzRGVmaW5pdGlvbiA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICByZXR1cm4gcHJlZml4ICsgY2xhc3NEZWZpbml0aW9uO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0eXBlb2YgY2xhc3NEZWZpbml0aW9uID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoY2xhc3NEZWZpbml0aW9uKS5tYXAoKFtrZXksIHZhbHVlXSkgPT4gW3ByZWZpeCArIGtleSwgdmFsdWVdKSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGNsYXNzRGVmaW5pdGlvbjtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIFtjbGFzc0dyb3VwSWQsIHByZWZpeGVkQ2xhc3NHcm91cF07XHJcbiAgfSk7XHJcbn07XHJcblxyXG4vLyBMUlUgY2FjaGUgaW5zcGlyZWQgZnJvbSBoYXNobHJ1IChodHRwczovL2dpdGh1Yi5jb20vZG9taW5pY3RhcnIvaGFzaGxydS9ibG9iL3YxLjAuNC9pbmRleC5qcykgYnV0IG9iamVjdCByZXBsYWNlZCB3aXRoIE1hcCB0byBpbXByb3ZlIHBlcmZvcm1hbmNlXHJcbmNvbnN0IGNyZWF0ZUxydUNhY2hlID0gbWF4Q2FjaGVTaXplID0+IHtcclxuICBpZiAobWF4Q2FjaGVTaXplIDwgMSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZ2V0OiAoKSA9PiB1bmRlZmluZWQsXHJcbiAgICAgIHNldDogKCkgPT4ge31cclxuICAgIH07XHJcbiAgfVxyXG4gIGxldCBjYWNoZVNpemUgPSAwO1xyXG4gIGxldCBjYWNoZSA9IG5ldyBNYXAoKTtcclxuICBsZXQgcHJldmlvdXNDYWNoZSA9IG5ldyBNYXAoKTtcclxuICBjb25zdCB1cGRhdGUgPSAoa2V5LCB2YWx1ZSkgPT4ge1xyXG4gICAgY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xyXG4gICAgY2FjaGVTaXplKys7XHJcbiAgICBpZiAoY2FjaGVTaXplID4gbWF4Q2FjaGVTaXplKSB7XHJcbiAgICAgIGNhY2hlU2l6ZSA9IDA7XHJcbiAgICAgIHByZXZpb3VzQ2FjaGUgPSBjYWNoZTtcclxuICAgICAgY2FjaGUgPSBuZXcgTWFwKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuICByZXR1cm4ge1xyXG4gICAgZ2V0KGtleSkge1xyXG4gICAgICBsZXQgdmFsdWUgPSBjYWNoZS5nZXQoa2V5KTtcclxuICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKCh2YWx1ZSA9IHByZXZpb3VzQ2FjaGUuZ2V0KGtleSkpICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB1cGRhdGUoa2V5LCB2YWx1ZSk7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgc2V0KGtleSwgdmFsdWUpIHtcclxuICAgICAgaWYgKGNhY2hlLmhhcyhrZXkpKSB7XHJcbiAgICAgICAgY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHVwZGF0ZShrZXksIHZhbHVlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH07XHJcbn07XHJcbmNvbnN0IElNUE9SVEFOVF9NT0RJRklFUiA9ICchJztcclxuY29uc3QgY3JlYXRlUGFyc2VDbGFzc05hbWUgPSBjb25maWcgPT4ge1xyXG4gIGNvbnN0IHtcclxuICAgIHNlcGFyYXRvcixcclxuICAgIGV4cGVyaW1lbnRhbFBhcnNlQ2xhc3NOYW1lXHJcbiAgfSA9IGNvbmZpZztcclxuICBjb25zdCBpc1NlcGFyYXRvclNpbmdsZUNoYXJhY3RlciA9IHNlcGFyYXRvci5sZW5ndGggPT09IDE7XHJcbiAgY29uc3QgZmlyc3RTZXBhcmF0b3JDaGFyYWN0ZXIgPSBzZXBhcmF0b3JbMF07XHJcbiAgY29uc3Qgc2VwYXJhdG9yTGVuZ3RoID0gc2VwYXJhdG9yLmxlbmd0aDtcclxuICAvLyBwYXJzZUNsYXNzTmFtZSBpbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vdGFpbHdpbmRsYWJzL3RhaWx3aW5kY3NzL2Jsb2IvdjMuMi4yL3NyYy91dGlsL3NwbGl0QXRUb3BMZXZlbE9ubHkuanNcclxuICBjb25zdCBwYXJzZUNsYXNzTmFtZSA9IGNsYXNzTmFtZSA9PiB7XHJcbiAgICBjb25zdCBtb2RpZmllcnMgPSBbXTtcclxuICAgIGxldCBicmFja2V0RGVwdGggPSAwO1xyXG4gICAgbGV0IG1vZGlmaWVyU3RhcnQgPSAwO1xyXG4gICAgbGV0IHBvc3RmaXhNb2RpZmllclBvc2l0aW9uO1xyXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNsYXNzTmFtZS5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgbGV0IGN1cnJlbnRDaGFyYWN0ZXIgPSBjbGFzc05hbWVbaW5kZXhdO1xyXG4gICAgICBpZiAoYnJhY2tldERlcHRoID09PSAwKSB7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRDaGFyYWN0ZXIgPT09IGZpcnN0U2VwYXJhdG9yQ2hhcmFjdGVyICYmIChpc1NlcGFyYXRvclNpbmdsZUNoYXJhY3RlciB8fCBjbGFzc05hbWUuc2xpY2UoaW5kZXgsIGluZGV4ICsgc2VwYXJhdG9yTGVuZ3RoKSA9PT0gc2VwYXJhdG9yKSkge1xyXG4gICAgICAgICAgbW9kaWZpZXJzLnB1c2goY2xhc3NOYW1lLnNsaWNlKG1vZGlmaWVyU3RhcnQsIGluZGV4KSk7XHJcbiAgICAgICAgICBtb2RpZmllclN0YXJ0ID0gaW5kZXggKyBzZXBhcmF0b3JMZW5ndGg7XHJcbiAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGN1cnJlbnRDaGFyYWN0ZXIgPT09ICcvJykge1xyXG4gICAgICAgICAgcG9zdGZpeE1vZGlmaWVyUG9zaXRpb24gPSBpbmRleDtcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAoY3VycmVudENoYXJhY3RlciA9PT0gJ1snKSB7XHJcbiAgICAgICAgYnJhY2tldERlcHRoKys7XHJcbiAgICAgIH0gZWxzZSBpZiAoY3VycmVudENoYXJhY3RlciA9PT0gJ10nKSB7XHJcbiAgICAgICAgYnJhY2tldERlcHRoLS07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbnN0IGJhc2VDbGFzc05hbWVXaXRoSW1wb3J0YW50TW9kaWZpZXIgPSBtb2RpZmllcnMubGVuZ3RoID09PSAwID8gY2xhc3NOYW1lIDogY2xhc3NOYW1lLnN1YnN0cmluZyhtb2RpZmllclN0YXJ0KTtcclxuICAgIGNvbnN0IGhhc0ltcG9ydGFudE1vZGlmaWVyID0gYmFzZUNsYXNzTmFtZVdpdGhJbXBvcnRhbnRNb2RpZmllci5zdGFydHNXaXRoKElNUE9SVEFOVF9NT0RJRklFUik7XHJcbiAgICBjb25zdCBiYXNlQ2xhc3NOYW1lID0gaGFzSW1wb3J0YW50TW9kaWZpZXIgPyBiYXNlQ2xhc3NOYW1lV2l0aEltcG9ydGFudE1vZGlmaWVyLnN1YnN0cmluZygxKSA6IGJhc2VDbGFzc05hbWVXaXRoSW1wb3J0YW50TW9kaWZpZXI7XHJcbiAgICBjb25zdCBtYXliZVBvc3RmaXhNb2RpZmllclBvc2l0aW9uID0gcG9zdGZpeE1vZGlmaWVyUG9zaXRpb24gJiYgcG9zdGZpeE1vZGlmaWVyUG9zaXRpb24gPiBtb2RpZmllclN0YXJ0ID8gcG9zdGZpeE1vZGlmaWVyUG9zaXRpb24gLSBtb2RpZmllclN0YXJ0IDogdW5kZWZpbmVkO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbW9kaWZpZXJzLFxyXG4gICAgICBoYXNJbXBvcnRhbnRNb2RpZmllcixcclxuICAgICAgYmFzZUNsYXNzTmFtZSxcclxuICAgICAgbWF5YmVQb3N0Zml4TW9kaWZpZXJQb3NpdGlvblxyXG4gICAgfTtcclxuICB9O1xyXG4gIGlmIChleHBlcmltZW50YWxQYXJzZUNsYXNzTmFtZSkge1xyXG4gICAgcmV0dXJuIGNsYXNzTmFtZSA9PiBleHBlcmltZW50YWxQYXJzZUNsYXNzTmFtZSh7XHJcbiAgICAgIGNsYXNzTmFtZSxcclxuICAgICAgcGFyc2VDbGFzc05hbWVcclxuICAgIH0pO1xyXG4gIH1cclxuICByZXR1cm4gcGFyc2VDbGFzc05hbWU7XHJcbn07XHJcbi8qKlxyXG4gKiBTb3J0cyBtb2RpZmllcnMgYWNjb3JkaW5nIHRvIGZvbGxvd2luZyBzY2hlbWE6XHJcbiAqIC0gUHJlZGVmaW5lZCBtb2RpZmllcnMgYXJlIHNvcnRlZCBhbHBoYWJldGljYWxseVxyXG4gKiAtIFdoZW4gYW4gYXJiaXRyYXJ5IHZhcmlhbnQgYXBwZWFycywgaXQgbXVzdCBiZSBwcmVzZXJ2ZWQgd2hpY2ggbW9kaWZpZXJzIGFyZSBiZWZvcmUgYW5kIGFmdGVyIGl0XHJcbiAqL1xyXG5jb25zdCBzb3J0TW9kaWZpZXJzID0gbW9kaWZpZXJzID0+IHtcclxuICBpZiAobW9kaWZpZXJzLmxlbmd0aCA8PSAxKSB7XHJcbiAgICByZXR1cm4gbW9kaWZpZXJzO1xyXG4gIH1cclxuICBjb25zdCBzb3J0ZWRNb2RpZmllcnMgPSBbXTtcclxuICBsZXQgdW5zb3J0ZWRNb2RpZmllcnMgPSBbXTtcclxuICBtb2RpZmllcnMuZm9yRWFjaChtb2RpZmllciA9PiB7XHJcbiAgICBjb25zdCBpc0FyYml0cmFyeVZhcmlhbnQgPSBtb2RpZmllclswXSA9PT0gJ1snO1xyXG4gICAgaWYgKGlzQXJiaXRyYXJ5VmFyaWFudCkge1xyXG4gICAgICBzb3J0ZWRNb2RpZmllcnMucHVzaCguLi51bnNvcnRlZE1vZGlmaWVycy5zb3J0KCksIG1vZGlmaWVyKTtcclxuICAgICAgdW5zb3J0ZWRNb2RpZmllcnMgPSBbXTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHVuc29ydGVkTW9kaWZpZXJzLnB1c2gobW9kaWZpZXIpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIHNvcnRlZE1vZGlmaWVycy5wdXNoKC4uLnVuc29ydGVkTW9kaWZpZXJzLnNvcnQoKSk7XHJcbiAgcmV0dXJuIHNvcnRlZE1vZGlmaWVycztcclxufTtcclxuY29uc3QgY3JlYXRlQ29uZmlnVXRpbHMgPSBjb25maWcgPT4gKHtcclxuICBjYWNoZTogY3JlYXRlTHJ1Q2FjaGUoY29uZmlnLmNhY2hlU2l6ZSksXHJcbiAgcGFyc2VDbGFzc05hbWU6IGNyZWF0ZVBhcnNlQ2xhc3NOYW1lKGNvbmZpZyksXHJcbiAgLi4uY3JlYXRlQ2xhc3NHcm91cFV0aWxzKGNvbmZpZylcclxufSk7XHJcbmNvbnN0IFNQTElUX0NMQVNTRVNfUkVHRVggPSAvXFxzKy87XHJcbmNvbnN0IG1lcmdlQ2xhc3NMaXN0ID0gKGNsYXNzTGlzdCwgY29uZmlnVXRpbHMpID0+IHtcclxuICBjb25zdCB7XHJcbiAgICBwYXJzZUNsYXNzTmFtZSxcclxuICAgIGdldENsYXNzR3JvdXBJZCxcclxuICAgIGdldENvbmZsaWN0aW5nQ2xhc3NHcm91cElkc1xyXG4gIH0gPSBjb25maWdVdGlscztcclxuICAvKipcclxuICAgKiBTZXQgb2YgY2xhc3NHcm91cElkcyBpbiBmb2xsb3dpbmcgZm9ybWF0OlxyXG4gICAqIGB7aW1wb3J0YW50TW9kaWZpZXJ9e3ZhcmlhbnRNb2RpZmllcnN9e2NsYXNzR3JvdXBJZH1gXHJcbiAgICogQGV4YW1wbGUgJ2Zsb2F0J1xyXG4gICAqIEBleGFtcGxlICdob3Zlcjpmb2N1czpiZy1jb2xvcidcclxuICAgKiBAZXhhbXBsZSAnbWQ6IXByJ1xyXG4gICAqL1xyXG4gIGNvbnN0IGNsYXNzR3JvdXBzSW5Db25mbGljdCA9IFtdO1xyXG4gIGNvbnN0IGNsYXNzTmFtZXMgPSBjbGFzc0xpc3QudHJpbSgpLnNwbGl0KFNQTElUX0NMQVNTRVNfUkVHRVgpO1xyXG4gIGxldCByZXN1bHQgPSAnJztcclxuICBmb3IgKGxldCBpbmRleCA9IGNsYXNzTmFtZXMubGVuZ3RoIC0gMTsgaW5kZXggPj0gMDsgaW5kZXggLT0gMSkge1xyXG4gICAgY29uc3Qgb3JpZ2luYWxDbGFzc05hbWUgPSBjbGFzc05hbWVzW2luZGV4XTtcclxuICAgIGNvbnN0IHtcclxuICAgICAgbW9kaWZpZXJzLFxyXG4gICAgICBoYXNJbXBvcnRhbnRNb2RpZmllcixcclxuICAgICAgYmFzZUNsYXNzTmFtZSxcclxuICAgICAgbWF5YmVQb3N0Zml4TW9kaWZpZXJQb3NpdGlvblxyXG4gICAgfSA9IHBhcnNlQ2xhc3NOYW1lKG9yaWdpbmFsQ2xhc3NOYW1lKTtcclxuICAgIGxldCBoYXNQb3N0Zml4TW9kaWZpZXIgPSBCb29sZWFuKG1heWJlUG9zdGZpeE1vZGlmaWVyUG9zaXRpb24pO1xyXG4gICAgbGV0IGNsYXNzR3JvdXBJZCA9IGdldENsYXNzR3JvdXBJZChoYXNQb3N0Zml4TW9kaWZpZXIgPyBiYXNlQ2xhc3NOYW1lLnN1YnN0cmluZygwLCBtYXliZVBvc3RmaXhNb2RpZmllclBvc2l0aW9uKSA6IGJhc2VDbGFzc05hbWUpO1xyXG4gICAgaWYgKCFjbGFzc0dyb3VwSWQpIHtcclxuICAgICAgaWYgKCFoYXNQb3N0Zml4TW9kaWZpZXIpIHtcclxuICAgICAgICAvLyBOb3QgYSBUYWlsd2luZCBjbGFzc1xyXG4gICAgICAgIHJlc3VsdCA9IG9yaWdpbmFsQ2xhc3NOYW1lICsgKHJlc3VsdC5sZW5ndGggPiAwID8gJyAnICsgcmVzdWx0IDogcmVzdWx0KTtcclxuICAgICAgICBjb250aW51ZTtcclxuICAgICAgfVxyXG4gICAgICBjbGFzc0dyb3VwSWQgPSBnZXRDbGFzc0dyb3VwSWQoYmFzZUNsYXNzTmFtZSk7XHJcbiAgICAgIGlmICghY2xhc3NHcm91cElkKSB7XHJcbiAgICAgICAgLy8gTm90IGEgVGFpbHdpbmQgY2xhc3NcclxuICAgICAgICByZXN1bHQgPSBvcmlnaW5hbENsYXNzTmFtZSArIChyZXN1bHQubGVuZ3RoID4gMCA/ICcgJyArIHJlc3VsdCA6IHJlc3VsdCk7XHJcbiAgICAgICAgY29udGludWU7XHJcbiAgICAgIH1cclxuICAgICAgaGFzUG9zdGZpeE1vZGlmaWVyID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBjb25zdCB2YXJpYW50TW9kaWZpZXIgPSBzb3J0TW9kaWZpZXJzKG1vZGlmaWVycykuam9pbignOicpO1xyXG4gICAgY29uc3QgbW9kaWZpZXJJZCA9IGhhc0ltcG9ydGFudE1vZGlmaWVyID8gdmFyaWFudE1vZGlmaWVyICsgSU1QT1JUQU5UX01PRElGSUVSIDogdmFyaWFudE1vZGlmaWVyO1xyXG4gICAgY29uc3QgY2xhc3NJZCA9IG1vZGlmaWVySWQgKyBjbGFzc0dyb3VwSWQ7XHJcbiAgICBpZiAoY2xhc3NHcm91cHNJbkNvbmZsaWN0LmluY2x1ZGVzKGNsYXNzSWQpKSB7XHJcbiAgICAgIC8vIFRhaWx3aW5kIGNsYXNzIG9taXR0ZWQgZHVlIHRvIGNvbmZsaWN0XHJcbiAgICAgIGNvbnRpbnVlO1xyXG4gICAgfVxyXG4gICAgY2xhc3NHcm91cHNJbkNvbmZsaWN0LnB1c2goY2xhc3NJZCk7XHJcbiAgICBjb25zdCBjb25mbGljdEdyb3VwcyA9IGdldENvbmZsaWN0aW5nQ2xhc3NHcm91cElkcyhjbGFzc0dyb3VwSWQsIGhhc1Bvc3RmaXhNb2RpZmllcik7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbmZsaWN0R3JvdXBzLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgIGNvbnN0IGdyb3VwID0gY29uZmxpY3RHcm91cHNbaV07XHJcbiAgICAgIGNsYXNzR3JvdXBzSW5Db25mbGljdC5wdXNoKG1vZGlmaWVySWQgKyBncm91cCk7XHJcbiAgICB9XHJcbiAgICAvLyBUYWlsd2luZCBjbGFzcyBub3QgaW4gY29uZmxpY3RcclxuICAgIHJlc3VsdCA9IG9yaWdpbmFsQ2xhc3NOYW1lICsgKHJlc3VsdC5sZW5ndGggPiAwID8gJyAnICsgcmVzdWx0IDogcmVzdWx0KTtcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBUaGUgY29kZSBpbiB0aGlzIGZpbGUgaXMgY29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2x1a2VlZC9jbHN4IGFuZCBtb2RpZmllZCB0byBzdWl0IHRoZSBuZWVkcyBvZiB0YWlsd2luZC1tZXJnZSBiZXR0ZXIuXHJcbiAqXHJcbiAqIFNwZWNpZmljYWxseTpcclxuICogLSBSdW50aW1lIGNvZGUgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbHVrZWVkL2Nsc3gvYmxvYi92MS4yLjEvc3JjL2luZGV4LmpzXHJcbiAqIC0gVHlwZVNjcmlwdCB0eXBlcyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9sdWtlZWQvY2xzeC9ibG9iL3YxLjIuMS9jbHN4LmQudHNcclxuICpcclxuICogT3JpZ2luYWwgY29kZSBoYXMgTUlUIGxpY2Vuc2U6IENvcHlyaWdodCAoYykgTHVrZSBFZHdhcmRzIDxsdWtlLmVkd2FyZHMwNUBnbWFpbC5jb20+IChsdWtlZWQuY29tKVxyXG4gKi9cclxuZnVuY3Rpb24gdHdKb2luKCkge1xyXG4gIGxldCBpbmRleCA9IDA7XHJcbiAgbGV0IGFyZ3VtZW50O1xyXG4gIGxldCByZXNvbHZlZFZhbHVlO1xyXG4gIGxldCBzdHJpbmcgPSAnJztcclxuICB3aGlsZSAoaW5kZXggPCBhcmd1bWVudHMubGVuZ3RoKSB7XHJcbiAgICBpZiAoYXJndW1lbnQgPSBhcmd1bWVudHNbaW5kZXgrK10pIHtcclxuICAgICAgaWYgKHJlc29sdmVkVmFsdWUgPSB0b1ZhbHVlKGFyZ3VtZW50KSkge1xyXG4gICAgICAgIHN0cmluZyAmJiAoc3RyaW5nICs9ICcgJyk7XHJcbiAgICAgICAgc3RyaW5nICs9IHJlc29sdmVkVmFsdWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHN0cmluZztcclxufVxyXG5jb25zdCB0b1ZhbHVlID0gbWl4ID0+IHtcclxuICBpZiAodHlwZW9mIG1peCA9PT0gJ3N0cmluZycpIHtcclxuICAgIHJldHVybiBtaXg7XHJcbiAgfVxyXG4gIGxldCByZXNvbHZlZFZhbHVlO1xyXG4gIGxldCBzdHJpbmcgPSAnJztcclxuICBmb3IgKGxldCBrID0gMDsgayA8IG1peC5sZW5ndGg7IGsrKykge1xyXG4gICAgaWYgKG1peFtrXSkge1xyXG4gICAgICBpZiAocmVzb2x2ZWRWYWx1ZSA9IHRvVmFsdWUobWl4W2tdKSkge1xyXG4gICAgICAgIHN0cmluZyAmJiAoc3RyaW5nICs9ICcgJyk7XHJcbiAgICAgICAgc3RyaW5nICs9IHJlc29sdmVkVmFsdWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHN0cmluZztcclxufTtcclxuZnVuY3Rpb24gY3JlYXRlVGFpbHdpbmRNZXJnZShjcmVhdGVDb25maWdGaXJzdCwgLi4uY3JlYXRlQ29uZmlnUmVzdCkge1xyXG4gIGxldCBjb25maWdVdGlscztcclxuICBsZXQgY2FjaGVHZXQ7XHJcbiAgbGV0IGNhY2hlU2V0O1xyXG4gIGxldCBmdW5jdGlvblRvQ2FsbCA9IGluaXRUYWlsd2luZE1lcmdlO1xyXG4gIGZ1bmN0aW9uIGluaXRUYWlsd2luZE1lcmdlKGNsYXNzTGlzdCkge1xyXG4gICAgY29uc3QgY29uZmlnID0gY3JlYXRlQ29uZmlnUmVzdC5yZWR1Y2UoKHByZXZpb3VzQ29uZmlnLCBjcmVhdGVDb25maWdDdXJyZW50KSA9PiBjcmVhdGVDb25maWdDdXJyZW50KHByZXZpb3VzQ29uZmlnKSwgY3JlYXRlQ29uZmlnRmlyc3QoKSk7XHJcbiAgICBjb25maWdVdGlscyA9IGNyZWF0ZUNvbmZpZ1V0aWxzKGNvbmZpZyk7XHJcbiAgICBjYWNoZUdldCA9IGNvbmZpZ1V0aWxzLmNhY2hlLmdldDtcclxuICAgIGNhY2hlU2V0ID0gY29uZmlnVXRpbHMuY2FjaGUuc2V0O1xyXG4gICAgZnVuY3Rpb25Ub0NhbGwgPSB0YWlsd2luZE1lcmdlO1xyXG4gICAgcmV0dXJuIHRhaWx3aW5kTWVyZ2UoY2xhc3NMaXN0KTtcclxuICB9XHJcbiAgZnVuY3Rpb24gdGFpbHdpbmRNZXJnZShjbGFzc0xpc3QpIHtcclxuICAgIGNvbnN0IGNhY2hlZFJlc3VsdCA9IGNhY2hlR2V0KGNsYXNzTGlzdCk7XHJcbiAgICBpZiAoY2FjaGVkUmVzdWx0KSB7XHJcbiAgICAgIHJldHVybiBjYWNoZWRSZXN1bHQ7XHJcbiAgICB9XHJcbiAgICBjb25zdCByZXN1bHQgPSBtZXJnZUNsYXNzTGlzdChjbGFzc0xpc3QsIGNvbmZpZ1V0aWxzKTtcclxuICAgIGNhY2hlU2V0KGNsYXNzTGlzdCwgcmVzdWx0KTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIHJldHVybiBmdW5jdGlvbiBjYWxsVGFpbHdpbmRNZXJnZSgpIHtcclxuICAgIHJldHVybiBmdW5jdGlvblRvQ2FsbCh0d0pvaW4uYXBwbHkobnVsbCwgYXJndW1lbnRzKSk7XHJcbiAgfTtcclxufVxyXG5jb25zdCBmcm9tVGhlbWUgPSBrZXkgPT4ge1xyXG4gIGNvbnN0IHRoZW1lR2V0dGVyID0gdGhlbWUgPT4gdGhlbWVba2V5XSB8fCBbXTtcclxuICB0aGVtZUdldHRlci5pc1RoZW1lR2V0dGVyID0gdHJ1ZTtcclxuICByZXR1cm4gdGhlbWVHZXR0ZXI7XHJcbn07XHJcbmNvbnN0IGFyYml0cmFyeVZhbHVlUmVnZXggPSAvXlxcWyg/OihbYS16LV0rKTopPyguKylcXF0kL2k7XHJcbmNvbnN0IGZyYWN0aW9uUmVnZXggPSAvXlxcZCtcXC9cXGQrJC87XHJcbmNvbnN0IHN0cmluZ0xlbmd0aHMgPSAvKiNfX1BVUkVfXyovbmV3IFNldChbJ3B4JywgJ2Z1bGwnLCAnc2NyZWVuJ10pO1xyXG5jb25zdCB0c2hpcnRVbml0UmVnZXggPSAvXihcXGQrKFxcLlxcZCspPyk/KHhzfHNtfG1kfGxnfHhsKSQvO1xyXG5jb25zdCBsZW5ndGhVbml0UmVnZXggPSAvXFxkKyglfHB4fHI/ZW18W3NkbF0/dihbaHdpYl18bWlufG1heCl8cHR8cGN8aW58Y218bW18Y2FwfGNofGV4fHI/bGh8Y3Eod3xofGl8YnxtaW58bWF4KSl8XFxiKGNhbGN8bWlufG1heHxjbGFtcClcXCguK1xcKXxeMCQvO1xyXG5jb25zdCBjb2xvckZ1bmN0aW9uUmVnZXggPSAvXihyZ2JhP3xoc2xhP3xod2J8KG9rKT8obGFifGxjaCkpXFwoLitcXCkkLztcclxuLy8gU2hhZG93IGFsd2F5cyBiZWdpbnMgd2l0aCB4IGFuZCB5IG9mZnNldCBzZXBhcmF0ZWQgYnkgdW5kZXJzY29yZSBvcHRpb25hbGx5IHByZXBlbmRlZCBieSBpbnNldFxyXG5jb25zdCBzaGFkb3dSZWdleCA9IC9eKGluc2V0Xyk/LT8oKFxcZCspP1xcLj8oXFxkKylbYS16XSt8MClfLT8oKFxcZCspP1xcLj8oXFxkKylbYS16XSt8MCkvO1xyXG5jb25zdCBpbWFnZVJlZ2V4ID0gL14odXJsfGltYWdlfGltYWdlLXNldHxjcm9zcy1mYWRlfGVsZW1lbnR8KHJlcGVhdGluZy0pPyhsaW5lYXJ8cmFkaWFsfGNvbmljKS1ncmFkaWVudClcXCguK1xcKSQvO1xyXG5jb25zdCBpc0xlbmd0aCA9IHZhbHVlID0+IGlzTnVtYmVyKHZhbHVlKSB8fCBzdHJpbmdMZW5ndGhzLmhhcyh2YWx1ZSkgfHwgZnJhY3Rpb25SZWdleC50ZXN0KHZhbHVlKTtcclxuY29uc3QgaXNBcmJpdHJhcnlMZW5ndGggPSB2YWx1ZSA9PiBnZXRJc0FyYml0cmFyeVZhbHVlKHZhbHVlLCAnbGVuZ3RoJywgaXNMZW5ndGhPbmx5KTtcclxuY29uc3QgaXNOdW1iZXIgPSB2YWx1ZSA9PiBCb29sZWFuKHZhbHVlKSAmJiAhTnVtYmVyLmlzTmFOKE51bWJlcih2YWx1ZSkpO1xyXG5jb25zdCBpc0FyYml0cmFyeU51bWJlciA9IHZhbHVlID0+IGdldElzQXJiaXRyYXJ5VmFsdWUodmFsdWUsICdudW1iZXInLCBpc051bWJlcik7XHJcbmNvbnN0IGlzSW50ZWdlciA9IHZhbHVlID0+IEJvb2xlYW4odmFsdWUpICYmIE51bWJlci5pc0ludGVnZXIoTnVtYmVyKHZhbHVlKSk7XHJcbmNvbnN0IGlzUGVyY2VudCA9IHZhbHVlID0+IHZhbHVlLmVuZHNXaXRoKCclJykgJiYgaXNOdW1iZXIodmFsdWUuc2xpY2UoMCwgLTEpKTtcclxuY29uc3QgaXNBcmJpdHJhcnlWYWx1ZSA9IHZhbHVlID0+IGFyYml0cmFyeVZhbHVlUmVnZXgudGVzdCh2YWx1ZSk7XHJcbmNvbnN0IGlzVHNoaXJ0U2l6ZSA9IHZhbHVlID0+IHRzaGlydFVuaXRSZWdleC50ZXN0KHZhbHVlKTtcclxuY29uc3Qgc2l6ZUxhYmVscyA9IC8qI19fUFVSRV9fKi9uZXcgU2V0KFsnbGVuZ3RoJywgJ3NpemUnLCAncGVyY2VudGFnZSddKTtcclxuY29uc3QgaXNBcmJpdHJhcnlTaXplID0gdmFsdWUgPT4gZ2V0SXNBcmJpdHJhcnlWYWx1ZSh2YWx1ZSwgc2l6ZUxhYmVscywgaXNOZXZlcik7XHJcbmNvbnN0IGlzQXJiaXRyYXJ5UG9zaXRpb24gPSB2YWx1ZSA9PiBnZXRJc0FyYml0cmFyeVZhbHVlKHZhbHVlLCAncG9zaXRpb24nLCBpc05ldmVyKTtcclxuY29uc3QgaW1hZ2VMYWJlbHMgPSAvKiNfX1BVUkVfXyovbmV3IFNldChbJ2ltYWdlJywgJ3VybCddKTtcclxuY29uc3QgaXNBcmJpdHJhcnlJbWFnZSA9IHZhbHVlID0+IGdldElzQXJiaXRyYXJ5VmFsdWUodmFsdWUsIGltYWdlTGFiZWxzLCBpc0ltYWdlKTtcclxuY29uc3QgaXNBcmJpdHJhcnlTaGFkb3cgPSB2YWx1ZSA9PiBnZXRJc0FyYml0cmFyeVZhbHVlKHZhbHVlLCAnJywgaXNTaGFkb3cpO1xyXG5jb25zdCBpc0FueSA9ICgpID0+IHRydWU7XHJcbmNvbnN0IGdldElzQXJiaXRyYXJ5VmFsdWUgPSAodmFsdWUsIGxhYmVsLCB0ZXN0VmFsdWUpID0+IHtcclxuICBjb25zdCByZXN1bHQgPSBhcmJpdHJhcnlWYWx1ZVJlZ2V4LmV4ZWModmFsdWUpO1xyXG4gIGlmIChyZXN1bHQpIHtcclxuICAgIGlmIChyZXN1bHRbMV0pIHtcclxuICAgICAgcmV0dXJuIHR5cGVvZiBsYWJlbCA9PT0gJ3N0cmluZycgPyByZXN1bHRbMV0gPT09IGxhYmVsIDogbGFiZWwuaGFzKHJlc3VsdFsxXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGVzdFZhbHVlKHJlc3VsdFsyXSk7XHJcbiAgfVxyXG4gIHJldHVybiBmYWxzZTtcclxufTtcclxuY29uc3QgaXNMZW5ndGhPbmx5ID0gdmFsdWUgPT5cclxuLy8gYGNvbG9yRnVuY3Rpb25SZWdleGAgY2hlY2sgaXMgbmVjZXNzYXJ5IGJlY2F1c2UgY29sb3IgZnVuY3Rpb25zIGNhbiBoYXZlIHBlcmNlbnRhZ2VzIGluIHRoZW0gd2hpY2ggd2hpY2ggd291bGQgYmUgaW5jb3JyZWN0bHkgY2xhc3NpZmllZCBhcyBsZW5ndGhzLlxyXG4vLyBGb3IgZXhhbXBsZSwgYGhzbCgwIDAlIDAlKWAgd291bGQgYmUgY2xhc3NpZmllZCBhcyBhIGxlbmd0aCB3aXRob3V0IHRoaXMgY2hlY2suXHJcbi8vIEkgY291bGQgYWxzbyB1c2UgbG9va2JlaGluZCBhc3NlcnRpb24gaW4gYGxlbmd0aFVuaXRSZWdleGAgYnV0IHRoYXQgaXNuJ3Qgc3VwcG9ydGVkIHdpZGVseSBlbm91Z2guXHJcbmxlbmd0aFVuaXRSZWdleC50ZXN0KHZhbHVlKSAmJiAhY29sb3JGdW5jdGlvblJlZ2V4LnRlc3QodmFsdWUpO1xyXG5jb25zdCBpc05ldmVyID0gKCkgPT4gZmFsc2U7XHJcbmNvbnN0IGlzU2hhZG93ID0gdmFsdWUgPT4gc2hhZG93UmVnZXgudGVzdCh2YWx1ZSk7XHJcbmNvbnN0IGlzSW1hZ2UgPSB2YWx1ZSA9PiBpbWFnZVJlZ2V4LnRlc3QodmFsdWUpO1xyXG5jb25zdCB2YWxpZGF0b3JzID0gLyojX19QVVJFX18qL09iamVjdC5kZWZpbmVQcm9wZXJ0eSh7XHJcbiAgX19wcm90b19fOiBudWxsLFxyXG4gIGlzQW55LFxyXG4gIGlzQXJiaXRyYXJ5SW1hZ2UsXHJcbiAgaXNBcmJpdHJhcnlMZW5ndGgsXHJcbiAgaXNBcmJpdHJhcnlOdW1iZXIsXHJcbiAgaXNBcmJpdHJhcnlQb3NpdGlvbixcclxuICBpc0FyYml0cmFyeVNoYWRvdyxcclxuICBpc0FyYml0cmFyeVNpemUsXHJcbiAgaXNBcmJpdHJhcnlWYWx1ZSxcclxuICBpc0ludGVnZXIsXHJcbiAgaXNMZW5ndGgsXHJcbiAgaXNOdW1iZXIsXHJcbiAgaXNQZXJjZW50LFxyXG4gIGlzVHNoaXJ0U2l6ZVxyXG59LCBTeW1ib2wudG9TdHJpbmdUYWcsIHtcclxuICB2YWx1ZTogJ01vZHVsZSdcclxufSk7XHJcbmNvbnN0IGdldERlZmF1bHRDb25maWcgPSAoKSA9PiB7XHJcbiAgY29uc3QgY29sb3JzID0gZnJvbVRoZW1lKCdjb2xvcnMnKTtcclxuICBjb25zdCBzcGFjaW5nID0gZnJvbVRoZW1lKCdzcGFjaW5nJyk7XHJcbiAgY29uc3QgYmx1ciA9IGZyb21UaGVtZSgnYmx1cicpO1xyXG4gIGNvbnN0IGJyaWdodG5lc3MgPSBmcm9tVGhlbWUoJ2JyaWdodG5lc3MnKTtcclxuICBjb25zdCBib3JkZXJDb2xvciA9IGZyb21UaGVtZSgnYm9yZGVyQ29sb3InKTtcclxuICBjb25zdCBib3JkZXJSYWRpdXMgPSBmcm9tVGhlbWUoJ2JvcmRlclJhZGl1cycpO1xyXG4gIGNvbnN0IGJvcmRlclNwYWNpbmcgPSBmcm9tVGhlbWUoJ2JvcmRlclNwYWNpbmcnKTtcclxuICBjb25zdCBib3JkZXJXaWR0aCA9IGZyb21UaGVtZSgnYm9yZGVyV2lkdGgnKTtcclxuICBjb25zdCBjb250cmFzdCA9IGZyb21UaGVtZSgnY29udHJhc3QnKTtcclxuICBjb25zdCBncmF5c2NhbGUgPSBmcm9tVGhlbWUoJ2dyYXlzY2FsZScpO1xyXG4gIGNvbnN0IGh1ZVJvdGF0ZSA9IGZyb21UaGVtZSgnaHVlUm90YXRlJyk7XHJcbiAgY29uc3QgaW52ZXJ0ID0gZnJvbVRoZW1lKCdpbnZlcnQnKTtcclxuICBjb25zdCBnYXAgPSBmcm9tVGhlbWUoJ2dhcCcpO1xyXG4gIGNvbnN0IGdyYWRpZW50Q29sb3JTdG9wcyA9IGZyb21UaGVtZSgnZ3JhZGllbnRDb2xvclN0b3BzJyk7XHJcbiAgY29uc3QgZ3JhZGllbnRDb2xvclN0b3BQb3NpdGlvbnMgPSBmcm9tVGhlbWUoJ2dyYWRpZW50Q29sb3JTdG9wUG9zaXRpb25zJyk7XHJcbiAgY29uc3QgaW5zZXQgPSBmcm9tVGhlbWUoJ2luc2V0Jyk7XHJcbiAgY29uc3QgbWFyZ2luID0gZnJvbVRoZW1lKCdtYXJnaW4nKTtcclxuICBjb25zdCBvcGFjaXR5ID0gZnJvbVRoZW1lKCdvcGFjaXR5Jyk7XHJcbiAgY29uc3QgcGFkZGluZyA9IGZyb21UaGVtZSgncGFkZGluZycpO1xyXG4gIGNvbnN0IHNhdHVyYXRlID0gZnJvbVRoZW1lKCdzYXR1cmF0ZScpO1xyXG4gIGNvbnN0IHNjYWxlID0gZnJvbVRoZW1lKCdzY2FsZScpO1xyXG4gIGNvbnN0IHNlcGlhID0gZnJvbVRoZW1lKCdzZXBpYScpO1xyXG4gIGNvbnN0IHNrZXcgPSBmcm9tVGhlbWUoJ3NrZXcnKTtcclxuICBjb25zdCBzcGFjZSA9IGZyb21UaGVtZSgnc3BhY2UnKTtcclxuICBjb25zdCB0cmFuc2xhdGUgPSBmcm9tVGhlbWUoJ3RyYW5zbGF0ZScpO1xyXG4gIGNvbnN0IGdldE92ZXJzY3JvbGwgPSAoKSA9PiBbJ2F1dG8nLCAnY29udGFpbicsICdub25lJ107XHJcbiAgY29uc3QgZ2V0T3ZlcmZsb3cgPSAoKSA9PiBbJ2F1dG8nLCAnaGlkZGVuJywgJ2NsaXAnLCAndmlzaWJsZScsICdzY3JvbGwnXTtcclxuICBjb25zdCBnZXRTcGFjaW5nV2l0aEF1dG9BbmRBcmJpdHJhcnkgPSAoKSA9PiBbJ2F1dG8nLCBpc0FyYml0cmFyeVZhbHVlLCBzcGFjaW5nXTtcclxuICBjb25zdCBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSA9ICgpID0+IFtpc0FyYml0cmFyeVZhbHVlLCBzcGFjaW5nXTtcclxuICBjb25zdCBnZXRMZW5ndGhXaXRoRW1wdHlBbmRBcmJpdHJhcnkgPSAoKSA9PiBbJycsIGlzTGVuZ3RoLCBpc0FyYml0cmFyeUxlbmd0aF07XHJcbiAgY29uc3QgZ2V0TnVtYmVyV2l0aEF1dG9BbmRBcmJpdHJhcnkgPSAoKSA9PiBbJ2F1dG8nLCBpc051bWJlciwgaXNBcmJpdHJhcnlWYWx1ZV07XHJcbiAgY29uc3QgZ2V0UG9zaXRpb25zID0gKCkgPT4gWydib3R0b20nLCAnY2VudGVyJywgJ2xlZnQnLCAnbGVmdC1ib3R0b20nLCAnbGVmdC10b3AnLCAncmlnaHQnLCAncmlnaHQtYm90dG9tJywgJ3JpZ2h0LXRvcCcsICd0b3AnXTtcclxuICBjb25zdCBnZXRMaW5lU3R5bGVzID0gKCkgPT4gWydzb2xpZCcsICdkYXNoZWQnLCAnZG90dGVkJywgJ2RvdWJsZScsICdub25lJ107XHJcbiAgY29uc3QgZ2V0QmxlbmRNb2RlcyA9ICgpID0+IFsnbm9ybWFsJywgJ211bHRpcGx5JywgJ3NjcmVlbicsICdvdmVybGF5JywgJ2RhcmtlbicsICdsaWdodGVuJywgJ2NvbG9yLWRvZGdlJywgJ2NvbG9yLWJ1cm4nLCAnaGFyZC1saWdodCcsICdzb2Z0LWxpZ2h0JywgJ2RpZmZlcmVuY2UnLCAnZXhjbHVzaW9uJywgJ2h1ZScsICdzYXR1cmF0aW9uJywgJ2NvbG9yJywgJ2x1bWlub3NpdHknXTtcclxuICBjb25zdCBnZXRBbGlnbiA9ICgpID0+IFsnc3RhcnQnLCAnZW5kJywgJ2NlbnRlcicsICdiZXR3ZWVuJywgJ2Fyb3VuZCcsICdldmVubHknLCAnc3RyZXRjaCddO1xyXG4gIGNvbnN0IGdldFplcm9BbmRFbXB0eSA9ICgpID0+IFsnJywgJzAnLCBpc0FyYml0cmFyeVZhbHVlXTtcclxuICBjb25zdCBnZXRCcmVha3MgPSAoKSA9PiBbJ2F1dG8nLCAnYXZvaWQnLCAnYWxsJywgJ2F2b2lkLXBhZ2UnLCAncGFnZScsICdsZWZ0JywgJ3JpZ2h0JywgJ2NvbHVtbiddO1xyXG4gIGNvbnN0IGdldE51bWJlckFuZEFyYml0cmFyeSA9ICgpID0+IFtpc051bWJlciwgaXNBcmJpdHJhcnlWYWx1ZV07XHJcbiAgcmV0dXJuIHtcclxuICAgIGNhY2hlU2l6ZTogNTAwLFxyXG4gICAgc2VwYXJhdG9yOiAnOicsXHJcbiAgICB0aGVtZToge1xyXG4gICAgICBjb2xvcnM6IFtpc0FueV0sXHJcbiAgICAgIHNwYWNpbmc6IFtpc0xlbmd0aCwgaXNBcmJpdHJhcnlMZW5ndGhdLFxyXG4gICAgICBibHVyOiBbJ25vbmUnLCAnJywgaXNUc2hpcnRTaXplLCBpc0FyYml0cmFyeVZhbHVlXSxcclxuICAgICAgYnJpZ2h0bmVzczogZ2V0TnVtYmVyQW5kQXJiaXRyYXJ5KCksXHJcbiAgICAgIGJvcmRlckNvbG9yOiBbY29sb3JzXSxcclxuICAgICAgYm9yZGVyUmFkaXVzOiBbJ25vbmUnLCAnJywgJ2Z1bGwnLCBpc1RzaGlydFNpemUsIGlzQXJiaXRyYXJ5VmFsdWVdLFxyXG4gICAgICBib3JkZXJTcGFjaW5nOiBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSgpLFxyXG4gICAgICBib3JkZXJXaWR0aDogZ2V0TGVuZ3RoV2l0aEVtcHR5QW5kQXJiaXRyYXJ5KCksXHJcbiAgICAgIGNvbnRyYXN0OiBnZXROdW1iZXJBbmRBcmJpdHJhcnkoKSxcclxuICAgICAgZ3JheXNjYWxlOiBnZXRaZXJvQW5kRW1wdHkoKSxcclxuICAgICAgaHVlUm90YXRlOiBnZXROdW1iZXJBbmRBcmJpdHJhcnkoKSxcclxuICAgICAgaW52ZXJ0OiBnZXRaZXJvQW5kRW1wdHkoKSxcclxuICAgICAgZ2FwOiBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSgpLFxyXG4gICAgICBncmFkaWVudENvbG9yU3RvcHM6IFtjb2xvcnNdLFxyXG4gICAgICBncmFkaWVudENvbG9yU3RvcFBvc2l0aW9uczogW2lzUGVyY2VudCwgaXNBcmJpdHJhcnlMZW5ndGhdLFxyXG4gICAgICBpbnNldDogZ2V0U3BhY2luZ1dpdGhBdXRvQW5kQXJiaXRyYXJ5KCksXHJcbiAgICAgIG1hcmdpbjogZ2V0U3BhY2luZ1dpdGhBdXRvQW5kQXJiaXRyYXJ5KCksXHJcbiAgICAgIG9wYWNpdHk6IGdldE51bWJlckFuZEFyYml0cmFyeSgpLFxyXG4gICAgICBwYWRkaW5nOiBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSgpLFxyXG4gICAgICBzYXR1cmF0ZTogZ2V0TnVtYmVyQW5kQXJiaXRyYXJ5KCksXHJcbiAgICAgIHNjYWxlOiBnZXROdW1iZXJBbmRBcmJpdHJhcnkoKSxcclxuICAgICAgc2VwaWE6IGdldFplcm9BbmRFbXB0eSgpLFxyXG4gICAgICBza2V3OiBnZXROdW1iZXJBbmRBcmJpdHJhcnkoKSxcclxuICAgICAgc3BhY2U6IGdldFNwYWNpbmdXaXRoQXJiaXRyYXJ5KCksXHJcbiAgICAgIHRyYW5zbGF0ZTogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgfSxcclxuICAgIGNsYXNzR3JvdXBzOiB7XHJcbiAgICAgIC8vIExheW91dFxyXG4gICAgICAvKipcclxuICAgICAgICogQXNwZWN0IFJhdGlvXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9hc3BlY3QtcmF0aW9cclxuICAgICAgICovXHJcbiAgICAgIGFzcGVjdDogW3tcclxuICAgICAgICBhc3BlY3Q6IFsnYXV0bycsICdzcXVhcmUnLCAndmlkZW8nLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIENvbnRhaW5lclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvY29udGFpbmVyXHJcbiAgICAgICAqL1xyXG4gICAgICBjb250YWluZXI6IFsnY29udGFpbmVyJ10sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBDb2x1bW5zXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9jb2x1bW5zXHJcbiAgICAgICAqL1xyXG4gICAgICBjb2x1bW5zOiBbe1xyXG4gICAgICAgIGNvbHVtbnM6IFtpc1RzaGlydFNpemVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQnJlYWsgQWZ0ZXJcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JyZWFrLWFmdGVyXHJcbiAgICAgICAqL1xyXG4gICAgICAnYnJlYWstYWZ0ZXInOiBbe1xyXG4gICAgICAgICdicmVhay1hZnRlcic6IGdldEJyZWFrcygpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQnJlYWsgQmVmb3JlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9icmVhay1iZWZvcmVcclxuICAgICAgICovXHJcbiAgICAgICdicmVhay1iZWZvcmUnOiBbe1xyXG4gICAgICAgICdicmVhay1iZWZvcmUnOiBnZXRCcmVha3MoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJyZWFrIEluc2lkZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYnJlYWstaW5zaWRlXHJcbiAgICAgICAqL1xyXG4gICAgICAnYnJlYWstaW5zaWRlJzogW3tcclxuICAgICAgICAnYnJlYWstaW5zaWRlJzogWydhdXRvJywgJ2F2b2lkJywgJ2F2b2lkLXBhZ2UnLCAnYXZvaWQtY29sdW1uJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3ggRGVjb3JhdGlvbiBCcmVha1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm94LWRlY29yYXRpb24tYnJlYWtcclxuICAgICAgICovXHJcbiAgICAgICdib3gtZGVjb3JhdGlvbic6IFt7XHJcbiAgICAgICAgJ2JveC1kZWNvcmF0aW9uJzogWydzbGljZScsICdjbG9uZSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm94IFNpemluZ1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm94LXNpemluZ1xyXG4gICAgICAgKi9cclxuICAgICAgYm94OiBbe1xyXG4gICAgICAgIGJveDogWydib3JkZXInLCAnY29udGVudCddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogRGlzcGxheVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZGlzcGxheVxyXG4gICAgICAgKi9cclxuICAgICAgZGlzcGxheTogWydibG9jaycsICdpbmxpbmUtYmxvY2snLCAnaW5saW5lJywgJ2ZsZXgnLCAnaW5saW5lLWZsZXgnLCAndGFibGUnLCAnaW5saW5lLXRhYmxlJywgJ3RhYmxlLWNhcHRpb24nLCAndGFibGUtY2VsbCcsICd0YWJsZS1jb2x1bW4nLCAndGFibGUtY29sdW1uLWdyb3VwJywgJ3RhYmxlLWZvb3Rlci1ncm91cCcsICd0YWJsZS1oZWFkZXItZ3JvdXAnLCAndGFibGUtcm93LWdyb3VwJywgJ3RhYmxlLXJvdycsICdmbG93LXJvb3QnLCAnZ3JpZCcsICdpbmxpbmUtZ3JpZCcsICdjb250ZW50cycsICdsaXN0LWl0ZW0nLCAnaGlkZGVuJ10sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGbG9hdHNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2Zsb2F0XHJcbiAgICAgICAqL1xyXG4gICAgICBmbG9hdDogW3tcclxuICAgICAgICBmbG9hdDogWydyaWdodCcsICdsZWZ0JywgJ25vbmUnLCAnc3RhcnQnLCAnZW5kJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBDbGVhclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvY2xlYXJcclxuICAgICAgICovXHJcbiAgICAgIGNsZWFyOiBbe1xyXG4gICAgICAgIGNsZWFyOiBbJ2xlZnQnLCAncmlnaHQnLCAnYm90aCcsICdub25lJywgJ3N0YXJ0JywgJ2VuZCddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogSXNvbGF0aW9uXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9pc29sYXRpb25cclxuICAgICAgICovXHJcbiAgICAgIGlzb2xhdGlvbjogWydpc29sYXRlJywgJ2lzb2xhdGlvbi1hdXRvJ10sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBPYmplY3QgRml0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9vYmplY3QtZml0XHJcbiAgICAgICAqL1xyXG4gICAgICAnb2JqZWN0LWZpdCc6IFt7XHJcbiAgICAgICAgb2JqZWN0OiBbJ2NvbnRhaW4nLCAnY292ZXInLCAnZmlsbCcsICdub25lJywgJ3NjYWxlLWRvd24nXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE9iamVjdCBQb3NpdGlvblxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvb2JqZWN0LXBvc2l0aW9uXHJcbiAgICAgICAqL1xyXG4gICAgICAnb2JqZWN0LXBvc2l0aW9uJzogW3tcclxuICAgICAgICBvYmplY3Q6IFsuLi5nZXRQb3NpdGlvbnMoKSwgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBPdmVyZmxvd1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvb3ZlcmZsb3dcclxuICAgICAgICovXHJcbiAgICAgIG92ZXJmbG93OiBbe1xyXG4gICAgICAgIG92ZXJmbG93OiBnZXRPdmVyZmxvdygpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogT3ZlcmZsb3cgWFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvb3ZlcmZsb3dcclxuICAgICAgICovXHJcbiAgICAgICdvdmVyZmxvdy14JzogW3tcclxuICAgICAgICAnb3ZlcmZsb3cteCc6IGdldE92ZXJmbG93KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBPdmVyZmxvdyBZXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9vdmVyZmxvd1xyXG4gICAgICAgKi9cclxuICAgICAgJ292ZXJmbG93LXknOiBbe1xyXG4gICAgICAgICdvdmVyZmxvdy15JzogZ2V0T3ZlcmZsb3coKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE92ZXJzY3JvbGwgQmVoYXZpb3JcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL292ZXJzY3JvbGwtYmVoYXZpb3JcclxuICAgICAgICovXHJcbiAgICAgIG92ZXJzY3JvbGw6IFt7XHJcbiAgICAgICAgb3ZlcnNjcm9sbDogZ2V0T3ZlcnNjcm9sbCgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogT3ZlcnNjcm9sbCBCZWhhdmlvciBYXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9vdmVyc2Nyb2xsLWJlaGF2aW9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnb3ZlcnNjcm9sbC14JzogW3tcclxuICAgICAgICAnb3ZlcnNjcm9sbC14JzogZ2V0T3ZlcnNjcm9sbCgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogT3ZlcnNjcm9sbCBCZWhhdmlvciBZXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9vdmVyc2Nyb2xsLWJlaGF2aW9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnb3ZlcnNjcm9sbC15JzogW3tcclxuICAgICAgICAnb3ZlcnNjcm9sbC15JzogZ2V0T3ZlcnNjcm9sbCgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUG9zaXRpb25cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Bvc2l0aW9uXHJcbiAgICAgICAqL1xyXG4gICAgICBwb3NpdGlvbjogWydzdGF0aWMnLCAnZml4ZWQnLCAnYWJzb2x1dGUnLCAncmVsYXRpdmUnLCAnc3RpY2t5J10sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBUb3AgLyBSaWdodCAvIEJvdHRvbSAvIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RvcC1yaWdodC1ib3R0b20tbGVmdFxyXG4gICAgICAgKi9cclxuICAgICAgaW5zZXQ6IFt7XHJcbiAgICAgICAgaW5zZXQ6IFtpbnNldF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBSaWdodCAvIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RvcC1yaWdodC1ib3R0b20tbGVmdFxyXG4gICAgICAgKi9cclxuICAgICAgJ2luc2V0LXgnOiBbe1xyXG4gICAgICAgICdpbnNldC14JzogW2luc2V0XVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRvcCAvIEJvdHRvbVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdG9wLXJpZ2h0LWJvdHRvbS1sZWZ0XHJcbiAgICAgICAqL1xyXG4gICAgICAnaW5zZXQteSc6IFt7XHJcbiAgICAgICAgJ2luc2V0LXknOiBbaW5zZXRdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU3RhcnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RvcC1yaWdodC1ib3R0b20tbGVmdFxyXG4gICAgICAgKi9cclxuICAgICAgc3RhcnQ6IFt7XHJcbiAgICAgICAgc3RhcnQ6IFtpbnNldF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBFbmRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RvcC1yaWdodC1ib3R0b20tbGVmdFxyXG4gICAgICAgKi9cclxuICAgICAgZW5kOiBbe1xyXG4gICAgICAgIGVuZDogW2luc2V0XVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRvcFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdG9wLXJpZ2h0LWJvdHRvbS1sZWZ0XHJcbiAgICAgICAqL1xyXG4gICAgICB0b3A6IFt7XHJcbiAgICAgICAgdG9wOiBbaW5zZXRdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUmlnaHRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RvcC1yaWdodC1ib3R0b20tbGVmdFxyXG4gICAgICAgKi9cclxuICAgICAgcmlnaHQ6IFt7XHJcbiAgICAgICAgcmlnaHQ6IFtpbnNldF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3R0b21cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RvcC1yaWdodC1ib3R0b20tbGVmdFxyXG4gICAgICAgKi9cclxuICAgICAgYm90dG9tOiBbe1xyXG4gICAgICAgIGJvdHRvbTogW2luc2V0XVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RvcC1yaWdodC1ib3R0b20tbGVmdFxyXG4gICAgICAgKi9cclxuICAgICAgbGVmdDogW3tcclxuICAgICAgICBsZWZ0OiBbaW5zZXRdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVmlzaWJpbGl0eVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdmlzaWJpbGl0eVxyXG4gICAgICAgKi9cclxuICAgICAgdmlzaWJpbGl0eTogWyd2aXNpYmxlJywgJ2ludmlzaWJsZScsICdjb2xsYXBzZSddLFxyXG4gICAgICAvKipcclxuICAgICAgICogWi1JbmRleFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvei1pbmRleFxyXG4gICAgICAgKi9cclxuICAgICAgejogW3tcclxuICAgICAgICB6OiBbJ2F1dG8nLCBpc0ludGVnZXIsIGlzQXJiaXRyYXJ5VmFsdWVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvLyBGbGV4Ym94IGFuZCBHcmlkXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGbGV4IEJhc2lzXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9mbGV4LWJhc2lzXHJcbiAgICAgICAqL1xyXG4gICAgICBiYXNpczogW3tcclxuICAgICAgICBiYXNpczogZ2V0U3BhY2luZ1dpdGhBdXRvQW5kQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGbGV4IERpcmVjdGlvblxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZmxleC1kaXJlY3Rpb25cclxuICAgICAgICovXHJcbiAgICAgICdmbGV4LWRpcmVjdGlvbic6IFt7XHJcbiAgICAgICAgZmxleDogWydyb3cnLCAncm93LXJldmVyc2UnLCAnY29sJywgJ2NvbC1yZXZlcnNlJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGbGV4IFdyYXBcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZsZXgtd3JhcFxyXG4gICAgICAgKi9cclxuICAgICAgJ2ZsZXgtd3JhcCc6IFt7XHJcbiAgICAgICAgZmxleDogWyd3cmFwJywgJ3dyYXAtcmV2ZXJzZScsICdub3dyYXAnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEZsZXhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZsZXhcclxuICAgICAgICovXHJcbiAgICAgIGZsZXg6IFt7XHJcbiAgICAgICAgZmxleDogWycxJywgJ2F1dG8nLCAnaW5pdGlhbCcsICdub25lJywgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGbGV4IEdyb3dcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZsZXgtZ3Jvd1xyXG4gICAgICAgKi9cclxuICAgICAgZ3JvdzogW3tcclxuICAgICAgICBncm93OiBnZXRaZXJvQW5kRW1wdHkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEZsZXggU2hyaW5rXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9mbGV4LXNocmlua1xyXG4gICAgICAgKi9cclxuICAgICAgc2hyaW5rOiBbe1xyXG4gICAgICAgIHNocmluazogZ2V0WmVyb0FuZEVtcHR5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBPcmRlclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvb3JkZXJcclxuICAgICAgICovXHJcbiAgICAgIG9yZGVyOiBbe1xyXG4gICAgICAgIG9yZGVyOiBbJ2ZpcnN0JywgJ2xhc3QnLCAnbm9uZScsIGlzSW50ZWdlciwgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHcmlkIFRlbXBsYXRlIENvbHVtbnNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2dyaWQtdGVtcGxhdGUtY29sdW1uc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2dyaWQtY29scyc6IFt7XHJcbiAgICAgICAgJ2dyaWQtY29scyc6IFtpc0FueV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHcmlkIENvbHVtbiBTdGFydCAvIEVuZFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZ3JpZC1jb2x1bW5cclxuICAgICAgICovXHJcbiAgICAgICdjb2wtc3RhcnQtZW5kJzogW3tcclxuICAgICAgICBjb2w6IFsnYXV0bycsIHtcclxuICAgICAgICAgIHNwYW46IFsnZnVsbCcsIGlzSW50ZWdlciwgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgICB9LCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEdyaWQgQ29sdW1uIFN0YXJ0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmlkLWNvbHVtblxyXG4gICAgICAgKi9cclxuICAgICAgJ2NvbC1zdGFydCc6IFt7XHJcbiAgICAgICAgJ2NvbC1zdGFydCc6IGdldE51bWJlcldpdGhBdXRvQW5kQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHcmlkIENvbHVtbiBFbmRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2dyaWQtY29sdW1uXHJcbiAgICAgICAqL1xyXG4gICAgICAnY29sLWVuZCc6IFt7XHJcbiAgICAgICAgJ2NvbC1lbmQnOiBnZXROdW1iZXJXaXRoQXV0b0FuZEFyYml0cmFyeSgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR3JpZCBUZW1wbGF0ZSBSb3dzXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmlkLXRlbXBsYXRlLXJvd3NcclxuICAgICAgICovXHJcbiAgICAgICdncmlkLXJvd3MnOiBbe1xyXG4gICAgICAgICdncmlkLXJvd3MnOiBbaXNBbnldXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR3JpZCBSb3cgU3RhcnQgLyBFbmRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2dyaWQtcm93XHJcbiAgICAgICAqL1xyXG4gICAgICAncm93LXN0YXJ0LWVuZCc6IFt7XHJcbiAgICAgICAgcm93OiBbJ2F1dG8nLCB7XHJcbiAgICAgICAgICBzcGFuOiBbaXNJbnRlZ2VyLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICAgIH0sIGlzQXJiaXRyYXJ5VmFsdWVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR3JpZCBSb3cgU3RhcnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2dyaWQtcm93XHJcbiAgICAgICAqL1xyXG4gICAgICAncm93LXN0YXJ0JzogW3tcclxuICAgICAgICAncm93LXN0YXJ0JzogZ2V0TnVtYmVyV2l0aEF1dG9BbmRBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEdyaWQgUm93IEVuZFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZ3JpZC1yb3dcclxuICAgICAgICovXHJcbiAgICAgICdyb3ctZW5kJzogW3tcclxuICAgICAgICAncm93LWVuZCc6IGdldE51bWJlcldpdGhBdXRvQW5kQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHcmlkIEF1dG8gRmxvd1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZ3JpZC1hdXRvLWZsb3dcclxuICAgICAgICovXHJcbiAgICAgICdncmlkLWZsb3cnOiBbe1xyXG4gICAgICAgICdncmlkLWZsb3cnOiBbJ3JvdycsICdjb2wnLCAnZGVuc2UnLCAncm93LWRlbnNlJywgJ2NvbC1kZW5zZSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR3JpZCBBdXRvIENvbHVtbnNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2dyaWQtYXV0by1jb2x1bW5zXHJcbiAgICAgICAqL1xyXG4gICAgICAnYXV0by1jb2xzJzogW3tcclxuICAgICAgICAnYXV0by1jb2xzJzogWydhdXRvJywgJ21pbicsICdtYXgnLCAnZnInLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEdyaWQgQXV0byBSb3dzXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmlkLWF1dG8tcm93c1xyXG4gICAgICAgKi9cclxuICAgICAgJ2F1dG8tcm93cyc6IFt7XHJcbiAgICAgICAgJ2F1dG8tcm93cyc6IFsnYXV0bycsICdtaW4nLCAnbWF4JywgJ2ZyJywgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHYXBcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2dhcFxyXG4gICAgICAgKi9cclxuICAgICAgZ2FwOiBbe1xyXG4gICAgICAgIGdhcDogW2dhcF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHYXAgWFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZ2FwXHJcbiAgICAgICAqL1xyXG4gICAgICAnZ2FwLXgnOiBbe1xyXG4gICAgICAgICdnYXAteCc6IFtnYXBdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR2FwIFlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2dhcFxyXG4gICAgICAgKi9cclxuICAgICAgJ2dhcC15JzogW3tcclxuICAgICAgICAnZ2FwLXknOiBbZ2FwXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEp1c3RpZnkgQ29udGVudFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvanVzdGlmeS1jb250ZW50XHJcbiAgICAgICAqL1xyXG4gICAgICAnanVzdGlmeS1jb250ZW50JzogW3tcclxuICAgICAgICBqdXN0aWZ5OiBbJ25vcm1hbCcsIC4uLmdldEFsaWduKCldXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogSnVzdGlmeSBJdGVtc1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvanVzdGlmeS1pdGVtc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2p1c3RpZnktaXRlbXMnOiBbe1xyXG4gICAgICAgICdqdXN0aWZ5LWl0ZW1zJzogWydzdGFydCcsICdlbmQnLCAnY2VudGVyJywgJ3N0cmV0Y2gnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEp1c3RpZnkgU2VsZlxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvanVzdGlmeS1zZWxmXHJcbiAgICAgICAqL1xyXG4gICAgICAnanVzdGlmeS1zZWxmJzogW3tcclxuICAgICAgICAnanVzdGlmeS1zZWxmJzogWydhdXRvJywgJ3N0YXJ0JywgJ2VuZCcsICdjZW50ZXInLCAnc3RyZXRjaCddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQWxpZ24gQ29udGVudFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYWxpZ24tY29udGVudFxyXG4gICAgICAgKi9cclxuICAgICAgJ2FsaWduLWNvbnRlbnQnOiBbe1xyXG4gICAgICAgIGNvbnRlbnQ6IFsnbm9ybWFsJywgLi4uZ2V0QWxpZ24oKSwgJ2Jhc2VsaW5lJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBBbGlnbiBJdGVtc1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYWxpZ24taXRlbXNcclxuICAgICAgICovXHJcbiAgICAgICdhbGlnbi1pdGVtcyc6IFt7XHJcbiAgICAgICAgaXRlbXM6IFsnc3RhcnQnLCAnZW5kJywgJ2NlbnRlcicsICdiYXNlbGluZScsICdzdHJldGNoJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBBbGlnbiBTZWxmXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9hbGlnbi1zZWxmXHJcbiAgICAgICAqL1xyXG4gICAgICAnYWxpZ24tc2VsZic6IFt7XHJcbiAgICAgICAgc2VsZjogWydhdXRvJywgJ3N0YXJ0JywgJ2VuZCcsICdjZW50ZXInLCAnc3RyZXRjaCcsICdiYXNlbGluZSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGxhY2UgQ29udGVudFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvcGxhY2UtY29udGVudFxyXG4gICAgICAgKi9cclxuICAgICAgJ3BsYWNlLWNvbnRlbnQnOiBbe1xyXG4gICAgICAgICdwbGFjZS1jb250ZW50JzogWy4uLmdldEFsaWduKCksICdiYXNlbGluZSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGxhY2UgSXRlbXNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3BsYWNlLWl0ZW1zXHJcbiAgICAgICAqL1xyXG4gICAgICAncGxhY2UtaXRlbXMnOiBbe1xyXG4gICAgICAgICdwbGFjZS1pdGVtcyc6IFsnc3RhcnQnLCAnZW5kJywgJ2NlbnRlcicsICdiYXNlbGluZScsICdzdHJldGNoJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBQbGFjZSBTZWxmXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9wbGFjZS1zZWxmXHJcbiAgICAgICAqL1xyXG4gICAgICAncGxhY2Utc2VsZic6IFt7XHJcbiAgICAgICAgJ3BsYWNlLXNlbGYnOiBbJ2F1dG8nLCAnc3RhcnQnLCAnZW5kJywgJ2NlbnRlcicsICdzdHJldGNoJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8vIFNwYWNpbmdcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFBhZGRpbmdcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3BhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgIHA6IFt7XHJcbiAgICAgICAgcDogW3BhZGRpbmddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGFkZGluZyBYXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICBweDogW3tcclxuICAgICAgICBweDogW3BhZGRpbmddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGFkZGluZyBZXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICBweTogW3tcclxuICAgICAgICBweTogW3BhZGRpbmddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGFkZGluZyBTdGFydFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvcGFkZGluZ1xyXG4gICAgICAgKi9cclxuICAgICAgcHM6IFt7XHJcbiAgICAgICAgcHM6IFtwYWRkaW5nXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFBhZGRpbmcgRW5kXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICBwZTogW3tcclxuICAgICAgICBwZTogW3BhZGRpbmddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGFkZGluZyBUb3BcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3BhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgIHB0OiBbe1xyXG4gICAgICAgIHB0OiBbcGFkZGluZ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBQYWRkaW5nIFJpZ2h0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICBwcjogW3tcclxuICAgICAgICBwcjogW3BhZGRpbmddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGFkZGluZyBCb3R0b21cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3BhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgIHBiOiBbe1xyXG4gICAgICAgIHBiOiBbcGFkZGluZ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBQYWRkaW5nIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3BhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgIHBsOiBbe1xyXG4gICAgICAgIHBsOiBbcGFkZGluZ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBNYXJnaW5cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL21hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgbTogW3tcclxuICAgICAgICBtOiBbbWFyZ2luXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE1hcmdpbiBYXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9tYXJnaW5cclxuICAgICAgICovXHJcbiAgICAgIG14OiBbe1xyXG4gICAgICAgIG14OiBbbWFyZ2luXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE1hcmdpbiBZXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9tYXJnaW5cclxuICAgICAgICovXHJcbiAgICAgIG15OiBbe1xyXG4gICAgICAgIG15OiBbbWFyZ2luXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE1hcmdpbiBTdGFydFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvbWFyZ2luXHJcbiAgICAgICAqL1xyXG4gICAgICBtczogW3tcclxuICAgICAgICBtczogW21hcmdpbl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBNYXJnaW4gRW5kXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9tYXJnaW5cclxuICAgICAgICovXHJcbiAgICAgIG1lOiBbe1xyXG4gICAgICAgIG1lOiBbbWFyZ2luXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE1hcmdpbiBUb3BcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL21hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgbXQ6IFt7XHJcbiAgICAgICAgbXQ6IFttYXJnaW5dXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogTWFyZ2luIFJpZ2h0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9tYXJnaW5cclxuICAgICAgICovXHJcbiAgICAgIG1yOiBbe1xyXG4gICAgICAgIG1yOiBbbWFyZ2luXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE1hcmdpbiBCb3R0b21cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL21hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgbWI6IFt7XHJcbiAgICAgICAgbWI6IFttYXJnaW5dXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogTWFyZ2luIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL21hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgbWw6IFt7XHJcbiAgICAgICAgbWw6IFttYXJnaW5dXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU3BhY2UgQmV0d2VlbiBYXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9zcGFjZVxyXG4gICAgICAgKi9cclxuICAgICAgJ3NwYWNlLXgnOiBbe1xyXG4gICAgICAgICdzcGFjZS14JzogW3NwYWNlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNwYWNlIEJldHdlZW4gWCBSZXZlcnNlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9zcGFjZVxyXG4gICAgICAgKi9cclxuICAgICAgJ3NwYWNlLXgtcmV2ZXJzZSc6IFsnc3BhY2UteC1yZXZlcnNlJ10sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTcGFjZSBCZXR3ZWVuIFlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3NwYWNlXHJcbiAgICAgICAqL1xyXG4gICAgICAnc3BhY2UteSc6IFt7XHJcbiAgICAgICAgJ3NwYWNlLXknOiBbc3BhY2VdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU3BhY2UgQmV0d2VlbiBZIFJldmVyc2VcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3NwYWNlXHJcbiAgICAgICAqL1xyXG4gICAgICAnc3BhY2UteS1yZXZlcnNlJzogWydzcGFjZS15LXJldmVyc2UnXSxcclxuICAgICAgLy8gU2l6aW5nXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBXaWR0aFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvd2lkdGhcclxuICAgICAgICovXHJcbiAgICAgIHc6IFt7XHJcbiAgICAgICAgdzogWydhdXRvJywgJ21pbicsICdtYXgnLCAnZml0JywgJ3N2dycsICdsdncnLCAnZHZ3JywgaXNBcmJpdHJhcnlWYWx1ZSwgc3BhY2luZ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBNaW4tV2lkdGhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL21pbi13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ21pbi13JzogW3tcclxuICAgICAgICAnbWluLXcnOiBbaXNBcmJpdHJhcnlWYWx1ZSwgc3BhY2luZywgJ21pbicsICdtYXgnLCAnZml0J11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBNYXgtV2lkdGhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL21heC13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ21heC13JzogW3tcclxuICAgICAgICAnbWF4LXcnOiBbaXNBcmJpdHJhcnlWYWx1ZSwgc3BhY2luZywgJ25vbmUnLCAnZnVsbCcsICdtaW4nLCAnbWF4JywgJ2ZpdCcsICdwcm9zZScsIHtcclxuICAgICAgICAgIHNjcmVlbjogW2lzVHNoaXJ0U2l6ZV1cclxuICAgICAgICB9LCBpc1RzaGlydFNpemVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogSGVpZ2h0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9oZWlnaHRcclxuICAgICAgICovXHJcbiAgICAgIGg6IFt7XHJcbiAgICAgICAgaDogW2lzQXJiaXRyYXJ5VmFsdWUsIHNwYWNpbmcsICdhdXRvJywgJ21pbicsICdtYXgnLCAnZml0JywgJ3N2aCcsICdsdmgnLCAnZHZoJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBNaW4tSGVpZ2h0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9taW4taGVpZ2h0XHJcbiAgICAgICAqL1xyXG4gICAgICAnbWluLWgnOiBbe1xyXG4gICAgICAgICdtaW4taCc6IFtpc0FyYml0cmFyeVZhbHVlLCBzcGFjaW5nLCAnbWluJywgJ21heCcsICdmaXQnLCAnc3ZoJywgJ2x2aCcsICdkdmgnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE1heC1IZWlnaHRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL21heC1oZWlnaHRcclxuICAgICAgICovXHJcbiAgICAgICdtYXgtaCc6IFt7XHJcbiAgICAgICAgJ21heC1oJzogW2lzQXJiaXRyYXJ5VmFsdWUsIHNwYWNpbmcsICdtaW4nLCAnbWF4JywgJ2ZpdCcsICdzdmgnLCAnbHZoJywgJ2R2aCddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2l6ZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2l6ZVxyXG4gICAgICAgKi9cclxuICAgICAgc2l6ZTogW3tcclxuICAgICAgICBzaXplOiBbaXNBcmJpdHJhcnlWYWx1ZSwgc3BhY2luZywgJ2F1dG8nLCAnbWluJywgJ21heCcsICdmaXQnXVxyXG4gICAgICB9XSxcclxuICAgICAgLy8gVHlwb2dyYXBoeVxyXG4gICAgICAvKipcclxuICAgICAgICogRm9udCBTaXplXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9mb250LXNpemVcclxuICAgICAgICovXHJcbiAgICAgICdmb250LXNpemUnOiBbe1xyXG4gICAgICAgIHRleHQ6IFsnYmFzZScsIGlzVHNoaXJ0U2l6ZSwgaXNBcmJpdHJhcnlMZW5ndGhdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogRm9udCBTbW9vdGhpbmdcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZvbnQtc21vb3RoaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICAnZm9udC1zbW9vdGhpbmcnOiBbJ2FudGlhbGlhc2VkJywgJ3N1YnBpeGVsLWFudGlhbGlhc2VkJ10sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGb250IFN0eWxlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9mb250LXN0eWxlXHJcbiAgICAgICAqL1xyXG4gICAgICAnZm9udC1zdHlsZSc6IFsnaXRhbGljJywgJ25vdC1pdGFsaWMnXSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEZvbnQgV2VpZ2h0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9mb250LXdlaWdodFxyXG4gICAgICAgKi9cclxuICAgICAgJ2ZvbnQtd2VpZ2h0JzogW3tcclxuICAgICAgICBmb250OiBbJ3RoaW4nLCAnZXh0cmFsaWdodCcsICdsaWdodCcsICdub3JtYWwnLCAnbWVkaXVtJywgJ3NlbWlib2xkJywgJ2JvbGQnLCAnZXh0cmFib2xkJywgJ2JsYWNrJywgaXNBcmJpdHJhcnlOdW1iZXJdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogRm9udCBGYW1pbHlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZvbnQtZmFtaWx5XHJcbiAgICAgICAqL1xyXG4gICAgICAnZm9udC1mYW1pbHknOiBbe1xyXG4gICAgICAgIGZvbnQ6IFtpc0FueV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGb250IFZhcmlhbnQgTnVtZXJpY1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZm9udC12YXJpYW50LW51bWVyaWNcclxuICAgICAgICovXHJcbiAgICAgICdmdm4tbm9ybWFsJzogWydub3JtYWwtbnVtcyddLFxyXG4gICAgICAvKipcclxuICAgICAgICogRm9udCBWYXJpYW50IE51bWVyaWNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZvbnQtdmFyaWFudC1udW1lcmljXHJcbiAgICAgICAqL1xyXG4gICAgICAnZnZuLW9yZGluYWwnOiBbJ29yZGluYWwnXSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEZvbnQgVmFyaWFudCBOdW1lcmljXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9mb250LXZhcmlhbnQtbnVtZXJpY1xyXG4gICAgICAgKi9cclxuICAgICAgJ2Z2bi1zbGFzaGVkLXplcm8nOiBbJ3NsYXNoZWQtemVybyddLFxyXG4gICAgICAvKipcclxuICAgICAgICogRm9udCBWYXJpYW50IE51bWVyaWNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZvbnQtdmFyaWFudC1udW1lcmljXHJcbiAgICAgICAqL1xyXG4gICAgICAnZnZuLWZpZ3VyZSc6IFsnbGluaW5nLW51bXMnLCAnb2xkc3R5bGUtbnVtcyddLFxyXG4gICAgICAvKipcclxuICAgICAgICogRm9udCBWYXJpYW50IE51bWVyaWNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZvbnQtdmFyaWFudC1udW1lcmljXHJcbiAgICAgICAqL1xyXG4gICAgICAnZnZuLXNwYWNpbmcnOiBbJ3Byb3BvcnRpb25hbC1udW1zJywgJ3RhYnVsYXItbnVtcyddLFxyXG4gICAgICAvKipcclxuICAgICAgICogRm9udCBWYXJpYW50IE51bWVyaWNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ZvbnQtdmFyaWFudC1udW1lcmljXHJcbiAgICAgICAqL1xyXG4gICAgICAnZnZuLWZyYWN0aW9uJzogWydkaWFnb25hbC1mcmFjdGlvbnMnLCAnc3RhY2tlZC1mcmFjdGlvbnMnXSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIExldHRlciBTcGFjaW5nXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9sZXR0ZXItc3BhY2luZ1xyXG4gICAgICAgKi9cclxuICAgICAgdHJhY2tpbmc6IFt7XHJcbiAgICAgICAgdHJhY2tpbmc6IFsndGlnaHRlcicsICd0aWdodCcsICdub3JtYWwnLCAnd2lkZScsICd3aWRlcicsICd3aWRlc3QnLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIExpbmUgQ2xhbXBcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2xpbmUtY2xhbXBcclxuICAgICAgICovXHJcbiAgICAgICdsaW5lLWNsYW1wJzogW3tcclxuICAgICAgICAnbGluZS1jbGFtcCc6IFsnbm9uZScsIGlzTnVtYmVyLCBpc0FyYml0cmFyeU51bWJlcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBMaW5lIEhlaWdodFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvbGluZS1oZWlnaHRcclxuICAgICAgICovXHJcbiAgICAgIGxlYWRpbmc6IFt7XHJcbiAgICAgICAgbGVhZGluZzogWydub25lJywgJ3RpZ2h0JywgJ3NudWcnLCAnbm9ybWFsJywgJ3JlbGF4ZWQnLCAnbG9vc2UnLCBpc0xlbmd0aCwgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBMaXN0IFN0eWxlIEltYWdlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9saXN0LXN0eWxlLWltYWdlXHJcbiAgICAgICAqL1xyXG4gICAgICAnbGlzdC1pbWFnZSc6IFt7XHJcbiAgICAgICAgJ2xpc3QtaW1hZ2UnOiBbJ25vbmUnLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIExpc3QgU3R5bGUgVHlwZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvbGlzdC1zdHlsZS10eXBlXHJcbiAgICAgICAqL1xyXG4gICAgICAnbGlzdC1zdHlsZS10eXBlJzogW3tcclxuICAgICAgICBsaXN0OiBbJ25vbmUnLCAnZGlzYycsICdkZWNpbWFsJywgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBMaXN0IFN0eWxlIFBvc2l0aW9uXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9saXN0LXN0eWxlLXBvc2l0aW9uXHJcbiAgICAgICAqL1xyXG4gICAgICAnbGlzdC1zdHlsZS1wb3NpdGlvbic6IFt7XHJcbiAgICAgICAgbGlzdDogWydpbnNpZGUnLCAnb3V0c2lkZSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGxhY2Vob2xkZXIgQ29sb3JcclxuICAgICAgICogQGRlcHJlY2F0ZWQgc2luY2UgVGFpbHdpbmQgQ1NTIHYzLjAuMFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvcGxhY2Vob2xkZXItY29sb3JcclxuICAgICAgICovXHJcbiAgICAgICdwbGFjZWhvbGRlci1jb2xvcic6IFt7XHJcbiAgICAgICAgcGxhY2Vob2xkZXI6IFtjb2xvcnNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUGxhY2Vob2xkZXIgT3BhY2l0eVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvcGxhY2Vob2xkZXItb3BhY2l0eVxyXG4gICAgICAgKi9cclxuICAgICAgJ3BsYWNlaG9sZGVyLW9wYWNpdHknOiBbe1xyXG4gICAgICAgICdwbGFjZWhvbGRlci1vcGFjaXR5JzogW29wYWNpdHldXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVGV4dCBBbGlnbm1lbnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RleHQtYWxpZ25cclxuICAgICAgICovXHJcbiAgICAgICd0ZXh0LWFsaWdubWVudCc6IFt7XHJcbiAgICAgICAgdGV4dDogWydsZWZ0JywgJ2NlbnRlcicsICdyaWdodCcsICdqdXN0aWZ5JywgJ3N0YXJ0JywgJ2VuZCddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVGV4dCBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdGV4dC1jb2xvclxyXG4gICAgICAgKi9cclxuICAgICAgJ3RleHQtY29sb3InOiBbe1xyXG4gICAgICAgIHRleHQ6IFtjb2xvcnNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVGV4dCBPcGFjaXR5XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90ZXh0LW9wYWNpdHlcclxuICAgICAgICovXHJcbiAgICAgICd0ZXh0LW9wYWNpdHknOiBbe1xyXG4gICAgICAgICd0ZXh0LW9wYWNpdHknOiBbb3BhY2l0eV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBUZXh0IERlY29yYXRpb25cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RleHQtZGVjb3JhdGlvblxyXG4gICAgICAgKi9cclxuICAgICAgJ3RleHQtZGVjb3JhdGlvbic6IFsndW5kZXJsaW5lJywgJ292ZXJsaW5lJywgJ2xpbmUtdGhyb3VnaCcsICduby11bmRlcmxpbmUnXSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRleHQgRGVjb3JhdGlvbiBTdHlsZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdGV4dC1kZWNvcmF0aW9uLXN0eWxlXHJcbiAgICAgICAqL1xyXG4gICAgICAndGV4dC1kZWNvcmF0aW9uLXN0eWxlJzogW3tcclxuICAgICAgICBkZWNvcmF0aW9uOiBbLi4uZ2V0TGluZVN0eWxlcygpLCAnd2F2eSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVGV4dCBEZWNvcmF0aW9uIFRoaWNrbmVzc1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzc1xyXG4gICAgICAgKi9cclxuICAgICAgJ3RleHQtZGVjb3JhdGlvbi10aGlja25lc3MnOiBbe1xyXG4gICAgICAgIGRlY29yYXRpb246IFsnYXV0bycsICdmcm9tLWZvbnQnLCBpc0xlbmd0aCwgaXNBcmJpdHJhcnlMZW5ndGhdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVGV4dCBVbmRlcmxpbmUgT2Zmc2V0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90ZXh0LXVuZGVybGluZS1vZmZzZXRcclxuICAgICAgICovXHJcbiAgICAgICd1bmRlcmxpbmUtb2Zmc2V0JzogW3tcclxuICAgICAgICAndW5kZXJsaW5lLW9mZnNldCc6IFsnYXV0bycsIGlzTGVuZ3RoLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRleHQgRGVjb3JhdGlvbiBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdGV4dC1kZWNvcmF0aW9uLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAndGV4dC1kZWNvcmF0aW9uLWNvbG9yJzogW3tcclxuICAgICAgICBkZWNvcmF0aW9uOiBbY29sb3JzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRleHQgVHJhbnNmb3JtXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90ZXh0LXRyYW5zZm9ybVxyXG4gICAgICAgKi9cclxuICAgICAgJ3RleHQtdHJhbnNmb3JtJzogWyd1cHBlcmNhc2UnLCAnbG93ZXJjYXNlJywgJ2NhcGl0YWxpemUnLCAnbm9ybWFsLWNhc2UnXSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRleHQgT3ZlcmZsb3dcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RleHQtb3ZlcmZsb3dcclxuICAgICAgICovXHJcbiAgICAgICd0ZXh0LW92ZXJmbG93JzogWyd0cnVuY2F0ZScsICd0ZXh0LWVsbGlwc2lzJywgJ3RleHQtY2xpcCddLFxyXG4gICAgICAvKipcclxuICAgICAgICogVGV4dCBXcmFwXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90ZXh0LXdyYXBcclxuICAgICAgICovXHJcbiAgICAgICd0ZXh0LXdyYXAnOiBbe1xyXG4gICAgICAgIHRleHQ6IFsnd3JhcCcsICdub3dyYXAnLCAnYmFsYW5jZScsICdwcmV0dHknXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRleHQgSW5kZW50XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90ZXh0LWluZGVudFxyXG4gICAgICAgKi9cclxuICAgICAgaW5kZW50OiBbe1xyXG4gICAgICAgIGluZGVudDogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFZlcnRpY2FsIEFsaWdubWVudFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdmVydGljYWwtYWxpZ25cclxuICAgICAgICovXHJcbiAgICAgICd2ZXJ0aWNhbC1hbGlnbic6IFt7XHJcbiAgICAgICAgYWxpZ246IFsnYmFzZWxpbmUnLCAndG9wJywgJ21pZGRsZScsICdib3R0b20nLCAndGV4dC10b3AnLCAndGV4dC1ib3R0b20nLCAnc3ViJywgJ3N1cGVyJywgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBXaGl0ZXNwYWNlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy93aGl0ZXNwYWNlXHJcbiAgICAgICAqL1xyXG4gICAgICB3aGl0ZXNwYWNlOiBbe1xyXG4gICAgICAgIHdoaXRlc3BhY2U6IFsnbm9ybWFsJywgJ25vd3JhcCcsICdwcmUnLCAncHJlLWxpbmUnLCAncHJlLXdyYXAnLCAnYnJlYWstc3BhY2VzJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBXb3JkIEJyZWFrXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy93b3JkLWJyZWFrXHJcbiAgICAgICAqL1xyXG4gICAgICBicmVhazogW3tcclxuICAgICAgICBicmVhazogWydub3JtYWwnLCAnd29yZHMnLCAnYWxsJywgJ2tlZXAnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEh5cGhlbnNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2h5cGhlbnNcclxuICAgICAgICovXHJcbiAgICAgIGh5cGhlbnM6IFt7XHJcbiAgICAgICAgaHlwaGVuczogWydub25lJywgJ21hbnVhbCcsICdhdXRvJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBDb250ZW50XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9jb250ZW50XHJcbiAgICAgICAqL1xyXG4gICAgICBjb250ZW50OiBbe1xyXG4gICAgICAgIGNvbnRlbnQ6IFsnbm9uZScsIGlzQXJiaXRyYXJ5VmFsdWVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvLyBCYWNrZ3JvdW5kc1xyXG4gICAgICAvKipcclxuICAgICAgICogQmFja2dyb3VuZCBBdHRhY2htZW50XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZ3JvdW5kLWF0dGFjaG1lbnRcclxuICAgICAgICovXHJcbiAgICAgICdiZy1hdHRhY2htZW50JzogW3tcclxuICAgICAgICBiZzogWydmaXhlZCcsICdsb2NhbCcsICdzY3JvbGwnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJhY2tncm91bmQgQ2xpcFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYmFja2dyb3VuZC1jbGlwXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmctY2xpcCc6IFt7XHJcbiAgICAgICAgJ2JnLWNsaXAnOiBbJ2JvcmRlcicsICdwYWRkaW5nJywgJ2NvbnRlbnQnLCAndGV4dCddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQmFja2dyb3VuZCBPcGFjaXR5XHJcbiAgICAgICAqIEBkZXByZWNhdGVkIHNpbmNlIFRhaWx3aW5kIENTUyB2My4wLjBcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JhY2tncm91bmQtb3BhY2l0eVxyXG4gICAgICAgKi9cclxuICAgICAgJ2JnLW9wYWNpdHknOiBbe1xyXG4gICAgICAgICdiZy1vcGFjaXR5JzogW29wYWNpdHldXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQmFja2dyb3VuZCBPcmlnaW5cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JhY2tncm91bmQtb3JpZ2luXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmctb3JpZ2luJzogW3tcclxuICAgICAgICAnYmctb3JpZ2luJzogWydib3JkZXInLCAncGFkZGluZycsICdjb250ZW50J11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZ3JvdW5kIFBvc2l0aW9uXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZ3JvdW5kLXBvc2l0aW9uXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmctcG9zaXRpb24nOiBbe1xyXG4gICAgICAgIGJnOiBbLi4uZ2V0UG9zaXRpb25zKCksIGlzQXJiaXRyYXJ5UG9zaXRpb25dXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQmFja2dyb3VuZCBSZXBlYXRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JhY2tncm91bmQtcmVwZWF0XHJcbiAgICAgICAqL1xyXG4gICAgICAnYmctcmVwZWF0JzogW3tcclxuICAgICAgICBiZzogWyduby1yZXBlYXQnLCB7XHJcbiAgICAgICAgICByZXBlYXQ6IFsnJywgJ3gnLCAneScsICdyb3VuZCcsICdzcGFjZSddXHJcbiAgICAgICAgfV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZ3JvdW5kIFNpemVcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JhY2tncm91bmQtc2l6ZVxyXG4gICAgICAgKi9cclxuICAgICAgJ2JnLXNpemUnOiBbe1xyXG4gICAgICAgIGJnOiBbJ2F1dG8nLCAnY292ZXInLCAnY29udGFpbicsIGlzQXJiaXRyYXJ5U2l6ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZ3JvdW5kIEltYWdlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZ3JvdW5kLWltYWdlXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmctaW1hZ2UnOiBbe1xyXG4gICAgICAgIGJnOiBbJ25vbmUnLCB7XHJcbiAgICAgICAgICAnZ3JhZGllbnQtdG8nOiBbJ3QnLCAndHInLCAncicsICdicicsICdiJywgJ2JsJywgJ2wnLCAndGwnXVxyXG4gICAgICAgIH0sIGlzQXJiaXRyYXJ5SW1hZ2VdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQmFja2dyb3VuZCBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYmFja2dyb3VuZC1jb2xvclxyXG4gICAgICAgKi9cclxuICAgICAgJ2JnLWNvbG9yJzogW3tcclxuICAgICAgICBiZzogW2NvbG9yc11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHcmFkaWVudCBDb2xvciBTdG9wcyBGcm9tIFBvc2l0aW9uXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmFkaWVudC1jb2xvci1zdG9wc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2dyYWRpZW50LWZyb20tcG9zJzogW3tcclxuICAgICAgICBmcm9tOiBbZ3JhZGllbnRDb2xvclN0b3BQb3NpdGlvbnNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR3JhZGllbnQgQ29sb3IgU3RvcHMgVmlhIFBvc2l0aW9uXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmFkaWVudC1jb2xvci1zdG9wc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2dyYWRpZW50LXZpYS1wb3MnOiBbe1xyXG4gICAgICAgIHZpYTogW2dyYWRpZW50Q29sb3JTdG9wUG9zaXRpb25zXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEdyYWRpZW50IENvbG9yIFN0b3BzIFRvIFBvc2l0aW9uXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmFkaWVudC1jb2xvci1zdG9wc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2dyYWRpZW50LXRvLXBvcyc6IFt7XHJcbiAgICAgICAgdG86IFtncmFkaWVudENvbG9yU3RvcFBvc2l0aW9uc11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBHcmFkaWVudCBDb2xvciBTdG9wcyBGcm9tXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmFkaWVudC1jb2xvci1zdG9wc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2dyYWRpZW50LWZyb20nOiBbe1xyXG4gICAgICAgIGZyb206IFtncmFkaWVudENvbG9yU3RvcHNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR3JhZGllbnQgQ29sb3IgU3RvcHMgVmlhXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmFkaWVudC1jb2xvci1zdG9wc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2dyYWRpZW50LXZpYSc6IFt7XHJcbiAgICAgICAgdmlhOiBbZ3JhZGllbnRDb2xvclN0b3BzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEdyYWRpZW50IENvbG9yIFN0b3BzIFRvXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmFkaWVudC1jb2xvci1zdG9wc1xyXG4gICAgICAgKi9cclxuICAgICAgJ2dyYWRpZW50LXRvJzogW3tcclxuICAgICAgICB0bzogW2dyYWRpZW50Q29sb3JTdG9wc11cclxuICAgICAgfV0sXHJcbiAgICAgIC8vIEJvcmRlcnNcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBSYWRpdXNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgIHJvdW5kZWQ6IFt7XHJcbiAgICAgICAgcm91bmRlZDogW2JvcmRlclJhZGl1c11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgUmFkaXVzIFN0YXJ0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItcmFkaXVzXHJcbiAgICAgICAqL1xyXG4gICAgICAncm91bmRlZC1zJzogW3tcclxuICAgICAgICAncm91bmRlZC1zJzogW2JvcmRlclJhZGl1c11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgUmFkaXVzIEVuZFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLXJhZGl1c1xyXG4gICAgICAgKi9cclxuICAgICAgJ3JvdW5kZWQtZSc6IFt7XHJcbiAgICAgICAgJ3JvdW5kZWQtZSc6IFtib3JkZXJSYWRpdXNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFJhZGl1cyBUb3BcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLXQnOiBbe1xyXG4gICAgICAgICdyb3VuZGVkLXQnOiBbYm9yZGVyUmFkaXVzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBSYWRpdXMgUmlnaHRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLXInOiBbe1xyXG4gICAgICAgICdyb3VuZGVkLXInOiBbYm9yZGVyUmFkaXVzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBSYWRpdXMgQm90dG9tXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItcmFkaXVzXHJcbiAgICAgICAqL1xyXG4gICAgICAncm91bmRlZC1iJzogW3tcclxuICAgICAgICAncm91bmRlZC1iJzogW2JvcmRlclJhZGl1c11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgUmFkaXVzIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLWwnOiBbe1xyXG4gICAgICAgICdyb3VuZGVkLWwnOiBbYm9yZGVyUmFkaXVzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBSYWRpdXMgU3RhcnQgU3RhcnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLXNzJzogW3tcclxuICAgICAgICAncm91bmRlZC1zcyc6IFtib3JkZXJSYWRpdXNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFJhZGl1cyBTdGFydCBFbmRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLXNlJzogW3tcclxuICAgICAgICAncm91bmRlZC1zZSc6IFtib3JkZXJSYWRpdXNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFJhZGl1cyBFbmQgRW5kXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItcmFkaXVzXHJcbiAgICAgICAqL1xyXG4gICAgICAncm91bmRlZC1lZSc6IFt7XHJcbiAgICAgICAgJ3JvdW5kZWQtZWUnOiBbYm9yZGVyUmFkaXVzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBSYWRpdXMgRW5kIFN0YXJ0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItcmFkaXVzXHJcbiAgICAgICAqL1xyXG4gICAgICAncm91bmRlZC1lcyc6IFt7XHJcbiAgICAgICAgJ3JvdW5kZWQtZXMnOiBbYm9yZGVyUmFkaXVzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBSYWRpdXMgVG9wIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLXRsJzogW3tcclxuICAgICAgICAncm91bmRlZC10bCc6IFtib3JkZXJSYWRpdXNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFJhZGl1cyBUb3AgUmlnaHRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLXRyJzogW3tcclxuICAgICAgICAncm91bmRlZC10cic6IFtib3JkZXJSYWRpdXNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFJhZGl1cyBCb3R0b20gUmlnaHRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci1yYWRpdXNcclxuICAgICAgICovXHJcbiAgICAgICdyb3VuZGVkLWJyJzogW3tcclxuICAgICAgICAncm91bmRlZC1icic6IFtib3JkZXJSYWRpdXNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFJhZGl1cyBCb3R0b20gTGVmdFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLXJhZGl1c1xyXG4gICAgICAgKi9cclxuICAgICAgJ3JvdW5kZWQtYmwnOiBbe1xyXG4gICAgICAgICdyb3VuZGVkLWJsJzogW2JvcmRlclJhZGl1c11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgV2lkdGhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ2JvcmRlci13JzogW3tcclxuICAgICAgICBib3JkZXI6IFtib3JkZXJXaWR0aF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgV2lkdGggWFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLXdpZHRoXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLXcteCc6IFt7XHJcbiAgICAgICAgJ2JvcmRlci14JzogW2JvcmRlcldpZHRoXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBXaWR0aCBZXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItd2lkdGhcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItdy15JzogW3tcclxuICAgICAgICAnYm9yZGVyLXknOiBbYm9yZGVyV2lkdGhdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFdpZHRoIFN0YXJ0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItd2lkdGhcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItdy1zJzogW3tcclxuICAgICAgICAnYm9yZGVyLXMnOiBbYm9yZGVyV2lkdGhdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFdpZHRoIEVuZFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLXdpZHRoXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLXctZSc6IFt7XHJcbiAgICAgICAgJ2JvcmRlci1lJzogW2JvcmRlcldpZHRoXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBXaWR0aCBUb3BcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ2JvcmRlci13LXQnOiBbe1xyXG4gICAgICAgICdib3JkZXItdCc6IFtib3JkZXJXaWR0aF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgV2lkdGggUmlnaHRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ2JvcmRlci13LXInOiBbe1xyXG4gICAgICAgICdib3JkZXItcic6IFtib3JkZXJXaWR0aF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgV2lkdGggQm90dG9tXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItd2lkdGhcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItdy1iJzogW3tcclxuICAgICAgICAnYm9yZGVyLWInOiBbYm9yZGVyV2lkdGhdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFdpZHRoIExlZnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JvcmRlci13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ2JvcmRlci13LWwnOiBbe1xyXG4gICAgICAgICdib3JkZXItbCc6IFtib3JkZXJXaWR0aF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgT3BhY2l0eVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLW9wYWNpdHlcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItb3BhY2l0eSc6IFt7XHJcbiAgICAgICAgJ2JvcmRlci1vcGFjaXR5JzogW29wYWNpdHldXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFN0eWxlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItc3R5bGVcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItc3R5bGUnOiBbe1xyXG4gICAgICAgIGJvcmRlcjogWy4uLmdldExpbmVTdHlsZXMoKSwgJ2hpZGRlbiddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogRGl2aWRlIFdpZHRoIFhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2RpdmlkZS13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ2RpdmlkZS14JzogW3tcclxuICAgICAgICAnZGl2aWRlLXgnOiBbYm9yZGVyV2lkdGhdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogRGl2aWRlIFdpZHRoIFggUmV2ZXJzZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZGl2aWRlLXdpZHRoXHJcbiAgICAgICAqL1xyXG4gICAgICAnZGl2aWRlLXgtcmV2ZXJzZSc6IFsnZGl2aWRlLXgtcmV2ZXJzZSddLFxyXG4gICAgICAvKipcclxuICAgICAgICogRGl2aWRlIFdpZHRoIFlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2RpdmlkZS13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ2RpdmlkZS15JzogW3tcclxuICAgICAgICAnZGl2aWRlLXknOiBbYm9yZGVyV2lkdGhdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogRGl2aWRlIFdpZHRoIFkgUmV2ZXJzZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZGl2aWRlLXdpZHRoXHJcbiAgICAgICAqL1xyXG4gICAgICAnZGl2aWRlLXktcmV2ZXJzZSc6IFsnZGl2aWRlLXktcmV2ZXJzZSddLFxyXG4gICAgICAvKipcclxuICAgICAgICogRGl2aWRlIE9wYWNpdHlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2RpdmlkZS1vcGFjaXR5XHJcbiAgICAgICAqL1xyXG4gICAgICAnZGl2aWRlLW9wYWNpdHknOiBbe1xyXG4gICAgICAgICdkaXZpZGUtb3BhY2l0eSc6IFtvcGFjaXR5XVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIERpdmlkZSBTdHlsZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZGl2aWRlLXN0eWxlXHJcbiAgICAgICAqL1xyXG4gICAgICAnZGl2aWRlLXN0eWxlJzogW3tcclxuICAgICAgICBkaXZpZGU6IGdldExpbmVTdHlsZXMoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLWNvbG9yJzogW3tcclxuICAgICAgICBib3JkZXI6IFtib3JkZXJDb2xvcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgQ29sb3IgWFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLWNvbG9yLXgnOiBbe1xyXG4gICAgICAgICdib3JkZXIteCc6IFtib3JkZXJDb2xvcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgQ29sb3IgWVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLWNvbG9yLXknOiBbe1xyXG4gICAgICAgICdib3JkZXIteSc6IFtib3JkZXJDb2xvcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgQ29sb3IgU1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLWNvbG9yLXMnOiBbe1xyXG4gICAgICAgICdib3JkZXItcyc6IFtib3JkZXJDb2xvcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgQ29sb3IgRVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLWNvbG9yLWUnOiBbe1xyXG4gICAgICAgICdib3JkZXItZSc6IFtib3JkZXJDb2xvcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgQ29sb3IgVG9wXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItY29sb3JcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItY29sb3ItdCc6IFt7XHJcbiAgICAgICAgJ2JvcmRlci10JzogW2JvcmRlckNvbG9yXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBDb2xvciBSaWdodFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLWNvbG9yLXInOiBbe1xyXG4gICAgICAgICdib3JkZXItcic6IFtib3JkZXJDb2xvcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgQ29sb3IgQm90dG9tXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItY29sb3JcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItY29sb3ItYic6IFt7XHJcbiAgICAgICAgJ2JvcmRlci1iJzogW2JvcmRlckNvbG9yXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBDb2xvciBMZWZ0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItY29sb3JcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItY29sb3ItbCc6IFt7XHJcbiAgICAgICAgJ2JvcmRlci1sJzogW2JvcmRlckNvbG9yXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIERpdmlkZSBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZGl2aWRlLWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnZGl2aWRlLWNvbG9yJzogW3tcclxuICAgICAgICBkaXZpZGU6IFtib3JkZXJDb2xvcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBPdXRsaW5lIFN0eWxlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9vdXRsaW5lLXN0eWxlXHJcbiAgICAgICAqL1xyXG4gICAgICAnb3V0bGluZS1zdHlsZSc6IFt7XHJcbiAgICAgICAgb3V0bGluZTogWycnLCAuLi5nZXRMaW5lU3R5bGVzKCldXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogT3V0bGluZSBPZmZzZXRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL291dGxpbmUtb2Zmc2V0XHJcbiAgICAgICAqL1xyXG4gICAgICAnb3V0bGluZS1vZmZzZXQnOiBbe1xyXG4gICAgICAgICdvdXRsaW5lLW9mZnNldCc6IFtpc0xlbmd0aCwgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBPdXRsaW5lIFdpZHRoXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9vdXRsaW5lLXdpZHRoXHJcbiAgICAgICAqL1xyXG4gICAgICAnb3V0bGluZS13JzogW3tcclxuICAgICAgICBvdXRsaW5lOiBbaXNMZW5ndGgsIGlzQXJiaXRyYXJ5TGVuZ3RoXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIE91dGxpbmUgQ29sb3JcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL291dGxpbmUtY29sb3JcclxuICAgICAgICovXHJcbiAgICAgICdvdXRsaW5lLWNvbG9yJzogW3tcclxuICAgICAgICBvdXRsaW5lOiBbY29sb3JzXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFJpbmcgV2lkdGhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Jpbmctd2lkdGhcclxuICAgICAgICovXHJcbiAgICAgICdyaW5nLXcnOiBbe1xyXG4gICAgICAgIHJpbmc6IGdldExlbmd0aFdpdGhFbXB0eUFuZEFyYml0cmFyeSgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUmluZyBXaWR0aCBJbnNldFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvcmluZy13aWR0aFxyXG4gICAgICAgKi9cclxuICAgICAgJ3Jpbmctdy1pbnNldCc6IFsncmluZy1pbnNldCddLFxyXG4gICAgICAvKipcclxuICAgICAgICogUmluZyBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvcmluZy1jb2xvclxyXG4gICAgICAgKi9cclxuICAgICAgJ3JpbmctY29sb3InOiBbe1xyXG4gICAgICAgIHJpbmc6IFtjb2xvcnNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUmluZyBPcGFjaXR5XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9yaW5nLW9wYWNpdHlcclxuICAgICAgICovXHJcbiAgICAgICdyaW5nLW9wYWNpdHknOiBbe1xyXG4gICAgICAgICdyaW5nLW9wYWNpdHknOiBbb3BhY2l0eV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBSaW5nIE9mZnNldCBXaWR0aFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvcmluZy1vZmZzZXQtd2lkdGhcclxuICAgICAgICovXHJcbiAgICAgICdyaW5nLW9mZnNldC13JzogW3tcclxuICAgICAgICAncmluZy1vZmZzZXQnOiBbaXNMZW5ndGgsIGlzQXJiaXRyYXJ5TGVuZ3RoXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFJpbmcgT2Zmc2V0IENvbG9yXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9yaW5nLW9mZnNldC1jb2xvclxyXG4gICAgICAgKi9cclxuICAgICAgJ3Jpbmctb2Zmc2V0LWNvbG9yJzogW3tcclxuICAgICAgICAncmluZy1vZmZzZXQnOiBbY29sb3JzXVxyXG4gICAgICB9XSxcclxuICAgICAgLy8gRWZmZWN0c1xyXG4gICAgICAvKipcclxuICAgICAgICogQm94IFNoYWRvd1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm94LXNoYWRvd1xyXG4gICAgICAgKi9cclxuICAgICAgc2hhZG93OiBbe1xyXG4gICAgICAgIHNoYWRvdzogWycnLCAnaW5uZXInLCAnbm9uZScsIGlzVHNoaXJ0U2l6ZSwgaXNBcmJpdHJhcnlTaGFkb3ddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm94IFNoYWRvdyBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm94LXNoYWRvdy1jb2xvclxyXG4gICAgICAgKi9cclxuICAgICAgJ3NoYWRvdy1jb2xvcic6IFt7XHJcbiAgICAgICAgc2hhZG93OiBbaXNBbnldXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogT3BhY2l0eVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvb3BhY2l0eVxyXG4gICAgICAgKi9cclxuICAgICAgb3BhY2l0eTogW3tcclxuICAgICAgICBvcGFjaXR5OiBbb3BhY2l0eV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBNaXggQmxlbmQgTW9kZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvbWl4LWJsZW5kLW1vZGVcclxuICAgICAgICovXHJcbiAgICAgICdtaXgtYmxlbmQnOiBbe1xyXG4gICAgICAgICdtaXgtYmxlbmQnOiBbLi4uZ2V0QmxlbmRNb2RlcygpLCAncGx1cy1saWdodGVyJywgJ3BsdXMtZGFya2VyJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZ3JvdW5kIEJsZW5kIE1vZGVcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JhY2tncm91bmQtYmxlbmQtbW9kZVxyXG4gICAgICAgKi9cclxuICAgICAgJ2JnLWJsZW5kJzogW3tcclxuICAgICAgICAnYmctYmxlbmQnOiBnZXRCbGVuZE1vZGVzKClcclxuICAgICAgfV0sXHJcbiAgICAgIC8vIEZpbHRlcnNcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEZpbHRlclxyXG4gICAgICAgKiBAZGVwcmVjYXRlZCBzaW5jZSBUYWlsd2luZCBDU1MgdjMuMC4wXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9maWx0ZXJcclxuICAgICAgICovXHJcbiAgICAgIGZpbHRlcjogW3tcclxuICAgICAgICBmaWx0ZXI6IFsnJywgJ25vbmUnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJsdXJcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2JsdXJcclxuICAgICAgICovXHJcbiAgICAgIGJsdXI6IFt7XHJcbiAgICAgICAgYmx1cjogW2JsdXJdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQnJpZ2h0bmVzc1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYnJpZ2h0bmVzc1xyXG4gICAgICAgKi9cclxuICAgICAgYnJpZ2h0bmVzczogW3tcclxuICAgICAgICBicmlnaHRuZXNzOiBbYnJpZ2h0bmVzc11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBDb250cmFzdFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvY29udHJhc3RcclxuICAgICAgICovXHJcbiAgICAgIGNvbnRyYXN0OiBbe1xyXG4gICAgICAgIGNvbnRyYXN0OiBbY29udHJhc3RdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogRHJvcCBTaGFkb3dcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2Ryb3Atc2hhZG93XHJcbiAgICAgICAqL1xyXG4gICAgICAnZHJvcC1zaGFkb3cnOiBbe1xyXG4gICAgICAgICdkcm9wLXNoYWRvdyc6IFsnJywgJ25vbmUnLCBpc1RzaGlydFNpemUsIGlzQXJiaXRyYXJ5VmFsdWVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogR3JheXNjYWxlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ncmF5c2NhbGVcclxuICAgICAgICovXHJcbiAgICAgIGdyYXlzY2FsZTogW3tcclxuICAgICAgICBncmF5c2NhbGU6IFtncmF5c2NhbGVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogSHVlIFJvdGF0ZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvaHVlLXJvdGF0ZVxyXG4gICAgICAgKi9cclxuICAgICAgJ2h1ZS1yb3RhdGUnOiBbe1xyXG4gICAgICAgICdodWUtcm90YXRlJzogW2h1ZVJvdGF0ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBJbnZlcnRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2ludmVydFxyXG4gICAgICAgKi9cclxuICAgICAgaW52ZXJ0OiBbe1xyXG4gICAgICAgIGludmVydDogW2ludmVydF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTYXR1cmF0ZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2F0dXJhdGVcclxuICAgICAgICovXHJcbiAgICAgIHNhdHVyYXRlOiBbe1xyXG4gICAgICAgIHNhdHVyYXRlOiBbc2F0dXJhdGVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2VwaWFcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3NlcGlhXHJcbiAgICAgICAqL1xyXG4gICAgICBzZXBpYTogW3tcclxuICAgICAgICBzZXBpYTogW3NlcGlhXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJhY2tkcm9wIEZpbHRlclxyXG4gICAgICAgKiBAZGVwcmVjYXRlZCBzaW5jZSBUYWlsd2luZCBDU1MgdjMuMC4wXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZHJvcC1maWx0ZXJcclxuICAgICAgICovXHJcbiAgICAgICdiYWNrZHJvcC1maWx0ZXInOiBbe1xyXG4gICAgICAgICdiYWNrZHJvcC1maWx0ZXInOiBbJycsICdub25lJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZHJvcCBCbHVyXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZHJvcC1ibHVyXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmFja2Ryb3AtYmx1cic6IFt7XHJcbiAgICAgICAgJ2JhY2tkcm9wLWJsdXInOiBbYmx1cl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZHJvcCBCcmlnaHRuZXNzXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZHJvcC1icmlnaHRuZXNzXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmFja2Ryb3AtYnJpZ2h0bmVzcyc6IFt7XHJcbiAgICAgICAgJ2JhY2tkcm9wLWJyaWdodG5lc3MnOiBbYnJpZ2h0bmVzc11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZHJvcCBDb250cmFzdFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYmFja2Ryb3AtY29udHJhc3RcclxuICAgICAgICovXHJcbiAgICAgICdiYWNrZHJvcC1jb250cmFzdCc6IFt7XHJcbiAgICAgICAgJ2JhY2tkcm9wLWNvbnRyYXN0JzogW2NvbnRyYXN0XVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJhY2tkcm9wIEdyYXlzY2FsZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYmFja2Ryb3AtZ3JheXNjYWxlXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmFja2Ryb3AtZ3JheXNjYWxlJzogW3tcclxuICAgICAgICAnYmFja2Ryb3AtZ3JheXNjYWxlJzogW2dyYXlzY2FsZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZHJvcCBIdWUgUm90YXRlXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZHJvcC1odWUtcm90YXRlXHJcbiAgICAgICAqL1xyXG4gICAgICAnYmFja2Ryb3AtaHVlLXJvdGF0ZSc6IFt7XHJcbiAgICAgICAgJ2JhY2tkcm9wLWh1ZS1yb3RhdGUnOiBbaHVlUm90YXRlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJhY2tkcm9wIEludmVydFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYmFja2Ryb3AtaW52ZXJ0XHJcbiAgICAgICAqL1xyXG4gICAgICAnYmFja2Ryb3AtaW52ZXJ0JzogW3tcclxuICAgICAgICAnYmFja2Ryb3AtaW52ZXJ0JzogW2ludmVydF1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZHJvcCBPcGFjaXR5XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZHJvcC1vcGFjaXR5XHJcbiAgICAgICAqL1xyXG4gICAgICAnYmFja2Ryb3Atb3BhY2l0eSc6IFt7XHJcbiAgICAgICAgJ2JhY2tkcm9wLW9wYWNpdHknOiBbb3BhY2l0eV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCYWNrZHJvcCBTYXR1cmF0ZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYmFja2Ryb3Atc2F0dXJhdGVcclxuICAgICAgICovXHJcbiAgICAgICdiYWNrZHJvcC1zYXR1cmF0ZSc6IFt7XHJcbiAgICAgICAgJ2JhY2tkcm9wLXNhdHVyYXRlJzogW3NhdHVyYXRlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJhY2tkcm9wIFNlcGlhXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9iYWNrZHJvcC1zZXBpYVxyXG4gICAgICAgKi9cclxuICAgICAgJ2JhY2tkcm9wLXNlcGlhJzogW3tcclxuICAgICAgICAnYmFja2Ryb3Atc2VwaWEnOiBbc2VwaWFdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvLyBUYWJsZXNcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBDb2xsYXBzZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLWNvbGxhcHNlXHJcbiAgICAgICAqL1xyXG4gICAgICAnYm9yZGVyLWNvbGxhcHNlJzogW3tcclxuICAgICAgICBib3JkZXI6IFsnY29sbGFwc2UnLCAnc2VwYXJhdGUnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEJvcmRlciBTcGFjaW5nXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItc3BhY2luZ1xyXG4gICAgICAgKi9cclxuICAgICAgJ2JvcmRlci1zcGFjaW5nJzogW3tcclxuICAgICAgICAnYm9yZGVyLXNwYWNpbmcnOiBbYm9yZGVyU3BhY2luZ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBCb3JkZXIgU3BhY2luZyBYXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9ib3JkZXItc3BhY2luZ1xyXG4gICAgICAgKi9cclxuICAgICAgJ2JvcmRlci1zcGFjaW5nLXgnOiBbe1xyXG4gICAgICAgICdib3JkZXItc3BhY2luZy14JzogW2JvcmRlclNwYWNpbmddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQm9yZGVyIFNwYWNpbmcgWVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYm9yZGVyLXNwYWNpbmdcclxuICAgICAgICovXHJcbiAgICAgICdib3JkZXItc3BhY2luZy15JzogW3tcclxuICAgICAgICAnYm9yZGVyLXNwYWNpbmcteSc6IFtib3JkZXJTcGFjaW5nXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRhYmxlIExheW91dFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdGFibGUtbGF5b3V0XHJcbiAgICAgICAqL1xyXG4gICAgICAndGFibGUtbGF5b3V0JzogW3tcclxuICAgICAgICB0YWJsZTogWydhdXRvJywgJ2ZpeGVkJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBDYXB0aW9uIFNpZGVcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2NhcHRpb24tc2lkZVxyXG4gICAgICAgKi9cclxuICAgICAgY2FwdGlvbjogW3tcclxuICAgICAgICBjYXB0aW9uOiBbJ3RvcCcsICdib3R0b20nXVxyXG4gICAgICB9XSxcclxuICAgICAgLy8gVHJhbnNpdGlvbnMgYW5kIEFuaW1hdGlvblxyXG4gICAgICAvKipcclxuICAgICAgICogVHJhbmlzaXRpb24gUHJvcGVydHlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RyYW5zaXRpb24tcHJvcGVydHlcclxuICAgICAgICovXHJcbiAgICAgIHRyYW5zaXRpb246IFt7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogWydub25lJywgJ2FsbCcsICcnLCAnY29sb3JzJywgJ29wYWNpdHknLCAnc2hhZG93JywgJ3RyYW5zZm9ybScsIGlzQXJiaXRyYXJ5VmFsdWVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVHJhbnNpdGlvbiBEdXJhdGlvblxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdHJhbnNpdGlvbi1kdXJhdGlvblxyXG4gICAgICAgKi9cclxuICAgICAgZHVyYXRpb246IFt7XHJcbiAgICAgICAgZHVyYXRpb246IGdldE51bWJlckFuZEFyYml0cmFyeSgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVHJhbnNpdGlvbiBUaW1pbmcgRnVuY3Rpb25cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uXHJcbiAgICAgICAqL1xyXG4gICAgICBlYXNlOiBbe1xyXG4gICAgICAgIGVhc2U6IFsnbGluZWFyJywgJ2luJywgJ291dCcsICdpbi1vdXQnLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRyYW5zaXRpb24gRGVsYXlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RyYW5zaXRpb24tZGVsYXlcclxuICAgICAgICovXHJcbiAgICAgIGRlbGF5OiBbe1xyXG4gICAgICAgIGRlbGF5OiBnZXROdW1iZXJBbmRBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEFuaW1hdGlvblxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYW5pbWF0aW9uXHJcbiAgICAgICAqL1xyXG4gICAgICBhbmltYXRlOiBbe1xyXG4gICAgICAgIGFuaW1hdGU6IFsnbm9uZScsICdzcGluJywgJ3BpbmcnLCAncHVsc2UnLCAnYm91bmNlJywgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8vIFRyYW5zZm9ybXNcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRyYW5zZm9ybVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdHJhbnNmb3JtXHJcbiAgICAgICAqL1xyXG4gICAgICB0cmFuc2Zvcm06IFt7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBbJycsICdncHUnLCAnbm9uZSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2NhbGVcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3NjYWxlXHJcbiAgICAgICAqL1xyXG4gICAgICBzY2FsZTogW3tcclxuICAgICAgICBzY2FsZTogW3NjYWxlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjYWxlIFhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3NjYWxlXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2NhbGUteCc6IFt7XHJcbiAgICAgICAgJ3NjYWxlLXgnOiBbc2NhbGVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2NhbGUgWVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2NhbGVcclxuICAgICAgICovXHJcbiAgICAgICdzY2FsZS15JzogW3tcclxuICAgICAgICAnc2NhbGUteSc6IFtzY2FsZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBSb3RhdGVcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3JvdGF0ZVxyXG4gICAgICAgKi9cclxuICAgICAgcm90YXRlOiBbe1xyXG4gICAgICAgIHJvdGF0ZTogW2lzSW50ZWdlciwgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBUcmFuc2xhdGUgWFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdHJhbnNsYXRlXHJcbiAgICAgICAqL1xyXG4gICAgICAndHJhbnNsYXRlLXgnOiBbe1xyXG4gICAgICAgICd0cmFuc2xhdGUteCc6IFt0cmFuc2xhdGVdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVHJhbnNsYXRlIFlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RyYW5zbGF0ZVxyXG4gICAgICAgKi9cclxuICAgICAgJ3RyYW5zbGF0ZS15JzogW3tcclxuICAgICAgICAndHJhbnNsYXRlLXknOiBbdHJhbnNsYXRlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNrZXcgWFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2tld1xyXG4gICAgICAgKi9cclxuICAgICAgJ3NrZXcteCc6IFt7XHJcbiAgICAgICAgJ3NrZXcteCc6IFtza2V3XVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNrZXcgWVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2tld1xyXG4gICAgICAgKi9cclxuICAgICAgJ3NrZXcteSc6IFt7XHJcbiAgICAgICAgJ3NrZXcteSc6IFtza2V3XVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRyYW5zZm9ybSBPcmlnaW5cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3RyYW5zZm9ybS1vcmlnaW5cclxuICAgICAgICovXHJcbiAgICAgICd0cmFuc2Zvcm0tb3JpZ2luJzogW3tcclxuICAgICAgICBvcmlnaW46IFsnY2VudGVyJywgJ3RvcCcsICd0b3AtcmlnaHQnLCAncmlnaHQnLCAnYm90dG9tLXJpZ2h0JywgJ2JvdHRvbScsICdib3R0b20tbGVmdCcsICdsZWZ0JywgJ3RvcC1sZWZ0JywgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8vIEludGVyYWN0aXZpdHlcclxuICAgICAgLyoqXHJcbiAgICAgICAqIEFjY2VudCBDb2xvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYWNjZW50LWNvbG9yXHJcbiAgICAgICAqL1xyXG4gICAgICBhY2NlbnQ6IFt7XHJcbiAgICAgICAgYWNjZW50OiBbJ2F1dG8nLCBjb2xvcnNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQXBwZWFyYW5jZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvYXBwZWFyYW5jZVxyXG4gICAgICAgKi9cclxuICAgICAgYXBwZWFyYW5jZTogW3tcclxuICAgICAgICBhcHBlYXJhbmNlOiBbJ25vbmUnLCAnYXV0byddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogQ3Vyc29yXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9jdXJzb3JcclxuICAgICAgICovXHJcbiAgICAgIGN1cnNvcjogW3tcclxuICAgICAgICBjdXJzb3I6IFsnYXV0bycsICdkZWZhdWx0JywgJ3BvaW50ZXInLCAnd2FpdCcsICd0ZXh0JywgJ21vdmUnLCAnaGVscCcsICdub3QtYWxsb3dlZCcsICdub25lJywgJ2NvbnRleHQtbWVudScsICdwcm9ncmVzcycsICdjZWxsJywgJ2Nyb3NzaGFpcicsICd2ZXJ0aWNhbC10ZXh0JywgJ2FsaWFzJywgJ2NvcHknLCAnbm8tZHJvcCcsICdncmFiJywgJ2dyYWJiaW5nJywgJ2FsbC1zY3JvbGwnLCAnY29sLXJlc2l6ZScsICdyb3ctcmVzaXplJywgJ24tcmVzaXplJywgJ2UtcmVzaXplJywgJ3MtcmVzaXplJywgJ3ctcmVzaXplJywgJ25lLXJlc2l6ZScsICdudy1yZXNpemUnLCAnc2UtcmVzaXplJywgJ3N3LXJlc2l6ZScsICdldy1yZXNpemUnLCAnbnMtcmVzaXplJywgJ25lc3ctcmVzaXplJywgJ253c2UtcmVzaXplJywgJ3pvb20taW4nLCAnem9vbS1vdXQnLCBpc0FyYml0cmFyeVZhbHVlXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIENhcmV0IENvbG9yXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9qdXN0LWluLXRpbWUtbW9kZSNjYXJldC1jb2xvci11dGlsaXRpZXNcclxuICAgICAgICovXHJcbiAgICAgICdjYXJldC1jb2xvcic6IFt7XHJcbiAgICAgICAgY2FyZXQ6IFtjb2xvcnNdXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogUG9pbnRlciBFdmVudHNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3BvaW50ZXItZXZlbnRzXHJcbiAgICAgICAqL1xyXG4gICAgICAncG9pbnRlci1ldmVudHMnOiBbe1xyXG4gICAgICAgICdwb2ludGVyLWV2ZW50cyc6IFsnbm9uZScsICdhdXRvJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBSZXNpemVcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Jlc2l6ZVxyXG4gICAgICAgKi9cclxuICAgICAgcmVzaXplOiBbe1xyXG4gICAgICAgIHJlc2l6ZTogWydub25lJywgJ3knLCAneCcsICcnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBCZWhhdmlvclxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLWJlaGF2aW9yXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2Nyb2xsLWJlaGF2aW9yJzogW3tcclxuICAgICAgICBzY3JvbGw6IFsnYXV0bycsICdzbW9vdGgnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBNYXJnaW5cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1tYXJnaW5cclxuICAgICAgICovXHJcbiAgICAgICdzY3JvbGwtbSc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1tJzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBNYXJnaW4gWFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLW1hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgJ3Njcm9sbC1teCc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1teCc6IGdldFNwYWNpbmdXaXRoQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTY3JvbGwgTWFyZ2luIFlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1tYXJnaW5cclxuICAgICAgICovXHJcbiAgICAgICdzY3JvbGwtbXknOiBbe1xyXG4gICAgICAgICdzY3JvbGwtbXknOiBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2Nyb2xsIE1hcmdpbiBTdGFydFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLW1hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgJ3Njcm9sbC1tcyc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1tcyc6IGdldFNwYWNpbmdXaXRoQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTY3JvbGwgTWFyZ2luIEVuZFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLW1hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgJ3Njcm9sbC1tZSc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1tZSc6IGdldFNwYWNpbmdXaXRoQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTY3JvbGwgTWFyZ2luIFRvcFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLW1hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgJ3Njcm9sbC1tdCc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1tdCc6IGdldFNwYWNpbmdXaXRoQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTY3JvbGwgTWFyZ2luIFJpZ2h0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9zY3JvbGwtbWFyZ2luXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2Nyb2xsLW1yJzogW3tcclxuICAgICAgICAnc2Nyb2xsLW1yJzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBNYXJnaW4gQm90dG9tXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9zY3JvbGwtbWFyZ2luXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2Nyb2xsLW1iJzogW3tcclxuICAgICAgICAnc2Nyb2xsLW1iJzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBNYXJnaW4gTGVmdFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLW1hcmdpblxyXG4gICAgICAgKi9cclxuICAgICAgJ3Njcm9sbC1tbCc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1tbCc6IGdldFNwYWNpbmdXaXRoQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTY3JvbGwgUGFkZGluZ1xyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLXBhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgICdzY3JvbGwtcCc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1wJzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBQYWRkaW5nIFhcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2Nyb2xsLXB4JzogW3tcclxuICAgICAgICAnc2Nyb2xsLXB4JzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBQYWRkaW5nIFlcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2Nyb2xsLXB5JzogW3tcclxuICAgICAgICAnc2Nyb2xsLXB5JzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBQYWRkaW5nIFN0YXJ0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9zY3JvbGwtcGFkZGluZ1xyXG4gICAgICAgKi9cclxuICAgICAgJ3Njcm9sbC1wcyc6IFt7XHJcbiAgICAgICAgJ3Njcm9sbC1wcyc6IGdldFNwYWNpbmdXaXRoQXJiaXRyYXJ5KClcclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTY3JvbGwgUGFkZGluZyBFbmRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2Nyb2xsLXBlJzogW3tcclxuICAgICAgICAnc2Nyb2xsLXBlJzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBQYWRkaW5nIFRvcFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLXBhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgICdzY3JvbGwtcHQnOiBbe1xyXG4gICAgICAgICdzY3JvbGwtcHQnOiBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2Nyb2xsIFBhZGRpbmcgUmlnaHRcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1wYWRkaW5nXHJcbiAgICAgICAqL1xyXG4gICAgICAnc2Nyb2xsLXByJzogW3tcclxuICAgICAgICAnc2Nyb2xsLXByJzogZ2V0U3BhY2luZ1dpdGhBcmJpdHJhcnkoKVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBQYWRkaW5nIEJvdHRvbVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLXBhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgICdzY3JvbGwtcGInOiBbe1xyXG4gICAgICAgICdzY3JvbGwtcGInOiBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2Nyb2xsIFBhZGRpbmcgTGVmdFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLXBhZGRpbmdcclxuICAgICAgICovXHJcbiAgICAgICdzY3JvbGwtcGwnOiBbe1xyXG4gICAgICAgICdzY3JvbGwtcGwnOiBnZXRTcGFjaW5nV2l0aEFyYml0cmFyeSgpXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2Nyb2xsIFNuYXAgQWxpZ25cclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1zbmFwLWFsaWduXHJcbiAgICAgICAqL1xyXG4gICAgICAnc25hcC1hbGlnbic6IFt7XHJcbiAgICAgICAgc25hcDogWydzdGFydCcsICdlbmQnLCAnY2VudGVyJywgJ2FsaWduLW5vbmUnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFNjcm9sbCBTbmFwIFN0b3BcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1zbmFwLXN0b3BcclxuICAgICAgICovXHJcbiAgICAgICdzbmFwLXN0b3AnOiBbe1xyXG4gICAgICAgIHNuYXA6IFsnbm9ybWFsJywgJ2Fsd2F5cyddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU2Nyb2xsIFNuYXAgVHlwZVxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3Mvc2Nyb2xsLXNuYXAtdHlwZVxyXG4gICAgICAgKi9cclxuICAgICAgJ3NuYXAtdHlwZSc6IFt7XHJcbiAgICAgICAgc25hcDogWydub25lJywgJ3gnLCAneScsICdib3RoJ11cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTY3JvbGwgU25hcCBUeXBlIFN0cmljdG5lc3NcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3Njcm9sbC1zbmFwLXR5cGVcclxuICAgICAgICovXHJcbiAgICAgICdzbmFwLXN0cmljdG5lc3MnOiBbe1xyXG4gICAgICAgIHNuYXA6IFsnbWFuZGF0b3J5JywgJ3Byb3hpbWl0eSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogVG91Y2ggQWN0aW9uXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90b3VjaC1hY3Rpb25cclxuICAgICAgICovXHJcbiAgICAgIHRvdWNoOiBbe1xyXG4gICAgICAgIHRvdWNoOiBbJ2F1dG8nLCAnbm9uZScsICdtYW5pcHVsYXRpb24nXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRvdWNoIEFjdGlvbiBYXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90b3VjaC1hY3Rpb25cclxuICAgICAgICovXHJcbiAgICAgICd0b3VjaC14JzogW3tcclxuICAgICAgICAndG91Y2gtcGFuJzogWyd4JywgJ2xlZnQnLCAncmlnaHQnXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRvdWNoIEFjdGlvbiBZXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90b3VjaC1hY3Rpb25cclxuICAgICAgICovXHJcbiAgICAgICd0b3VjaC15JzogW3tcclxuICAgICAgICAndG91Y2gtcGFuJzogWyd5JywgJ3VwJywgJ2Rvd24nXVxyXG4gICAgICB9XSxcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRvdWNoIEFjdGlvbiBQaW5jaCBab29tXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90b3VjaC1hY3Rpb25cclxuICAgICAgICovXHJcbiAgICAgICd0b3VjaC1weic6IFsndG91Y2gtcGluY2gtem9vbSddLFxyXG4gICAgICAvKipcclxuICAgICAgICogVXNlciBTZWxlY3RcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3VzZXItc2VsZWN0XHJcbiAgICAgICAqL1xyXG4gICAgICBzZWxlY3Q6IFt7XHJcbiAgICAgICAgc2VsZWN0OiBbJ25vbmUnLCAndGV4dCcsICdhbGwnLCAnYXV0byddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogV2lsbCBDaGFuZ2VcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3dpbGwtY2hhbmdlXHJcbiAgICAgICAqL1xyXG4gICAgICAnd2lsbC1jaGFuZ2UnOiBbe1xyXG4gICAgICAgICd3aWxsLWNoYW5nZSc6IFsnYXV0bycsICdzY3JvbGwnLCAnY29udGVudHMnLCAndHJhbnNmb3JtJywgaXNBcmJpdHJhcnlWYWx1ZV1cclxuICAgICAgfV0sXHJcbiAgICAgIC8vIFNWR1xyXG4gICAgICAvKipcclxuICAgICAgICogRmlsbFxyXG4gICAgICAgKiBAc2VlIGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvZmlsbFxyXG4gICAgICAgKi9cclxuICAgICAgZmlsbDogW3tcclxuICAgICAgICBmaWxsOiBbY29sb3JzLCAnbm9uZSddXHJcbiAgICAgIH1dLFxyXG4gICAgICAvKipcclxuICAgICAgICogU3Ryb2tlIFdpZHRoXHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9zdHJva2Utd2lkdGhcclxuICAgICAgICovXHJcbiAgICAgICdzdHJva2Utdyc6IFt7XHJcbiAgICAgICAgc3Ryb2tlOiBbaXNMZW5ndGgsIGlzQXJiaXRyYXJ5TGVuZ3RoLCBpc0FyYml0cmFyeU51bWJlcl1cclxuICAgICAgfV0sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBTdHJva2VcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3N0cm9rZVxyXG4gICAgICAgKi9cclxuICAgICAgc3Ryb2tlOiBbe1xyXG4gICAgICAgIHN0cm9rZTogW2NvbG9ycywgJ25vbmUnXVxyXG4gICAgICB9XSxcclxuICAgICAgLy8gQWNjZXNzaWJpbGl0eVxyXG4gICAgICAvKipcclxuICAgICAgICogU2NyZWVuIFJlYWRlcnNcclxuICAgICAgICogQHNlZSBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3NjcmVlbi1yZWFkZXJzXHJcbiAgICAgICAqL1xyXG4gICAgICBzcjogWydzci1vbmx5JywgJ25vdC1zci1vbmx5J10sXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBGb3JjZWQgQ29sb3IgQWRqdXN0XHJcbiAgICAgICAqIEBzZWUgaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9mb3JjZWQtY29sb3ItYWRqdXN0XHJcbiAgICAgICAqL1xyXG4gICAgICAnZm9yY2VkLWNvbG9yLWFkanVzdCc6IFt7XHJcbiAgICAgICAgJ2ZvcmNlZC1jb2xvci1hZGp1c3QnOiBbJ2F1dG8nLCAnbm9uZSddXHJcbiAgICAgIH1dXHJcbiAgICB9LFxyXG4gICAgY29uZmxpY3RpbmdDbGFzc0dyb3Vwczoge1xyXG4gICAgICBvdmVyZmxvdzogWydvdmVyZmxvdy14JywgJ292ZXJmbG93LXknXSxcclxuICAgICAgb3ZlcnNjcm9sbDogWydvdmVyc2Nyb2xsLXgnLCAnb3ZlcnNjcm9sbC15J10sXHJcbiAgICAgIGluc2V0OiBbJ2luc2V0LXgnLCAnaW5zZXQteScsICdzdGFydCcsICdlbmQnLCAndG9wJywgJ3JpZ2h0JywgJ2JvdHRvbScsICdsZWZ0J10sXHJcbiAgICAgICdpbnNldC14JzogWydyaWdodCcsICdsZWZ0J10sXHJcbiAgICAgICdpbnNldC15JzogWyd0b3AnLCAnYm90dG9tJ10sXHJcbiAgICAgIGZsZXg6IFsnYmFzaXMnLCAnZ3JvdycsICdzaHJpbmsnXSxcclxuICAgICAgZ2FwOiBbJ2dhcC14JywgJ2dhcC15J10sXHJcbiAgICAgIHA6IFsncHgnLCAncHknLCAncHMnLCAncGUnLCAncHQnLCAncHInLCAncGInLCAncGwnXSxcclxuICAgICAgcHg6IFsncHInLCAncGwnXSxcclxuICAgICAgcHk6IFsncHQnLCAncGInXSxcclxuICAgICAgbTogWydteCcsICdteScsICdtcycsICdtZScsICdtdCcsICdtcicsICdtYicsICdtbCddLFxyXG4gICAgICBteDogWydtcicsICdtbCddLFxyXG4gICAgICBteTogWydtdCcsICdtYiddLFxyXG4gICAgICBzaXplOiBbJ3cnLCAnaCddLFxyXG4gICAgICAnZm9udC1zaXplJzogWydsZWFkaW5nJ10sXHJcbiAgICAgICdmdm4tbm9ybWFsJzogWydmdm4tb3JkaW5hbCcsICdmdm4tc2xhc2hlZC16ZXJvJywgJ2Z2bi1maWd1cmUnLCAnZnZuLXNwYWNpbmcnLCAnZnZuLWZyYWN0aW9uJ10sXHJcbiAgICAgICdmdm4tb3JkaW5hbCc6IFsnZnZuLW5vcm1hbCddLFxyXG4gICAgICAnZnZuLXNsYXNoZWQtemVybyc6IFsnZnZuLW5vcm1hbCddLFxyXG4gICAgICAnZnZuLWZpZ3VyZSc6IFsnZnZuLW5vcm1hbCddLFxyXG4gICAgICAnZnZuLXNwYWNpbmcnOiBbJ2Z2bi1ub3JtYWwnXSxcclxuICAgICAgJ2Z2bi1mcmFjdGlvbic6IFsnZnZuLW5vcm1hbCddLFxyXG4gICAgICAnbGluZS1jbGFtcCc6IFsnZGlzcGxheScsICdvdmVyZmxvdyddLFxyXG4gICAgICByb3VuZGVkOiBbJ3JvdW5kZWQtcycsICdyb3VuZGVkLWUnLCAncm91bmRlZC10JywgJ3JvdW5kZWQtcicsICdyb3VuZGVkLWInLCAncm91bmRlZC1sJywgJ3JvdW5kZWQtc3MnLCAncm91bmRlZC1zZScsICdyb3VuZGVkLWVlJywgJ3JvdW5kZWQtZXMnLCAncm91bmRlZC10bCcsICdyb3VuZGVkLXRyJywgJ3JvdW5kZWQtYnInLCAncm91bmRlZC1ibCddLFxyXG4gICAgICAncm91bmRlZC1zJzogWydyb3VuZGVkLXNzJywgJ3JvdW5kZWQtZXMnXSxcclxuICAgICAgJ3JvdW5kZWQtZSc6IFsncm91bmRlZC1zZScsICdyb3VuZGVkLWVlJ10sXHJcbiAgICAgICdyb3VuZGVkLXQnOiBbJ3JvdW5kZWQtdGwnLCAncm91bmRlZC10ciddLFxyXG4gICAgICAncm91bmRlZC1yJzogWydyb3VuZGVkLXRyJywgJ3JvdW5kZWQtYnInXSxcclxuICAgICAgJ3JvdW5kZWQtYic6IFsncm91bmRlZC1icicsICdyb3VuZGVkLWJsJ10sXHJcbiAgICAgICdyb3VuZGVkLWwnOiBbJ3JvdW5kZWQtdGwnLCAncm91bmRlZC1ibCddLFxyXG4gICAgICAnYm9yZGVyLXNwYWNpbmcnOiBbJ2JvcmRlci1zcGFjaW5nLXgnLCAnYm9yZGVyLXNwYWNpbmcteSddLFxyXG4gICAgICAnYm9yZGVyLXcnOiBbJ2JvcmRlci13LXMnLCAnYm9yZGVyLXctZScsICdib3JkZXItdy10JywgJ2JvcmRlci13LXInLCAnYm9yZGVyLXctYicsICdib3JkZXItdy1sJ10sXHJcbiAgICAgICdib3JkZXItdy14JzogWydib3JkZXItdy1yJywgJ2JvcmRlci13LWwnXSxcclxuICAgICAgJ2JvcmRlci13LXknOiBbJ2JvcmRlci13LXQnLCAnYm9yZGVyLXctYiddLFxyXG4gICAgICAnYm9yZGVyLWNvbG9yJzogWydib3JkZXItY29sb3ItcycsICdib3JkZXItY29sb3ItZScsICdib3JkZXItY29sb3ItdCcsICdib3JkZXItY29sb3ItcicsICdib3JkZXItY29sb3ItYicsICdib3JkZXItY29sb3ItbCddLFxyXG4gICAgICAnYm9yZGVyLWNvbG9yLXgnOiBbJ2JvcmRlci1jb2xvci1yJywgJ2JvcmRlci1jb2xvci1sJ10sXHJcbiAgICAgICdib3JkZXItY29sb3IteSc6IFsnYm9yZGVyLWNvbG9yLXQnLCAnYm9yZGVyLWNvbG9yLWInXSxcclxuICAgICAgJ3Njcm9sbC1tJzogWydzY3JvbGwtbXgnLCAnc2Nyb2xsLW15JywgJ3Njcm9sbC1tcycsICdzY3JvbGwtbWUnLCAnc2Nyb2xsLW10JywgJ3Njcm9sbC1tcicsICdzY3JvbGwtbWInLCAnc2Nyb2xsLW1sJ10sXHJcbiAgICAgICdzY3JvbGwtbXgnOiBbJ3Njcm9sbC1tcicsICdzY3JvbGwtbWwnXSxcclxuICAgICAgJ3Njcm9sbC1teSc6IFsnc2Nyb2xsLW10JywgJ3Njcm9sbC1tYiddLFxyXG4gICAgICAnc2Nyb2xsLXAnOiBbJ3Njcm9sbC1weCcsICdzY3JvbGwtcHknLCAnc2Nyb2xsLXBzJywgJ3Njcm9sbC1wZScsICdzY3JvbGwtcHQnLCAnc2Nyb2xsLXByJywgJ3Njcm9sbC1wYicsICdzY3JvbGwtcGwnXSxcclxuICAgICAgJ3Njcm9sbC1weCc6IFsnc2Nyb2xsLXByJywgJ3Njcm9sbC1wbCddLFxyXG4gICAgICAnc2Nyb2xsLXB5JzogWydzY3JvbGwtcHQnLCAnc2Nyb2xsLXBiJ10sXHJcbiAgICAgIHRvdWNoOiBbJ3RvdWNoLXgnLCAndG91Y2gteScsICd0b3VjaC1weiddLFxyXG4gICAgICAndG91Y2gteCc6IFsndG91Y2gnXSxcclxuICAgICAgJ3RvdWNoLXknOiBbJ3RvdWNoJ10sXHJcbiAgICAgICd0b3VjaC1weic6IFsndG91Y2gnXVxyXG4gICAgfSxcclxuICAgIGNvbmZsaWN0aW5nQ2xhc3NHcm91cE1vZGlmaWVyczoge1xyXG4gICAgICAnZm9udC1zaXplJzogWydsZWFkaW5nJ11cclxuICAgIH1cclxuICB9O1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSBiYXNlQ29uZmlnIENvbmZpZyB3aGVyZSBvdGhlciBjb25maWcgd2lsbCBiZSBtZXJnZWQgaW50by4gVGhpcyBvYmplY3Qgd2lsbCBiZSBtdXRhdGVkLlxyXG4gKiBAcGFyYW0gY29uZmlnRXh0ZW5zaW9uIFBhcnRpYWwgY29uZmlnIHRvIG1lcmdlIGludG8gdGhlIGBiYXNlQ29uZmlnYC5cclxuICovXHJcbmNvbnN0IG1lcmdlQ29uZmlncyA9IChiYXNlQ29uZmlnLCB7XHJcbiAgY2FjaGVTaXplLFxyXG4gIHByZWZpeCxcclxuICBzZXBhcmF0b3IsXHJcbiAgZXhwZXJpbWVudGFsUGFyc2VDbGFzc05hbWUsXHJcbiAgZXh0ZW5kID0ge30sXHJcbiAgb3ZlcnJpZGUgPSB7fVxyXG59KSA9PiB7XHJcbiAgb3ZlcnJpZGVQcm9wZXJ0eShiYXNlQ29uZmlnLCAnY2FjaGVTaXplJywgY2FjaGVTaXplKTtcclxuICBvdmVycmlkZVByb3BlcnR5KGJhc2VDb25maWcsICdwcmVmaXgnLCBwcmVmaXgpO1xyXG4gIG92ZXJyaWRlUHJvcGVydHkoYmFzZUNvbmZpZywgJ3NlcGFyYXRvcicsIHNlcGFyYXRvcik7XHJcbiAgb3ZlcnJpZGVQcm9wZXJ0eShiYXNlQ29uZmlnLCAnZXhwZXJpbWVudGFsUGFyc2VDbGFzc05hbWUnLCBleHBlcmltZW50YWxQYXJzZUNsYXNzTmFtZSk7XHJcbiAgZm9yIChjb25zdCBjb25maWdLZXkgaW4gb3ZlcnJpZGUpIHtcclxuICAgIG92ZXJyaWRlQ29uZmlnUHJvcGVydGllcyhiYXNlQ29uZmlnW2NvbmZpZ0tleV0sIG92ZXJyaWRlW2NvbmZpZ0tleV0pO1xyXG4gIH1cclxuICBmb3IgKGNvbnN0IGtleSBpbiBleHRlbmQpIHtcclxuICAgIG1lcmdlQ29uZmlnUHJvcGVydGllcyhiYXNlQ29uZmlnW2tleV0sIGV4dGVuZFtrZXldKTtcclxuICB9XHJcbiAgcmV0dXJuIGJhc2VDb25maWc7XHJcbn07XHJcbmNvbnN0IG92ZXJyaWRlUHJvcGVydHkgPSAoYmFzZU9iamVjdCwgb3ZlcnJpZGVLZXksIG92ZXJyaWRlVmFsdWUpID0+IHtcclxuICBpZiAob3ZlcnJpZGVWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICBiYXNlT2JqZWN0W292ZXJyaWRlS2V5XSA9IG92ZXJyaWRlVmFsdWU7XHJcbiAgfVxyXG59O1xyXG5jb25zdCBvdmVycmlkZUNvbmZpZ1Byb3BlcnRpZXMgPSAoYmFzZU9iamVjdCwgb3ZlcnJpZGVPYmplY3QpID0+IHtcclxuICBpZiAob3ZlcnJpZGVPYmplY3QpIHtcclxuICAgIGZvciAoY29uc3Qga2V5IGluIG92ZXJyaWRlT2JqZWN0KSB7XHJcbiAgICAgIG92ZXJyaWRlUHJvcGVydHkoYmFzZU9iamVjdCwga2V5LCBvdmVycmlkZU9iamVjdFtrZXldKTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcbmNvbnN0IG1lcmdlQ29uZmlnUHJvcGVydGllcyA9IChiYXNlT2JqZWN0LCBtZXJnZU9iamVjdCkgPT4ge1xyXG4gIGlmIChtZXJnZU9iamVjdCkge1xyXG4gICAgZm9yIChjb25zdCBrZXkgaW4gbWVyZ2VPYmplY3QpIHtcclxuICAgICAgY29uc3QgbWVyZ2VWYWx1ZSA9IG1lcmdlT2JqZWN0W2tleV07XHJcbiAgICAgIGlmIChtZXJnZVZhbHVlICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBiYXNlT2JqZWN0W2tleV0gPSAoYmFzZU9iamVjdFtrZXldIHx8IFtdKS5jb25jYXQobWVyZ2VWYWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn07XHJcbmNvbnN0IGV4dGVuZFRhaWx3aW5kTWVyZ2UgPSAoY29uZmlnRXh0ZW5zaW9uLCAuLi5jcmVhdGVDb25maWcpID0+IHR5cGVvZiBjb25maWdFeHRlbnNpb24gPT09ICdmdW5jdGlvbicgPyBjcmVhdGVUYWlsd2luZE1lcmdlKGdldERlZmF1bHRDb25maWcsIGNvbmZpZ0V4dGVuc2lvbiwgLi4uY3JlYXRlQ29uZmlnKSA6IGNyZWF0ZVRhaWx3aW5kTWVyZ2UoKCkgPT4gbWVyZ2VDb25maWdzKGdldERlZmF1bHRDb25maWcoKSwgY29uZmlnRXh0ZW5zaW9uKSwgLi4uY3JlYXRlQ29uZmlnKTtcclxuY29uc3QgdHdNZXJnZSA9IC8qI19fUFVSRV9fKi9jcmVhdGVUYWlsd2luZE1lcmdlKGdldERlZmF1bHRDb25maWcpO1xyXG5leHBvcnQgeyBjcmVhdGVUYWlsd2luZE1lcmdlLCBleHRlbmRUYWlsd2luZE1lcmdlLCBmcm9tVGhlbWUsIGdldERlZmF1bHRDb25maWcsIG1lcmdlQ29uZmlncywgdHdKb2luLCB0d01lcmdlLCB2YWxpZGF0b3JzIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1bmRsZS1tanMubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ws/browser.js":
/*!************************************!*\
  !*** ./node_modules/ws/browser.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nmodule.exports = function () {\r\n  throw new Error(\r\n    'ws does not work in the browser. Browser clients must use the native ' +\r\n      'WebSocket object'\r\n  );\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy93cy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFx3c1xcYnJvd3Nlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAnd3MgZG9lcyBub3Qgd29yayBpbiB0aGUgYnJvd3Nlci4gQnJvd3NlciBjbGllbnRzIG11c3QgdXNlIHRoZSBuYXRpdmUgJyArXHJcbiAgICAgICdXZWJTb2NrZXQgb2JqZWN0J1xyXG4gICk7XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ws/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs":
/*!*************************************************!*\
  !*** ./node_modules/zustand/esm/middleware.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   createJSONStorage: () => (/* binding */ createJSONStorage),\n/* harmony export */   devtools: () => (/* binding */ devtools),\n/* harmony export */   persist: () => (/* binding */ persist),\n/* harmony export */   redux: () => (/* binding */ redux),\n/* harmony export */   subscribeWithSelector: () => (/* binding */ subscribeWithSelector)\n/* harmony export */ });\nconst reduxImpl = (reducer, initial) => (set, _get, api) => {\r\n  api.dispatch = (action) => {\r\n    set((state) => reducer(state, action), false, action);\r\n    return action;\r\n  };\r\n  api.dispatchFromDevtools = true;\r\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\r\n};\r\nconst redux = reduxImpl;\r\n\r\nconst trackedConnections = /* @__PURE__ */ new Map();\r\nconst getTrackedConnectionState = (name) => {\r\n  const api = trackedConnections.get(name);\r\n  if (!api) return {};\r\n  return Object.fromEntries(\r\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\r\n  );\r\n};\r\nconst extractConnectionInformation = (store, extensionConnector, options) => {\r\n  if (store === void 0) {\r\n    return {\r\n      type: \"untracked\",\r\n      connection: extensionConnector.connect(options)\r\n    };\r\n  }\r\n  const existingConnection = trackedConnections.get(options.name);\r\n  if (existingConnection) {\r\n    return { type: \"tracked\", store, ...existingConnection };\r\n  }\r\n  const newConnection = {\r\n    connection: extensionConnector.connect(options),\r\n    stores: {}\r\n  };\r\n  trackedConnections.set(options.name, newConnection);\r\n  return { type: \"tracked\", store, ...newConnection };\r\n};\r\nconst removeStoreFromTrackedConnections = (name, store) => {\r\n  if (store === void 0) return;\r\n  const connectionInfo = trackedConnections.get(name);\r\n  if (!connectionInfo) return;\r\n  delete connectionInfo.stores[store];\r\n  if (Object.keys(connectionInfo.stores).length === 0) {\r\n    trackedConnections.delete(name);\r\n  }\r\n};\r\nconst findCallerName = (stack) => {\r\n  var _a, _b;\r\n  if (!stack) return void 0;\r\n  const traceLines = stack.split(\"\\n\");\r\n  const apiSetStateLineIndex = traceLines.findIndex(\r\n    (traceLine) => traceLine.includes(\"api.setState\")\r\n  );\r\n  if (apiSetStateLineIndex < 0) return void 0;\r\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\r\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\r\n};\r\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\r\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\r\n  let extensionConnector;\r\n  try {\r\n    extensionConnector = (enabled != null ? enabled : ( false ? 0 : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\r\n  } catch (e) {\r\n  }\r\n  if (!extensionConnector) {\r\n    return fn(set, get, api);\r\n  }\r\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\r\n  let isRecording = true;\r\n  api.setState = (state, replace, nameOrAction) => {\r\n    const r = set(state, replace);\r\n    if (!isRecording) return r;\r\n    const inferredActionType = findCallerName(new Error().stack);\r\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || inferredActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\r\n    if (store === void 0) {\r\n      connection == null ? void 0 : connection.send(action, get());\r\n      return r;\r\n    }\r\n    connection == null ? void 0 : connection.send(\r\n      {\r\n        ...action,\r\n        type: `${store}/${action.type}`\r\n      },\r\n      {\r\n        ...getTrackedConnectionState(options.name),\r\n        [store]: api.getState()\r\n      }\r\n    );\r\n    return r;\r\n  };\r\n  api.devtools = {\r\n    cleanup: () => {\r\n      if (connection && typeof connection.unsubscribe === \"function\") {\r\n        connection.unsubscribe();\r\n      }\r\n      removeStoreFromTrackedConnections(options.name, store);\r\n    }\r\n  };\r\n  const setStateFromDevtools = (...a) => {\r\n    const originalIsRecording = isRecording;\r\n    isRecording = false;\r\n    set(...a);\r\n    isRecording = originalIsRecording;\r\n  };\r\n  const initialState = fn(api.setState, get, api);\r\n  if (connectionInformation.type === \"untracked\") {\r\n    connection == null ? void 0 : connection.init(initialState);\r\n  } else {\r\n    connectionInformation.stores[connectionInformation.store] = api;\r\n    connection == null ? void 0 : connection.init(\r\n      Object.fromEntries(\r\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\r\n          key,\r\n          key === connectionInformation.store ? initialState : store2.getState()\r\n        ])\r\n      )\r\n    );\r\n  }\r\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\r\n    let didWarnAboutReservedActionType = false;\r\n    const originalDispatch = api.dispatch;\r\n    api.dispatch = (...args) => {\r\n      if (( false ? 0 : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\r\n        console.warn(\r\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\r\n        );\r\n        didWarnAboutReservedActionType = true;\r\n      }\r\n      originalDispatch(...args);\r\n    };\r\n  }\r\n  connection.subscribe((message) => {\r\n    var _a;\r\n    switch (message.type) {\r\n      case \"ACTION\":\r\n        if (typeof message.payload !== \"string\") {\r\n          console.error(\r\n            \"[zustand devtools middleware] Unsupported action format\"\r\n          );\r\n          return;\r\n        }\r\n        return parseJsonThen(\r\n          message.payload,\r\n          (action) => {\r\n            if (action.type === \"__setState\") {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(action.state);\r\n                return;\r\n              }\r\n              if (Object.keys(action.state).length !== 1) {\r\n                console.error(\r\n                  `\r\n                    [zustand devtools middleware] Unsupported __setState action format.\r\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\r\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\r\n                    `\r\n                );\r\n              }\r\n              const stateFromDevtools = action.state[store];\r\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\r\n                return;\r\n              }\r\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\r\n                setStateFromDevtools(stateFromDevtools);\r\n              }\r\n              return;\r\n            }\r\n            if (!api.dispatchFromDevtools) return;\r\n            if (typeof api.dispatch !== \"function\") return;\r\n            api.dispatch(action);\r\n          }\r\n        );\r\n      case \"DISPATCH\":\r\n        switch (message.payload.type) {\r\n          case \"RESET\":\r\n            setStateFromDevtools(initialState);\r\n            if (store === void 0) {\r\n              return connection == null ? void 0 : connection.init(api.getState());\r\n            }\r\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n          case \"COMMIT\":\r\n            if (store === void 0) {\r\n              connection == null ? void 0 : connection.init(api.getState());\r\n              return;\r\n            }\r\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n          case \"ROLLBACK\":\r\n            return parseJsonThen(message.state, (state) => {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(state);\r\n                connection == null ? void 0 : connection.init(api.getState());\r\n                return;\r\n              }\r\n              setStateFromDevtools(state[store]);\r\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n            });\r\n          case \"JUMP_TO_STATE\":\r\n          case \"JUMP_TO_ACTION\":\r\n            return parseJsonThen(message.state, (state) => {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(state);\r\n                return;\r\n              }\r\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\r\n                setStateFromDevtools(state[store]);\r\n              }\r\n            });\r\n          case \"IMPORT_STATE\": {\r\n            const { nextLiftedState } = message.payload;\r\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\r\n            if (!lastComputedState) return;\r\n            if (store === void 0) {\r\n              setStateFromDevtools(lastComputedState);\r\n            } else {\r\n              setStateFromDevtools(lastComputedState[store]);\r\n            }\r\n            connection == null ? void 0 : connection.send(\r\n              null,\r\n              // FIXME no-any\r\n              nextLiftedState\r\n            );\r\n            return;\r\n          }\r\n          case \"PAUSE_RECORDING\":\r\n            return isRecording = !isRecording;\r\n        }\r\n        return;\r\n    }\r\n  });\r\n  return initialState;\r\n};\r\nconst devtools = devtoolsImpl;\r\nconst parseJsonThen = (stringified, fn) => {\r\n  let parsed;\r\n  try {\r\n    parsed = JSON.parse(stringified);\r\n  } catch (e) {\r\n    console.error(\r\n      \"[zustand devtools middleware] Could not parse the received json\",\r\n      e\r\n    );\r\n  }\r\n  if (parsed !== void 0) fn(parsed);\r\n};\r\n\r\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\r\n  const origSubscribe = api.subscribe;\r\n  api.subscribe = (selector, optListener, options) => {\r\n    let listener = selector;\r\n    if (optListener) {\r\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\r\n      let currentSlice = selector(api.getState());\r\n      listener = (state) => {\r\n        const nextSlice = selector(state);\r\n        if (!equalityFn(currentSlice, nextSlice)) {\r\n          const previousSlice = currentSlice;\r\n          optListener(currentSlice = nextSlice, previousSlice);\r\n        }\r\n      };\r\n      if (options == null ? void 0 : options.fireImmediately) {\r\n        optListener(currentSlice, currentSlice);\r\n      }\r\n    }\r\n    return origSubscribe(listener);\r\n  };\r\n  const initialState = fn(set, get, api);\r\n  return initialState;\r\n};\r\nconst subscribeWithSelector = subscribeWithSelectorImpl;\r\n\r\nfunction combine(initialState, create) {\r\n  return (...args) => Object.assign({}, initialState, create(...args));\r\n}\r\n\r\nfunction createJSONStorage(getStorage, options) {\r\n  let storage;\r\n  try {\r\n    storage = getStorage();\r\n  } catch (e) {\r\n    return;\r\n  }\r\n  const persistStorage = {\r\n    getItem: (name) => {\r\n      var _a;\r\n      const parse = (str2) => {\r\n        if (str2 === null) {\r\n          return null;\r\n        }\r\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\r\n      };\r\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\r\n      if (str instanceof Promise) {\r\n        return str.then(parse);\r\n      }\r\n      return parse(str);\r\n    },\r\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\r\n    removeItem: (name) => storage.removeItem(name)\r\n  };\r\n  return persistStorage;\r\n}\r\nconst toThenable = (fn) => (input) => {\r\n  try {\r\n    const result = fn(input);\r\n    if (result instanceof Promise) {\r\n      return result;\r\n    }\r\n    return {\r\n      then(onFulfilled) {\r\n        return toThenable(onFulfilled)(result);\r\n      },\r\n      catch(_onRejected) {\r\n        return this;\r\n      }\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      then(_onFulfilled) {\r\n        return this;\r\n      },\r\n      catch(onRejected) {\r\n        return toThenable(onRejected)(e);\r\n      }\r\n    };\r\n  }\r\n};\r\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\r\n  let options = {\r\n    storage: createJSONStorage(() => localStorage),\r\n    partialize: (state) => state,\r\n    version: 0,\r\n    merge: (persistedState, currentState) => ({\r\n      ...currentState,\r\n      ...persistedState\r\n    }),\r\n    ...baseOptions\r\n  };\r\n  let hasHydrated = false;\r\n  const hydrationListeners = /* @__PURE__ */ new Set();\r\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\r\n  let storage = options.storage;\r\n  if (!storage) {\r\n    return config(\r\n      (...args) => {\r\n        console.warn(\r\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\r\n        );\r\n        set(...args);\r\n      },\r\n      get,\r\n      api\r\n    );\r\n  }\r\n  const setItem = () => {\r\n    const state = options.partialize({ ...get() });\r\n    return storage.setItem(options.name, {\r\n      state,\r\n      version: options.version\r\n    });\r\n  };\r\n  const savedSetState = api.setState;\r\n  api.setState = (state, replace) => {\r\n    savedSetState(state, replace);\r\n    void setItem();\r\n  };\r\n  const configResult = config(\r\n    (...args) => {\r\n      set(...args);\r\n      void setItem();\r\n    },\r\n    get,\r\n    api\r\n  );\r\n  api.getInitialState = () => configResult;\r\n  let stateFromStorage;\r\n  const hydrate = () => {\r\n    var _a, _b;\r\n    if (!storage) return;\r\n    hasHydrated = false;\r\n    hydrationListeners.forEach((cb) => {\r\n      var _a2;\r\n      return cb((_a2 = get()) != null ? _a2 : configResult);\r\n    });\r\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\r\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\r\n      if (deserializedStorageValue) {\r\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\r\n          if (options.migrate) {\r\n            const migration = options.migrate(\r\n              deserializedStorageValue.state,\r\n              deserializedStorageValue.version\r\n            );\r\n            if (migration instanceof Promise) {\r\n              return migration.then((result) => [true, result]);\r\n            }\r\n            return [true, migration];\r\n          }\r\n          console.error(\r\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\r\n          );\r\n        } else {\r\n          return [false, deserializedStorageValue.state];\r\n        }\r\n      }\r\n      return [false, void 0];\r\n    }).then((migrationResult) => {\r\n      var _a2;\r\n      const [migrated, migratedState] = migrationResult;\r\n      stateFromStorage = options.merge(\r\n        migratedState,\r\n        (_a2 = get()) != null ? _a2 : configResult\r\n      );\r\n      set(stateFromStorage, true);\r\n      if (migrated) {\r\n        return setItem();\r\n      }\r\n    }).then(() => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\r\n      stateFromStorage = get();\r\n      hasHydrated = true;\r\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\r\n    }).catch((e) => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\r\n    });\r\n  };\r\n  api.persist = {\r\n    setOptions: (newOptions) => {\r\n      options = {\r\n        ...options,\r\n        ...newOptions\r\n      };\r\n      if (newOptions.storage) {\r\n        storage = newOptions.storage;\r\n      }\r\n    },\r\n    clearStorage: () => {\r\n      storage == null ? void 0 : storage.removeItem(options.name);\r\n    },\r\n    getOptions: () => options,\r\n    rehydrate: () => hydrate(),\r\n    hasHydrated: () => hasHydrated,\r\n    onHydrate: (cb) => {\r\n      hydrationListeners.add(cb);\r\n      return () => {\r\n        hydrationListeners.delete(cb);\r\n      };\r\n    },\r\n    onFinishHydration: (cb) => {\r\n      finishHydrationListeners.add(cb);\r\n      return () => {\r\n        finishHydrationListeners.delete(cb);\r\n      };\r\n    }\r\n  };\r\n  if (!options.skipHydration) {\r\n    hydrate();\r\n  }\r\n  return stateFromStorage || configResult;\r\n};\r\nconst persist = persistImpl;\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS9taWRkbGV3YXJlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDLFVBQVUsa0RBQWtEO0FBQzVEO0FBQ0E7QUFDQSx1REFBdUQsTUFBZSxHQUFHLENBQW9CO0FBQzdGLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUNBQXVDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsaUVBQWlFLHVDQUF1QyxxQkFBcUI7QUFDNUs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSxHQUFHLFlBQVk7QUFDdEMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFlLEdBQUcsQ0FBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRkFBb0YsaUNBQWlDLGlCQUFpQjtBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxhQUFhO0FBQzlFO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxVQUFVO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN1RiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXHp1c3RhbmRcXGVzbVxcbWlkZGxld2FyZS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmVkdXhJbXBsID0gKHJlZHVjZXIsIGluaXRpYWwpID0+IChzZXQsIF9nZXQsIGFwaSkgPT4ge1xyXG4gIGFwaS5kaXNwYXRjaCA9IChhY3Rpb24pID0+IHtcclxuICAgIHNldCgoc3RhdGUpID0+IHJlZHVjZXIoc3RhdGUsIGFjdGlvbiksIGZhbHNlLCBhY3Rpb24pO1xyXG4gICAgcmV0dXJuIGFjdGlvbjtcclxuICB9O1xyXG4gIGFwaS5kaXNwYXRjaEZyb21EZXZ0b29scyA9IHRydWU7XHJcbiAgcmV0dXJuIHsgZGlzcGF0Y2g6ICguLi5hcmdzKSA9PiBhcGkuZGlzcGF0Y2goLi4uYXJncyksIC4uLmluaXRpYWwgfTtcclxufTtcclxuY29uc3QgcmVkdXggPSByZWR1eEltcGw7XHJcblxyXG5jb25zdCB0cmFja2VkQ29ubmVjdGlvbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xyXG5jb25zdCBnZXRUcmFja2VkQ29ubmVjdGlvblN0YXRlID0gKG5hbWUpID0+IHtcclxuICBjb25zdCBhcGkgPSB0cmFja2VkQ29ubmVjdGlvbnMuZ2V0KG5hbWUpO1xyXG4gIGlmICghYXBpKSByZXR1cm4ge307XHJcbiAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcclxuICAgIE9iamVjdC5lbnRyaWVzKGFwaS5zdG9yZXMpLm1hcCgoW2tleSwgYXBpMl0pID0+IFtrZXksIGFwaTIuZ2V0U3RhdGUoKV0pXHJcbiAgKTtcclxufTtcclxuY29uc3QgZXh0cmFjdENvbm5lY3Rpb25JbmZvcm1hdGlvbiA9IChzdG9yZSwgZXh0ZW5zaW9uQ29ubmVjdG9yLCBvcHRpb25zKSA9PiB7XHJcbiAgaWYgKHN0b3JlID09PSB2b2lkIDApIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHR5cGU6IFwidW50cmFja2VkXCIsXHJcbiAgICAgIGNvbm5lY3Rpb246IGV4dGVuc2lvbkNvbm5lY3Rvci5jb25uZWN0KG9wdGlvbnMpXHJcbiAgICB9O1xyXG4gIH1cclxuICBjb25zdCBleGlzdGluZ0Nvbm5lY3Rpb24gPSB0cmFja2VkQ29ubmVjdGlvbnMuZ2V0KG9wdGlvbnMubmFtZSk7XHJcbiAgaWYgKGV4aXN0aW5nQ29ubmVjdGlvbikge1xyXG4gICAgcmV0dXJuIHsgdHlwZTogXCJ0cmFja2VkXCIsIHN0b3JlLCAuLi5leGlzdGluZ0Nvbm5lY3Rpb24gfTtcclxuICB9XHJcbiAgY29uc3QgbmV3Q29ubmVjdGlvbiA9IHtcclxuICAgIGNvbm5lY3Rpb246IGV4dGVuc2lvbkNvbm5lY3Rvci5jb25uZWN0KG9wdGlvbnMpLFxyXG4gICAgc3RvcmVzOiB7fVxyXG4gIH07XHJcbiAgdHJhY2tlZENvbm5lY3Rpb25zLnNldChvcHRpb25zLm5hbWUsIG5ld0Nvbm5lY3Rpb24pO1xyXG4gIHJldHVybiB7IHR5cGU6IFwidHJhY2tlZFwiLCBzdG9yZSwgLi4ubmV3Q29ubmVjdGlvbiB9O1xyXG59O1xyXG5jb25zdCByZW1vdmVTdG9yZUZyb21UcmFja2VkQ29ubmVjdGlvbnMgPSAobmFtZSwgc3RvcmUpID0+IHtcclxuICBpZiAoc3RvcmUgPT09IHZvaWQgMCkgcmV0dXJuO1xyXG4gIGNvbnN0IGNvbm5lY3Rpb25JbmZvID0gdHJhY2tlZENvbm5lY3Rpb25zLmdldChuYW1lKTtcclxuICBpZiAoIWNvbm5lY3Rpb25JbmZvKSByZXR1cm47XHJcbiAgZGVsZXRlIGNvbm5lY3Rpb25JbmZvLnN0b3Jlc1tzdG9yZV07XHJcbiAgaWYgKE9iamVjdC5rZXlzKGNvbm5lY3Rpb25JbmZvLnN0b3JlcykubGVuZ3RoID09PSAwKSB7XHJcbiAgICB0cmFja2VkQ29ubmVjdGlvbnMuZGVsZXRlKG5hbWUpO1xyXG4gIH1cclxufTtcclxuY29uc3QgZmluZENhbGxlck5hbWUgPSAoc3RhY2spID0+IHtcclxuICB2YXIgX2EsIF9iO1xyXG4gIGlmICghc3RhY2spIHJldHVybiB2b2lkIDA7XHJcbiAgY29uc3QgdHJhY2VMaW5lcyA9IHN0YWNrLnNwbGl0KFwiXFxuXCIpO1xyXG4gIGNvbnN0IGFwaVNldFN0YXRlTGluZUluZGV4ID0gdHJhY2VMaW5lcy5maW5kSW5kZXgoXHJcbiAgICAodHJhY2VMaW5lKSA9PiB0cmFjZUxpbmUuaW5jbHVkZXMoXCJhcGkuc2V0U3RhdGVcIilcclxuICApO1xyXG4gIGlmIChhcGlTZXRTdGF0ZUxpbmVJbmRleCA8IDApIHJldHVybiB2b2lkIDA7XHJcbiAgY29uc3QgY2FsbGVyTGluZSA9ICgoX2EgPSB0cmFjZUxpbmVzW2FwaVNldFN0YXRlTGluZUluZGV4ICsgMV0pID09IG51bGwgPyB2b2lkIDAgOiBfYS50cmltKCkpIHx8IFwiXCI7XHJcbiAgcmV0dXJuIChfYiA9IC8uKyAoLispIC4rLy5leGVjKGNhbGxlckxpbmUpKSA9PSBudWxsID8gdm9pZCAwIDogX2JbMV07XHJcbn07XHJcbmNvbnN0IGRldnRvb2xzSW1wbCA9IChmbiwgZGV2dG9vbHNPcHRpb25zID0ge30pID0+IChzZXQsIGdldCwgYXBpKSA9PiB7XHJcbiAgY29uc3QgeyBlbmFibGVkLCBhbm9ueW1vdXNBY3Rpb25UeXBlLCBzdG9yZSwgLi4ub3B0aW9ucyB9ID0gZGV2dG9vbHNPcHRpb25zO1xyXG4gIGxldCBleHRlbnNpb25Db25uZWN0b3I7XHJcbiAgdHJ5IHtcclxuICAgIGV4dGVuc2lvbkNvbm5lY3RvciA9IChlbmFibGVkICE9IG51bGwgPyBlbmFibGVkIDogKGltcG9ydC5tZXRhLmVudiA/IGltcG9ydC5tZXRhLmVudi5NT0RFIDogdm9pZCAwKSAhPT0gXCJwcm9kdWN0aW9uXCIpICYmIHdpbmRvdy5fX1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTl9fO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICB9XHJcbiAgaWYgKCFleHRlbnNpb25Db25uZWN0b3IpIHtcclxuICAgIHJldHVybiBmbihzZXQsIGdldCwgYXBpKTtcclxuICB9XHJcbiAgY29uc3QgeyBjb25uZWN0aW9uLCAuLi5jb25uZWN0aW9uSW5mb3JtYXRpb24gfSA9IGV4dHJhY3RDb25uZWN0aW9uSW5mb3JtYXRpb24oc3RvcmUsIGV4dGVuc2lvbkNvbm5lY3Rvciwgb3B0aW9ucyk7XHJcbiAgbGV0IGlzUmVjb3JkaW5nID0gdHJ1ZTtcclxuICBhcGkuc2V0U3RhdGUgPSAoc3RhdGUsIHJlcGxhY2UsIG5hbWVPckFjdGlvbikgPT4ge1xyXG4gICAgY29uc3QgciA9IHNldChzdGF0ZSwgcmVwbGFjZSk7XHJcbiAgICBpZiAoIWlzUmVjb3JkaW5nKSByZXR1cm4gcjtcclxuICAgIGNvbnN0IGluZmVycmVkQWN0aW9uVHlwZSA9IGZpbmRDYWxsZXJOYW1lKG5ldyBFcnJvcigpLnN0YWNrKTtcclxuICAgIGNvbnN0IGFjdGlvbiA9IG5hbWVPckFjdGlvbiA9PT0gdm9pZCAwID8geyB0eXBlOiBhbm9ueW1vdXNBY3Rpb25UeXBlIHx8IGluZmVycmVkQWN0aW9uVHlwZSB8fCBcImFub255bW91c1wiIH0gOiB0eXBlb2YgbmFtZU9yQWN0aW9uID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBuYW1lT3JBY3Rpb24gfSA6IG5hbWVPckFjdGlvbjtcclxuICAgIGlmIChzdG9yZSA9PT0gdm9pZCAwKSB7XHJcbiAgICAgIGNvbm5lY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3Rpb24uc2VuZChhY3Rpb24sIGdldCgpKTtcclxuICAgICAgcmV0dXJuIHI7XHJcbiAgICB9XHJcbiAgICBjb25uZWN0aW9uID09IG51bGwgPyB2b2lkIDAgOiBjb25uZWN0aW9uLnNlbmQoXHJcbiAgICAgIHtcclxuICAgICAgICAuLi5hY3Rpb24sXHJcbiAgICAgICAgdHlwZTogYCR7c3RvcmV9LyR7YWN0aW9uLnR5cGV9YFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgLi4uZ2V0VHJhY2tlZENvbm5lY3Rpb25TdGF0ZShvcHRpb25zLm5hbWUpLFxyXG4gICAgICAgIFtzdG9yZV06IGFwaS5nZXRTdGF0ZSgpXHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgICByZXR1cm4gcjtcclxuICB9O1xyXG4gIGFwaS5kZXZ0b29scyA9IHtcclxuICAgIGNsZWFudXA6ICgpID0+IHtcclxuICAgICAgaWYgKGNvbm5lY3Rpb24gJiYgdHlwZW9mIGNvbm5lY3Rpb24udW5zdWJzY3JpYmUgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIGNvbm5lY3Rpb24udW5zdWJzY3JpYmUoKTtcclxuICAgICAgfVxyXG4gICAgICByZW1vdmVTdG9yZUZyb21UcmFja2VkQ29ubmVjdGlvbnMob3B0aW9ucy5uYW1lLCBzdG9yZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuICBjb25zdCBzZXRTdGF0ZUZyb21EZXZ0b29scyA9ICguLi5hKSA9PiB7XHJcbiAgICBjb25zdCBvcmlnaW5hbElzUmVjb3JkaW5nID0gaXNSZWNvcmRpbmc7XHJcbiAgICBpc1JlY29yZGluZyA9IGZhbHNlO1xyXG4gICAgc2V0KC4uLmEpO1xyXG4gICAgaXNSZWNvcmRpbmcgPSBvcmlnaW5hbElzUmVjb3JkaW5nO1xyXG4gIH07XHJcbiAgY29uc3QgaW5pdGlhbFN0YXRlID0gZm4oYXBpLnNldFN0YXRlLCBnZXQsIGFwaSk7XHJcbiAgaWYgKGNvbm5lY3Rpb25JbmZvcm1hdGlvbi50eXBlID09PSBcInVudHJhY2tlZFwiKSB7XHJcbiAgICBjb25uZWN0aW9uID09IG51bGwgPyB2b2lkIDAgOiBjb25uZWN0aW9uLmluaXQoaW5pdGlhbFN0YXRlKTtcclxuICB9IGVsc2Uge1xyXG4gICAgY29ubmVjdGlvbkluZm9ybWF0aW9uLnN0b3Jlc1tjb25uZWN0aW9uSW5mb3JtYXRpb24uc3RvcmVdID0gYXBpO1xyXG4gICAgY29ubmVjdGlvbiA9PSBudWxsID8gdm9pZCAwIDogY29ubmVjdGlvbi5pbml0KFxyXG4gICAgICBPYmplY3QuZnJvbUVudHJpZXMoXHJcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoY29ubmVjdGlvbkluZm9ybWF0aW9uLnN0b3JlcykubWFwKChba2V5LCBzdG9yZTJdKSA9PiBbXHJcbiAgICAgICAgICBrZXksXHJcbiAgICAgICAgICBrZXkgPT09IGNvbm5lY3Rpb25JbmZvcm1hdGlvbi5zdG9yZSA/IGluaXRpYWxTdGF0ZSA6IHN0b3JlMi5nZXRTdGF0ZSgpXHJcbiAgICAgICAgXSlcclxuICAgICAgKVxyXG4gICAgKTtcclxuICB9XHJcbiAgaWYgKGFwaS5kaXNwYXRjaEZyb21EZXZ0b29scyAmJiB0eXBlb2YgYXBpLmRpc3BhdGNoID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgIGxldCBkaWRXYXJuQWJvdXRSZXNlcnZlZEFjdGlvblR5cGUgPSBmYWxzZTtcclxuICAgIGNvbnN0IG9yaWdpbmFsRGlzcGF0Y2ggPSBhcGkuZGlzcGF0Y2g7XHJcbiAgICBhcGkuZGlzcGF0Y2ggPSAoLi4uYXJncykgPT4ge1xyXG4gICAgICBpZiAoKGltcG9ydC5tZXRhLmVudiA/IGltcG9ydC5tZXRhLmVudi5NT0RFIDogdm9pZCAwKSAhPT0gXCJwcm9kdWN0aW9uXCIgJiYgYXJnc1swXS50eXBlID09PSBcIl9fc2V0U3RhdGVcIiAmJiAhZGlkV2FybkFib3V0UmVzZXJ2ZWRBY3Rpb25UeXBlKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKFxyXG4gICAgICAgICAgJ1t6dXN0YW5kIGRldnRvb2xzIG1pZGRsZXdhcmVdIFwiX19zZXRTdGF0ZVwiIGFjdGlvbiB0eXBlIGlzIHJlc2VydmVkIHRvIHNldCBzdGF0ZSBmcm9tIHRoZSBkZXZ0b29scy4gQXZvaWQgdXNpbmcgaXQuJ1xyXG4gICAgICAgICk7XHJcbiAgICAgICAgZGlkV2FybkFib3V0UmVzZXJ2ZWRBY3Rpb25UeXBlID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgICBvcmlnaW5hbERpc3BhdGNoKC4uLmFyZ3MpO1xyXG4gICAgfTtcclxuICB9XHJcbiAgY29ubmVjdGlvbi5zdWJzY3JpYmUoKG1lc3NhZ2UpID0+IHtcclxuICAgIHZhciBfYTtcclxuICAgIHN3aXRjaCAobWVzc2FnZS50eXBlKSB7XHJcbiAgICAgIGNhc2UgXCJBQ1RJT05cIjpcclxuICAgICAgICBpZiAodHlwZW9mIG1lc3NhZ2UucGF5bG9hZCAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICAgICAgXCJbenVzdGFuZCBkZXZ0b29scyBtaWRkbGV3YXJlXSBVbnN1cHBvcnRlZCBhY3Rpb24gZm9ybWF0XCJcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwYXJzZUpzb25UaGVuKFxyXG4gICAgICAgICAgbWVzc2FnZS5wYXlsb2FkLFxyXG4gICAgICAgICAgKGFjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICBpZiAoYWN0aW9uLnR5cGUgPT09IFwiX19zZXRTdGF0ZVwiKSB7XHJcbiAgICAgICAgICAgICAgaWYgKHN0b3JlID09PSB2b2lkIDApIHtcclxuICAgICAgICAgICAgICAgIHNldFN0YXRlRnJvbURldnRvb2xzKGFjdGlvbi5zdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhhY3Rpb24uc3RhdGUpLmxlbmd0aCAhPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICAgICAgICAgICAgYFxyXG4gICAgICAgICAgICAgICAgICAgIFt6dXN0YW5kIGRldnRvb2xzIG1pZGRsZXdhcmVdIFVuc3VwcG9ydGVkIF9fc2V0U3RhdGUgYWN0aW9uIGZvcm1hdC5cclxuICAgICAgICAgICAgICAgICAgICBXaGVuIHVzaW5nICdzdG9yZScgb3B0aW9uIGluIGRldnRvb2xzKCksIHRoZSAnc3RhdGUnIHNob3VsZCBoYXZlIG9ubHkgb25lIGtleSwgd2hpY2ggaXMgYSB2YWx1ZSBvZiAnc3RvcmUnIHRoYXQgd2FzIHBhc3NlZCBpbiBkZXZ0b29scygpLFxyXG4gICAgICAgICAgICAgICAgICAgIGFuZCB2YWx1ZSBvZiB0aGlzIG9ubHkga2V5IHNob3VsZCBiZSBhIHN0YXRlIG9iamVjdC4gRXhhbXBsZTogeyBcInR5cGVcIjogXCJfX3NldFN0YXRlXCIsIFwic3RhdGVcIjogeyBcImFiYzEyM1N0b3JlXCI6IHsgXCJmb29cIjogXCJiYXJcIiB9IH0gfVxyXG4gICAgICAgICAgICAgICAgICAgIGBcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGNvbnN0IHN0YXRlRnJvbURldnRvb2xzID0gYWN0aW9uLnN0YXRlW3N0b3JlXTtcclxuICAgICAgICAgICAgICBpZiAoc3RhdGVGcm9tRGV2dG9vbHMgPT09IHZvaWQgMCB8fCBzdGF0ZUZyb21EZXZ0b29scyA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBpZiAoSlNPTi5zdHJpbmdpZnkoYXBpLmdldFN0YXRlKCkpICE9PSBKU09OLnN0cmluZ2lmeShzdGF0ZUZyb21EZXZ0b29scykpIHtcclxuICAgICAgICAgICAgICAgIHNldFN0YXRlRnJvbURldnRvb2xzKHN0YXRlRnJvbURldnRvb2xzKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghYXBpLmRpc3BhdGNoRnJvbURldnRvb2xzKSByZXR1cm47XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYXBpLmRpc3BhdGNoICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybjtcclxuICAgICAgICAgICAgYXBpLmRpc3BhdGNoKGFjdGlvbik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuICAgICAgY2FzZSBcIkRJU1BBVENIXCI6XHJcbiAgICAgICAgc3dpdGNoIChtZXNzYWdlLnBheWxvYWQudHlwZSkge1xyXG4gICAgICAgICAgY2FzZSBcIlJFU0VUXCI6XHJcbiAgICAgICAgICAgIHNldFN0YXRlRnJvbURldnRvb2xzKGluaXRpYWxTdGF0ZSk7XHJcbiAgICAgICAgICAgIGlmIChzdG9yZSA9PT0gdm9pZCAwKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3Rpb24uaW5pdChhcGkuZ2V0U3RhdGUoKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3Rpb24uaW5pdChnZXRUcmFja2VkQ29ubmVjdGlvblN0YXRlKG9wdGlvbnMubmFtZSkpO1xyXG4gICAgICAgICAgY2FzZSBcIkNPTU1JVFwiOlxyXG4gICAgICAgICAgICBpZiAoc3RvcmUgPT09IHZvaWQgMCkge1xyXG4gICAgICAgICAgICAgIGNvbm5lY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3Rpb24uaW5pdChhcGkuZ2V0U3RhdGUoKSk7XHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uID09IG51bGwgPyB2b2lkIDAgOiBjb25uZWN0aW9uLmluaXQoZ2V0VHJhY2tlZENvbm5lY3Rpb25TdGF0ZShvcHRpb25zLm5hbWUpKTtcclxuICAgICAgICAgIGNhc2UgXCJST0xMQkFDS1wiOlxyXG4gICAgICAgICAgICByZXR1cm4gcGFyc2VKc29uVGhlbihtZXNzYWdlLnN0YXRlLCAoc3RhdGUpID0+IHtcclxuICAgICAgICAgICAgICBpZiAoc3RvcmUgPT09IHZvaWQgMCkge1xyXG4gICAgICAgICAgICAgICAgc2V0U3RhdGVGcm9tRGV2dG9vbHMoc3RhdGUpO1xyXG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbiA9PSBudWxsID8gdm9pZCAwIDogY29ubmVjdGlvbi5pbml0KGFwaS5nZXRTdGF0ZSgpKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgc2V0U3RhdGVGcm9tRGV2dG9vbHMoc3RhdGVbc3RvcmVdKTtcclxuICAgICAgICAgICAgICBjb25uZWN0aW9uID09IG51bGwgPyB2b2lkIDAgOiBjb25uZWN0aW9uLmluaXQoZ2V0VHJhY2tlZENvbm5lY3Rpb25TdGF0ZShvcHRpb25zLm5hbWUpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICBjYXNlIFwiSlVNUF9UT19TVEFURVwiOlxyXG4gICAgICAgICAgY2FzZSBcIkpVTVBfVE9fQUNUSU9OXCI6XHJcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUpzb25UaGVuKG1lc3NhZ2Uuc3RhdGUsIChzdGF0ZSkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChzdG9yZSA9PT0gdm9pZCAwKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRTdGF0ZUZyb21EZXZ0b29scyhzdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGlmIChKU09OLnN0cmluZ2lmeShhcGkuZ2V0U3RhdGUoKSkgIT09IEpTT04uc3RyaW5naWZ5KHN0YXRlW3N0b3JlXSkpIHtcclxuICAgICAgICAgICAgICAgIHNldFN0YXRlRnJvbURldnRvb2xzKHN0YXRlW3N0b3JlXSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIGNhc2UgXCJJTVBPUlRfU1RBVEVcIjoge1xyXG4gICAgICAgICAgICBjb25zdCB7IG5leHRMaWZ0ZWRTdGF0ZSB9ID0gbWVzc2FnZS5wYXlsb2FkO1xyXG4gICAgICAgICAgICBjb25zdCBsYXN0Q29tcHV0ZWRTdGF0ZSA9IChfYSA9IG5leHRMaWZ0ZWRTdGF0ZS5jb21wdXRlZFN0YXRlcy5zbGljZSgtMSlbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfYS5zdGF0ZTtcclxuICAgICAgICAgICAgaWYgKCFsYXN0Q29tcHV0ZWRTdGF0ZSkgcmV0dXJuO1xyXG4gICAgICAgICAgICBpZiAoc3RvcmUgPT09IHZvaWQgMCkge1xyXG4gICAgICAgICAgICAgIHNldFN0YXRlRnJvbURldnRvb2xzKGxhc3RDb21wdXRlZFN0YXRlKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBzZXRTdGF0ZUZyb21EZXZ0b29scyhsYXN0Q29tcHV0ZWRTdGF0ZVtzdG9yZV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbm5lY3Rpb24gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3Rpb24uc2VuZChcclxuICAgICAgICAgICAgICBudWxsLFxyXG4gICAgICAgICAgICAgIC8vIEZJWE1FIG5vLWFueVxyXG4gICAgICAgICAgICAgIG5leHRMaWZ0ZWRTdGF0ZVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBjYXNlIFwiUEFVU0VfUkVDT1JESU5HXCI6XHJcbiAgICAgICAgICAgIHJldHVybiBpc1JlY29yZGluZyA9ICFpc1JlY29yZGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIHJldHVybiBpbml0aWFsU3RhdGU7XHJcbn07XHJcbmNvbnN0IGRldnRvb2xzID0gZGV2dG9vbHNJbXBsO1xyXG5jb25zdCBwYXJzZUpzb25UaGVuID0gKHN0cmluZ2lmaWVkLCBmbikgPT4ge1xyXG4gIGxldCBwYXJzZWQ7XHJcbiAgdHJ5IHtcclxuICAgIHBhcnNlZCA9IEpTT04ucGFyc2Uoc3RyaW5naWZpZWQpO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgIFwiW3p1c3RhbmQgZGV2dG9vbHMgbWlkZGxld2FyZV0gQ291bGQgbm90IHBhcnNlIHRoZSByZWNlaXZlZCBqc29uXCIsXHJcbiAgICAgIGVcclxuICAgICk7XHJcbiAgfVxyXG4gIGlmIChwYXJzZWQgIT09IHZvaWQgMCkgZm4ocGFyc2VkKTtcclxufTtcclxuXHJcbmNvbnN0IHN1YnNjcmliZVdpdGhTZWxlY3RvckltcGwgPSAoZm4pID0+IChzZXQsIGdldCwgYXBpKSA9PiB7XHJcbiAgY29uc3Qgb3JpZ1N1YnNjcmliZSA9IGFwaS5zdWJzY3JpYmU7XHJcbiAgYXBpLnN1YnNjcmliZSA9IChzZWxlY3Rvciwgb3B0TGlzdGVuZXIsIG9wdGlvbnMpID0+IHtcclxuICAgIGxldCBsaXN0ZW5lciA9IHNlbGVjdG9yO1xyXG4gICAgaWYgKG9wdExpc3RlbmVyKSB7XHJcbiAgICAgIGNvbnN0IGVxdWFsaXR5Rm4gPSAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5lcXVhbGl0eUZuKSB8fCBPYmplY3QuaXM7XHJcbiAgICAgIGxldCBjdXJyZW50U2xpY2UgPSBzZWxlY3RvcihhcGkuZ2V0U3RhdGUoKSk7XHJcbiAgICAgIGxpc3RlbmVyID0gKHN0YXRlKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbmV4dFNsaWNlID0gc2VsZWN0b3Ioc3RhdGUpO1xyXG4gICAgICAgIGlmICghZXF1YWxpdHlGbihjdXJyZW50U2xpY2UsIG5leHRTbGljZSkpIHtcclxuICAgICAgICAgIGNvbnN0IHByZXZpb3VzU2xpY2UgPSBjdXJyZW50U2xpY2U7XHJcbiAgICAgICAgICBvcHRMaXN0ZW5lcihjdXJyZW50U2xpY2UgPSBuZXh0U2xpY2UsIHByZXZpb3VzU2xpY2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZmlyZUltbWVkaWF0ZWx5KSB7XHJcbiAgICAgICAgb3B0TGlzdGVuZXIoY3VycmVudFNsaWNlLCBjdXJyZW50U2xpY2UpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gb3JpZ1N1YnNjcmliZShsaXN0ZW5lcik7XHJcbiAgfTtcclxuICBjb25zdCBpbml0aWFsU3RhdGUgPSBmbihzZXQsIGdldCwgYXBpKTtcclxuICByZXR1cm4gaW5pdGlhbFN0YXRlO1xyXG59O1xyXG5jb25zdCBzdWJzY3JpYmVXaXRoU2VsZWN0b3IgPSBzdWJzY3JpYmVXaXRoU2VsZWN0b3JJbXBsO1xyXG5cclxuZnVuY3Rpb24gY29tYmluZShpbml0aWFsU3RhdGUsIGNyZWF0ZSkge1xyXG4gIHJldHVybiAoLi4uYXJncykgPT4gT2JqZWN0LmFzc2lnbih7fSwgaW5pdGlhbFN0YXRlLCBjcmVhdGUoLi4uYXJncykpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVKU09OU3RvcmFnZShnZXRTdG9yYWdlLCBvcHRpb25zKSB7XHJcbiAgbGV0IHN0b3JhZ2U7XHJcbiAgdHJ5IHtcclxuICAgIHN0b3JhZ2UgPSBnZXRTdG9yYWdlKCk7XHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBjb25zdCBwZXJzaXN0U3RvcmFnZSA9IHtcclxuICAgIGdldEl0ZW06IChuYW1lKSA9PiB7XHJcbiAgICAgIHZhciBfYTtcclxuICAgICAgY29uc3QgcGFyc2UgPSAoc3RyMikgPT4ge1xyXG4gICAgICAgIGlmIChzdHIyID09PSBudWxsKSB7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RyMiwgb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5yZXZpdmVyKTtcclxuICAgICAgfTtcclxuICAgICAgY29uc3Qgc3RyID0gKF9hID0gc3RvcmFnZS5nZXRJdGVtKG5hbWUpKSAhPSBudWxsID8gX2EgOiBudWxsO1xyXG4gICAgICBpZiAoc3RyIGluc3RhbmNlb2YgUHJvbWlzZSkge1xyXG4gICAgICAgIHJldHVybiBzdHIudGhlbihwYXJzZSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHBhcnNlKHN0cik7XHJcbiAgICB9LFxyXG4gICAgc2V0SXRlbTogKG5hbWUsIG5ld1ZhbHVlKSA9PiBzdG9yYWdlLnNldEl0ZW0obmFtZSwgSlNPTi5zdHJpbmdpZnkobmV3VmFsdWUsIG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucmVwbGFjZXIpKSxcclxuICAgIHJlbW92ZUl0ZW06IChuYW1lKSA9PiBzdG9yYWdlLnJlbW92ZUl0ZW0obmFtZSlcclxuICB9O1xyXG4gIHJldHVybiBwZXJzaXN0U3RvcmFnZTtcclxufVxyXG5jb25zdCB0b1RoZW5hYmxlID0gKGZuKSA9PiAoaW5wdXQpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gZm4oaW5wdXQpO1xyXG4gICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRoZW4ob25GdWxmaWxsZWQpIHtcclxuICAgICAgICByZXR1cm4gdG9UaGVuYWJsZShvbkZ1bGZpbGxlZCkocmVzdWx0KTtcclxuICAgICAgfSxcclxuICAgICAgY2F0Y2goX29uUmVqZWN0ZWQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB0aGVuKF9vbkZ1bGZpbGxlZCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICB9LFxyXG4gICAgICBjYXRjaChvblJlamVjdGVkKSB7XHJcbiAgICAgICAgcmV0dXJuIHRvVGhlbmFibGUob25SZWplY3RlZCkoZSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG59O1xyXG5jb25zdCBwZXJzaXN0SW1wbCA9IChjb25maWcsIGJhc2VPcHRpb25zKSA9PiAoc2V0LCBnZXQsIGFwaSkgPT4ge1xyXG4gIGxldCBvcHRpb25zID0ge1xyXG4gICAgc3RvcmFnZTogY3JlYXRlSlNPTlN0b3JhZ2UoKCkgPT4gbG9jYWxTdG9yYWdlKSxcclxuICAgIHBhcnRpYWxpemU6IChzdGF0ZSkgPT4gc3RhdGUsXHJcbiAgICB2ZXJzaW9uOiAwLFxyXG4gICAgbWVyZ2U6IChwZXJzaXN0ZWRTdGF0ZSwgY3VycmVudFN0YXRlKSA9PiAoe1xyXG4gICAgICAuLi5jdXJyZW50U3RhdGUsXHJcbiAgICAgIC4uLnBlcnNpc3RlZFN0YXRlXHJcbiAgICB9KSxcclxuICAgIC4uLmJhc2VPcHRpb25zXHJcbiAgfTtcclxuICBsZXQgaGFzSHlkcmF0ZWQgPSBmYWxzZTtcclxuICBjb25zdCBoeWRyYXRpb25MaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xyXG4gIGNvbnN0IGZpbmlzaEh5ZHJhdGlvbkxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XHJcbiAgbGV0IHN0b3JhZ2UgPSBvcHRpb25zLnN0b3JhZ2U7XHJcbiAgaWYgKCFzdG9yYWdlKSB7XHJcbiAgICByZXR1cm4gY29uZmlnKFxyXG4gICAgICAoLi4uYXJncykgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUud2FybihcclxuICAgICAgICAgIGBbenVzdGFuZCBwZXJzaXN0IG1pZGRsZXdhcmVdIFVuYWJsZSB0byB1cGRhdGUgaXRlbSAnJHtvcHRpb25zLm5hbWV9JywgdGhlIGdpdmVuIHN0b3JhZ2UgaXMgY3VycmVudGx5IHVuYXZhaWxhYmxlLmBcclxuICAgICAgICApO1xyXG4gICAgICAgIHNldCguLi5hcmdzKTtcclxuICAgICAgfSxcclxuICAgICAgZ2V0LFxyXG4gICAgICBhcGlcclxuICAgICk7XHJcbiAgfVxyXG4gIGNvbnN0IHNldEl0ZW0gPSAoKSA9PiB7XHJcbiAgICBjb25zdCBzdGF0ZSA9IG9wdGlvbnMucGFydGlhbGl6ZSh7IC4uLmdldCgpIH0pO1xyXG4gICAgcmV0dXJuIHN0b3JhZ2Uuc2V0SXRlbShvcHRpb25zLm5hbWUsIHtcclxuICAgICAgc3RhdGUsXHJcbiAgICAgIHZlcnNpb246IG9wdGlvbnMudmVyc2lvblxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBjb25zdCBzYXZlZFNldFN0YXRlID0gYXBpLnNldFN0YXRlO1xyXG4gIGFwaS5zZXRTdGF0ZSA9IChzdGF0ZSwgcmVwbGFjZSkgPT4ge1xyXG4gICAgc2F2ZWRTZXRTdGF0ZShzdGF0ZSwgcmVwbGFjZSk7XHJcbiAgICB2b2lkIHNldEl0ZW0oKTtcclxuICB9O1xyXG4gIGNvbnN0IGNvbmZpZ1Jlc3VsdCA9IGNvbmZpZyhcclxuICAgICguLi5hcmdzKSA9PiB7XHJcbiAgICAgIHNldCguLi5hcmdzKTtcclxuICAgICAgdm9pZCBzZXRJdGVtKCk7XHJcbiAgICB9LFxyXG4gICAgZ2V0LFxyXG4gICAgYXBpXHJcbiAgKTtcclxuICBhcGkuZ2V0SW5pdGlhbFN0YXRlID0gKCkgPT4gY29uZmlnUmVzdWx0O1xyXG4gIGxldCBzdGF0ZUZyb21TdG9yYWdlO1xyXG4gIGNvbnN0IGh5ZHJhdGUgPSAoKSA9PiB7XHJcbiAgICB2YXIgX2EsIF9iO1xyXG4gICAgaWYgKCFzdG9yYWdlKSByZXR1cm47XHJcbiAgICBoYXNIeWRyYXRlZCA9IGZhbHNlO1xyXG4gICAgaHlkcmF0aW9uTGlzdGVuZXJzLmZvckVhY2goKGNiKSA9PiB7XHJcbiAgICAgIHZhciBfYTI7XHJcbiAgICAgIHJldHVybiBjYigoX2EyID0gZ2V0KCkpICE9IG51bGwgPyBfYTIgOiBjb25maWdSZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zdCBwb3N0UmVoeWRyYXRpb25DYWxsYmFjayA9ICgoX2IgPSBvcHRpb25zLm9uUmVoeWRyYXRlU3RvcmFnZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNhbGwob3B0aW9ucywgKF9hID0gZ2V0KCkpICE9IG51bGwgPyBfYSA6IGNvbmZpZ1Jlc3VsdCkpIHx8IHZvaWQgMDtcclxuICAgIHJldHVybiB0b1RoZW5hYmxlKHN0b3JhZ2UuZ2V0SXRlbS5iaW5kKHN0b3JhZ2UpKShvcHRpb25zLm5hbWUpLnRoZW4oKGRlc2VyaWFsaXplZFN0b3JhZ2VWYWx1ZSkgPT4ge1xyXG4gICAgICBpZiAoZGVzZXJpYWxpemVkU3RvcmFnZVZhbHVlKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBkZXNlcmlhbGl6ZWRTdG9yYWdlVmFsdWUudmVyc2lvbiA9PT0gXCJudW1iZXJcIiAmJiBkZXNlcmlhbGl6ZWRTdG9yYWdlVmFsdWUudmVyc2lvbiAhPT0gb3B0aW9ucy52ZXJzaW9uKSB7XHJcbiAgICAgICAgICBpZiAob3B0aW9ucy5taWdyYXRlKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1pZ3JhdGlvbiA9IG9wdGlvbnMubWlncmF0ZShcclxuICAgICAgICAgICAgICBkZXNlcmlhbGl6ZWRTdG9yYWdlVmFsdWUuc3RhdGUsXHJcbiAgICAgICAgICAgICAgZGVzZXJpYWxpemVkU3RvcmFnZVZhbHVlLnZlcnNpb25cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgaWYgKG1pZ3JhdGlvbiBpbnN0YW5jZW9mIFByb21pc2UpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gbWlncmF0aW9uLnRoZW4oKHJlc3VsdCkgPT4gW3RydWUsIHJlc3VsdF0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBbdHJ1ZSwgbWlncmF0aW9uXTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgICAgIGBTdGF0ZSBsb2FkZWQgZnJvbSBzdG9yYWdlIGNvdWxkbid0IGJlIG1pZ3JhdGVkIHNpbmNlIG5vIG1pZ3JhdGUgZnVuY3Rpb24gd2FzIHByb3ZpZGVkYFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIFtmYWxzZSwgZGVzZXJpYWxpemVkU3RvcmFnZVZhbHVlLnN0YXRlXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIFtmYWxzZSwgdm9pZCAwXTtcclxuICAgIH0pLnRoZW4oKG1pZ3JhdGlvblJlc3VsdCkgPT4ge1xyXG4gICAgICB2YXIgX2EyO1xyXG4gICAgICBjb25zdCBbbWlncmF0ZWQsIG1pZ3JhdGVkU3RhdGVdID0gbWlncmF0aW9uUmVzdWx0O1xyXG4gICAgICBzdGF0ZUZyb21TdG9yYWdlID0gb3B0aW9ucy5tZXJnZShcclxuICAgICAgICBtaWdyYXRlZFN0YXRlLFxyXG4gICAgICAgIChfYTIgPSBnZXQoKSkgIT0gbnVsbCA/IF9hMiA6IGNvbmZpZ1Jlc3VsdFxyXG4gICAgICApO1xyXG4gICAgICBzZXQoc3RhdGVGcm9tU3RvcmFnZSwgdHJ1ZSk7XHJcbiAgICAgIGlmIChtaWdyYXRlZCkge1xyXG4gICAgICAgIHJldHVybiBzZXRJdGVtKCk7XHJcbiAgICAgIH1cclxuICAgIH0pLnRoZW4oKCkgPT4ge1xyXG4gICAgICBwb3N0UmVoeWRyYXRpb25DYWxsYmFjayA9PSBudWxsID8gdm9pZCAwIDogcG9zdFJlaHlkcmF0aW9uQ2FsbGJhY2soc3RhdGVGcm9tU3RvcmFnZSwgdm9pZCAwKTtcclxuICAgICAgc3RhdGVGcm9tU3RvcmFnZSA9IGdldCgpO1xyXG4gICAgICBoYXNIeWRyYXRlZCA9IHRydWU7XHJcbiAgICAgIGZpbmlzaEh5ZHJhdGlvbkxpc3RlbmVycy5mb3JFYWNoKChjYikgPT4gY2Ioc3RhdGVGcm9tU3RvcmFnZSkpO1xyXG4gICAgfSkuY2F0Y2goKGUpID0+IHtcclxuICAgICAgcG9zdFJlaHlkcmF0aW9uQ2FsbGJhY2sgPT0gbnVsbCA/IHZvaWQgMCA6IHBvc3RSZWh5ZHJhdGlvbkNhbGxiYWNrKHZvaWQgMCwgZSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG4gIGFwaS5wZXJzaXN0ID0ge1xyXG4gICAgc2V0T3B0aW9uczogKG5ld09wdGlvbnMpID0+IHtcclxuICAgICAgb3B0aW9ucyA9IHtcclxuICAgICAgICAuLi5vcHRpb25zLFxyXG4gICAgICAgIC4uLm5ld09wdGlvbnNcclxuICAgICAgfTtcclxuICAgICAgaWYgKG5ld09wdGlvbnMuc3RvcmFnZSkge1xyXG4gICAgICAgIHN0b3JhZ2UgPSBuZXdPcHRpb25zLnN0b3JhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjbGVhclN0b3JhZ2U6ICgpID0+IHtcclxuICAgICAgc3RvcmFnZSA9PSBudWxsID8gdm9pZCAwIDogc3RvcmFnZS5yZW1vdmVJdGVtKG9wdGlvbnMubmFtZSk7XHJcbiAgICB9LFxyXG4gICAgZ2V0T3B0aW9uczogKCkgPT4gb3B0aW9ucyxcclxuICAgIHJlaHlkcmF0ZTogKCkgPT4gaHlkcmF0ZSgpLFxyXG4gICAgaGFzSHlkcmF0ZWQ6ICgpID0+IGhhc0h5ZHJhdGVkLFxyXG4gICAgb25IeWRyYXRlOiAoY2IpID0+IHtcclxuICAgICAgaHlkcmF0aW9uTGlzdGVuZXJzLmFkZChjYik7XHJcbiAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgaHlkcmF0aW9uTGlzdGVuZXJzLmRlbGV0ZShjYik7XHJcbiAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgb25GaW5pc2hIeWRyYXRpb246IChjYikgPT4ge1xyXG4gICAgICBmaW5pc2hIeWRyYXRpb25MaXN0ZW5lcnMuYWRkKGNiKTtcclxuICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICBmaW5pc2hIeWRyYXRpb25MaXN0ZW5lcnMuZGVsZXRlKGNiKTtcclxuICAgICAgfTtcclxuICAgIH1cclxuICB9O1xyXG4gIGlmICghb3B0aW9ucy5za2lwSHlkcmF0aW9uKSB7XHJcbiAgICBoeWRyYXRlKCk7XHJcbiAgfVxyXG4gIHJldHVybiBzdGF0ZUZyb21TdG9yYWdlIHx8IGNvbmZpZ1Jlc3VsdDtcclxufTtcclxuY29uc3QgcGVyc2lzdCA9IHBlcnNpc3RJbXBsO1xyXG5cclxuZXhwb3J0IHsgY29tYmluZSwgY3JlYXRlSlNPTlN0b3JhZ2UsIGRldnRvb2xzLCBwZXJzaXN0LCByZWR1eCwgc3Vic2NyaWJlV2l0aFNlbGVjdG9yIH07XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/react.mjs":
/*!********************************************!*\
  !*** ./node_modules/zustand/esm/react.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   useStore: () => (/* binding */ useStore)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/vanilla */ \"(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\");\n\r\n\r\n\r\nconst identity = (arg) => arg;\r\nfunction useStore(api, selector = identity) {\r\n  const slice = react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore(\r\n    api.subscribe,\r\n    () => selector(api.getState()),\r\n    () => selector(api.getInitialState())\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue(slice);\r\n  return slice;\r\n}\r\nconst createImpl = (createState) => {\r\n  const api = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(createState);\r\n  const useBoundStore = (selector) => useStore(api, selector);\r\n  Object.assign(useBoundStore, api);\r\n  return useBoundStore;\r\n};\r\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS9yZWFjdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQjtBQUNvQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdURBQTBCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxnREFBbUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0REFBVztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFx6dXN0YW5kXFxlc21cXHJlYWN0Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gJ3p1c3RhbmQvdmFuaWxsYSc7XHJcblxyXG5jb25zdCBpZGVudGl0eSA9IChhcmcpID0+IGFyZztcclxuZnVuY3Rpb24gdXNlU3RvcmUoYXBpLCBzZWxlY3RvciA9IGlkZW50aXR5KSB7XHJcbiAgY29uc3Qgc2xpY2UgPSBSZWFjdC51c2VTeW5jRXh0ZXJuYWxTdG9yZShcclxuICAgIGFwaS5zdWJzY3JpYmUsXHJcbiAgICAoKSA9PiBzZWxlY3RvcihhcGkuZ2V0U3RhdGUoKSksXHJcbiAgICAoKSA9PiBzZWxlY3RvcihhcGkuZ2V0SW5pdGlhbFN0YXRlKCkpXHJcbiAgKTtcclxuICBSZWFjdC51c2VEZWJ1Z1ZhbHVlKHNsaWNlKTtcclxuICByZXR1cm4gc2xpY2U7XHJcbn1cclxuY29uc3QgY3JlYXRlSW1wbCA9IChjcmVhdGVTdGF0ZSkgPT4ge1xyXG4gIGNvbnN0IGFwaSA9IGNyZWF0ZVN0b3JlKGNyZWF0ZVN0YXRlKTtcclxuICBjb25zdCB1c2VCb3VuZFN0b3JlID0gKHNlbGVjdG9yKSA9PiB1c2VTdG9yZShhcGksIHNlbGVjdG9yKTtcclxuICBPYmplY3QuYXNzaWduKHVzZUJvdW5kU3RvcmUsIGFwaSk7XHJcbiAgcmV0dXJuIHVzZUJvdW5kU3RvcmU7XHJcbn07XHJcbmNvbnN0IGNyZWF0ZSA9IChjcmVhdGVTdGF0ZSkgPT4gY3JlYXRlU3RhdGUgPyBjcmVhdGVJbXBsKGNyZWF0ZVN0YXRlKSA6IGNyZWF0ZUltcGw7XHJcblxyXG5leHBvcnQgeyBjcmVhdGUsIHVzZVN0b3JlIH07XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/react.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs":
/*!**********************************************!*\
  !*** ./node_modules/zustand/esm/vanilla.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: () => (/* binding */ createStore)\n/* harmony export */ });\nconst createStoreImpl = (createState) => {\r\n  let state;\r\n  const listeners = /* @__PURE__ */ new Set();\r\n  const setState = (partial, replace) => {\r\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\r\n    if (!Object.is(nextState, state)) {\r\n      const previousState = state;\r\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\r\n      listeners.forEach((listener) => listener(state, previousState));\r\n    }\r\n  };\r\n  const getState = () => state;\r\n  const getInitialState = () => initialState;\r\n  const subscribe = (listener) => {\r\n    listeners.add(listener);\r\n    return () => listeners.delete(listener);\r\n  };\r\n  const api = { setState, getState, getInitialState, subscribe };\r\n  const initialState = state = createState(setState, getState, api);\r\n  return api;\r\n};\r\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS92YW5pbGxhLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4SEFBOEg7QUFDOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDdUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFx6dXN0YW5kXFxlc21cXHZhbmlsbGEubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyZWF0ZVN0b3JlSW1wbCA9IChjcmVhdGVTdGF0ZSkgPT4ge1xyXG4gIGxldCBzdGF0ZTtcclxuICBjb25zdCBsaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xyXG4gIGNvbnN0IHNldFN0YXRlID0gKHBhcnRpYWwsIHJlcGxhY2UpID0+IHtcclxuICAgIGNvbnN0IG5leHRTdGF0ZSA9IHR5cGVvZiBwYXJ0aWFsID09PSBcImZ1bmN0aW9uXCIgPyBwYXJ0aWFsKHN0YXRlKSA6IHBhcnRpYWw7XHJcbiAgICBpZiAoIU9iamVjdC5pcyhuZXh0U3RhdGUsIHN0YXRlKSkge1xyXG4gICAgICBjb25zdCBwcmV2aW91c1N0YXRlID0gc3RhdGU7XHJcbiAgICAgIHN0YXRlID0gKHJlcGxhY2UgIT0gbnVsbCA/IHJlcGxhY2UgOiB0eXBlb2YgbmV4dFN0YXRlICE9PSBcIm9iamVjdFwiIHx8IG5leHRTdGF0ZSA9PT0gbnVsbCkgPyBuZXh0U3RhdGUgOiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgbmV4dFN0YXRlKTtcclxuICAgICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihzdGF0ZSwgcHJldmlvdXNTdGF0ZSkpO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgY29uc3QgZ2V0U3RhdGUgPSAoKSA9PiBzdGF0ZTtcclxuICBjb25zdCBnZXRJbml0aWFsU3RhdGUgPSAoKSA9PiBpbml0aWFsU3RhdGU7XHJcbiAgY29uc3Qgc3Vic2NyaWJlID0gKGxpc3RlbmVyKSA9PiB7XHJcbiAgICBsaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcclxuICAgIHJldHVybiAoKSA9PiBsaXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcclxuICB9O1xyXG4gIGNvbnN0IGFwaSA9IHsgc2V0U3RhdGUsIGdldFN0YXRlLCBnZXRJbml0aWFsU3RhdGUsIHN1YnNjcmliZSB9O1xyXG4gIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHN0YXRlID0gY3JlYXRlU3RhdGUoc2V0U3RhdGUsIGdldFN0YXRlLCBhcGkpO1xyXG4gIHJldHVybiBhcGk7XHJcbn07XHJcbmNvbnN0IGNyZWF0ZVN0b3JlID0gKGNyZWF0ZVN0YXRlKSA9PiBjcmVhdGVTdGF0ZSA/IGNyZWF0ZVN0b3JlSW1wbChjcmVhdGVTdGF0ZSkgOiBjcmVhdGVTdG9yZUltcGw7XHJcblxyXG5leHBvcnQgeyBjcmVhdGVTdG9yZSB9O1xyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./store/useStore.ts":
/*!***************************!*\
  !*** ./store/useStore.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useActivity: () => (/* binding */ useActivity),\n/* harmony export */   useAuth: () => (/* binding */ useAuth),\n/* harmony export */   useClients: () => (/* binding */ useClients),\n/* harmony export */   useLiveEditing: () => (/* binding */ useLiveEditing),\n/* harmony export */   useStore: () => (/* binding */ useStore),\n/* harmony export */   useUI: () => (/* binding */ useUI)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\nconst useStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        // Stan początkowy\n        user: null,\n        isAuthenticated: false,\n        clients: [],\n        selectedClient: null,\n        editingClient: null,\n        liveEditingSessions: {},\n        activityLogs: [],\n        sidebarOpen: false,\n        currentPage: 'dashboard',\n        // Implementacja akcji użytkownika\n        setUser: (user)=>set({\n                user\n            }),\n        setAuthenticated: (authenticated)=>set({\n                isAuthenticated: authenticated\n            }),\n        // Implementacja akcji klientów\n        setClients: (clients)=>set({\n                clients\n            }),\n        addClient: (client)=>set((state)=>({\n                    clients: [\n                        client,\n                        ...state.clients\n                    ]\n                })),\n        updateClient: (id, updates)=>set((state)=>({\n                    clients: state.clients.map((client)=>client.id === id ? {\n                            ...client,\n                            ...updates\n                        } : client)\n                })),\n        removeClient: (id)=>set((state)=>{\n                var _state_selectedClient;\n                return {\n                    clients: state.clients.filter((client)=>client.id !== id),\n                    selectedClient: ((_state_selectedClient = state.selectedClient) === null || _state_selectedClient === void 0 ? void 0 : _state_selectedClient.id) === id ? null : state.selectedClient\n                };\n            }),\n        setSelectedClient: (client)=>set({\n                selectedClient: client\n            }),\n        // Implementacja akcji live edycji\n        startEditing: (clientId, userId)=>set((state)=>({\n                    liveEditingSessions: {\n                        ...state.liveEditingSessions,\n                        [clientId]: userId\n                    }\n                })),\n        stopEditing: (clientId)=>set((state)=>{\n                const { [clientId]: removed, ...rest } = state.liveEditingSessions;\n                return {\n                    liveEditingSessions: rest\n                };\n            }),\n        setEditingClient: (clientId)=>set({\n                editingClient: clientId\n            }),\n        // Implementacja akcji aktywności\n        setActivityLogs: (logs)=>set({\n                activityLogs: logs\n            }),\n        addActivityLog: (log)=>set((state)=>({\n                    activityLogs: [\n                        log,\n                        ...state.activityLogs\n                    ]\n                })),\n        // Implementacja akcji UI\n        setSidebarOpen: (open)=>set({\n                sidebarOpen: open\n            }),\n        setCurrentPage: (page)=>set({\n                currentPage: page\n            }),\n        // Czyszczenie store przy wylogowaniu\n        clearStore: ()=>set({\n                user: null,\n                isAuthenticated: false,\n                clients: [],\n                selectedClient: null,\n                editingClient: null,\n                liveEditingSessions: {},\n                activityLogs: [],\n                sidebarOpen: false,\n                currentPage: 'dashboard'\n            })\n    }), {\n    name: 'spectres-crm-storage',\n    storage: (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.createJSONStorage)(()=>localStorage),\n    // Tylko krytyczne dane dla autoryzacji - nie przechowuj całej bazy klientów\n    partialize: (state)=>({\n            user: state.user,\n            isAuthenticated: state.isAuthenticated,\n            sidebarOpen: state.sidebarOpen,\n            currentPage: state.currentPage\n        }),\n    // Wersjonowanie na wypadek zmian w strukturze\n    version: 1\n}));\n// Selektory pomocnicze\nconst useAuth = ()=>{\n    const { user, isAuthenticated, setUser, setAuthenticated, clearStore } = useStore();\n    return {\n        user,\n        isAuthenticated,\n        setUser,\n        setAuthenticated,\n        clearStore\n    };\n};\nconst useClients = ()=>{\n    const { clients, selectedClient, editingClient, setClients, addClient, updateClient, removeClient, setSelectedClient, setEditingClient } = useStore();\n    return {\n        clients,\n        selectedClient,\n        editingClient,\n        setClients,\n        addClient,\n        updateClient,\n        removeClient,\n        setSelectedClient,\n        setEditingClient\n    };\n};\nconst useLiveEditing = ()=>{\n    const { liveEditingSessions, startEditing, stopEditing } = useStore();\n    // Sprawdź czy klient jest edytowany\n    const isClientBeingEdited = (clientId)=>{\n        return clientId in liveEditingSessions;\n    };\n    // Pobierz użytkownika edytującego klienta\n    const getEditingUser = (clientId)=>{\n        return liveEditingSessions[clientId] || null;\n    };\n    return {\n        liveEditingSessions,\n        startEditing,\n        stopEditing,\n        isClientBeingEdited,\n        getEditingUser\n    };\n};\nconst useActivity = ()=>{\n    const { activityLogs, setActivityLogs, addActivityLog } = useStore();\n    return {\n        activityLogs,\n        setActivityLogs,\n        addActivityLog\n    };\n};\nconst useUI = ()=>{\n    const { sidebarOpen, currentPage, setSidebarOpen, setCurrentPage } = useStore();\n    return {\n        sidebarOpen,\n        currentPage,\n        setSidebarOpen,\n        setCurrentPage\n    };\n};\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/useStore.ts\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);