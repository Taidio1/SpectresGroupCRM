/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"5d6c56beae06\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxhcHBcXGdsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNWQ2YzU2YmVhZTA2XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/auth/enhanced-auth-provider.tsx":
/*!****************************************************!*\
  !*** ./components/auth/enhanced-auth-provider.tsx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnhancedAuthProvider: () => (/* binding */ EnhancedAuthProvider),\n/* harmony export */   useAuthContext: () => (/* binding */ useAuthContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n/* harmony import */ var _store_useStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/store/useStore */ \"(app-pages-browser)/./store/useStore.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/logger */ \"(app-pages-browser)/./lib/logger.ts\");\n/* harmony import */ var _barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=AlertCircle,Loader2,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-alert.js\");\n/* harmony import */ var _barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=AlertCircle,Loader2,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=AlertCircle,Loader2,RefreshCw!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_alert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/ui/alert */ \"(app-pages-browser)/./components/ui/alert.tsx\");\n/* __next_internal_client_entry_do_not_use__ useAuthContext,EnhancedAuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    loading: true,\n    error: null,\n    retryAuth: ()=>{}\n});\nconst useAuthContext = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuthContext must be used within AuthProvider\");\n    }\n    return context;\n};\n_s(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Skrócone timeouty dla lepszego UX\nconst AUTH_TIMEOUT_MS = 8000 // 8 sekund na inicjalizację\n;\nconst MAX_RETRY_ATTEMPTS = 2 // Mniej prób\n;\nconst LOADING_HANG_TIMEOUT_MS = 15000 // 15 sekund na wykrycie zawieszenia\n;\nfunction EnhancedAuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [retryCount, setRetryCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [sessionHanged, setSessionHanged] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n    const { user, isAuthenticated, setUser, setAuthenticated, clearStore } = (0,_store_useStore__WEBPACK_IMPORTED_MODULE_4__.useAuth)();\n    // Refs dla timeoutów\n    const initTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const hangDetectionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isInitializingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Memoized values\n    const publicRoutes = [\n        \"/login\",\n        \"/register\"\n    ];\n    const isPublicRoute = publicRoutes.includes(pathname);\n    // Funkcja do czyszczenia sesji\n    const clearSession = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[clearSession]\": async ()=>{\n            try {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.loading(\"Clearing corrupted session\", {\n                    component: 'enhanced-auth-provider',\n                    pathname,\n                    retryCount\n                });\n                // Wyloguj z Supabase\n                await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.signOut();\n                // Wyczyść localStorage i store\n                clearStore();\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.success(\"Session cleared successfully\", {\n                    component: 'enhanced-auth-provider',\n                    pathname\n                });\n            } catch (clearError) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Error clearing session\", clearError, {\n                    component: 'enhanced-auth-provider',\n                    pathname\n                });\n            }\n        }\n    }[\"EnhancedAuthProvider.useCallback[clearSession]\"], [\n        clearStore,\n        pathname,\n        retryCount\n    ]);\n    // Funkcja do wykrywania i resetowania zawieszenia\n    const handleSessionHang = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[handleSessionHang]\": async ()=>{\n            _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Session hang detected - initiating emergency reset\", new Error(\"Session hang timeout\"), {\n                component: 'enhanced-auth-provider',\n                pathname,\n                retryCount,\n                action: 'session_hang_reset'\n            });\n            setSessionHanged(true);\n            await clearSession();\n            // Po 2 sekundach przekieruj do logowania\n            setTimeout({\n                \"EnhancedAuthProvider.useCallback[handleSessionHang]\": ()=>{\n                    router.push(\"/login?error=session_reset\");\n                }\n            }[\"EnhancedAuthProvider.useCallback[handleSessionHang]\"], 2000);\n        }\n    }[\"EnhancedAuthProvider.useCallback[handleSessionHang]\"], [\n        clearSession,\n        router,\n        pathname,\n        retryCount\n    ]);\n    // Funkcja inicjalizacji autoryzacji z timeoutem\n    const initAuthWithTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\": async ()=>{\n            return new Promise({\n                \"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\": (resolve, reject)=>{\n                    const abortController = new AbortController();\n                    let isCompleted = false;\n                    const timeoutId = setTimeout({\n                        \"EnhancedAuthProvider.useCallback[initAuthWithTimeout].timeoutId\": ()=>{\n                            if (!isCompleted) {\n                                abortController.abort();\n                                reject(new Error(\"Authentication timeout - sprawdź połączenie internetowe\"));\n                            }\n                        }\n                    }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout].timeoutId\"], AUTH_TIMEOUT_MS);\n                    const performAuth = {\n                        \"EnhancedAuthProvider.useCallback[initAuthWithTimeout].performAuth\": async ()=>{\n                            try {\n                                // Jeśli mamy już dane użytkownika w store z localStorage, użyj ich\n                                if (user && isAuthenticated) {\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"User data found in persisted store, verifying session\", {\n                                        component: 'enhanced-auth-provider',\n                                        userId: user.id,\n                                        userEmail: user.email\n                                    });\n                                    // Sprawdź czy sesja w Supabase jest nadal ważna\n                                    const session = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getSession();\n                                    if ((session === null || session === void 0 ? void 0 : session.user) && session.user.id === user.id) {\n                                        _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.success(\"Persisted session is valid\", {\n                                            component: 'enhanced-auth-provider',\n                                            userId: user.id\n                                        });\n                                        // Sesja jest ważna, nie potrzeba ponownej autoryzacji\n                                        if (isPublicRoute) {\n                                            router.push(\"/\");\n                                        }\n                                        isCompleted = true;\n                                        clearTimeout(timeoutId);\n                                        resolve();\n                                        return;\n                                    } else {\n                                        _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Persisted session is invalid, clearing and re-authenticating\", {\n                                            component: 'enhanced-auth-provider',\n                                            userId: user.id\n                                        });\n                                        clearStore();\n                                    }\n                                }\n                                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Auth init attempt \".concat(retryCount + 1, \"/\").concat(MAX_RETRY_ATTEMPTS), {\n                                    component: 'enhanced-auth-provider',\n                                    pathname,\n                                    retryCount,\n                                    action: 'auth_init_attempt'\n                                });\n                                if (abortController.signal.aborted) {\n                                    throw new Error(\"Operation was cancelled\");\n                                }\n                                // Sprawdź sesję w Supabase\n                                const session = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getSession();\n                                if (abortController.signal.aborted) {\n                                    throw new Error(\"Operation was cancelled\");\n                                }\n                                if (session === null || session === void 0 ? void 0 : session.user) {\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Session found, fetching user profile\", {\n                                        component: 'enhanced-auth-provider',\n                                        pathname,\n                                        userId: session.user.id\n                                    });\n                                    const userProfile = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getUserProfile(session.user.id);\n                                    if (abortController.signal.aborted) {\n                                        throw new Error(\"Operation was cancelled\");\n                                    }\n                                    setUser(userProfile);\n                                    setAuthenticated(true);\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.success(\"Authentication successful\", {\n                                        component: 'enhanced-auth-provider',\n                                        pathname,\n                                        userProfile: userProfile.email\n                                    });\n                                    if (isPublicRoute) {\n                                        router.push(\"/\");\n                                    }\n                                } else {\n                                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"No session found\", {\n                                        component: 'enhanced-auth-provider',\n                                        pathname,\n                                        action: 'no_session'\n                                    });\n                                    setUser(null);\n                                    setAuthenticated(false);\n                                    if (!isPublicRoute) {\n                                        router.push(\"/login\");\n                                    }\n                                }\n                                isCompleted = true;\n                                clearTimeout(timeoutId);\n                                resolve();\n                            } catch (authError) {\n                                var _authError_message, _authError_message1, _authError_message2;\n                                isCompleted = true;\n                                clearTimeout(timeoutId);\n                                if (authError.message === \"Operation was cancelled\") {\n                                    reject(new Error(\"Operacja anulowana z powodu timeoutu\"));\n                                } else if (((_authError_message = authError.message) === null || _authError_message === void 0 ? void 0 : _authError_message.includes(\"Failed to fetch\")) || ((_authError_message1 = authError.message) === null || _authError_message1 === void 0 ? void 0 : _authError_message1.includes(\"fetch\"))) {\n                                    reject(new Error(\"Błąd połączenia - sprawdź internet\"));\n                                } else if ((_authError_message2 = authError.message) === null || _authError_message2 === void 0 ? void 0 : _authError_message2.includes(\"timeout\")) {\n                                    reject(new Error(\"Timeout połączenia z serwerem\"));\n                                } else {\n                                    reject(authError);\n                                }\n                            }\n                        }\n                    }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout].performAuth\"];\n                    performAuth();\n                }\n            }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\"]);\n        }\n    }[\"EnhancedAuthProvider.useCallback[initAuthWithTimeout]\"], [\n        retryCount,\n        setUser,\n        setAuthenticated,\n        isPublicRoute,\n        router,\n        user,\n        isAuthenticated,\n        clearStore\n    ]);\n    // Główna funkcja inicjalizacji\n    const initAuth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[initAuth]\": async ()=>{\n            // Zapobiegaj równoczesnym inicjalizacjom\n            if (isInitializingRef.current) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Auth initialization already in progress, skipping\", {\n                    component: 'enhanced-auth-provider'\n                });\n                return;\n            }\n            isInitializingRef.current = true;\n            // Wyczyść poprzednie timeouty\n            if (initTimeoutRef.current) {\n                clearTimeout(initTimeoutRef.current);\n                initTimeoutRef.current = null;\n            }\n            if (hangDetectionRef.current) {\n                clearTimeout(hangDetectionRef.current);\n                hangDetectionRef.current = null;\n            }\n            setLoading(true);\n            setError(null);\n            // Timeout na wykrycie zawieszenia\n            hangDetectionRef.current = setTimeout(handleSessionHang, LOADING_HANG_TIMEOUT_MS);\n            try {\n                await initAuthWithTimeout();\n                setRetryCount(0);\n                setIsInitialized(true);\n            } catch (authError) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Authentication failed\", authError, {\n                    component: 'enhanced-auth-provider',\n                    pathname,\n                    retryCount,\n                    action: 'auth_failed'\n                });\n                if (retryCount < MAX_RETRY_ATTEMPTS - 1) {\n                    const delay = Math.pow(2, retryCount) * 1000;\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Retrying in \".concat(delay, \"ms...\"), {\n                        component: 'enhanced-auth-provider',\n                        pathname,\n                        retryCount,\n                        delay,\n                        action: 'retry_auth'\n                    });\n                    setTimeout({\n                        \"EnhancedAuthProvider.useCallback[initAuth]\": ()=>{\n                            setRetryCount({\n                                \"EnhancedAuthProvider.useCallback[initAuth]\": (prev)=>prev + 1\n                            }[\"EnhancedAuthProvider.useCallback[initAuth]\"]);\n                        }\n                    }[\"EnhancedAuthProvider.useCallback[initAuth]\"], delay);\n                    return;\n                } else {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Max retry attempts reached, clearing session\", {\n                        component: 'enhanced-auth-provider',\n                        pathname,\n                        retryCount,\n                        action: 'max_retries_reached'\n                    });\n                    await clearSession();\n                    setError(\"Błąd autoryzacji. Sesja została zresetowana.\");\n                    if (!isPublicRoute) {\n                        router.push(\"/login?error=auth_failed\");\n                    }\n                }\n            } finally{\n                if (hangDetectionRef.current) {\n                    clearTimeout(hangDetectionRef.current);\n                    hangDetectionRef.current = null;\n                }\n                setLoading(false);\n                isInitializingRef.current = false;\n            }\n        }\n    }[\"EnhancedAuthProvider.useCallback[initAuth]\"], [\n        retryCount,\n        initAuthWithTimeout,\n        handleSessionHang,\n        clearSession,\n        isPublicRoute,\n        router\n    ]);\n    // Funkcja retry dla UI\n    const retryAuth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"EnhancedAuthProvider.useCallback[retryAuth]\": ()=>{\n            setRetryCount(0);\n            setSessionHanged(false);\n            setIsInitialized(false);\n            initAuth();\n        }\n    }[\"EnhancedAuthProvider.useCallback[retryAuth]\"], [\n        initAuth\n    ]);\n    // Główny useEffect - uruchamia się TYLKO raz przy mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedAuthProvider.useEffect\": ()=>{\n            if (!isInitialized) {\n                initAuth();\n            }\n            return ({\n                \"EnhancedAuthProvider.useEffect\": ()=>{\n                    if (initTimeoutRef.current) {\n                        clearTimeout(initTimeoutRef.current);\n                        initTimeoutRef.current = null;\n                    }\n                    if (hangDetectionRef.current) {\n                        clearTimeout(hangDetectionRef.current);\n                        hangDetectionRef.current = null;\n                    }\n                }\n            })[\"EnhancedAuthProvider.useEffect\"];\n        }\n    }[\"EnhancedAuthProvider.useEffect\"], []) // BRAK dependencies - tylko mount/unmount!\n    ;\n    // Osobny useEffect dla nasłuchiwania zmian autoryzacji\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"EnhancedAuthProvider.useEffect\": ()=>{\n            // Nasłuchuj tylko jeśli już zainicjalizowane\n            if (!isInitialized) return;\n            const { data: { subscription } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.onAuthStateChange({\n                \"EnhancedAuthProvider.useEffect\": async (event, session)=>{\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.info(\"Auth state changed: \".concat(event), {\n                        component: 'enhanced-auth-provider',\n                        event,\n                        action: 'auth_state_change'\n                    });\n                    if (event === \"SIGNED_IN\" && (session === null || session === void 0 ? void 0 : session.user)) {\n                        try {\n                            const userProfile = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.authApi.getUserProfile(session.user.id);\n                            setUser(userProfile);\n                            setAuthenticated(true);\n                            if (isPublicRoute) {\n                                router.push(\"/\");\n                            }\n                        } catch (error) {\n                            var _session_user;\n                            _lib_logger__WEBPACK_IMPORTED_MODULE_5__.logger.error(\"Error handling SIGNED_IN event\", error, {\n                                component: 'enhanced-auth-provider',\n                                event,\n                                userId: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id\n                            });\n                        }\n                    } else if (event === \"SIGNED_OUT\") {\n                        clearStore();\n                        if (!isPublicRoute) {\n                            router.push(\"/login\");\n                        }\n                    }\n                }\n            }[\"EnhancedAuthProvider.useEffect\"]);\n            return ({\n                \"EnhancedAuthProvider.useEffect\": ()=>{\n                    subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n                }\n            })[\"EnhancedAuthProvider.useEffect\"];\n        }\n    }[\"EnhancedAuthProvider.useEffect\"], [\n        isInitialized,\n        setUser,\n        setAuthenticated,\n        clearStore,\n        router,\n        isPublicRoute\n    ]);\n    // Renderowanie stanów błędów i ładowania\n    if (sessionHanged) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-slate-900 flex items-center justify-center p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-md w-full text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        className: \"h-12 w-12 text-orange-400 mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 390,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-semibold text-white mb-2\",\n                        children: \"Wykryto zawieszenie sesji\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 391,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-slate-400 mb-6\",\n                        children: \"Sesja została automatycznie zresetowana. Za chwilę nastąpi przekierowanie do strony logowania.\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 394,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-cyan-400 mx-auto\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 397,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                lineNumber: 389,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n            lineNumber: 388,\n            columnNumber: 7\n        }, this);\n    }\n    if (loading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-slate-900 flex items-center justify-center p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center max-w-md w-full\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                        className: \"h-8 w-8 animate-spin text-cyan-400 mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 407,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-slate-400 mb-2\",\n                        children: \"Sprawdzanie autoryzacji...\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 408,\n                        columnNumber: 11\n                    }, this),\n                    retryCount > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-orange-400\",\n                        children: [\n                            \"Pr\\xf3ba \",\n                            retryCount + 1,\n                            \"/\",\n                            MAX_RETRY_ATTEMPTS\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 411,\n                        columnNumber: 13\n                    }, this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_alert__WEBPACK_IMPORTED_MODULE_7__.Alert, {\n                        className: \"mt-4 bg-red-900/20 border-red-500/30\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                className: \"h-4 w-4\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 418,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_alert__WEBPACK_IMPORTED_MODULE_7__.AlertDescription, {\n                                className: \"text-red-400\",\n                                children: error\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 419,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 417,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                lineNumber: 406,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n            lineNumber: 405,\n            columnNumber: 7\n        }, this);\n    }\n    if (error && !loading) {\n        const isTimeoutError = error.includes(\"timeout\") || error.includes(\"Timeout\") || error.includes(\"anulowana\");\n        const isConnectionError = error.includes(\"połączenia\") || error.includes(\"internet\");\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-slate-900 flex items-center justify-center p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-md w-full text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        className: \"h-12 w-12 text-red-400 mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 436,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-semibold text-white mb-2\",\n                        children: isTimeoutError ? \"Timeout autoryzacji\" : \"Błąd autoryzacji\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 437,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-slate-400 mb-4\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 440,\n                        columnNumber: 11\n                    }, this),\n                    isTimeoutError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-orange-900/20 border border-orange-500/30 rounded-lg p-4 mb-6 text-left\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"text-orange-400 font-medium mb-2\",\n                                children: \"\\uD83D\\uDCA1 Co możesz zrobić:\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 444,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: \"text-orange-300 text-sm space-y-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Sprawdź połączenie internetowe\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 446,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Spr\\xf3buj ponownie (automatycznie)\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 447,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Restart przeglądarki może pom\\xf3c\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 448,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: \"• Wyczyść cache przeglądarki\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                        lineNumber: 449,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 445,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 443,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_6__.Button, {\n                        onClick: retryAuth,\n                        className: \"bg-cyan-600 hover:bg-cyan-700 w-full mb-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertCircle_Loader2_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                className: \"h-4 w-4 mr-2\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                                lineNumber: 458,\n                                columnNumber: 13\n                            }, this),\n                            \"Spr\\xf3buj ponownie\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 454,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_6__.Button, {\n                        variant: \"outline\",\n                        onClick: ()=>router.push(\"/login\"),\n                        className: \"border-slate-600 text-slate-300 hover:bg-slate-800 w-full\",\n                        children: \"Przejdź do logowania\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 462,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4 text-xs text-slate-500\",\n                        children: [\n                            \"Timeout: \",\n                            AUTH_TIMEOUT_MS / 1000,\n                            \"s | Wersja z persistence\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                        lineNumber: 470,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n                lineNumber: 435,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n            lineNumber: 434,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            loading,\n            error,\n            retryAuth\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\auth\\\\enhanced-auth-provider.tsx\",\n        lineNumber: 479,\n        columnNumber: 5\n    }, this);\n}\n_s1(EnhancedAuthProvider, \"qNqia9MhOtK1L6Zk6uRFFveshLo=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter,\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname,\n        _store_useStore__WEBPACK_IMPORTED_MODULE_4__.useAuth\n    ];\n});\n_c = EnhancedAuthProvider;\nvar _c;\n$RefreshReg$(_c, \"EnhancedAuthProvider\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvYXV0aC9lbmhhbmNlZC1hdXRoLXByb3ZpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTJGO0FBQ25DO0FBQ2hCO0FBQ0U7QUFDTDtBQUN5QjtBQUNmO0FBQ2dCO0FBUS9ELE1BQU1pQiw0QkFBY2pCLG9EQUFhQSxDQUFrQjtJQUNqRGtCLFNBQVM7SUFDVEMsT0FBTztJQUNQQyxXQUFXLEtBQU87QUFDcEI7QUFFTyxNQUFNQyxpQkFBaUI7O0lBQzVCLE1BQU1DLFVBQVVyQixpREFBVUEsQ0FBQ2dCO0lBQzNCLElBQUksQ0FBQ0ssU0FBUztRQUNaLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9EO0FBQ1QsRUFBQztHQU5ZRDtBQVliLG9DQUFvQztBQUNwQyxNQUFNRyxrQkFBa0IsS0FBSyw0QkFBNEI7O0FBQ3pELE1BQU1DLHFCQUFxQixFQUFFLGFBQWE7O0FBQzFDLE1BQU1DLDBCQUEwQixNQUFNLG9DQUFvQzs7QUFFbkUsU0FBU0MscUJBQXFCLEtBQStCO1FBQS9CLEVBQUVDLFFBQVEsRUFBcUIsR0FBL0I7O0lBQ25DLE1BQU0sQ0FBQ1YsU0FBU1csV0FBVyxHQUFHMUIsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDZ0IsT0FBT1csU0FBUyxHQUFHM0IsK0NBQVFBLENBQWdCO0lBQ2xELE1BQU0sQ0FBQzRCLFlBQVlDLGNBQWMsR0FBRzdCLCtDQUFRQSxDQUFDO0lBQzdDLE1BQU0sQ0FBQzhCLGVBQWVDLGlCQUFpQixHQUFHL0IsK0NBQVFBLENBQUM7SUFDbkQsTUFBTSxDQUFDZ0MsZUFBZUMsaUJBQWlCLEdBQUdqQywrQ0FBUUEsQ0FBQztJQUVuRCxNQUFNa0MsU0FBUy9CLDBEQUFTQTtJQUN4QixNQUFNZ0MsV0FBVy9CLDREQUFXQTtJQUM1QixNQUFNLEVBQUVnQyxJQUFJLEVBQUVDLGVBQWUsRUFBRUMsT0FBTyxFQUFFQyxnQkFBZ0IsRUFBRUMsVUFBVSxFQUFFLEdBQUdsQyx3REFBT0E7SUFFaEYscUJBQXFCO0lBQ3JCLE1BQU1tQyxpQkFBaUJ2Qyw2Q0FBTUEsQ0FBd0I7SUFDckQsTUFBTXdDLG1CQUFtQnhDLDZDQUFNQSxDQUF3QjtJQUN2RCxNQUFNeUMsb0JBQW9CekMsNkNBQU1BLENBQUM7SUFFakMsa0JBQWtCO0lBQ2xCLE1BQU0wQyxlQUFlO1FBQUM7UUFBVTtLQUFZO0lBQzVDLE1BQU1DLGdCQUFnQkQsYUFBYUUsUUFBUSxDQUFDWDtJQUU1QywrQkFBK0I7SUFDL0IsTUFBTVksZUFBZTlDLGtEQUFXQTswREFBQztZQUMvQixJQUFJO2dCQUNGTSwrQ0FBTUEsQ0FBQ1EsT0FBTyxDQUFDLDhCQUE4QjtvQkFDM0NpQyxXQUFXO29CQUNYYjtvQkFDQVA7Z0JBQ0Y7Z0JBRUEscUJBQXFCO2dCQUNyQixNQUFNdkIsa0RBQU9BLENBQUM0QyxPQUFPO2dCQUVyQiwrQkFBK0I7Z0JBQy9CVDtnQkFFQWpDLCtDQUFNQSxDQUFDMkMsT0FBTyxDQUFDLGdDQUFnQztvQkFDN0NGLFdBQVc7b0JBQ1hiO2dCQUNGO1lBQ0YsRUFBRSxPQUFPZ0IsWUFBWTtnQkFDbkI1QywrQ0FBTUEsQ0FBQ1MsS0FBSyxDQUFDLDBCQUEwQm1DLFlBQVk7b0JBQ2pESCxXQUFXO29CQUNYYjtnQkFDRjtZQUNGO1FBQ0Y7eURBQUc7UUFBQ0s7UUFBWUw7UUFBVVA7S0FBVztJQUVyQyxrREFBa0Q7SUFDbEQsTUFBTXdCLG9CQUFvQm5ELGtEQUFXQTsrREFBQztZQUNwQ00sK0NBQU1BLENBQUNTLEtBQUssQ0FBQyxzREFBc0QsSUFBSUksTUFBTSx5QkFBeUI7Z0JBQ3BHNEIsV0FBVztnQkFDWGI7Z0JBQ0FQO2dCQUNBeUIsUUFBUTtZQUNWO1lBQ0F0QixpQkFBaUI7WUFFakIsTUFBTWdCO1lBRU4seUNBQXlDO1lBQ3pDTzt1RUFBVztvQkFDVHBCLE9BQU9xQixJQUFJLENBQUM7Z0JBQ2Q7c0VBQUc7UUFDTDs4REFBRztRQUFDUjtRQUFjYjtRQUFRQztRQUFVUDtLQUFXO0lBRS9DLGdEQUFnRDtJQUNoRCxNQUFNNEIsc0JBQXNCdkQsa0RBQVdBO2lFQUFDO1lBQ3RDLE9BQU8sSUFBSXdEO3lFQUFRLENBQUNDLFNBQVNDO29CQUMzQixNQUFNQyxrQkFBa0IsSUFBSUM7b0JBQzVCLElBQUlDLGNBQWM7b0JBRWxCLE1BQU1DLFlBQVlUOzJGQUFXOzRCQUMzQixJQUFJLENBQUNRLGFBQWE7Z0NBQ2hCRixnQkFBZ0JJLEtBQUs7Z0NBQ3JCTCxPQUFPLElBQUl2QyxNQUFNOzRCQUNuQjt3QkFDRjswRkFBR0M7b0JBRUgsTUFBTTRDOzZGQUFjOzRCQUNsQixJQUFJO2dDQUNGLG1FQUFtRTtnQ0FDbkUsSUFBSTdCLFFBQVFDLGlCQUFpQjtvQ0FDM0I5QiwrQ0FBTUEsQ0FBQzJELElBQUksQ0FBQyx5REFBeUQ7d0NBQ25FbEIsV0FBVzt3Q0FDWG1CLFFBQVEvQixLQUFLZ0MsRUFBRTt3Q0FDZkMsV0FBV2pDLEtBQUtrQyxLQUFLO29DQUN2QjtvQ0FFQSxnREFBZ0Q7b0NBQ2hELE1BQU1DLFVBQVUsTUFBTWxFLGtEQUFPQSxDQUFDbUUsVUFBVTtvQ0FFeEMsSUFBSUQsQ0FBQUEsb0JBQUFBLDhCQUFBQSxRQUFTbkMsSUFBSSxLQUFJbUMsUUFBUW5DLElBQUksQ0FBQ2dDLEVBQUUsS0FBS2hDLEtBQUtnQyxFQUFFLEVBQUU7d0NBQ2hEN0QsK0NBQU1BLENBQUMyQyxPQUFPLENBQUMsOEJBQThCOzRDQUMzQ0YsV0FBVzs0Q0FDWG1CLFFBQVEvQixLQUFLZ0MsRUFBRTt3Q0FDakI7d0NBRUEsc0RBQXNEO3dDQUN0RCxJQUFJdkIsZUFBZTs0Q0FDakJYLE9BQU9xQixJQUFJLENBQUM7d0NBQ2Q7d0NBQ0FPLGNBQWM7d0NBQ2RXLGFBQWFWO3dDQUNiTDt3Q0FDQTtvQ0FDRixPQUFPO3dDQUNMbkQsK0NBQU1BLENBQUMyRCxJQUFJLENBQUMsZ0VBQWdFOzRDQUMxRWxCLFdBQVc7NENBQ1htQixRQUFRL0IsS0FBS2dDLEVBQUU7d0NBQ2pCO3dDQUNBNUI7b0NBQ0Y7Z0NBQ0Y7Z0NBRUFqQywrQ0FBTUEsQ0FBQzJELElBQUksQ0FBQyxxQkFBdUM1QyxPQUFsQk0sYUFBYSxHQUFFLEtBQXNCLE9BQW5CTixxQkFBc0I7b0NBQ3ZFMEIsV0FBVztvQ0FDWGI7b0NBQ0FQO29DQUNBeUIsUUFBUTtnQ0FDVjtnQ0FFQSxJQUFJTyxnQkFBZ0JjLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFO29DQUNsQyxNQUFNLElBQUl2RCxNQUFNO2dDQUNsQjtnQ0FFQSwyQkFBMkI7Z0NBQzNCLE1BQU1tRCxVQUFVLE1BQU1sRSxrREFBT0EsQ0FBQ21FLFVBQVU7Z0NBRXhDLElBQUlaLGdCQUFnQmMsTUFBTSxDQUFDQyxPQUFPLEVBQUU7b0NBQ2xDLE1BQU0sSUFBSXZELE1BQU07Z0NBQ2xCO2dDQUVBLElBQUltRCxvQkFBQUEsOEJBQUFBLFFBQVNuQyxJQUFJLEVBQUU7b0NBQ2pCN0IsK0NBQU1BLENBQUMyRCxJQUFJLENBQUMsd0NBQXdDO3dDQUNsRGxCLFdBQVc7d0NBQ1hiO3dDQUNBZ0MsUUFBUUksUUFBUW5DLElBQUksQ0FBQ2dDLEVBQUU7b0NBQ3pCO29DQUVBLE1BQU1RLGNBQWMsTUFBTXZFLGtEQUFPQSxDQUFDd0UsY0FBYyxDQUFDTixRQUFRbkMsSUFBSSxDQUFDZ0MsRUFBRTtvQ0FFaEUsSUFBSVIsZ0JBQWdCYyxNQUFNLENBQUNDLE9BQU8sRUFBRTt3Q0FDbEMsTUFBTSxJQUFJdkQsTUFBTTtvQ0FDbEI7b0NBRUFrQixRQUFRc0M7b0NBQ1JyQyxpQkFBaUI7b0NBRWpCaEMsK0NBQU1BLENBQUMyQyxPQUFPLENBQUMsNkJBQTZCO3dDQUMxQ0YsV0FBVzt3Q0FDWGI7d0NBQ0F5QyxhQUFhQSxZQUFZTixLQUFLO29DQUNoQztvQ0FFQSxJQUFJekIsZUFBZTt3Q0FDakJYLE9BQU9xQixJQUFJLENBQUM7b0NBQ2Q7Z0NBQ0YsT0FBTztvQ0FDTGhELCtDQUFNQSxDQUFDMkQsSUFBSSxDQUFDLG9CQUFvQjt3Q0FDOUJsQixXQUFXO3dDQUNYYjt3Q0FDQWtCLFFBQVE7b0NBQ1Y7b0NBRUFmLFFBQVE7b0NBQ1JDLGlCQUFpQjtvQ0FFakIsSUFBSSxDQUFDTSxlQUFlO3dDQUNsQlgsT0FBT3FCLElBQUksQ0FBQztvQ0FDZDtnQ0FDRjtnQ0FFQU8sY0FBYztnQ0FDZFcsYUFBYVY7Z0NBQ2JMOzRCQUVGLEVBQUUsT0FBT29CLFdBQWdCO29DQU1aQSxvQkFBa0RBLHFCQUVsREE7Z0NBUFhoQixjQUFjO2dDQUNkVyxhQUFhVjtnQ0FFYixJQUFJZSxVQUFVQyxPQUFPLEtBQUssMkJBQTJCO29DQUNuRHBCLE9BQU8sSUFBSXZDLE1BQU07Z0NBQ25CLE9BQU8sSUFBSTBELEVBQUFBLHFCQUFBQSxVQUFVQyxPQUFPLGNBQWpCRCx5Q0FBQUEsbUJBQW1CaEMsUUFBUSxDQUFDLHlCQUFzQmdDLHNCQUFBQSxVQUFVQyxPQUFPLGNBQWpCRCwwQ0FBQUEsb0JBQW1CaEMsUUFBUSxDQUFDLFdBQVU7b0NBQ2pHYSxPQUFPLElBQUl2QyxNQUFNO2dDQUNuQixPQUFPLEtBQUkwRCxzQkFBQUEsVUFBVUMsT0FBTyxjQUFqQkQsMENBQUFBLG9CQUFtQmhDLFFBQVEsQ0FBQyxZQUFZO29DQUNqRGEsT0FBTyxJQUFJdkMsTUFBTTtnQ0FDbkIsT0FBTztvQ0FDTHVDLE9BQU9tQjtnQ0FDVDs0QkFDRjt3QkFDRjs7b0JBRUFiO2dCQUNGOztRQUNGO2dFQUFHO1FBQUNyQztRQUFZVTtRQUFTQztRQUFrQk07UUFBZVg7UUFBUUU7UUFBTUM7UUFBaUJHO0tBQVc7SUFFcEcsK0JBQStCO0lBQy9CLE1BQU13QyxXQUFXL0Usa0RBQVdBO3NEQUFDO1lBQzNCLHlDQUF5QztZQUN6QyxJQUFJMEMsa0JBQWtCc0MsT0FBTyxFQUFFO2dCQUM3QjFFLCtDQUFNQSxDQUFDMkQsSUFBSSxDQUFDLHFEQUFxRDtvQkFDL0RsQixXQUFXO2dCQUNiO2dCQUNBO1lBQ0Y7WUFFQUwsa0JBQWtCc0MsT0FBTyxHQUFHO1lBRTVCLDhCQUE4QjtZQUM5QixJQUFJeEMsZUFBZXdDLE9BQU8sRUFBRTtnQkFDMUJSLGFBQWFoQyxlQUFld0MsT0FBTztnQkFDbkN4QyxlQUFld0MsT0FBTyxHQUFHO1lBQzNCO1lBQ0EsSUFBSXZDLGlCQUFpQnVDLE9BQU8sRUFBRTtnQkFDNUJSLGFBQWEvQixpQkFBaUJ1QyxPQUFPO2dCQUNyQ3ZDLGlCQUFpQnVDLE9BQU8sR0FBRztZQUM3QjtZQUVBdkQsV0FBVztZQUNYQyxTQUFTO1lBRVQsa0NBQWtDO1lBQ2xDZSxpQkFBaUJ1QyxPQUFPLEdBQUczQixXQUFXRixtQkFBbUI3QjtZQUV6RCxJQUFJO2dCQUNGLE1BQU1pQztnQkFDTjNCLGNBQWM7Z0JBQ2RJLGlCQUFpQjtZQUVuQixFQUFFLE9BQU82QyxXQUFXO2dCQUNsQnZFLCtDQUFNQSxDQUFDUyxLQUFLLENBQUMseUJBQXlCOEQsV0FBVztvQkFDL0M5QixXQUFXO29CQUNYYjtvQkFDQVA7b0JBQ0F5QixRQUFRO2dCQUNWO2dCQUVBLElBQUl6QixhQUFhTixxQkFBcUIsR0FBRztvQkFDdkMsTUFBTTRELFFBQVFDLEtBQUtDLEdBQUcsQ0FBQyxHQUFHeEQsY0FBYztvQkFDeENyQiwrQ0FBTUEsQ0FBQzJELElBQUksQ0FBQyxlQUFxQixPQUFOZ0IsT0FBTSxVQUFRO3dCQUN2Q2xDLFdBQVc7d0JBQ1hiO3dCQUNBUDt3QkFDQXNEO3dCQUNBN0IsUUFBUTtvQkFDVjtvQkFFQUM7c0VBQVc7NEJBQ1R6Qjs4RUFBY3dELENBQUFBLE9BQVFBLE9BQU87O3dCQUMvQjtxRUFBR0g7b0JBQ0g7Z0JBQ0YsT0FBTztvQkFDTDNFLCtDQUFNQSxDQUFDMkQsSUFBSSxDQUFDLGdEQUFnRDt3QkFDMURsQixXQUFXO3dCQUNYYjt3QkFDQVA7d0JBQ0F5QixRQUFRO29CQUNWO29CQUNBLE1BQU1OO29CQUVOcEIsU0FBUztvQkFFVCxJQUFJLENBQUNrQixlQUFlO3dCQUNsQlgsT0FBT3FCLElBQUksQ0FBQztvQkFDZDtnQkFDRjtZQUNGLFNBQVU7Z0JBQ1IsSUFBSWIsaUJBQWlCdUMsT0FBTyxFQUFFO29CQUM1QlIsYUFBYS9CLGlCQUFpQnVDLE9BQU87b0JBQ3JDdkMsaUJBQWlCdUMsT0FBTyxHQUFHO2dCQUM3QjtnQkFDQXZELFdBQVc7Z0JBQ1hpQixrQkFBa0JzQyxPQUFPLEdBQUc7WUFDOUI7UUFDRjtxREFBRztRQUFDckQ7UUFBWTRCO1FBQXFCSjtRQUFtQkw7UUFBY0Y7UUFBZVg7S0FBTztJQUU1Rix1QkFBdUI7SUFDdkIsTUFBTWpCLFlBQVloQixrREFBV0E7dURBQUM7WUFDNUI0QixjQUFjO1lBQ2RFLGlCQUFpQjtZQUNqQkUsaUJBQWlCO1lBQ2pCK0M7UUFDRjtzREFBRztRQUFDQTtLQUFTO0lBRWIsd0RBQXdEO0lBQ3hEakYsZ0RBQVNBOzBDQUFDO1lBQ1IsSUFBSSxDQUFDaUMsZUFBZTtnQkFDbEJnRDtZQUNGO1lBRUE7a0RBQU87b0JBQ0wsSUFBSXZDLGVBQWV3QyxPQUFPLEVBQUU7d0JBQzFCUixhQUFhaEMsZUFBZXdDLE9BQU87d0JBQ25DeEMsZUFBZXdDLE9BQU8sR0FBRztvQkFDM0I7b0JBQ0EsSUFBSXZDLGlCQUFpQnVDLE9BQU8sRUFBRTt3QkFDNUJSLGFBQWEvQixpQkFBaUJ1QyxPQUFPO3dCQUNyQ3ZDLGlCQUFpQnVDLE9BQU8sR0FBRztvQkFDN0I7Z0JBQ0Y7O1FBQ0Y7eUNBQUcsRUFBRSxFQUFFLDJDQUEyQzs7SUFFbEQsdURBQXVEO0lBQ3ZEbEYsZ0RBQVNBOzBDQUFDO1lBQ1IsNkNBQTZDO1lBQzdDLElBQUksQ0FBQ2lDLGVBQWU7WUFFcEIsTUFBTSxFQUFFc0QsTUFBTSxFQUFFQyxZQUFZLEVBQUUsRUFBRSxHQUFHbEYsa0RBQU9BLENBQUNtRixpQkFBaUI7a0RBQzFELE9BQU9DLE9BQU9sQjtvQkFDWmhFLCtDQUFNQSxDQUFDMkQsSUFBSSxDQUFDLHVCQUE2QixPQUFOdUIsUUFBUzt3QkFDMUN6QyxXQUFXO3dCQUNYeUM7d0JBQ0FwQyxRQUFRO29CQUNWO29CQUVBLElBQUlvQyxVQUFVLGdCQUFlbEIsb0JBQUFBLDhCQUFBQSxRQUFTbkMsSUFBSSxHQUFFO3dCQUMxQyxJQUFJOzRCQUNGLE1BQU13QyxjQUFjLE1BQU12RSxrREFBT0EsQ0FBQ3dFLGNBQWMsQ0FBQ04sUUFBUW5DLElBQUksQ0FBQ2dDLEVBQUU7NEJBQ2hFOUIsUUFBUXNDOzRCQUNSckMsaUJBQWlCOzRCQUNqQixJQUFJTSxlQUFlO2dDQUNqQlgsT0FBT3FCLElBQUksQ0FBQzs0QkFDZDt3QkFDRixFQUFFLE9BQU92QyxPQUFPO2dDQUlKdUQ7NEJBSFZoRSwrQ0FBTUEsQ0FBQ1MsS0FBSyxDQUFDLGtDQUFrQ0EsT0FBTztnQ0FDcERnQyxXQUFXO2dDQUNYeUM7Z0NBQ0F0QixNQUFNLEVBQUVJLG9CQUFBQSwrQkFBQUEsZ0JBQUFBLFFBQVNuQyxJQUFJLGNBQWJtQyxvQ0FBQUEsY0FBZUgsRUFBRTs0QkFDM0I7d0JBQ0Y7b0JBQ0YsT0FBTyxJQUFJcUIsVUFBVSxjQUFjO3dCQUNqQ2pEO3dCQUNBLElBQUksQ0FBQ0ssZUFBZTs0QkFDbEJYLE9BQU9xQixJQUFJLENBQUM7d0JBQ2Q7b0JBQ0Y7Z0JBQ0Y7O1lBR0Y7a0RBQU87b0JBQ0xnQyx5QkFBQUEsbUNBQUFBLGFBQWNHLFdBQVc7Z0JBQzNCOztRQUNGO3lDQUFHO1FBQUMxRDtRQUFlTTtRQUFTQztRQUFrQkM7UUFBWU47UUFBUVc7S0FBYztJQUVoRix5Q0FBeUM7SUFDekMsSUFBSWYsZUFBZTtRQUNqQixxQkFDRSw4REFBQzZEO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ25GLHlHQUFXQTt3QkFBQ21GLFdBQVU7Ozs7OztrQ0FDdkIsOERBQUNDO3dCQUFHRCxXQUFVO2tDQUF3Qzs7Ozs7O2tDQUd0RCw4REFBQ0U7d0JBQUVGLFdBQVU7a0NBQXNCOzs7Ozs7a0NBR25DLDhEQUFDRDt3QkFBSUMsV0FBVTs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFJdkI7SUFFQSxJQUFJN0UsU0FBUztRQUNYLHFCQUNFLDhEQUFDNEU7WUFBSUMsV0FBVTtzQkFDYiw0RUFBQ0Q7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDcEYseUdBQU9BO3dCQUFDb0YsV0FBVTs7Ozs7O2tDQUNuQiw4REFBQ0U7d0JBQUVGLFdBQVU7a0NBQXNCOzs7Ozs7b0JBRWxDaEUsYUFBYSxtQkFDWiw4REFBQ2tFO3dCQUFFRixXQUFVOzs0QkFBMEI7NEJBQzlCaEUsYUFBYTs0QkFBRTs0QkFBRU47Ozs7Ozs7b0JBSTNCTix1QkFDQyw4REFBQ0osdURBQUtBO3dCQUFDZ0YsV0FBVTs7MENBQ2YsOERBQUNuRix5R0FBV0E7Z0NBQUNtRixXQUFVOzs7Ozs7MENBQ3ZCLDhEQUFDL0Usa0VBQWdCQTtnQ0FBQytFLFdBQVU7MENBQ3pCNUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBT2Y7SUFFQSxJQUFJQSxTQUFTLENBQUNELFNBQVM7UUFDckIsTUFBTWdGLGlCQUFpQi9FLE1BQU04QixRQUFRLENBQUMsY0FBYzlCLE1BQU04QixRQUFRLENBQUMsY0FBYzlCLE1BQU04QixRQUFRLENBQUM7UUFDaEcsTUFBTWtELG9CQUFvQmhGLE1BQU04QixRQUFRLENBQUMsaUJBQWlCOUIsTUFBTThCLFFBQVEsQ0FBQztRQUV6RSxxQkFDRSw4REFBQzZDO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ25GLHlHQUFXQTt3QkFBQ21GLFdBQVU7Ozs7OztrQ0FDdkIsOERBQUNDO3dCQUFHRCxXQUFVO2tDQUNYRyxpQkFBaUIsd0JBQXdCOzs7Ozs7a0NBRTVDLDhEQUFDRDt3QkFBRUYsV0FBVTtrQ0FBdUI1RTs7Ozs7O29CQUVuQytFLGdDQUNDLDhEQUFDSjt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNLO2dDQUFHTCxXQUFVOzBDQUFtQzs7Ozs7OzBDQUNqRCw4REFBQ007Z0NBQUdOLFdBQVU7O2tEQUNaLDhEQUFDTztrREFBRzs7Ozs7O2tEQUNKLDhEQUFDQTtrREFBRzs7Ozs7O2tEQUNKLDhEQUFDQTtrREFBRzs7Ozs7O2tEQUNKLDhEQUFDQTtrREFBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQUtWLDhEQUFDeEYseURBQU1BO3dCQUNMeUYsU0FBU25GO3dCQUNUMkUsV0FBVTs7MENBRVYsOERBQUNsRiwwR0FBU0E7Z0NBQUNrRixXQUFVOzs7Ozs7NEJBQWlCOzs7Ozs7O2tDQUl4Qyw4REFBQ2pGLHlEQUFNQTt3QkFDTDBGLFNBQVE7d0JBQ1JELFNBQVMsSUFBTWxFLE9BQU9xQixJQUFJLENBQUM7d0JBQzNCcUMsV0FBVTtrQ0FDWDs7Ozs7O2tDQUlELDhEQUFDRDt3QkFBSUMsV0FBVTs7NEJBQThCOzRCQUNqQ3ZFLGtCQUFrQjs0QkFBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBSzNDO0lBRUEscUJBQ0UsOERBQUNQLFlBQVl3RixRQUFRO1FBQUNDLE9BQU87WUFBRXhGO1lBQVNDO1lBQU9DO1FBQVU7a0JBQ3REUTs7Ozs7O0FBR1A7SUExYmdCRDs7UUFPQ3JCLHNEQUFTQTtRQUNQQyx3REFBV0E7UUFDNkNFLG9EQUFPQTs7O0tBVGxFa0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxjb21wb25lbnRzXFxhdXRoXFxlbmhhbmNlZC1hdXRoLXByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxyXG5cclxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IHVzZVJvdXRlciwgdXNlUGF0aG5hbWUgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCJcclxuaW1wb3J0IHsgYXV0aEFwaSB9IGZyb20gXCJAL2xpYi9zdXBhYmFzZVwiXHJcbmltcG9ydCB7IHVzZUF1dGggfSBmcm9tIFwiQC9zdG9yZS91c2VTdG9yZVwiXHJcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gXCJAL2xpYi9sb2dnZXJcIlxyXG5pbXBvcnQgeyBMb2FkZXIyLCBBbGVydENpcmNsZSwgUmVmcmVzaEN3IH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiXHJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCJcclxuaW1wb3J0IHsgQWxlcnQsIEFsZXJ0RGVzY3JpcHRpb24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2FsZXJ0XCJcclxuXHJcbmludGVyZmFjZSBBdXRoQ29udGV4dFR5cGUge1xyXG4gIGxvYWRpbmc6IGJvb2xlYW5cclxuICBlcnJvcjogc3RyaW5nIHwgbnVsbFxyXG4gIHJldHJ5QXV0aDogKCkgPT4gdm9pZFxyXG59XHJcblxyXG5jb25zdCBBdXRoQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QXV0aENvbnRleHRUeXBlPih7XHJcbiAgbG9hZGluZzogdHJ1ZSxcclxuICBlcnJvcjogbnVsbCxcclxuICByZXRyeUF1dGg6ICgpID0+IHt9XHJcbn0pXHJcblxyXG5leHBvcnQgY29uc3QgdXNlQXV0aENvbnRleHQgPSAoKSA9PiB7XHJcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQXV0aENvbnRleHQpXHJcbiAgaWYgKCFjb250ZXh0KSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VBdXRoQ29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIEF1dGhQcm92aWRlclwiKVxyXG4gIH1cclxuICByZXR1cm4gY29udGV4dFxyXG59XHJcblxyXG5pbnRlcmZhY2UgQXV0aFByb3ZpZGVyUHJvcHMge1xyXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcclxufVxyXG5cclxuLy8gU2tyw7Njb25lIHRpbWVvdXR5IGRsYSBsZXBzemVnbyBVWFxyXG5jb25zdCBBVVRIX1RJTUVPVVRfTVMgPSA4MDAwIC8vIDggc2VrdW5kIG5hIGluaWNqYWxpemFjasSZXHJcbmNvbnN0IE1BWF9SRVRSWV9BVFRFTVBUUyA9IDIgLy8gTW5pZWogcHLDs2JcclxuY29uc3QgTE9BRElOR19IQU5HX1RJTUVPVVRfTVMgPSAxNTAwMCAvLyAxNSBzZWt1bmQgbmEgd3lrcnljaWUgemF3aWVzemVuaWFcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBFbmhhbmNlZEF1dGhQcm92aWRlcih7IGNoaWxkcmVuIH06IEF1dGhQcm92aWRlclByb3BzKSB7XHJcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSlcclxuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpXHJcbiAgY29uc3QgW3JldHJ5Q291bnQsIHNldFJldHJ5Q291bnRdID0gdXNlU3RhdGUoMClcclxuICBjb25zdCBbc2Vzc2lvbkhhbmdlZCwgc2V0U2Vzc2lvbkhhbmdlZF0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICBjb25zdCBbaXNJbml0aWFsaXplZCwgc2V0SXNJbml0aWFsaXplZF0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICBcclxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxyXG4gIGNvbnN0IHBhdGhuYW1lID0gdXNlUGF0aG5hbWUoKVxyXG4gIGNvbnN0IHsgdXNlciwgaXNBdXRoZW50aWNhdGVkLCBzZXRVc2VyLCBzZXRBdXRoZW50aWNhdGVkLCBjbGVhclN0b3JlIH0gPSB1c2VBdXRoKClcclxuICBcclxuICAvLyBSZWZzIGRsYSB0aW1lb3V0w7N3XHJcbiAgY29uc3QgaW5pdFRpbWVvdXRSZWYgPSB1c2VSZWY8Tm9kZUpTLlRpbWVvdXQgfCBudWxsPihudWxsKVxyXG4gIGNvbnN0IGhhbmdEZXRlY3Rpb25SZWYgPSB1c2VSZWY8Tm9kZUpTLlRpbWVvdXQgfCBudWxsPihudWxsKVxyXG4gIGNvbnN0IGlzSW5pdGlhbGl6aW5nUmVmID0gdXNlUmVmKGZhbHNlKVxyXG4gIFxyXG4gIC8vIE1lbW9pemVkIHZhbHVlc1xyXG4gIGNvbnN0IHB1YmxpY1JvdXRlcyA9IFtcIi9sb2dpblwiLCBcIi9yZWdpc3RlclwiXVxyXG4gIGNvbnN0IGlzUHVibGljUm91dGUgPSBwdWJsaWNSb3V0ZXMuaW5jbHVkZXMocGF0aG5hbWUpXHJcblxyXG4gIC8vIEZ1bmtjamEgZG8gY3p5c3pjemVuaWEgc2VzamlcclxuICBjb25zdCBjbGVhclNlc3Npb24gPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsb2dnZXIubG9hZGluZyhcIkNsZWFyaW5nIGNvcnJ1cHRlZCBzZXNzaW9uXCIsIHsgXHJcbiAgICAgICAgY29tcG9uZW50OiAnZW5oYW5jZWQtYXV0aC1wcm92aWRlcicsXHJcbiAgICAgICAgcGF0aG5hbWUsXHJcbiAgICAgICAgcmV0cnlDb3VudFxyXG4gICAgICB9KVxyXG4gICAgICBcclxuICAgICAgLy8gV3lsb2d1aiB6IFN1cGFiYXNlXHJcbiAgICAgIGF3YWl0IGF1dGhBcGkuc2lnbk91dCgpXHJcbiAgICAgIFxyXG4gICAgICAvLyBXeWN6ecWbxIcgbG9jYWxTdG9yYWdlIGkgc3RvcmVcclxuICAgICAgY2xlYXJTdG9yZSgpXHJcbiAgICAgIFxyXG4gICAgICBsb2dnZXIuc3VjY2VzcyhcIlNlc3Npb24gY2xlYXJlZCBzdWNjZXNzZnVsbHlcIiwgeyBcclxuICAgICAgICBjb21wb25lbnQ6ICdlbmhhbmNlZC1hdXRoLXByb3ZpZGVyJyxcclxuICAgICAgICBwYXRobmFtZVxyXG4gICAgICB9KVxyXG4gICAgfSBjYXRjaCAoY2xlYXJFcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoXCJFcnJvciBjbGVhcmluZyBzZXNzaW9uXCIsIGNsZWFyRXJyb3IsIHsgXHJcbiAgICAgICAgY29tcG9uZW50OiAnZW5oYW5jZWQtYXV0aC1wcm92aWRlcicsXHJcbiAgICAgICAgcGF0aG5hbWVcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9LCBbY2xlYXJTdG9yZSwgcGF0aG5hbWUsIHJldHJ5Q291bnRdKVxyXG5cclxuICAvLyBGdW5rY2phIGRvIHd5a3J5d2FuaWEgaSByZXNldG93YW5pYSB6YXdpZXN6ZW5pYVxyXG4gIGNvbnN0IGhhbmRsZVNlc3Npb25IYW5nID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xyXG4gICAgbG9nZ2VyLmVycm9yKFwiU2Vzc2lvbiBoYW5nIGRldGVjdGVkIC0gaW5pdGlhdGluZyBlbWVyZ2VuY3kgcmVzZXRcIiwgbmV3IEVycm9yKFwiU2Vzc2lvbiBoYW5nIHRpbWVvdXRcIiksIHtcclxuICAgICAgY29tcG9uZW50OiAnZW5oYW5jZWQtYXV0aC1wcm92aWRlcicsXHJcbiAgICAgIHBhdGhuYW1lLFxyXG4gICAgICByZXRyeUNvdW50LFxyXG4gICAgICBhY3Rpb246ICdzZXNzaW9uX2hhbmdfcmVzZXQnXHJcbiAgICB9KVxyXG4gICAgc2V0U2Vzc2lvbkhhbmdlZCh0cnVlKVxyXG4gICAgXHJcbiAgICBhd2FpdCBjbGVhclNlc3Npb24oKVxyXG4gICAgXHJcbiAgICAvLyBQbyAyIHNla3VuZGFjaCBwcnpla2llcnVqIGRvIGxvZ293YW5pYVxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIHJvdXRlci5wdXNoKFwiL2xvZ2luP2Vycm9yPXNlc3Npb25fcmVzZXRcIilcclxuICAgIH0sIDIwMDApXHJcbiAgfSwgW2NsZWFyU2Vzc2lvbiwgcm91dGVyLCBwYXRobmFtZSwgcmV0cnlDb3VudF0pXHJcblxyXG4gIC8vIEZ1bmtjamEgaW5pY2phbGl6YWNqaSBhdXRvcnl6YWNqaSB6IHRpbWVvdXRlbVxyXG4gIGNvbnN0IGluaXRBdXRoV2l0aFRpbWVvdXQgPSB1c2VDYWxsYmFjayhhc3luYyAoKTogUHJvbWlzZTx2b2lkPiA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKClcclxuICAgICAgbGV0IGlzQ29tcGxldGVkID0gZmFsc2VcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGlmICghaXNDb21wbGV0ZWQpIHtcclxuICAgICAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydCgpXHJcbiAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiQXV0aGVudGljYXRpb24gdGltZW91dCAtIHNwcmF3ZMW6IHBvxYLEhWN6ZW5pZSBpbnRlcm5ldG93ZVwiKSlcclxuICAgICAgICB9XHJcbiAgICAgIH0sIEFVVEhfVElNRU9VVF9NUylcclxuXHJcbiAgICAgIGNvbnN0IHBlcmZvcm1BdXRoID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAvLyBKZcWbbGkgbWFteSBqdcW8IGRhbmUgdcW8eXRrb3duaWthIHcgc3RvcmUgeiBsb2NhbFN0b3JhZ2UsIHXFvHlqIGljaFxyXG4gICAgICAgICAgaWYgKHVzZXIgJiYgaXNBdXRoZW50aWNhdGVkKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKFwiVXNlciBkYXRhIGZvdW5kIGluIHBlcnNpc3RlZCBzdG9yZSwgdmVyaWZ5aW5nIHNlc3Npb25cIiwge1xyXG4gICAgICAgICAgICAgIGNvbXBvbmVudDogJ2VuaGFuY2VkLWF1dGgtcHJvdmlkZXInLFxyXG4gICAgICAgICAgICAgIHVzZXJJZDogdXNlci5pZCxcclxuICAgICAgICAgICAgICB1c2VyRW1haWw6IHVzZXIuZW1haWxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIFNwcmF3ZMW6IGN6eSBzZXNqYSB3IFN1cGFiYXNlIGplc3QgbmFkYWwgd2HFvG5hXHJcbiAgICAgICAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBhdXRoQXBpLmdldFNlc3Npb24oKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKHNlc3Npb24/LnVzZXIgJiYgc2Vzc2lvbi51c2VyLmlkID09PSB1c2VyLmlkKSB7XHJcbiAgICAgICAgICAgICAgbG9nZ2VyLnN1Y2Nlc3MoXCJQZXJzaXN0ZWQgc2Vzc2lvbiBpcyB2YWxpZFwiLCB7XHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQ6ICdlbmhhbmNlZC1hdXRoLXByb3ZpZGVyJyxcclxuICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci5pZFxyXG4gICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgLy8gU2VzamEgamVzdCB3YcW8bmEsIG5pZSBwb3RyemViYSBwb25vd25laiBhdXRvcnl6YWNqaVxyXG4gICAgICAgICAgICAgIGlmIChpc1B1YmxpY1JvdXRlKSB7XHJcbiAgICAgICAgICAgICAgICByb3V0ZXIucHVzaChcIi9cIilcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgaXNDb21wbGV0ZWQgPSB0cnVlXHJcbiAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZClcclxuICAgICAgICAgICAgICByZXNvbHZlKClcclxuICAgICAgICAgICAgICByZXR1cm5cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhcIlBlcnNpc3RlZCBzZXNzaW9uIGlzIGludmFsaWQsIGNsZWFyaW5nIGFuZCByZS1hdXRoZW50aWNhdGluZ1wiLCB7XHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQ6ICdlbmhhbmNlZC1hdXRoLXByb3ZpZGVyJyxcclxuICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci5pZFxyXG4gICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgY2xlYXJTdG9yZSgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgbG9nZ2VyLmluZm8oYEF1dGggaW5pdCBhdHRlbXB0ICR7cmV0cnlDb3VudCArIDF9LyR7TUFYX1JFVFJZX0FUVEVNUFRTfWAsIHtcclxuICAgICAgICAgICAgY29tcG9uZW50OiAnZW5oYW5jZWQtYXV0aC1wcm92aWRlcicsXHJcbiAgICAgICAgICAgIHBhdGhuYW1lLFxyXG4gICAgICAgICAgICByZXRyeUNvdW50LFxyXG4gICAgICAgICAgICBhY3Rpb246ICdhdXRoX2luaXRfYXR0ZW1wdCdcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIGlmIChhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT3BlcmF0aW9uIHdhcyBjYW5jZWxsZWRcIilcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgLy8gU3ByYXdkxbogc2VzasSZIHcgU3VwYWJhc2VcclxuICAgICAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBhdXRoQXBpLmdldFNlc3Npb24oKVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9wZXJhdGlvbiB3YXMgY2FuY2VsbGVkXCIpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKFwiU2Vzc2lvbiBmb3VuZCwgZmV0Y2hpbmcgdXNlciBwcm9maWxlXCIsIHsgXHJcbiAgICAgICAgICAgICAgY29tcG9uZW50OiAnZW5oYW5jZWQtYXV0aC1wcm92aWRlcicsXHJcbiAgICAgICAgICAgICAgcGF0aG5hbWUsXHJcbiAgICAgICAgICAgICAgdXNlcklkOiBzZXNzaW9uLnVzZXIuaWQgXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zdCB1c2VyUHJvZmlsZSA9IGF3YWl0IGF1dGhBcGkuZ2V0VXNlclByb2ZpbGUoc2Vzc2lvbi51c2VyLmlkKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xyXG4gICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9wZXJhdGlvbiB3YXMgY2FuY2VsbGVkXCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHNldFVzZXIodXNlclByb2ZpbGUpXHJcbiAgICAgICAgICAgIHNldEF1dGhlbnRpY2F0ZWQodHJ1ZSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxvZ2dlci5zdWNjZXNzKFwiQXV0aGVudGljYXRpb24gc3VjY2Vzc2Z1bFwiLCB7IFxyXG4gICAgICAgICAgICAgIGNvbXBvbmVudDogJ2VuaGFuY2VkLWF1dGgtcHJvdmlkZXInLFxyXG4gICAgICAgICAgICAgIHBhdGhuYW1lLFxyXG4gICAgICAgICAgICAgIHVzZXJQcm9maWxlOiB1c2VyUHJvZmlsZS5lbWFpbCBcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChpc1B1YmxpY1JvdXRlKSB7XHJcbiAgICAgICAgICAgICAgcm91dGVyLnB1c2goXCIvXCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKFwiTm8gc2Vzc2lvbiBmb3VuZFwiLCB7XHJcbiAgICAgICAgICAgICAgY29tcG9uZW50OiAnZW5oYW5jZWQtYXV0aC1wcm92aWRlcicsXHJcbiAgICAgICAgICAgICAgcGF0aG5hbWUsXHJcbiAgICAgICAgICAgICAgYWN0aW9uOiAnbm9fc2Vzc2lvbidcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHNldFVzZXIobnVsbClcclxuICAgICAgICAgICAgc2V0QXV0aGVudGljYXRlZChmYWxzZSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmICghaXNQdWJsaWNSb3V0ZSkge1xyXG4gICAgICAgICAgICAgIHJvdXRlci5wdXNoKFwiL2xvZ2luXCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgaXNDb21wbGV0ZWQgPSB0cnVlXHJcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKVxyXG4gICAgICAgICAgcmVzb2x2ZSgpXHJcbiAgICAgICAgICBcclxuICAgICAgICB9IGNhdGNoIChhdXRoRXJyb3I6IGFueSkge1xyXG4gICAgICAgICAgaXNDb21wbGV0ZWQgPSB0cnVlXHJcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBpZiAoYXV0aEVycm9yLm1lc3NhZ2UgPT09IFwiT3BlcmF0aW9uIHdhcyBjYW5jZWxsZWRcIikge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiT3BlcmFjamEgYW51bG93YW5hIHogcG93b2R1IHRpbWVvdXR1XCIpKVxyXG4gICAgICAgICAgfSBlbHNlIGlmIChhdXRoRXJyb3IubWVzc2FnZT8uaW5jbHVkZXMoXCJGYWlsZWQgdG8gZmV0Y2hcIikgfHwgYXV0aEVycm9yLm1lc3NhZ2U/LmluY2x1ZGVzKFwiZmV0Y2hcIikpIHtcclxuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIkLFgsSFZCBwb8WCxIVjemVuaWEgLSBzcHJhd2TFuiBpbnRlcm5ldFwiKSlcclxuICAgICAgICAgIH0gZWxzZSBpZiAoYXV0aEVycm9yLm1lc3NhZ2U/LmluY2x1ZGVzKFwidGltZW91dFwiKSkge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiVGltZW91dCBwb8WCxIVjemVuaWEgeiBzZXJ3ZXJlbVwiKSlcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlamVjdChhdXRoRXJyb3IpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBwZXJmb3JtQXV0aCgpXHJcbiAgICB9KVxyXG4gIH0sIFtyZXRyeUNvdW50LCBzZXRVc2VyLCBzZXRBdXRoZW50aWNhdGVkLCBpc1B1YmxpY1JvdXRlLCByb3V0ZXIsIHVzZXIsIGlzQXV0aGVudGljYXRlZCwgY2xlYXJTdG9yZV0pXHJcblxyXG4gIC8vIEfFgsOzd25hIGZ1bmtjamEgaW5pY2phbGl6YWNqaVxyXG4gIGNvbnN0IGluaXRBdXRoID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xyXG4gICAgLy8gWmFwb2JpZWdhaiByw7N3bm9jemVzbnltIGluaWNqYWxpemFjam9tXHJcbiAgICBpZiAoaXNJbml0aWFsaXppbmdSZWYuY3VycmVudCkge1xyXG4gICAgICBsb2dnZXIuaW5mbyhcIkF1dGggaW5pdGlhbGl6YXRpb24gYWxyZWFkeSBpbiBwcm9ncmVzcywgc2tpcHBpbmdcIiwge1xyXG4gICAgICAgIGNvbXBvbmVudDogJ2VuaGFuY2VkLWF1dGgtcHJvdmlkZXInXHJcbiAgICAgIH0pXHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpc0luaXRpYWxpemluZ1JlZi5jdXJyZW50ID0gdHJ1ZVxyXG4gICAgXHJcbiAgICAvLyBXeWN6ecWbxIcgcG9wcnplZG5pZSB0aW1lb3V0eVxyXG4gICAgaWYgKGluaXRUaW1lb3V0UmVmLmN1cnJlbnQpIHtcclxuICAgICAgY2xlYXJUaW1lb3V0KGluaXRUaW1lb3V0UmVmLmN1cnJlbnQpXHJcbiAgICAgIGluaXRUaW1lb3V0UmVmLmN1cnJlbnQgPSBudWxsXHJcbiAgICB9XHJcbiAgICBpZiAoaGFuZ0RldGVjdGlvblJlZi5jdXJyZW50KSB7XHJcbiAgICAgIGNsZWFyVGltZW91dChoYW5nRGV0ZWN0aW9uUmVmLmN1cnJlbnQpXHJcbiAgICAgIGhhbmdEZXRlY3Rpb25SZWYuY3VycmVudCA9IG51bGxcclxuICAgIH1cclxuXHJcbiAgICBzZXRMb2FkaW5nKHRydWUpXHJcbiAgICBzZXRFcnJvcihudWxsKVxyXG4gICAgXHJcbiAgICAvLyBUaW1lb3V0IG5hIHd5a3J5Y2llIHphd2llc3plbmlhXHJcbiAgICBoYW5nRGV0ZWN0aW9uUmVmLmN1cnJlbnQgPSBzZXRUaW1lb3V0KGhhbmRsZVNlc3Npb25IYW5nLCBMT0FESU5HX0hBTkdfVElNRU9VVF9NUylcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBpbml0QXV0aFdpdGhUaW1lb3V0KClcclxuICAgICAgc2V0UmV0cnlDb3VudCgwKVxyXG4gICAgICBzZXRJc0luaXRpYWxpemVkKHRydWUpXHJcbiAgICAgIFxyXG4gICAgfSBjYXRjaCAoYXV0aEVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcihcIkF1dGhlbnRpY2F0aW9uIGZhaWxlZFwiLCBhdXRoRXJyb3IsIHtcclxuICAgICAgICBjb21wb25lbnQ6ICdlbmhhbmNlZC1hdXRoLXByb3ZpZGVyJyxcclxuICAgICAgICBwYXRobmFtZSxcclxuICAgICAgICByZXRyeUNvdW50LFxyXG4gICAgICAgIGFjdGlvbjogJ2F1dGhfZmFpbGVkJ1xyXG4gICAgICB9KVxyXG4gICAgICBcclxuICAgICAgaWYgKHJldHJ5Q291bnQgPCBNQVhfUkVUUllfQVRURU1QVFMgLSAxKSB7XHJcbiAgICAgICAgY29uc3QgZGVsYXkgPSBNYXRoLnBvdygyLCByZXRyeUNvdW50KSAqIDEwMDBcclxuICAgICAgICBsb2dnZXIuaW5mbyhgUmV0cnlpbmcgaW4gJHtkZWxheX1tcy4uLmAsIHtcclxuICAgICAgICAgIGNvbXBvbmVudDogJ2VuaGFuY2VkLWF1dGgtcHJvdmlkZXInLFxyXG4gICAgICAgICAgcGF0aG5hbWUsXHJcbiAgICAgICAgICByZXRyeUNvdW50LFxyXG4gICAgICAgICAgZGVsYXksXHJcbiAgICAgICAgICBhY3Rpb246ICdyZXRyeV9hdXRoJ1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICBzZXRSZXRyeUNvdW50KHByZXYgPT4gcHJldiArIDEpXHJcbiAgICAgICAgfSwgZGVsYXkpXHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbG9nZ2VyLmluZm8oXCJNYXggcmV0cnkgYXR0ZW1wdHMgcmVhY2hlZCwgY2xlYXJpbmcgc2Vzc2lvblwiLCB7XHJcbiAgICAgICAgICBjb21wb25lbnQ6ICdlbmhhbmNlZC1hdXRoLXByb3ZpZGVyJyxcclxuICAgICAgICAgIHBhdGhuYW1lLFxyXG4gICAgICAgICAgcmV0cnlDb3VudCxcclxuICAgICAgICAgIGFjdGlvbjogJ21heF9yZXRyaWVzX3JlYWNoZWQnXHJcbiAgICAgICAgfSlcclxuICAgICAgICBhd2FpdCBjbGVhclNlc3Npb24oKVxyXG4gICAgICAgIFxyXG4gICAgICAgIHNldEVycm9yKFwiQsWCxIVkIGF1dG9yeXphY2ppLiBTZXNqYSB6b3N0YcWCYSB6cmVzZXRvd2FuYS5cIilcclxuICAgICAgICBcclxuICAgICAgICBpZiAoIWlzUHVibGljUm91dGUpIHtcclxuICAgICAgICAgIHJvdXRlci5wdXNoKFwiL2xvZ2luP2Vycm9yPWF1dGhfZmFpbGVkXCIpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICBpZiAoaGFuZ0RldGVjdGlvblJlZi5jdXJyZW50KSB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KGhhbmdEZXRlY3Rpb25SZWYuY3VycmVudClcclxuICAgICAgICBoYW5nRGV0ZWN0aW9uUmVmLmN1cnJlbnQgPSBudWxsXHJcbiAgICAgIH1cclxuICAgICAgc2V0TG9hZGluZyhmYWxzZSlcclxuICAgICAgaXNJbml0aWFsaXppbmdSZWYuY3VycmVudCA9IGZhbHNlXHJcbiAgICB9XHJcbiAgfSwgW3JldHJ5Q291bnQsIGluaXRBdXRoV2l0aFRpbWVvdXQsIGhhbmRsZVNlc3Npb25IYW5nLCBjbGVhclNlc3Npb24sIGlzUHVibGljUm91dGUsIHJvdXRlcl0pXHJcblxyXG4gIC8vIEZ1bmtjamEgcmV0cnkgZGxhIFVJXHJcbiAgY29uc3QgcmV0cnlBdXRoID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0UmV0cnlDb3VudCgwKVxyXG4gICAgc2V0U2Vzc2lvbkhhbmdlZChmYWxzZSlcclxuICAgIHNldElzSW5pdGlhbGl6ZWQoZmFsc2UpXHJcbiAgICBpbml0QXV0aCgpXHJcbiAgfSwgW2luaXRBdXRoXSlcclxuXHJcbiAgLy8gR8WCw7N3bnkgdXNlRWZmZWN0IC0gdXJ1Y2hhbWlhIHNpxJkgVFlMS08gcmF6IHByenkgbW91bnRcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCFpc0luaXRpYWxpemVkKSB7XHJcbiAgICAgIGluaXRBdXRoKClcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBpZiAoaW5pdFRpbWVvdXRSZWYuY3VycmVudCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dChpbml0VGltZW91dFJlZi5jdXJyZW50KVxyXG4gICAgICAgIGluaXRUaW1lb3V0UmVmLmN1cnJlbnQgPSBudWxsXHJcbiAgICAgIH1cclxuICAgICAgaWYgKGhhbmdEZXRlY3Rpb25SZWYuY3VycmVudCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dChoYW5nRGV0ZWN0aW9uUmVmLmN1cnJlbnQpXHJcbiAgICAgICAgaGFuZ0RldGVjdGlvblJlZi5jdXJyZW50ID0gbnVsbFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSwgW10pIC8vIEJSQUsgZGVwZW5kZW5jaWVzIC0gdHlsa28gbW91bnQvdW5tb3VudCFcclxuXHJcbiAgLy8gT3NvYm55IHVzZUVmZmVjdCBkbGEgbmFzxYJ1Y2hpd2FuaWEgem1pYW4gYXV0b3J5emFjamlcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgLy8gTmFzxYJ1Y2h1aiB0eWxrbyBqZcWbbGkganXFvCB6YWluaWNqYWxpem93YW5lXHJcbiAgICBpZiAoIWlzSW5pdGlhbGl6ZWQpIHJldHVyblxyXG5cclxuICAgIGNvbnN0IHsgZGF0YTogeyBzdWJzY3JpcHRpb24gfSB9ID0gYXV0aEFwaS5vbkF1dGhTdGF0ZUNoYW5nZShcclxuICAgICAgYXN5bmMgKGV2ZW50LCBzZXNzaW9uKSA9PiB7XHJcbiAgICAgICAgbG9nZ2VyLmluZm8oYEF1dGggc3RhdGUgY2hhbmdlZDogJHtldmVudH1gLCB7XHJcbiAgICAgICAgICBjb21wb25lbnQ6ICdlbmhhbmNlZC1hdXRoLXByb3ZpZGVyJyxcclxuICAgICAgICAgIGV2ZW50LFxyXG4gICAgICAgICAgYWN0aW9uOiAnYXV0aF9zdGF0ZV9jaGFuZ2UnXHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICAgICBpZiAoZXZlbnQgPT09IFwiU0lHTkVEX0lOXCIgJiYgc2Vzc2lvbj8udXNlcikge1xyXG4gICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgdXNlclByb2ZpbGUgPSBhd2FpdCBhdXRoQXBpLmdldFVzZXJQcm9maWxlKHNlc3Npb24udXNlci5pZClcclxuICAgICAgICAgICAgc2V0VXNlcih1c2VyUHJvZmlsZSlcclxuICAgICAgICAgICAgc2V0QXV0aGVudGljYXRlZCh0cnVlKVxyXG4gICAgICAgICAgICBpZiAoaXNQdWJsaWNSb3V0ZSkge1xyXG4gICAgICAgICAgICAgIHJvdXRlci5wdXNoKFwiL1wiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoXCJFcnJvciBoYW5kbGluZyBTSUdORURfSU4gZXZlbnRcIiwgZXJyb3IsIHtcclxuICAgICAgICAgICAgICBjb21wb25lbnQ6ICdlbmhhbmNlZC1hdXRoLXByb3ZpZGVyJyxcclxuICAgICAgICAgICAgICBldmVudCxcclxuICAgICAgICAgICAgICB1c2VySWQ6IHNlc3Npb24/LnVzZXI/LmlkXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChldmVudCA9PT0gXCJTSUdORURfT1VUXCIpIHtcclxuICAgICAgICAgIGNsZWFyU3RvcmUoKVxyXG4gICAgICAgICAgaWYgKCFpc1B1YmxpY1JvdXRlKSB7XHJcbiAgICAgICAgICAgIHJvdXRlci5wdXNoKFwiL2xvZ2luXCIpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICApXHJcblxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgc3Vic2NyaXB0aW9uPy51bnN1YnNjcmliZSgpXHJcbiAgICB9XHJcbiAgfSwgW2lzSW5pdGlhbGl6ZWQsIHNldFVzZXIsIHNldEF1dGhlbnRpY2F0ZWQsIGNsZWFyU3RvcmUsIHJvdXRlciwgaXNQdWJsaWNSb3V0ZV0pXHJcblxyXG4gIC8vIFJlbmRlcm93YW5pZSBzdGFuw7N3IGLFgsSZZMOzdyBpIMWCYWRvd2FuaWFcclxuICBpZiAoc2Vzc2lvbkhhbmdlZCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtaW4taC1zY3JlZW4gYmctc2xhdGUtOTAwIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHAtNFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4LXctbWQgdy1mdWxsIHRleHQtY2VudGVyXCI+XHJcbiAgICAgICAgICA8QWxlcnRDaXJjbGUgY2xhc3NOYW1lPVwiaC0xMiB3LTEyIHRleHQtb3JhbmdlLTQwMCBteC1hdXRvIG1iLTRcIiAvPlxyXG4gICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1zZW1pYm9sZCB0ZXh0LXdoaXRlIG1iLTJcIj5cclxuICAgICAgICAgICAgV3lrcnl0byB6YXdpZXN6ZW5pZSBzZXNqaVxyXG4gICAgICAgICAgPC9oMj5cclxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc2xhdGUtNDAwIG1iLTZcIj5cclxuICAgICAgICAgICAgU2VzamEgem9zdGHFgmEgYXV0b21hdHljem5pZSB6cmVzZXRvd2FuYS4gWmEgY2h3aWzEmSBuYXN0xIVwaSBwcnpla2llcm93YW5pZSBkbyBzdHJvbnkgbG9nb3dhbmlhLlxyXG4gICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGgtNiB3LTYgYm9yZGVyLWItMiBib3JkZXItY3lhbi00MDAgbXgtYXV0b1wiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcblxyXG4gIGlmIChsb2FkaW5nKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1zbGF0ZS05MDAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcC00XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciBtYXgtdy1tZCB3LWZ1bGxcIj5cclxuICAgICAgICAgIDxMb2FkZXIyIGNsYXNzTmFtZT1cImgtOCB3LTggYW5pbWF0ZS1zcGluIHRleHQtY3lhbi00MDAgbXgtYXV0byBtYi00XCIgLz5cclxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc2xhdGUtNDAwIG1iLTJcIj5TcHJhd2R6YW5pZSBhdXRvcnl6YWNqaS4uLjwvcD5cclxuICAgICAgICAgIFxyXG4gICAgICAgICAge3JldHJ5Q291bnQgPiAwICYmIChcclxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LW9yYW5nZS00MDBcIj5cclxuICAgICAgICAgICAgICBQcsOzYmEge3JldHJ5Q291bnQgKyAxfS97TUFYX1JFVFJZX0FUVEVNUFRTfVxyXG4gICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICApfVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICB7ZXJyb3IgJiYgKFxyXG4gICAgICAgICAgICA8QWxlcnQgY2xhc3NOYW1lPVwibXQtNCBiZy1yZWQtOTAwLzIwIGJvcmRlci1yZWQtNTAwLzMwXCI+XHJcbiAgICAgICAgICAgICAgPEFsZXJ0Q2lyY2xlIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPlxyXG4gICAgICAgICAgICAgIDxBbGVydERlc2NyaXB0aW9uIGNsYXNzTmFtZT1cInRleHQtcmVkLTQwMFwiPlxyXG4gICAgICAgICAgICAgICAge2Vycm9yfVxyXG4gICAgICAgICAgICAgIDwvQWxlcnREZXNjcmlwdGlvbj5cclxuICAgICAgICAgICAgPC9BbGVydD5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgaWYgKGVycm9yICYmICFsb2FkaW5nKSB7XHJcbiAgICBjb25zdCBpc1RpbWVvdXRFcnJvciA9IGVycm9yLmluY2x1ZGVzKFwidGltZW91dFwiKSB8fCBlcnJvci5pbmNsdWRlcyhcIlRpbWVvdXRcIikgfHwgZXJyb3IuaW5jbHVkZXMoXCJhbnVsb3dhbmFcIilcclxuICAgIGNvbnN0IGlzQ29ubmVjdGlvbkVycm9yID0gZXJyb3IuaW5jbHVkZXMoXCJwb8WCxIVjemVuaWFcIikgfHwgZXJyb3IuaW5jbHVkZXMoXCJpbnRlcm5ldFwiKVxyXG4gICAgXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1zbGF0ZS05MDAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcC00XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy1tZCB3LWZ1bGwgdGV4dC1jZW50ZXJcIj5cclxuICAgICAgICAgIDxBbGVydENpcmNsZSBjbGFzc05hbWU9XCJoLTEyIHctMTIgdGV4dC1yZWQtNDAwIG14LWF1dG8gbWItNFwiIC8+XHJcbiAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC14bCBmb250LXNlbWlib2xkIHRleHQtd2hpdGUgbWItMlwiPlxyXG4gICAgICAgICAgICB7aXNUaW1lb3V0RXJyb3IgPyBcIlRpbWVvdXQgYXV0b3J5emFjamlcIiA6IFwiQsWCxIVkIGF1dG9yeXphY2ppXCJ9XHJcbiAgICAgICAgICA8L2gyPlxyXG4gICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbGF0ZS00MDAgbWItNFwiPntlcnJvcn08L3A+XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHtpc1RpbWVvdXRFcnJvciAmJiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctb3JhbmdlLTkwMC8yMCBib3JkZXIgYm9yZGVyLW9yYW5nZS01MDAvMzAgcm91bmRlZC1sZyBwLTQgbWItNiB0ZXh0LWxlZnRcIj5cclxuICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC1vcmFuZ2UtNDAwIGZvbnQtbWVkaXVtIG1iLTJcIj7wn5KhIENvIG1vxbxlc3ogenJvYmnEhzo8L2gzPlxyXG4gICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJ0ZXh0LW9yYW5nZS0zMDAgdGV4dC1zbSBzcGFjZS15LTFcIj5cclxuICAgICAgICAgICAgICAgIDxsaT7igKIgU3ByYXdkxbogcG/FgsSFY3plbmllIGludGVybmV0b3dlPC9saT5cclxuICAgICAgICAgICAgICAgIDxsaT7igKIgU3Byw7NidWogcG9ub3duaWUgKGF1dG9tYXR5Y3puaWUpPC9saT5cclxuICAgICAgICAgICAgICAgIDxsaT7igKIgUmVzdGFydCBwcnplZ2zEhWRhcmtpIG1vxbxlIHBvbcOzYzwvbGk+XHJcbiAgICAgICAgICAgICAgICA8bGk+4oCiIFd5Y3p5xZvEhyBjYWNoZSBwcnplZ2zEhWRhcmtpPC9saT5cclxuICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIDxCdXR0b24gXHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e3JldHJ5QXV0aH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctY3lhbi02MDAgaG92ZXI6YmctY3lhbi03MDAgdy1mdWxsIG1iLTRcIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8UmVmcmVzaEN3IGNsYXNzTmFtZT1cImgtNCB3LTQgbXItMlwiIC8+XHJcbiAgICAgICAgICAgIFNwcsOzYnVqIHBvbm93bmllXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgPEJ1dHRvbiBcclxuICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIiBcclxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gcm91dGVyLnB1c2goXCIvbG9naW5cIil9XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImJvcmRlci1zbGF0ZS02MDAgdGV4dC1zbGF0ZS0zMDAgaG92ZXI6Ymctc2xhdGUtODAwIHctZnVsbFwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIFByemVqZMW6IGRvIGxvZ293YW5pYVxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtNCB0ZXh0LXhzIHRleHQtc2xhdGUtNTAwXCI+XHJcbiAgICAgICAgICAgIFRpbWVvdXQ6IHtBVVRIX1RJTUVPVVRfTVMgLyAxMDAwfXMgfCBXZXJzamEgeiBwZXJzaXN0ZW5jZVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxBdXRoQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBsb2FkaW5nLCBlcnJvciwgcmV0cnlBdXRoIH19PlxyXG4gICAgICB7Y2hpbGRyZW59XHJcbiAgICA8L0F1dGhDb250ZXh0LlByb3ZpZGVyPlxyXG4gIClcclxufSAiXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwidXNlUmVmIiwidXNlUm91dGVyIiwidXNlUGF0aG5hbWUiLCJhdXRoQXBpIiwidXNlQXV0aCIsImxvZ2dlciIsIkxvYWRlcjIiLCJBbGVydENpcmNsZSIsIlJlZnJlc2hDdyIsIkJ1dHRvbiIsIkFsZXJ0IiwiQWxlcnREZXNjcmlwdGlvbiIsIkF1dGhDb250ZXh0IiwibG9hZGluZyIsImVycm9yIiwicmV0cnlBdXRoIiwidXNlQXV0aENvbnRleHQiLCJjb250ZXh0IiwiRXJyb3IiLCJBVVRIX1RJTUVPVVRfTVMiLCJNQVhfUkVUUllfQVRURU1QVFMiLCJMT0FESU5HX0hBTkdfVElNRU9VVF9NUyIsIkVuaGFuY2VkQXV0aFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJzZXRMb2FkaW5nIiwic2V0RXJyb3IiLCJyZXRyeUNvdW50Iiwic2V0UmV0cnlDb3VudCIsInNlc3Npb25IYW5nZWQiLCJzZXRTZXNzaW9uSGFuZ2VkIiwiaXNJbml0aWFsaXplZCIsInNldElzSW5pdGlhbGl6ZWQiLCJyb3V0ZXIiLCJwYXRobmFtZSIsInVzZXIiLCJpc0F1dGhlbnRpY2F0ZWQiLCJzZXRVc2VyIiwic2V0QXV0aGVudGljYXRlZCIsImNsZWFyU3RvcmUiLCJpbml0VGltZW91dFJlZiIsImhhbmdEZXRlY3Rpb25SZWYiLCJpc0luaXRpYWxpemluZ1JlZiIsInB1YmxpY1JvdXRlcyIsImlzUHVibGljUm91dGUiLCJpbmNsdWRlcyIsImNsZWFyU2Vzc2lvbiIsImNvbXBvbmVudCIsInNpZ25PdXQiLCJzdWNjZXNzIiwiY2xlYXJFcnJvciIsImhhbmRsZVNlc3Npb25IYW5nIiwiYWN0aW9uIiwic2V0VGltZW91dCIsInB1c2giLCJpbml0QXV0aFdpdGhUaW1lb3V0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJhYm9ydENvbnRyb2xsZXIiLCJBYm9ydENvbnRyb2xsZXIiLCJpc0NvbXBsZXRlZCIsInRpbWVvdXRJZCIsImFib3J0IiwicGVyZm9ybUF1dGgiLCJpbmZvIiwidXNlcklkIiwiaWQiLCJ1c2VyRW1haWwiLCJlbWFpbCIsInNlc3Npb24iLCJnZXRTZXNzaW9uIiwiY2xlYXJUaW1lb3V0Iiwic2lnbmFsIiwiYWJvcnRlZCIsInVzZXJQcm9maWxlIiwiZ2V0VXNlclByb2ZpbGUiLCJhdXRoRXJyb3IiLCJtZXNzYWdlIiwiaW5pdEF1dGgiLCJjdXJyZW50IiwiZGVsYXkiLCJNYXRoIiwicG93IiwicHJldiIsImRhdGEiLCJzdWJzY3JpcHRpb24iLCJvbkF1dGhTdGF0ZUNoYW5nZSIsImV2ZW50IiwidW5zdWJzY3JpYmUiLCJkaXYiLCJjbGFzc05hbWUiLCJoMiIsInAiLCJpc1RpbWVvdXRFcnJvciIsImlzQ29ubmVjdGlvbkVycm9yIiwiaDMiLCJ1bCIsImxpIiwib25DbGljayIsInZhcmlhbnQiLCJQcm92aWRlciIsInZhbHVlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/auth/enhanced-auth-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/providers/query-provider.tsx":
/*!*************************************************!*\
  !*** ./components/providers/query-provider.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryProvider: () => (/* binding */ QueryProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _lib_query_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/query-client */ \"(app-pages-browser)/./lib/query-client.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ QueryProvider auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction QueryProvider(param) {\n    let { children } = param;\n    _s();\n    // Create query client instance on client side only\n    const [client] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        \"QueryProvider.useState\": ()=>_lib_query_client__WEBPACK_IMPORTED_MODULE_1__.queryClient\n    }[\"QueryProvider.useState\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.QueryClientProvider, {\n        client: client,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\providers\\\\query-provider.tsx\",\n        lineNumber: 16,\n        columnNumber: 5\n    }, this);\n}\n_s(QueryProvider, \"BFn3f6TJdLcHEpg4S1beja/AD4o=\");\n_c = QueryProvider;\nvar _c;\n$RefreshReg$(_c, \"QueryProvider\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvcHJvdmlkZXJzL3F1ZXJ5LXByb3ZpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUUyRDtBQUNYO0FBQ2hCO0FBTXpCLFNBQVNHLGNBQWMsS0FBZ0M7UUFBaEMsRUFBRUMsUUFBUSxFQUFzQixHQUFoQzs7SUFDNUIsbURBQW1EO0lBQ25ELE1BQU0sQ0FBQ0MsT0FBTyxHQUFHSCwrQ0FBUUE7a0NBQUMsSUFBTUQsMERBQVdBOztJQUUzQyxxQkFDRSw4REFBQ0Qsc0VBQW1CQTtRQUFDSyxRQUFRQTtrQkFDMUJEOzs7Ozs7QUFJUDtHQVZnQkQ7S0FBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxjb21wb25lbnRzXFxwcm92aWRlcnNcXHF1ZXJ5LXByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxyXG5cclxuaW1wb3J0IHsgUXVlcnlDbGllbnRQcm92aWRlciB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSdcclxuaW1wb3J0IHsgcXVlcnlDbGllbnQgfSBmcm9tICdAL2xpYi9xdWVyeS1jbGllbnQnXHJcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXHJcblxyXG5pbnRlcmZhY2UgUXVlcnlQcm92aWRlclByb3BzIHtcclxuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBRdWVyeVByb3ZpZGVyKHsgY2hpbGRyZW4gfTogUXVlcnlQcm92aWRlclByb3BzKSB7XHJcbiAgLy8gQ3JlYXRlIHF1ZXJ5IGNsaWVudCBpbnN0YW5jZSBvbiBjbGllbnQgc2lkZSBvbmx5XHJcbiAgY29uc3QgW2NsaWVudF0gPSB1c2VTdGF0ZSgoKSA9PiBxdWVyeUNsaWVudClcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxRdWVyeUNsaWVudFByb3ZpZGVyIGNsaWVudD17Y2xpZW50fT5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgICB7LyogTm90ZTogUmVhY3QgUXVlcnkgRGV2dG9vbHMgY2FuIGJlIGFkZGVkIGxhdGVyIGFzIGEgc2VwYXJhdGUgcGFja2FnZSAqL31cclxuICAgIDwvUXVlcnlDbGllbnRQcm92aWRlcj5cclxuICApXHJcbn0gIl0sIm5hbWVzIjpbIlF1ZXJ5Q2xpZW50UHJvdmlkZXIiLCJxdWVyeUNsaWVudCIsInVzZVN0YXRlIiwiUXVlcnlQcm92aWRlciIsImNoaWxkcmVuIiwiY2xpZW50Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/providers/query-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/theme-provider.tsx":
/*!***************************************!*\
  !*** ./components/theme-provider.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider auto */ \n\n\nfunction ThemeProvider(param) {\n    let { children, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n        ...props,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\theme-provider.tsx\",\n        lineNumber: 10,\n        columnNumber: 10\n    }, this);\n}\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdGhlbWUtcHJvdmlkZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUU4QjtBQUlWO0FBRWIsU0FBU0MsY0FBYyxLQUEwQztRQUExQyxFQUFFRSxRQUFRLEVBQUUsR0FBR0MsT0FBMkIsR0FBMUM7SUFDNUIscUJBQU8sOERBQUNGLHNEQUFrQkE7UUFBRSxHQUFHRSxLQUFLO2tCQUFHRDs7Ozs7O0FBQ3pDO0tBRmdCRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXGNvbXBvbmVudHNcXHRoZW1lLXByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQge1xyXG4gIFRoZW1lUHJvdmlkZXIgYXMgTmV4dFRoZW1lc1Byb3ZpZGVyLFxyXG4gIHR5cGUgVGhlbWVQcm92aWRlclByb3BzLFxyXG59IGZyb20gJ25leHQtdGhlbWVzJ1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFRoZW1lUHJvdmlkZXIoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfTogVGhlbWVQcm92aWRlclByb3BzKSB7XHJcbiAgcmV0dXJuIDxOZXh0VGhlbWVzUHJvdmlkZXIgey4uLnByb3BzfT57Y2hpbGRyZW59PC9OZXh0VGhlbWVzUHJvdmlkZXI+XHJcbn1cclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiVGhlbWVQcm92aWRlciIsIk5leHRUaGVtZXNQcm92aWRlciIsImNoaWxkcmVuIiwicHJvcHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/theme-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/alert.tsx":
/*!*********************************!*\
  !*** ./components/ui/alert.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alert: () => (/* binding */ Alert),\n/* harmony export */   AlertDescription: () => (/* binding */ AlertDescription),\n/* harmony export */   AlertTitle: () => (/* binding */ AlertTitle)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n\n\n\n\nconst alertVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\", {\n    variants: {\n        variant: {\n            default: \"bg-background text-foreground\",\n            destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nconst Alert = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, variant, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        role: \"alert\",\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(alertVariants({\n            variant\n        }), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\alert.tsx\",\n        lineNumber: 26,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = Alert;\nAlert.displayName = \"Alert\";\nconst AlertTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c2 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"mb-1 font-medium leading-none tracking-tight\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\alert.tsx\",\n        lineNumber: 39,\n        columnNumber: 3\n    }, undefined);\n});\n_c3 = AlertTitle;\nAlertTitle.displayName = \"AlertTitle\";\nconst AlertDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c4 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm [&_p]:leading-relaxed\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\alert.tsx\",\n        lineNumber: 51,\n        columnNumber: 3\n    }, undefined);\n});\n_c5 = AlertDescription;\nAlertDescription.displayName = \"AlertDescription\";\n\nvar _c, _c1, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c1, \"Alert\");\n$RefreshReg$(_c2, \"AlertTitle$React.forwardRef\");\n$RefreshReg$(_c3, \"AlertTitle\");\n$RefreshReg$(_c4, \"AlertDescription$React.forwardRef\");\n$RefreshReg$(_c5, \"AlertDescription\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvYWxlcnQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNtQztBQUVqQztBQUVoQyxNQUFNRyxnQkFBZ0JGLDZEQUFHQSxDQUN2Qiw2SkFDQTtJQUNFRyxVQUFVO1FBQ1JDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxhQUNFO1FBQ0o7SUFDRjtJQUNBQyxpQkFBaUI7UUFDZkgsU0FBUztJQUNYO0FBQ0Y7QUFHRixNQUFNSSxzQkFBUVQsNkNBQWdCLE1BRzVCLFFBQW1DVztRQUFsQyxFQUFFQyxTQUFTLEVBQUVQLE9BQU8sRUFBRSxHQUFHUSxPQUFPO3lCQUNqQyw4REFBQ0M7UUFDQ0gsS0FBS0E7UUFDTEksTUFBSztRQUNMSCxXQUFXViw4Q0FBRUEsQ0FBQ0MsY0FBYztZQUFFRTtRQUFRLElBQUlPO1FBQ3pDLEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JKLE1BQU1PLFdBQVcsR0FBRztBQUVwQixNQUFNQywyQkFBYWpCLDZDQUFnQixPQUdqQyxRQUEwQlc7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87eUJBQ3hCLDhEQUFDSztRQUNDUCxLQUFLQTtRQUNMQyxXQUFXViw4Q0FBRUEsQ0FBQyxnREFBZ0RVO1FBQzdELEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JJLFdBQVdELFdBQVcsR0FBRztBQUV6QixNQUFNRyxpQ0FBbUJuQiw2Q0FBZ0IsT0FHdkMsUUFBMEJXO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ0M7UUFDQ0gsS0FBS0E7UUFDTEMsV0FBV1YsOENBQUVBLENBQUMsaUNBQWlDVTtRQUM5QyxHQUFHQyxLQUFLOzs7Ozs7OztBQUdiTSxpQkFBaUJILFdBQVcsR0FBRztBQUVlIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcY29tcG9uZW50c1xcdWlcXGFsZXJ0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG5pbXBvcnQgeyBjdmEsIHR5cGUgVmFyaWFudFByb3BzIH0gZnJvbSBcImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eVwiXHJcblxyXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXHJcblxyXG5jb25zdCBhbGVydFZhcmlhbnRzID0gY3ZhKFxyXG4gIFwicmVsYXRpdmUgdy1mdWxsIHJvdW5kZWQtbGcgYm9yZGVyIHAtNCBbJj5zdmd+Kl06cGwtNyBbJj5zdmcrZGl2XTp0cmFuc2xhdGUteS1bLTNweF0gWyY+c3ZnXTphYnNvbHV0ZSBbJj5zdmddOmxlZnQtNCBbJj5zdmddOnRvcC00IFsmPnN2Z106dGV4dC1mb3JlZ3JvdW5kXCIsXHJcbiAge1xyXG4gICAgdmFyaWFudHM6IHtcclxuICAgICAgdmFyaWFudDoge1xyXG4gICAgICAgIGRlZmF1bHQ6IFwiYmctYmFja2dyb3VuZCB0ZXh0LWZvcmVncm91bmRcIixcclxuICAgICAgICBkZXN0cnVjdGl2ZTpcclxuICAgICAgICAgIFwiYm9yZGVyLWRlc3RydWN0aXZlLzUwIHRleHQtZGVzdHJ1Y3RpdmUgZGFyazpib3JkZXItZGVzdHJ1Y3RpdmUgWyY+c3ZnXTp0ZXh0LWRlc3RydWN0aXZlXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgZGVmYXVsdFZhcmlhbnRzOiB7XHJcbiAgICAgIHZhcmlhbnQ6IFwiZGVmYXVsdFwiLFxyXG4gICAgfSxcclxuICB9XHJcbilcclxuXHJcbmNvbnN0IEFsZXJ0ID0gUmVhY3QuZm9yd2FyZFJlZjxcclxuICBIVE1MRGl2RWxlbWVudCxcclxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4gJiBWYXJpYW50UHJvcHM8dHlwZW9mIGFsZXJ0VmFyaWFudHM+XHJcbj4oKHsgY2xhc3NOYW1lLCB2YXJpYW50LCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8ZGl2XHJcbiAgICByZWY9e3JlZn1cclxuICAgIHJvbGU9XCJhbGVydFwiXHJcbiAgICBjbGFzc05hbWU9e2NuKGFsZXJ0VmFyaWFudHMoeyB2YXJpYW50IH0pLCBjbGFzc05hbWUpfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkFsZXJ0LmRpc3BsYXlOYW1lID0gXCJBbGVydFwiXHJcblxyXG5jb25zdCBBbGVydFRpdGxlID0gUmVhY3QuZm9yd2FyZFJlZjxcclxuICBIVE1MUGFyYWdyYXBoRWxlbWVudCxcclxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MSGVhZGluZ0VsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8aDVcclxuICAgIHJlZj17cmVmfVxyXG4gICAgY2xhc3NOYW1lPXtjbihcIm1iLTEgZm9udC1tZWRpdW0gbGVhZGluZy1ub25lIHRyYWNraW5nLXRpZ2h0XCIsIGNsYXNzTmFtZSl9XHJcbiAgICB7Li4ucHJvcHN9XHJcbiAgLz5cclxuKSlcclxuQWxlcnRUaXRsZS5kaXNwbGF5TmFtZSA9IFwiQWxlcnRUaXRsZVwiXHJcblxyXG5jb25zdCBBbGVydERlc2NyaXB0aW9uID0gUmVhY3QuZm9yd2FyZFJlZjxcclxuICBIVE1MUGFyYWdyYXBoRWxlbWVudCxcclxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MUGFyYWdyYXBoRWxlbWVudD5cclxuPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxyXG4gIDxkaXZcclxuICAgIHJlZj17cmVmfVxyXG4gICAgY2xhc3NOYW1lPXtjbihcInRleHQtc20gWyZfcF06bGVhZGluZy1yZWxheGVkXCIsIGNsYXNzTmFtZSl9XHJcbiAgICB7Li4ucHJvcHN9XHJcbiAgLz5cclxuKSlcclxuQWxlcnREZXNjcmlwdGlvbi5kaXNwbGF5TmFtZSA9IFwiQWxlcnREZXNjcmlwdGlvblwiXHJcblxyXG5leHBvcnQgeyBBbGVydCwgQWxlcnRUaXRsZSwgQWxlcnREZXNjcmlwdGlvbiB9XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsImN2YSIsImNuIiwiYWxlcnRWYXJpYW50cyIsInZhcmlhbnRzIiwidmFyaWFudCIsImRlZmF1bHQiLCJkZXN0cnVjdGl2ZSIsImRlZmF1bHRWYXJpYW50cyIsIkFsZXJ0IiwiZm9yd2FyZFJlZiIsInJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwiZGl2Iiwicm9sZSIsImRpc3BsYXlOYW1lIiwiQWxlcnRUaXRsZSIsImg1IiwiQWxlcnREZXNjcmlwdGlvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/alert.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/button.tsx":
/*!**********************************!*\
  !*** ./components/ui/button.tsx ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   buttonVariants: () => (/* binding */ buttonVariants)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n\n\n\n\n\nconst buttonVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n            destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n            outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\"\n        },\n        size: {\n            default: \"h-10 px-4 py-2\",\n            sm: \"h-9 rounded-md px-3\",\n            lg: \"h-11 rounded-md px-8\",\n            icon: \"h-10 w-10\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nconst Button = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, variant, size, asChild = false, ...props } = param;\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot : \"button\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Comp, {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({\n            variant,\n            size,\n            className\n        })),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\button.tsx\",\n        lineNumber: 46,\n        columnNumber: 7\n    }, undefined);\n});\n_c1 = Button;\nButton.displayName = \"Button\";\n\nvar _c, _c1;\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c1, \"Button\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvYnV0dG9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDYTtBQUNzQjtBQUVqQztBQUVoQyxNQUFNSSxpQkFBaUJGLDZEQUFHQSxDQUN4Qiw0VkFDQTtJQUNFRyxVQUFVO1FBQ1JDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxhQUNFO1lBQ0ZDLFNBQ0U7WUFDRkMsV0FDRTtZQUNGQyxPQUFPO1lBQ1BDLE1BQU07UUFDUjtRQUNBQyxNQUFNO1lBQ0pOLFNBQVM7WUFDVE8sSUFBSTtZQUNKQyxJQUFJO1lBQ0pDLE1BQU07UUFDUjtJQUNGO0lBQ0FDLGlCQUFpQjtRQUNmWCxTQUFTO1FBQ1RPLE1BQU07SUFDUjtBQUNGO0FBU0YsTUFBTUssdUJBQVNsQiw2Q0FBZ0IsTUFDN0IsUUFBMERvQjtRQUF6RCxFQUFFQyxTQUFTLEVBQUVmLE9BQU8sRUFBRU8sSUFBSSxFQUFFUyxVQUFVLEtBQUssRUFBRSxHQUFHQyxPQUFPO0lBQ3RELE1BQU1DLE9BQU9GLFVBQVVyQixzREFBSUEsR0FBRztJQUM5QixxQkFDRSw4REFBQ3VCO1FBQ0NILFdBQVdsQiw4Q0FBRUEsQ0FBQ0MsZUFBZTtZQUFFRTtZQUFTTztZQUFNUTtRQUFVO1FBQ3hERCxLQUFLQTtRQUNKLEdBQUdHLEtBQUs7Ozs7OztBQUdmOztBQUVGTCxPQUFPTyxXQUFXLEdBQUc7QUFFWSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXGNvbXBvbmVudHNcXHVpXFxidXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IFNsb3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNsb3RcIlxyXG5pbXBvcnQgeyBjdmEsIHR5cGUgVmFyaWFudFByb3BzIH0gZnJvbSBcImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eVwiXHJcblxyXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXHJcblxyXG5jb25zdCBidXR0b25WYXJpYW50cyA9IGN2YShcclxuICBcImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAtMiB3aGl0ZXNwYWNlLW5vd3JhcCByb3VuZGVkLW1kIHRleHQtc20gZm9udC1tZWRpdW0gcmluZy1vZmZzZXQtYmFja2dyb3VuZCB0cmFuc2l0aW9uLWNvbG9ycyBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6cG9pbnRlci1ldmVudHMtbm9uZSBkaXNhYmxlZDpvcGFjaXR5LTUwIFsmX3N2Z106cG9pbnRlci1ldmVudHMtbm9uZSBbJl9zdmddOnNpemUtNCBbJl9zdmddOnNocmluay0wXCIsXHJcbiAge1xyXG4gICAgdmFyaWFudHM6IHtcclxuICAgICAgdmFyaWFudDoge1xyXG4gICAgICAgIGRlZmF1bHQ6IFwiYmctcHJpbWFyeSB0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCBob3ZlcjpiZy1wcmltYXJ5LzkwXCIsXHJcbiAgICAgICAgZGVzdHJ1Y3RpdmU6XHJcbiAgICAgICAgICBcImJnLWRlc3RydWN0aXZlIHRleHQtZGVzdHJ1Y3RpdmUtZm9yZWdyb3VuZCBob3ZlcjpiZy1kZXN0cnVjdGl2ZS85MFwiLFxyXG4gICAgICAgIG91dGxpbmU6XHJcbiAgICAgICAgICBcImJvcmRlciBib3JkZXItaW5wdXQgYmctYmFja2dyb3VuZCBob3ZlcjpiZy1hY2NlbnQgaG92ZXI6dGV4dC1hY2NlbnQtZm9yZWdyb3VuZFwiLFxyXG4gICAgICAgIHNlY29uZGFyeTpcclxuICAgICAgICAgIFwiYmctc2Vjb25kYXJ5IHRleHQtc2Vjb25kYXJ5LWZvcmVncm91bmQgaG92ZXI6Ymctc2Vjb25kYXJ5LzgwXCIsXHJcbiAgICAgICAgZ2hvc3Q6IFwiaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmRcIixcclxuICAgICAgICBsaW5rOiBcInRleHQtcHJpbWFyeSB1bmRlcmxpbmUtb2Zmc2V0LTQgaG92ZXI6dW5kZXJsaW5lXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIHNpemU6IHtcclxuICAgICAgICBkZWZhdWx0OiBcImgtMTAgcHgtNCBweS0yXCIsXHJcbiAgICAgICAgc206IFwiaC05IHJvdW5kZWQtbWQgcHgtM1wiLFxyXG4gICAgICAgIGxnOiBcImgtMTEgcm91bmRlZC1tZCBweC04XCIsXHJcbiAgICAgICAgaWNvbjogXCJoLTEwIHctMTBcIixcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBkZWZhdWx0VmFyaWFudHM6IHtcclxuICAgICAgdmFyaWFudDogXCJkZWZhdWx0XCIsXHJcbiAgICAgIHNpemU6IFwiZGVmYXVsdFwiLFxyXG4gICAgfSxcclxuICB9XHJcbilcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQnV0dG9uUHJvcHNcclxuICBleHRlbmRzIFJlYWN0LkJ1dHRvbkhUTUxBdHRyaWJ1dGVzPEhUTUxCdXR0b25FbGVtZW50PixcclxuICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgYnV0dG9uVmFyaWFudHM+IHtcclxuICBhc0NoaWxkPzogYm9vbGVhblxyXG59XHJcblxyXG5jb25zdCBCdXR0b24gPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxCdXR0b25FbGVtZW50LCBCdXR0b25Qcm9wcz4oXHJcbiAgKHsgY2xhc3NOYW1lLCB2YXJpYW50LCBzaXplLCBhc0NoaWxkID0gZmFsc2UsIC4uLnByb3BzIH0sIHJlZikgPT4ge1xyXG4gICAgY29uc3QgQ29tcCA9IGFzQ2hpbGQgPyBTbG90IDogXCJidXR0b25cIlxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPENvbXBcclxuICAgICAgICBjbGFzc05hbWU9e2NuKGJ1dHRvblZhcmlhbnRzKHsgdmFyaWFudCwgc2l6ZSwgY2xhc3NOYW1lIH0pKX1cclxuICAgICAgICByZWY9e3JlZn1cclxuICAgICAgICB7Li4ucHJvcHN9XHJcbiAgICAgIC8+XHJcbiAgICApXHJcbiAgfVxyXG4pXHJcbkJ1dHRvbi5kaXNwbGF5TmFtZSA9IFwiQnV0dG9uXCJcclxuXHJcbmV4cG9ydCB7IEJ1dHRvbiwgYnV0dG9uVmFyaWFudHMgfVxyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJTbG90IiwiY3ZhIiwiY24iLCJidXR0b25WYXJpYW50cyIsInZhcmlhbnRzIiwidmFyaWFudCIsImRlZmF1bHQiLCJkZXN0cnVjdGl2ZSIsIm91dGxpbmUiLCJzZWNvbmRhcnkiLCJnaG9zdCIsImxpbmsiLCJzaXplIiwic20iLCJsZyIsImljb24iLCJkZWZhdWx0VmFyaWFudHMiLCJCdXR0b24iLCJmb3J3YXJkUmVmIiwicmVmIiwiY2xhc3NOYW1lIiwiYXNDaGlsZCIsInByb3BzIiwiQ29tcCIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/button.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/toast.tsx":
/*!*********************************!*\
  !*** ./components/ui/toast.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-toast */ \"(app-pages-browser)/./node_modules/@radix-ui/react-toast/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ ToastProvider,ToastViewport,Toast,ToastTitle,ToastDescription,ToastClose,ToastAction auto */ \n\n\n\n\n\nconst ToastProvider = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Provider;\nconst ToastViewport = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 16,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = ToastViewport;\nToastViewport.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Viewport.displayName;\nconst toastVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\", {\n    variants: {\n        variant: {\n            default: \"border bg-background text-foreground\",\n            destructive: \"destructive group border-destructive bg-destructive text-destructive-foreground\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nconst Toast = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c2 = (param, ref)=>{\n    let { className, variant, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(toastVariants({\n            variant\n        }), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, undefined);\n});\n_c3 = Toast;\nToast.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Root.displayName;\nconst ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c4 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 62,\n        columnNumber: 3\n    }, undefined);\n});\n_c5 = ToastAction;\nToastAction.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Action.displayName;\nconst ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c6 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\", className),\n        \"toast-close\": \"\",\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            className: \"h-4 w-4\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n            lineNumber: 86,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 77,\n        columnNumber: 3\n    }, undefined);\n});\n_c7 = ToastClose;\nToastClose.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Close.displayName;\nconst ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c8 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm font-semibold\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 95,\n        columnNumber: 3\n    }, undefined);\n});\n_c9 = ToastTitle;\nToastTitle.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Title.displayName;\nconst ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c10 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(\"text-sm opacity-90\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toast.tsx\",\n        lineNumber: 107,\n        columnNumber: 3\n    }, undefined);\n});\n_c11 = ToastDescription;\nToastDescription.displayName = _radix_ui_react_toast__WEBPACK_IMPORTED_MODULE_4__.Description.displayName;\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"ToastViewport$React.forwardRef\");\n$RefreshReg$(_c1, \"ToastViewport\");\n$RefreshReg$(_c2, \"Toast$React.forwardRef\");\n$RefreshReg$(_c3, \"Toast\");\n$RefreshReg$(_c4, \"ToastAction$React.forwardRef\");\n$RefreshReg$(_c5, \"ToastAction\");\n$RefreshReg$(_c6, \"ToastClose$React.forwardRef\");\n$RefreshReg$(_c7, \"ToastClose\");\n$RefreshReg$(_c8, \"ToastTitle$React.forwardRef\");\n$RefreshReg$(_c9, \"ToastTitle\");\n$RefreshReg$(_c10, \"ToastDescription$React.forwardRef\");\n$RefreshReg$(_c11, \"ToastDescription\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/toast.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ui/toaster.tsx":
/*!***********************************!*\
  !*** ./components/ui/toaster.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ Toaster)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/hooks/use-toast */ \"(app-pages-browser)/./hooks/use-toast.ts\");\n/* harmony import */ var _components_ui_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/toast */ \"(app-pages-browser)/./components/ui/toast.tsx\");\n/* __next_internal_client_entry_do_not_use__ Toaster auto */ \nvar _s = $RefreshSig$();\n\n\nfunction Toaster() {\n    _s();\n    const { toasts } = (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.useToast)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastProvider, {\n        children: [\n            toasts.map(function(param) {\n                let { id, title, description, action, ...props } = param;\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.Toast, {\n                    ...props,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid gap-1\",\n                            children: [\n                                title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastTitle, {\n                                    children: title\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 22,\n                                    columnNumber: 25\n                                }, this),\n                                description && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastDescription, {\n                                    children: description\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                                    lineNumber: 24,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 13\n                        }, this),\n                        action,\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastClose, {}, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, id, true, {\n                    fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 11\n                }, this);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_toast__WEBPACK_IMPORTED_MODULE_2__.ToastViewport, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\components\\\\ui\\\\toaster.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n_s(Toaster, \"1YTCnXrq2qRowe0H/LBWLjtXoYc=\", false, function() {\n    return [\n        _hooks_use_toast__WEBPACK_IMPORTED_MODULE_1__.useToast\n    ];\n});\n_c = Toaster;\nvar _c;\n$RefreshReg$(_c, \"Toaster\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdWkvdG9hc3Rlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRTRDO0FBUWQ7QUFFdkIsU0FBU087O0lBQ2QsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR1IsMERBQVFBO0lBRTNCLHFCQUNFLDhEQUFDSSwrREFBYUE7O1lBQ1hJLE9BQU9DLEdBQUcsQ0FBQyxTQUFVLEtBQTRDO29CQUE1QyxFQUFFQyxFQUFFLEVBQUVDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxNQUFNLEVBQUUsR0FBR0MsT0FBTyxHQUE1QztnQkFDcEIscUJBQ0UsOERBQUNiLHVEQUFLQTtvQkFBVyxHQUFHYSxLQUFLOztzQ0FDdkIsOERBQUNDOzRCQUFJQyxXQUFVOztnQ0FDWkwsdUJBQVMsOERBQUNOLDREQUFVQTs4Q0FBRU07Ozs7OztnQ0FDdEJDLDZCQUNDLDhEQUFDVCxrRUFBZ0JBOzhDQUFFUzs7Ozs7Ozs7Ozs7O3dCQUd0QkM7c0NBQ0QsOERBQUNYLDREQUFVQTs7Ozs7O21CQVJEUTs7Ozs7WUFXaEI7MEJBQ0EsOERBQUNKLCtEQUFhQTs7Ozs7Ozs7Ozs7QUFHcEI7R0F0QmdCQzs7UUFDS1Asc0RBQVFBOzs7S0FEYk8iLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxjb21wb25lbnRzXFx1aVxcdG9hc3Rlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcclxuXHJcbmltcG9ydCB7IHVzZVRvYXN0IH0gZnJvbSBcIkAvaG9va3MvdXNlLXRvYXN0XCJcclxuaW1wb3J0IHtcclxuICBUb2FzdCxcclxuICBUb2FzdENsb3NlLFxyXG4gIFRvYXN0RGVzY3JpcHRpb24sXHJcbiAgVG9hc3RQcm92aWRlcixcclxuICBUb2FzdFRpdGxlLFxyXG4gIFRvYXN0Vmlld3BvcnQsXHJcbn0gZnJvbSBcIkAvY29tcG9uZW50cy91aS90b2FzdFwiXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gVG9hc3RlcigpIHtcclxuICBjb25zdCB7IHRvYXN0cyB9ID0gdXNlVG9hc3QoKVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFRvYXN0UHJvdmlkZXI+XHJcbiAgICAgIHt0b2FzdHMubWFwKGZ1bmN0aW9uICh7IGlkLCB0aXRsZSwgZGVzY3JpcHRpb24sIGFjdGlvbiwgLi4ucHJvcHMgfSkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICA8VG9hc3Qga2V5PXtpZH0gey4uLnByb3BzfT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC0xXCI+XHJcbiAgICAgICAgICAgICAge3RpdGxlICYmIDxUb2FzdFRpdGxlPnt0aXRsZX08L1RvYXN0VGl0bGU+fVxyXG4gICAgICAgICAgICAgIHtkZXNjcmlwdGlvbiAmJiAoXHJcbiAgICAgICAgICAgICAgICA8VG9hc3REZXNjcmlwdGlvbj57ZGVzY3JpcHRpb259PC9Ub2FzdERlc2NyaXB0aW9uPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICB7YWN0aW9ufVxyXG4gICAgICAgICAgICA8VG9hc3RDbG9zZSAvPlxyXG4gICAgICAgICAgPC9Ub2FzdD5cclxuICAgICAgICApXHJcbiAgICAgIH0pfVxyXG4gICAgICA8VG9hc3RWaWV3cG9ydCAvPlxyXG4gICAgPC9Ub2FzdFByb3ZpZGVyPlxyXG4gIClcclxufVxyXG4iXSwibmFtZXMiOlsidXNlVG9hc3QiLCJUb2FzdCIsIlRvYXN0Q2xvc2UiLCJUb2FzdERlc2NyaXB0aW9uIiwiVG9hc3RQcm92aWRlciIsIlRvYXN0VGl0bGUiLCJUb2FzdFZpZXdwb3J0IiwiVG9hc3RlciIsInRvYXN0cyIsIm1hcCIsImlkIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImFjdGlvbiIsInByb3BzIiwiZGl2IiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ui/toaster.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./hooks/use-toast.ts":
/*!****************************!*\
  !*** ./hooks/use-toast.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reducer: () => (/* binding */ reducer),\n/* harmony export */   toast: () => (/* binding */ toast),\n/* harmony export */   useToast: () => (/* binding */ useToast)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ reducer,useToast,toast auto */ // Inspired by react-hot-toast library\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\nconst actionTypes = {\n    ADD_TOAST: \"ADD_TOAST\",\n    UPDATE_TOAST: \"UPDATE_TOAST\",\n    DISMISS_TOAST: \"DISMISS_TOAST\",\n    REMOVE_TOAST: \"REMOVE_TOAST\"\n};\nlet count = 0;\nfunction genId() {\n    count = (count + 1) % Number.MAX_SAFE_INTEGER;\n    return count.toString();\n}\nconst toastTimeouts = new Map();\nconst addToRemoveQueue = (toastId)=>{\n    if (toastTimeouts.has(toastId)) {\n        return;\n    }\n    const timeout = setTimeout(()=>{\n        toastTimeouts.delete(toastId);\n        dispatch({\n            type: \"REMOVE_TOAST\",\n            toastId: toastId\n        });\n    }, TOAST_REMOVE_DELAY);\n    toastTimeouts.set(toastId, timeout);\n};\nconst reducer = (state, action)=>{\n    switch(action.type){\n        case \"ADD_TOAST\":\n            return {\n                ...state,\n                toasts: [\n                    action.toast,\n                    ...state.toasts\n                ].slice(0, TOAST_LIMIT)\n            };\n        case \"UPDATE_TOAST\":\n            return {\n                ...state,\n                toasts: state.toasts.map((t)=>t.id === action.toast.id ? {\n                        ...t,\n                        ...action.toast\n                    } : t)\n            };\n        case \"DISMISS_TOAST\":\n            {\n                const { toastId } = action;\n                // ! Side effects ! - This could be extracted into a dismissToast() action,\n                // but I'll keep it here for simplicity\n                if (toastId) {\n                    addToRemoveQueue(toastId);\n                } else {\n                    state.toasts.forEach((toast)=>{\n                        addToRemoveQueue(toast.id);\n                    });\n                }\n                return {\n                    ...state,\n                    toasts: state.toasts.map((t)=>t.id === toastId || toastId === undefined ? {\n                            ...t,\n                            open: false\n                        } : t)\n                };\n            }\n        case \"REMOVE_TOAST\":\n            if (action.toastId === undefined) {\n                return {\n                    ...state,\n                    toasts: []\n                };\n            }\n            return {\n                ...state,\n                toasts: state.toasts.filter((t)=>t.id !== action.toastId)\n            };\n    }\n};\nconst listeners = [];\nlet memoryState = {\n    toasts: []\n};\nfunction dispatch(action) {\n    memoryState = reducer(memoryState, action);\n    listeners.forEach((listener)=>{\n        listener(memoryState);\n    });\n}\nfunction toast(param) {\n    let { ...props } = param;\n    const id = genId();\n    const update = (props)=>dispatch({\n            type: \"UPDATE_TOAST\",\n            toast: {\n                ...props,\n                id\n            }\n        });\n    const dismiss = ()=>dispatch({\n            type: \"DISMISS_TOAST\",\n            toastId: id\n        });\n    dispatch({\n        type: \"ADD_TOAST\",\n        toast: {\n            ...props,\n            id,\n            open: true,\n            onOpenChange: (open)=>{\n                if (!open) dismiss();\n            }\n        }\n    });\n    return {\n        id: id,\n        dismiss,\n        update\n    };\n}\nfunction useToast() {\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(memoryState);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useToast.useEffect\": ()=>{\n            listeners.push(setState);\n            return ({\n                \"useToast.useEffect\": ()=>{\n                    const index = listeners.indexOf(setState);\n                    if (index > -1) {\n                        listeners.splice(index, 1);\n                    }\n                }\n            })[\"useToast.useEffect\"];\n        }\n    }[\"useToast.useEffect\"], [\n        state\n    ]);\n    return {\n        ...state,\n        toast,\n        dismiss: (toastId)=>dispatch({\n                type: \"DISMISS_TOAST\",\n                toastId\n            })\n    };\n}\n\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-toast.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/language-context.tsx":
/*!**********************************!*\
  !*** ./lib/language-context.tsx ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LanguageProvider: () => (/* binding */ LanguageProvider),\n/* harmony export */   useLanguage: () => (/* binding */ useLanguage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/translations */ \"(app-pages-browser)/./lib/translations.ts\");\n/* harmony import */ var _store_useStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/useStore */ \"(app-pages-browser)/./store/useStore.ts\");\n/* __next_internal_client_entry_do_not_use__ LanguageProvider,useLanguage auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst LanguageContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction LanguageProvider(param) {\n    let { children } = param;\n    _s();\n    const { user } = (0,_store_useStore__WEBPACK_IMPORTED_MODULE_3__.useStore)();\n    const [language, setLanguageState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('pl');\n    // Pobierz język z profilu użytkownika lub localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"LanguageProvider.useEffect\": ()=>{\n            if (user === null || user === void 0 ? void 0 : user.language) {\n                setLanguageState(user.language);\n            } else {\n                // Fallback do localStorage lub domyślnego języka\n                const savedLanguage = localStorage.getItem('app-language');\n                if (savedLanguage && [\n                    'pl',\n                    'en',\n                    'sk'\n                ].includes(savedLanguage)) {\n                    setLanguageState(savedLanguage);\n                }\n            }\n        }\n    }[\"LanguageProvider.useEffect\"], [\n        user\n    ]);\n    const setLanguage = (lang)=>{\n        setLanguageState(lang);\n        localStorage.setItem('app-language', lang);\n    };\n    const { t } = (0,_lib_translations__WEBPACK_IMPORTED_MODULE_2__.useTranslation)(language);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LanguageContext.Provider, {\n        value: {\n            language,\n            setLanguage,\n            t\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\kkacp\\\\Desktop\\\\SpecresCRMv2\\\\SpectresGroupCRM\\\\dashboard\\\\lib\\\\language-context.tsx\",\n        lineNumber: 44,\n        columnNumber: 5\n    }, this);\n}\n_s(LanguageProvider, \"sk/kPbpXYz2YeNiKFszIHggvJqg=\", false, function() {\n    return [\n        _store_useStore__WEBPACK_IMPORTED_MODULE_3__.useStore,\n        _lib_translations__WEBPACK_IMPORTED_MODULE_2__.useTranslation\n    ];\n});\n_c = LanguageProvider;\nfunction useLanguage() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LanguageContext);\n    if (context === undefined) {\n        throw new Error('useLanguage must be used within a LanguageProvider');\n    }\n    return context;\n}\n_s1(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9sYW5ndWFnZS1jb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFaUY7QUFDcEI7QUFDbEI7QUFRM0MsTUFBTU0sZ0NBQWtCTixvREFBYUEsQ0FBa0NPO0FBTWhFLFNBQVNDLGlCQUFpQixLQUFtQztRQUFuQyxFQUFFQyxRQUFRLEVBQXlCLEdBQW5DOztJQUMvQixNQUFNLEVBQUVDLElBQUksRUFBRSxHQUFHTCx5REFBUUE7SUFDekIsTUFBTSxDQUFDTSxVQUFVQyxpQkFBaUIsR0FBR1QsK0NBQVFBLENBQVc7SUFFeEQsdURBQXVEO0lBQ3ZERCxnREFBU0E7c0NBQUM7WUFDUixJQUFJUSxpQkFBQUEsMkJBQUFBLEtBQU1DLFFBQVEsRUFBRTtnQkFDbEJDLGlCQUFpQkYsS0FBS0MsUUFBUTtZQUNoQyxPQUFPO2dCQUNMLGlEQUFpRDtnQkFDakQsTUFBTUUsZ0JBQWdCQyxhQUFhQyxPQUFPLENBQUM7Z0JBQzNDLElBQUlGLGlCQUFpQjtvQkFBQztvQkFBTTtvQkFBTTtpQkFBSyxDQUFDRyxRQUFRLENBQUNILGdCQUFnQjtvQkFDL0RELGlCQUFpQkM7Z0JBQ25CO1lBQ0Y7UUFDRjtxQ0FBRztRQUFDSDtLQUFLO0lBRVQsTUFBTU8sY0FBYyxDQUFDQztRQUNuQk4saUJBQWlCTTtRQUNqQkosYUFBYUssT0FBTyxDQUFDLGdCQUFnQkQ7SUFDdkM7SUFFQSxNQUFNLEVBQUVFLENBQUMsRUFBRSxHQUFHaEIsaUVBQWNBLENBQUNPO0lBRTdCLHFCQUNFLDhEQUFDTCxnQkFBZ0JlLFFBQVE7UUFBQ0MsT0FBTztZQUFFWDtZQUFVTTtZQUFhRztRQUFFO2tCQUN6RFg7Ozs7OztBQUdQO0dBN0JnQkQ7O1FBQ0dILHFEQUFRQTtRQXFCWEQsNkRBQWNBOzs7S0F0QmRJO0FBK0JULFNBQVNlOztJQUNkLE1BQU1DLFVBQVV2QixpREFBVUEsQ0FBQ0s7SUFDM0IsSUFBSWtCLFlBQVlqQixXQUFXO1FBQ3pCLE1BQU0sSUFBSWtCLE1BQU07SUFDbEI7SUFDQSxPQUFPRDtBQUNUO0lBTmdCRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXGxpYlxcbGFuZ3VhZ2UtY29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVN0YXRlLCBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgTGFuZ3VhZ2UsIHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAnQC9saWIvdHJhbnNsYXRpb25zJ1xyXG5pbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ0Avc3RvcmUvdXNlU3RvcmUnXHJcblxyXG5pbnRlcmZhY2UgTGFuZ3VhZ2VDb250ZXh0VHlwZSB7XHJcbiAgbGFuZ3VhZ2U6IExhbmd1YWdlXHJcbiAgc2V0TGFuZ3VhZ2U6IChsYW5nOiBMYW5ndWFnZSkgPT4gdm9pZFxyXG4gIHQ6IChrZXk6IHN0cmluZykgPT4gc3RyaW5nXHJcbn1cclxuXHJcbmNvbnN0IExhbmd1YWdlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8TGFuZ3VhZ2VDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKVxyXG5cclxuaW50ZXJmYWNlIExhbmd1YWdlUHJvdmlkZXJQcm9wcyB7XHJcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gTGFuZ3VhZ2VQcm92aWRlcih7IGNoaWxkcmVuIH06IExhbmd1YWdlUHJvdmlkZXJQcm9wcykge1xyXG4gIGNvbnN0IHsgdXNlciB9ID0gdXNlU3RvcmUoKVxyXG4gIGNvbnN0IFtsYW5ndWFnZSwgc2V0TGFuZ3VhZ2VTdGF0ZV0gPSB1c2VTdGF0ZTxMYW5ndWFnZT4oJ3BsJylcclxuICBcclxuICAvLyBQb2JpZXJ6IGrEmXp5ayB6IHByb2ZpbHUgdcW8eXRrb3duaWthIGx1YiBsb2NhbFN0b3JhZ2VcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKHVzZXI/Lmxhbmd1YWdlKSB7XHJcbiAgICAgIHNldExhbmd1YWdlU3RhdGUodXNlci5sYW5ndWFnZSlcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIEZhbGxiYWNrIGRvIGxvY2FsU3RvcmFnZSBsdWIgZG9tecWbbG5lZ28gasSZenlrYVxyXG4gICAgICBjb25zdCBzYXZlZExhbmd1YWdlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FwcC1sYW5ndWFnZScpIGFzIExhbmd1YWdlXHJcbiAgICAgIGlmIChzYXZlZExhbmd1YWdlICYmIFsncGwnLCAnZW4nLCAnc2snXS5pbmNsdWRlcyhzYXZlZExhbmd1YWdlKSkge1xyXG4gICAgICAgIHNldExhbmd1YWdlU3RhdGUoc2F2ZWRMYW5ndWFnZSlcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0sIFt1c2VyXSlcclxuXHJcbiAgY29uc3Qgc2V0TGFuZ3VhZ2UgPSAobGFuZzogTGFuZ3VhZ2UpID0+IHtcclxuICAgIHNldExhbmd1YWdlU3RhdGUobGFuZylcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhcHAtbGFuZ3VhZ2UnLCBsYW5nKVxyXG4gIH1cclxuXHJcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbihsYW5ndWFnZSlcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxMYW5ndWFnZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgbGFuZ3VhZ2UsIHNldExhbmd1YWdlLCB0IH19PlxyXG4gICAgICB7Y2hpbGRyZW59XHJcbiAgICA8L0xhbmd1YWdlQ29udGV4dC5Qcm92aWRlcj5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VMYW5ndWFnZSgpIHtcclxuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChMYW5ndWFnZUNvbnRleHQpXHJcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VMYW5ndWFnZSBtdXN0IGJlIHVzZWQgd2l0aGluIGEgTGFuZ3VhZ2VQcm92aWRlcicpXHJcbiAgfVxyXG4gIHJldHVybiBjb250ZXh0XHJcbn0gIl0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VUcmFuc2xhdGlvbiIsInVzZVN0b3JlIiwiTGFuZ3VhZ2VDb250ZXh0IiwidW5kZWZpbmVkIiwiTGFuZ3VhZ2VQcm92aWRlciIsImNoaWxkcmVuIiwidXNlciIsImxhbmd1YWdlIiwic2V0TGFuZ3VhZ2VTdGF0ZSIsInNhdmVkTGFuZ3VhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiaW5jbHVkZXMiLCJzZXRMYW5ndWFnZSIsImxhbmciLCJzZXRJdGVtIiwidCIsIlByb3ZpZGVyIiwidmFsdWUiLCJ1c2VMYW5ndWFnZSIsImNvbnRleHQiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/language-context.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/logger.ts":
/*!***********************!*\
  !*** ./lib/logger.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\nclass Logger {\n    log(message, context) {\n        if (this.isDevelopment) {\n            console.log(\"\\uD83D\\uDCDD \".concat(message), context ? context : '');\n        }\n    }\n    info(message, context) {\n        if (this.isDevelopment) {\n            console.info(\"ℹ️ \".concat(message), context ? context : '');\n        }\n    }\n    warn(message, context) {\n        if (this.isDevelopment) {\n            console.warn(\"⚠️ \".concat(message), context ? context : '');\n        }\n    }\n    error(message, error, context) {\n        // Błędy logujemy zawsze, nawet w produkcji\n        console.error(\"❌ \".concat(message), error, context ? context : '');\n    }\n    debug(message, data) {\n        if (this.isDevelopment) {\n            console.debug(\"\\uD83D\\uDD0D \".concat(message), data ? data : '');\n        }\n    }\n    success(message, context) {\n        if (this.isDevelopment) {\n            console.log(\"✅ \".concat(message), context ? context : '');\n        }\n    }\n    loading(message, context) {\n        if (this.isDevelopment) {\n            console.log(\"\\uD83D\\uDD04 \".concat(message), context ? context : '');\n        }\n    }\n    constructor(){\n        this.isDevelopment = \"development\" !== 'production';\n    }\n}\nconst logger = new Logger();\n// Dla kompatybilności wstecznej\nconst log = function() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (true) {\n        console.log(...args);\n    }\n};\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9sb2dnZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFPQSxNQUFNQTtJQUdKQyxJQUFJQyxPQUFlLEVBQUVDLE9BQW9CLEVBQUU7UUFDekMsSUFBSSxJQUFJLENBQUNDLGFBQWEsRUFBRTtZQUN0QkMsUUFBUUosR0FBRyxDQUFDLGdCQUFjLE9BQVJDLFVBQVdDLFVBQVVBLFVBQVU7UUFDbkQ7SUFDRjtJQUVBRyxLQUFLSixPQUFlLEVBQUVDLE9BQW9CLEVBQUU7UUFDMUMsSUFBSSxJQUFJLENBQUNDLGFBQWEsRUFBRTtZQUN0QkMsUUFBUUMsSUFBSSxDQUFDLE1BQWMsT0FBUkosVUFBV0MsVUFBVUEsVUFBVTtRQUNwRDtJQUNGO0lBRUFJLEtBQUtMLE9BQWUsRUFBRUMsT0FBb0IsRUFBRTtRQUMxQyxJQUFJLElBQUksQ0FBQ0MsYUFBYSxFQUFFO1lBQ3RCQyxRQUFRRSxJQUFJLENBQUMsTUFBYyxPQUFSTCxVQUFXQyxVQUFVQSxVQUFVO1FBQ3BEO0lBQ0Y7SUFFQUssTUFBTU4sT0FBZSxFQUFFTSxLQUFXLEVBQUVMLE9BQW9CLEVBQUU7UUFDeEQsMkNBQTJDO1FBQzNDRSxRQUFRRyxLQUFLLENBQUMsS0FBYSxPQUFSTixVQUFXTSxPQUFPTCxVQUFVQSxVQUFVO0lBQzNEO0lBRUFNLE1BQU1QLE9BQWUsRUFBRVEsSUFBVSxFQUFFO1FBQ2pDLElBQUksSUFBSSxDQUFDTixhQUFhLEVBQUU7WUFDdEJDLFFBQVFJLEtBQUssQ0FBQyxnQkFBYyxPQUFSUCxVQUFXUSxPQUFPQSxPQUFPO1FBQy9DO0lBQ0Y7SUFFQUMsUUFBUVQsT0FBZSxFQUFFQyxPQUFvQixFQUFFO1FBQzdDLElBQUksSUFBSSxDQUFDQyxhQUFhLEVBQUU7WUFDdEJDLFFBQVFKLEdBQUcsQ0FBQyxLQUFhLE9BQVJDLFVBQVdDLFVBQVVBLFVBQVU7UUFDbEQ7SUFDRjtJQUVBUyxRQUFRVixPQUFlLEVBQUVDLE9BQW9CLEVBQUU7UUFDN0MsSUFBSSxJQUFJLENBQUNDLGFBQWEsRUFBRTtZQUN0QkMsUUFBUUosR0FBRyxDQUFDLGdCQUFjLE9BQVJDLFVBQVdDLFVBQVVBLFVBQVU7UUFDbkQ7SUFDRjs7YUF6Q1FDLGdCQUFnQlMsYUFBb0IsS0FBSzs7QUEwQ25EO0FBRU8sTUFBTUcsU0FBUyxJQUFJaEIsU0FBUTtBQUVsQyxnQ0FBZ0M7QUFDekIsTUFBTUMsTUFBTTtxQ0FBSWdCO1FBQUFBOztJQUNyQixJQUFJSixJQUFxQyxFQUFFO1FBQ3pDUixRQUFRSixHQUFHLElBQUlnQjtJQUNqQjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxsaWJcXGxvZ2dlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgTG9nQ29udGV4dCB7XHJcbiAgY29tcG9uZW50Pzogc3RyaW5nXHJcbiAgYWN0aW9uPzogc3RyaW5nXHJcbiAgZGF0YT86IGFueVxyXG4gIFtrZXk6IHN0cmluZ106IGFueVxyXG59XHJcblxyXG5jbGFzcyBMb2dnZXIge1xyXG4gIHByaXZhdGUgaXNEZXZlbG9wbWVudCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbidcclxuICBcclxuICBsb2cobWVzc2FnZTogc3RyaW5nLCBjb250ZXh0PzogTG9nQ29udGV4dCkge1xyXG4gICAgaWYgKHRoaXMuaXNEZXZlbG9wbWVudCkge1xyXG4gICAgICBjb25zb2xlLmxvZyhg8J+TnSAke21lc3NhZ2V9YCwgY29udGV4dCA/IGNvbnRleHQgOiAnJylcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgaW5mbyhtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ/OiBMb2dDb250ZXh0KSB7XHJcbiAgICBpZiAodGhpcy5pc0RldmVsb3BtZW50KSB7XHJcbiAgICAgIGNvbnNvbGUuaW5mbyhg4oS577iPICR7bWVzc2FnZX1gLCBjb250ZXh0ID8gY29udGV4dCA6ICcnKVxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICB3YXJuKG1lc3NhZ2U6IHN0cmluZywgY29udGV4dD86IExvZ0NvbnRleHQpIHtcclxuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcclxuICAgICAgY29uc29sZS53YXJuKGDimqDvuI8gJHttZXNzYWdlfWAsIGNvbnRleHQgPyBjb250ZXh0IDogJycpXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIGVycm9yKG1lc3NhZ2U6IHN0cmluZywgZXJyb3I/OiBhbnksIGNvbnRleHQ/OiBMb2dDb250ZXh0KSB7XHJcbiAgICAvLyBCxYLEmWR5IGxvZ3VqZW15IHphd3N6ZSwgbmF3ZXQgdyBwcm9kdWtjamlcclxuICAgIGNvbnNvbGUuZXJyb3IoYOKdjCAke21lc3NhZ2V9YCwgZXJyb3IsIGNvbnRleHQgPyBjb250ZXh0IDogJycpXHJcbiAgfVxyXG4gIFxyXG4gIGRlYnVnKG1lc3NhZ2U6IHN0cmluZywgZGF0YT86IGFueSkge1xyXG4gICAgaWYgKHRoaXMuaXNEZXZlbG9wbWVudCkge1xyXG4gICAgICBjb25zb2xlLmRlYnVnKGDwn5SNICR7bWVzc2FnZX1gLCBkYXRhID8gZGF0YSA6ICcnKVxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBzdWNjZXNzKG1lc3NhZ2U6IHN0cmluZywgY29udGV4dD86IExvZ0NvbnRleHQpIHtcclxuICAgIGlmICh0aGlzLmlzRGV2ZWxvcG1lbnQpIHtcclxuICAgICAgY29uc29sZS5sb2coYOKchSAke21lc3NhZ2V9YCwgY29udGV4dCA/IGNvbnRleHQgOiAnJylcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgbG9hZGluZyhtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ/OiBMb2dDb250ZXh0KSB7XHJcbiAgICBpZiAodGhpcy5pc0RldmVsb3BtZW50KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGDwn5SEICR7bWVzc2FnZX1gLCBjb250ZXh0ID8gY29udGV4dCA6ICcnKVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IG5ldyBMb2dnZXIoKVxyXG5cclxuLy8gRGxhIGtvbXBhdHliaWxub8WbY2kgd3N0ZWN6bmVqXHJcbmV4cG9ydCBjb25zdCBsb2cgPSAoLi4uYXJnczogYW55W10pID0+IHtcclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgY29uc29sZS5sb2coLi4uYXJncylcclxuICB9XHJcbn0gIl0sIm5hbWVzIjpbIkxvZ2dlciIsImxvZyIsIm1lc3NhZ2UiLCJjb250ZXh0IiwiaXNEZXZlbG9wbWVudCIsImNvbnNvbGUiLCJpbmZvIiwid2FybiIsImVycm9yIiwiZGVidWciLCJkYXRhIiwic3VjY2VzcyIsImxvYWRpbmciLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJsb2dnZXIiLCJhcmdzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/logger.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/query-client.ts":
/*!*****************************!*\
  !*** ./lib/query-client.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheUtils: () => (/* binding */ cacheUtils),\n/* harmony export */   queryClient: () => (/* binding */ queryClient),\n/* harmony export */   queryKeys: () => (/* binding */ queryKeys)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\");\n\n// 🚀 PERFORMANCE: Optimized Query Client Configuration\nconst queryClient = new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.QueryClient({\n    defaultOptions: {\n        queries: {\n            // Cache data for 5 minutes by default\n            staleTime: 5 * 60 * 1000,\n            // Keep data in cache for 10 minutes\n            gcTime: 10 * 60 * 1000,\n            // Retry failed queries 2 times\n            retry: 2,\n            // Retry with exponential backoff\n            retryDelay: (attemptIndex)=>Math.min(1000 * 2 ** attemptIndex, 30000),\n            // Refetch on window focus for important data\n            refetchOnWindowFocus: true,\n            // Don't refetch on reconnect for cached data\n            refetchOnReconnect: 'always'\n        },\n        mutations: {\n            // Retry mutations once\n            retry: 1,\n            // Retry mutations on network error\n            retryDelay: 1000\n        }\n    }\n});\n// 🎯 Query Keys - Centralized query key management\nconst queryKeys = {\n    // Clients queries\n    clients: {\n        all: [\n            'clients'\n        ],\n        lists: ()=>[\n                ...queryKeys.clients.all,\n                'list'\n            ],\n        list: (filters)=>[\n                ...queryKeys.clients.lists(),\n                filters\n            ],\n        details: ()=>[\n                ...queryKeys.clients.all,\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.clients.details(),\n                id\n            ],\n        history: (id)=>[\n                ...queryKeys.clients.detail(id),\n                'history'\n            ],\n        paginated: (page, limit, filters)=>[\n                ...queryKeys.clients.lists(),\n                'paginated',\n                page,\n                limit,\n                filters\n            ]\n    },\n    // Users queries\n    users: {\n        all: [\n            'users'\n        ],\n        lists: ()=>[\n                ...queryKeys.users.all,\n                'list'\n            ],\n        list: (filters)=>[\n                ...queryKeys.users.lists(),\n                filters\n            ],\n        details: ()=>[\n                ...queryKeys.users.all,\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.users.details(),\n                id\n            ],\n        owners: ()=>[\n                ...queryKeys.users.all,\n                'owners'\n            ]\n    },\n    // Dashboard queries\n    dashboard: {\n        all: [\n            'dashboard'\n        ],\n        metrics: ()=>[\n                ...queryKeys.dashboard.all,\n                'metrics'\n            ],\n        stats: (userId)=>[\n                ...queryKeys.dashboard.metrics(),\n                userId\n            ],\n        topEmployees: ()=>[\n                ...queryKeys.dashboard.all,\n                'top-employees'\n            ],\n        salesTrends: ()=>[\n                ...queryKeys.dashboard.all,\n                'sales-trends'\n            ]\n    },\n    // Locations queries\n    locations: {\n        all: [\n            'locations'\n        ],\n        lists: ()=>[\n                ...queryKeys.locations.all,\n                'list'\n            ]\n    },\n    // Admin queries\n    admin: {\n        all: [\n            'admin'\n        ],\n        systemStats: ()=>[\n                ...queryKeys.admin.all,\n                'system-stats'\n            ],\n        performance: ()=>[\n                ...queryKeys.admin.all,\n                'performance'\n            ]\n    }\n};\n// 🔄 Cache Utilities\nconst cacheUtils = {\n    // Invalidate all clients data\n    invalidateClients: ()=>{\n        return queryClient.invalidateQueries({\n            queryKey: queryKeys.clients.all\n        });\n    },\n    // Invalidate specific client\n    invalidateClient: (clientId)=>{\n        return queryClient.invalidateQueries({\n            queryKey: queryKeys.clients.detail(clientId)\n        });\n    },\n    // Invalidate users data\n    invalidateUsers: ()=>{\n        return queryClient.invalidateQueries({\n            queryKey: queryKeys.users.all\n        });\n    },\n    // Invalidate dashboard data\n    invalidateDashboard: ()=>{\n        return queryClient.invalidateQueries({\n            queryKey: queryKeys.dashboard.all\n        });\n    },\n    // Optimistic client update\n    updateClientCache: (clientId, updater)=>{\n        queryClient.setQueryData(queryKeys.clients.detail(clientId), updater);\n        // Also update in lists\n        queryClient.setQueriesData({\n            queryKey: queryKeys.clients.lists()\n        }, (oldData)=>{\n            if (!oldData) return oldData;\n            if (Array.isArray(oldData)) {\n                return oldData.map((client)=>client.id === clientId ? updater(client) : client);\n            }\n            return oldData;\n        });\n    },\n    // Pre-populate client detail cache from list data\n    setClientDetailFromList: (client)=>{\n        queryClient.setQueryData(queryKeys.clients.detail(client.id), client);\n    }\n};\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/query-client.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   activityLogsApi: () => (/* binding */ activityLogsApi),\n/* harmony export */   authApi: () => (/* binding */ authApi),\n/* harmony export */   callsApi: () => (/* binding */ callsApi),\n/* harmony export */   clientsApi: () => (/* binding */ clientsApi),\n/* harmony export */   csvImportApi: () => (/* binding */ csvImportApi),\n/* harmony export */   dashboardApi: () => (/* binding */ dashboardApi),\n/* harmony export */   getAvatarUrl: () => (/* binding */ getAvatarUrl),\n/* harmony export */   getCanvasClientsWithPriority: () => (/* binding */ getCanvasClientsWithPriority),\n/* harmony export */   getCanvasStatusColor: () => (/* binding */ getCanvasStatusColor),\n/* harmony export */   locationsApi: () => (/* binding */ locationsApi),\n/* harmony export */   notificationsApi: () => (/* binding */ notificationsApi),\n/* harmony export */   performanceApi: () => (/* binding */ performanceApi),\n/* harmony export */   permissionsApi: () => (/* binding */ permissionsApi),\n/* harmony export */   reportsApi: () => (/* binding */ reportsApi),\n/* harmony export */   storageApi: () => (/* binding */ storageApi),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   teamApi: () => (/* binding */ teamApi)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://pkhuggdkcglicghgxiyp.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBraHVnZ2RrY2dsaWNnaGd4aXlwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk5MTEwNzEsImV4cCI6MjA2NTQ4NzA3MX0.LbWtb-modRDlvnkGF5IswRHe1lJpd4zCMgkQ3_E0QQk\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Funkcja pomocnicza do generowania poprawnych URL-i avatarów z Supabase Storage\nconst getAvatarUrl = (avatarUrl)=>{\n    if (!avatarUrl) return null;\n    // Jeśli to już pełny URL (zaczyna się od http), zwróć bez zmian\n    if (avatarUrl.startsWith('http')) {\n        return avatarUrl;\n    }\n    // Jeśli to ścieżka w bucket'u (zawiera folder), wygeneruj publiczny URL\n    if (avatarUrl.includes('/')) {\n        try {\n            const { data } = supabase.storage.from('avatars').getPublicUrl(avatarUrl);\n            return data.publicUrl;\n        } catch (error) {\n            console.error('Błąd generowania URL avatara:', error);\n            return null;\n        }\n    }\n    // Fallback - prawdopodobnie niepoprawny format\n    console.warn('Nierozpoznany format avatar_url:', avatarUrl);\n    return null;\n};\n// Storage API dla plików CSV\nconst storageApi = {\n    // Upload pliku CSV do bucket\n    async uploadCSV (file, user) {\n        try {\n            // Oczyszczenie nazwy pliku z problematycznych znaków\n            const cleanFileName = file.name.replace(/[^a-zA-Z0-9.-]/g, '_') // Zastąp wszystkie znaki specjalne podkreśleniami\n            .replace(/_{2,}/g, '_') // Zamień wielokrotne podkreślenia na pojedyncze\n            .replace(/^_+|_+$/g, '') // Usuń podkreślenia z początku i końca\n            .toLowerCase() // Małe litery dla consistency\n            ;\n            const fileName = \"\".concat(user.id, \"_\").concat(Date.now(), \"_\").concat(cleanFileName);\n            const filePath = \"csv-imports/\".concat(fileName);\n            console.log(\"\\uD83D\\uDCC1 Uploading CSV: \".concat(filePath));\n            console.log(\"\\uD83D\\uDCC1 Original filename: \".concat(file.name));\n            console.log(\"\\uD83D\\uDCC1 Cleaned filename: \".concat(cleanFileName));\n            const { data, error } = await supabase.storage.from('csv-files').upload(filePath, file, {\n                cacheControl: '3600',\n                upsert: false\n            });\n            if (error) {\n                console.error('❌ Storage upload error:', error);\n                throw new Error(\"Błąd uploadu: \".concat(error.message));\n            }\n            console.log('✅ File uploaded successfully:', data.path);\n            return data.path;\n        } catch (error) {\n            console.error('❌ Upload failed:', error);\n            throw error;\n        }\n    },\n    // Pobierz publiczny URL pliku\n    getPublicUrl (path) {\n        const { data } = supabase.storage.from('csv-files').getPublicUrl(path);\n        return data.publicUrl;\n    },\n    // Usuń plik z bucket\n    async deleteFile (path) {\n        const { error } = await supabase.storage.from('csv-files').remove([\n            path\n        ]);\n        if (error) {\n            console.error('❌ File deletion error:', error);\n            throw new Error(\"Błąd usuwania pliku: \".concat(error.message));\n        }\n    }\n};\n// CSV Import API\nconst csvImportApi = {\n    // Parsuj CSV i zwróć dane\n    parseCSV (csvText) {\n        const lines = csvText.split('\\n').filter((line)=>line.trim() !== '');\n        if (lines.length < 2) {\n            throw new Error('Plik CSV jest pusty lub zawiera tylko nagłówki');\n        }\n        // Parsowanie z obsługą cudzysłowów\n        const parseCSVLine = (line)=>{\n            const result = [];\n            let current = '';\n            let inQuotes = false;\n            for(let i = 0; i < line.length; i++){\n                const char = line[i];\n                if (char === '\"') {\n                    inQuotes = !inQuotes;\n                } else if (char === ',' && !inQuotes) {\n                    result.push(current.trim());\n                    current = '';\n                } else {\n                    current += char;\n                }\n            }\n            result.push(current.trim());\n            return result.map((cell)=>cell.replace(/^\"|\"$/g, '')) // Usuń cudzysłowy\n            ;\n        };\n        const headers = parseCSVLine(lines[0]);\n        const rows = lines.slice(1).map(parseCSVLine);\n        return {\n            headers,\n            rows\n        };\n    },\n    // Mapuj nagłówki CSV na pola bazy danych\n    mapHeaders (headers) {\n        const mapping = {};\n        const fieldMappings = [\n            {\n                fields: [\n                    'first_name',\n                    'imię',\n                    'name',\n                    'firstName'\n                ],\n                dbField: 'first_name'\n            },\n            {\n                fields: [\n                    'last_name',\n                    'nazwisko',\n                    'surname',\n                    'lastName'\n                ],\n                dbField: 'last_name'\n            },\n            {\n                fields: [\n                    'company_name',\n                    'firma',\n                    'company',\n                    'companyName',\n                    'nazwa'\n                ],\n                dbField: 'company_name'\n            },\n            {\n                fields: [\n                    'nip',\n                    'tax_id',\n                    'taxId'\n                ],\n                dbField: 'nip'\n            },\n            {\n                fields: [\n                    'phone',\n                    'telefon',\n                    'telephone'\n                ],\n                dbField: 'phone'\n            },\n            {\n                fields: [\n                    'email',\n                    'e-mail',\n                    'mail'\n                ],\n                dbField: 'email'\n            },\n            {\n                fields: [\n                    'website',\n                    'www',\n                    'strona',\n                    'url'\n                ],\n                dbField: 'website'\n            },\n            {\n                fields: [\n                    'notes',\n                    'notatka',\n                    'note',\n                    'comment'\n                ],\n                dbField: 'notes'\n            },\n            {\n                fields: [\n                    'status'\n                ],\n                dbField: 'status'\n            }\n        ];\n        for (const fieldMapping of fieldMappings){\n            for(let i = 0; i < headers.length; i++){\n                const header = headers[i].toLowerCase().trim();\n                if (fieldMapping.fields.some((field)=>header.includes(field))) {\n                    mapping[fieldMapping.dbField] = i;\n                    break;\n                }\n            }\n        }\n        return mapping;\n    },\n    // Waliduj wymagane pola\n    validateRequiredFields (mapping) {\n        const requiredFields = [\n            'company_name'\n        ];\n        const missingFields = requiredFields.filter((field)=>!(field in mapping));\n        if (missingFields.length > 0) {\n            throw new Error(\"Brak wymaganych kolumn: \".concat(missingFields.join(', '), \". Wymagane: Firma/Nazwa\"));\n        }\n    },\n    // Sprawdź dostępne kolumny i pokaż informacje\n    analyzeColumns (mapping, headers) {\n        const allPossibleFields = [\n            {\n                field: 'first_name',\n                displayName: 'Imię',\n                required: false\n            },\n            {\n                field: 'last_name',\n                displayName: 'Nazwisko',\n                required: false\n            },\n            {\n                field: 'company_name',\n                displayName: 'Firma/Nazwa',\n                required: true\n            },\n            {\n                field: 'phone',\n                displayName: 'Telefon',\n                required: false\n            },\n            {\n                field: 'email',\n                displayName: 'Email',\n                required: false\n            },\n            {\n                field: 'nip',\n                displayName: 'NIP',\n                required: false\n            },\n            {\n                field: 'website',\n                displayName: 'Strona WWW',\n                required: false\n            },\n            {\n                field: 'notes',\n                displayName: 'Notatki',\n                required: false\n            },\n            {\n                field: 'status',\n                displayName: 'Status',\n                required: false\n            }\n        ];\n        const found = [];\n        const missing = [];\n        const optional = [];\n        allPossibleFields.forEach((param)=>{\n            let { field, displayName, required } = param;\n            if (field in mapping) {\n                found.push(displayName);\n            } else if (required) {\n                missing.push(displayName);\n            } else {\n                optional.push(displayName);\n            }\n        });\n        return {\n            found,\n            missing,\n            optional\n        };\n    },\n    // Przekształć wiersz CSV na obiekt klienta\n    rowToClient (row, mapping, user, locationId) {\n        const getField = function(field) {\n            let defaultValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'brak informacji';\n            const index = mapping[field];\n            if (index === undefined) {\n                return defaultValue;\n            }\n            const value = (row[index] || '').trim();\n            return value === '' ? defaultValue : value;\n        };\n        // Walidacja statusu\n        const rawStatus = getField('status', 'canvas').toLowerCase();\n        const validStatuses = [\n            'canvas',\n            'brak_kontaktu',\n            'nie_zainteresowany',\n            'zdenerwowany',\n            'antysale',\n            'sale',\n            '$$'\n        ];\n        const status = validStatuses.includes(rawStatus) ? rawStatus : 'canvas';\n        return {\n            first_name: getField('first_name'),\n            last_name: getField('last_name'),\n            company_name: getField('company_name', ''),\n            nip: getField('nip'),\n            phone: getField('phone'),\n            email: getField('email'),\n            website: getField('website'),\n            notes: getField('notes'),\n            status,\n            edited_by: user.id,\n            edited_at: new Date().toISOString(),\n            owner_id: user.id,\n            location_id: locationId || user.location_id,\n            last_edited_by_name: user.full_name,\n            last_edited_by_avatar_url: user.avatar_url\n        };\n    },\n    // Import pełnego CSV do bazy danych\n    async importCSV (file, user, locationId, onProgress) {\n        try {\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 0,\n                total: 100,\n                status: 'Uploading pliku...'\n            });\n            // 1. Upload pliku do Storage\n            const filePath = await storageApi.uploadCSV(file, user);\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 20,\n                total: 100,\n                status: 'Parsowanie CSV...'\n            });\n            // 2. Czytanie i parsowanie CSV\n            const csvText = await file.text();\n            const { headers, rows } = csvImportApi.parseCSV(csvText);\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 40,\n                total: 100,\n                status: 'Mapowanie kolumn...'\n            });\n            // 3. Mapowanie nagłówków\n            const mapping = csvImportApi.mapHeaders(headers);\n            csvImportApi.validateRequiredFields(mapping);\n            // 4. Analiza dostępnych kolumn\n            const columnAnalysis = csvImportApi.analyzeColumns(mapping, headers);\n            console.log('📊 CSV Headers:', headers);\n            console.log('📊 Field mapping:', mapping);\n            console.log('📊 Rows to import:', rows.length);\n            console.log('✅ Znalezione kolumny:', columnAnalysis.found);\n            console.log('❌ Brakujące wymagane:', columnAnalysis.missing);\n            console.log('⚪ Opcjonalne (będą \"brak informacji\"):', columnAnalysis.optional);\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 50,\n                total: 100,\n                status: \"Importowanie \".concat(rows.length, \" klient\\xf3w...\")\n            });\n            // 4. Import wierszy do bazy\n            const results = {\n                success: 0,\n                errors: []\n            };\n            for(let i = 0; i < rows.length; i++){\n                try {\n                    const row = rows[i];\n                    // Sprawdź czy wiersz nie jest pusty\n                    if (row.every((cell)=>cell.trim() === '')) {\n                        continue;\n                    }\n                    const clientData = csvImportApi.rowToClient(row, mapping, user, locationId);\n                    // Walidacja podstawowych danych\n                    if (!clientData.company_name || clientData.company_name.trim() === '') {\n                        results.errors.push({\n                            row: i + 2,\n                            error: 'Brak wymaganych danych: firma/nazwa',\n                            data: row\n                        });\n                        continue;\n                    }\n                    // Dodaj klienta do bazy\n                    await clientsApi.createClient(clientData, user);\n                    results.success++;\n                    // Aktualizuj progress\n                    const progress = 50 + Math.floor(i / rows.length * 40);\n                    onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                        current: progress,\n                        total: 100,\n                        status: \"Zaimportowano \".concat(results.success, \"/\").concat(rows.length, \" klient\\xf3w\")\n                    });\n                } catch (error) {\n                    console.error(\"❌ Błąd importu wiersza \".concat(i + 2, \":\"), error);\n                    results.errors.push({\n                        row: i + 2,\n                        error: error instanceof Error ? error.message : 'Nieznany błąd',\n                        data: rows[i]\n                    });\n                }\n            }\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 95,\n                total: 100,\n                status: 'Finalizowanie...'\n            });\n            // 5. Opcjonalnie usuń plik z Storage (lub zachowaj dla historii)\n            // await storageApi.deleteFile(filePath)\n            onProgress === null || onProgress === void 0 ? void 0 : onProgress({\n                current: 100,\n                total: 100,\n                status: 'Zakończono!'\n            });\n            console.log(\"✅ Import zakończony: \".concat(results.success, \" sukces, \").concat(results.errors.length, \" błęd\\xf3w\"));\n            return results;\n        } catch (error) {\n            console.error('❌ CSV Import failed:', error);\n            throw error;\n        }\n    }\n};\n// Funkcje sprawdzania uprawnień z hierarchią i lokalizacją\nconst permissionsApi = {\n    // Sprawdź czy użytkownik może widzieć klienta (zgodnie z RLS)\n    canView: (client, user)=>{\n        // Szef i admin widzą wszystko\n        if ([\n            'szef',\n            'admin'\n        ].includes(user.role)) {\n            return true;\n        }\n        // Sprawdź czy klient jest w tej samej lokalizacji co użytkownik\n        const sameLocation = client.location_id === user.location_id;\n        if (!sameLocation) {\n            return false;\n        }\n        switch(user.role){\n            case 'pracownik':\n                // Pracownik widzi tylko swoich klientów w swojej lokalizacji\n                return client.owner_id === user.id || client.owner_id === null || client.edited_by === user.id;\n            case 'junior_manager':\n            case 'manager':\n            case 'project_manager':\n                // Menedżerowie widzą wszystkich klientów w swojej lokalizacji\n                return true;\n            default:\n                return false;\n        }\n    },\n    // Sprawdź czy użytkownik może edytować klienta\n    canEdit: (client, user)=>{\n        // Takie same reguły jak canView\n        return permissionsApi.canView(client, user);\n    },\n    // Sprawdź czy użytkownik może usunąć klienta\n    canDelete: (client, user)=>{\n        // Szef i admin mogą usuwać wszystko\n        if ([\n            'szef',\n            'admin'\n        ].includes(user.role)) {\n            return true;\n        }\n        // Menedżerowie mogą usuwać w swojej lokalizacji\n        if ([\n            'manager',\n            'project_manager',\n            'junior_manager'\n        ].includes(user.role)) {\n            return client.location_id === user.location_id;\n        }\n        // Pracownicy nie mogą usuwać\n        return false;\n    },\n    // Sprawdź czy użytkownik może przypisywać klientów\n    canAssignClients: (user)=>{\n        return [\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(user.role);\n    },\n    // Sprawdź czy użytkownik może zmieniać role innych użytkowników\n    canChangeRoles: (user)=>{\n        return [\n            'szef',\n            'admin'\n        ].includes(user.role);\n    },\n    // Sprawdź czy użytkownik może dostęp do zaawansowanych raportów\n    canAccessAdvancedReports: (user)=>{\n        return [\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(user.role);\n    },\n    // Sprawdź czy użytkownik może widzieć wszystkie lokalizacje\n    canViewAllLocations: (user)=>{\n        return [\n            'szef',\n            'admin'\n        ].includes(user.role);\n    },\n    // Sprawdź czy użytkownik może filtrować po lokalizacjach\n    canFilterByLocation: (user)=>{\n        return [\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(user.role);\n    },\n    // Sprawdź poziom hierarchii - czy user1 może zarządzać user2\n    canManageUser: (user1, user2)=>{\n        // Admin może zarządzać wszystkimi\n        if (user1.role === 'admin') return true;\n        // Szef może zarządzać wszystkimi oprócz adminów\n        if (user1.role === 'szef' && user2.role !== 'admin') return true;\n        // Inni mogą zarządzać tylko podwładnymi w tej samej lokalizacji\n        const sameLocation = user1.location_id === user2.location_id;\n        const higherInHierarchy = (user1.role_hierarchy_level || 99) < (user2.role_hierarchy_level || 99);\n        return sameLocation && higherInHierarchy;\n    }\n};\n// Funkcje API dla klientów z systemem uprawnień\nconst clientsApi = {\n    // Funkcja testowa - podstawowe zapytanie do klientów\n    async testBasicQuery () {\n        try {\n            console.log('🔍 Testowe zapytanie do tabeli clients...');\n            const { data, error } = await supabase.from('clients').select('*').limit(5);\n            console.log('Wynik testu - data:', data);\n            console.log('Wynik testu - error:', error);\n            return {\n                data,\n                error\n            };\n        } catch (error) {\n            console.error('Błąd testowego zapytania:', error);\n            return {\n                data: null,\n                error\n            };\n        }\n    },\n    // Pobierz klientów z filtrami uprawnień\n    // 🚀 NOWE: Funkcja z paginacją zwracająca obiekt z metadanymi\n    async getClientsPaginated (user, filters) {\n        try {\n            console.log('🔄 Rozpoczynam pobieranie klientów dla użytkownika:', user.id, user.role);\n            // Użyj JOIN aby pobrać klientów z danymi właścicieli i lokalizacji w jednym zapytaniu\n            // 🚀 OPTYMALIZACJA: Wybierz tylko niezbędne pola + lokalizacja + reminder\n            let query = supabase.from('clients').select(\"\\n          id,\\n          first_name,\\n          last_name,\\n          company_name,\\n          nip,\\n          phone,\\n          email,\\n          website,\\n          status,\\n          notes,\\n          reminder,\\n          owner_id,\\n          location_id,\\n          edited_by,\\n          edited_at,\\n          created_at,\\n          updated_at,\\n          status_changed_at,\\n          last_phone_click,\\n          last_edited_by_name,\\n          last_edited_by_avatar_url,\\n          owner:users!owner_id (\\n            id,\\n            full_name,\\n            email,\\n            avatar_url\\n          ),\\n          location:locations!location_id (\\n            id,\\n            name,\\n            code,\\n            currency,\\n            timezone\\n          )\\n        \", {\n                count: 'exact'\n            });\n            // 🚀 SORTOWANIE: Obsługa dynamicznego sortowania\n            const sortField = (filters === null || filters === void 0 ? void 0 : filters.sortBy) || 'updated_at';\n            const isAscending = (filters === null || filters === void 0 ? void 0 : filters.sortDirection) === 'asc';\n            query = query.order(sortField, {\n                ascending: isAscending\n            });\n            // Dodatkowe filtry\n            if (filters === null || filters === void 0 ? void 0 : filters.date) {\n                query = query.gte('updated_at', filters.date);\n            }\n            if (filters === null || filters === void 0 ? void 0 : filters.status) {\n                query = query.eq('status', filters.status);\n            }\n            if (filters === null || filters === void 0 ? void 0 : filters.employee) {\n                query = query.eq('edited_by', filters.employee);\n            }\n            // 🚀 NOWE: Filtr wyszukiwania\n            if (filters === null || filters === void 0 ? void 0 : filters.search) {\n                const searchTerm = filters.search.toLowerCase();\n                query = query.or(\"first_name.ilike.%\".concat(searchTerm, \"%,last_name.ilike.%\").concat(searchTerm, \"%,company_name.ilike.%\").concat(searchTerm, \"%,phone.ilike.%\").concat(searchTerm, \"%,email.ilike.%\").concat(searchTerm, \"%\"));\n            }\n            // 🚀 NOWE: Filtr lokalizacji\n            if (filters === null || filters === void 0 ? void 0 : filters.location) {\n                query = query.eq('location_id', filters.location);\n            }\n            // 🚀 NOWE: Paginacja\n            if ((filters === null || filters === void 0 ? void 0 : filters.page) && (filters === null || filters === void 0 ? void 0 : filters.pageSize)) {\n                const from = (filters.page - 1) * filters.pageSize;\n                const to = from + filters.pageSize - 1;\n                query = query.range(from, to);\n                console.log(\"\\uD83D\\uDCC4 Paginacja: strona \".concat(filters.page, \", rozmiar \").concat(filters.pageSize, \", zakres: \").concat(from, \"-\").concat(to));\n            }\n            console.log('🔄 Wykonuję zapytanie z JOIN i liczeniem...');\n            const { data: clients, error, count } = await query;\n            if (error) {\n                console.error('❌ Błąd zapytania clients:', error);\n                throw error;\n            }\n            if (!clients || clients.length === 0) {\n                console.log('ℹ️ Brak klientów w bazie danych');\n                return {\n                    clients: [],\n                    total: 0,\n                    page: (filters === null || filters === void 0 ? void 0 : filters.page) || 1,\n                    pageSize: (filters === null || filters === void 0 ? void 0 : filters.pageSize) || 0\n                };\n            }\n            // Przekształć dane - Supabase JOIN zwraca owner i location jako tablice, ale potrzebujemy pojedynczych obiektów\n            const transformedClients = clients.map((client)=>({\n                    ...client,\n                    owner: client.owner && Array.isArray(client.owner) && client.owner.length > 0 ? client.owner[0] // Weź pierwszy element z tablicy\n                     : client.owner && !Array.isArray(client.owner) ? client.owner // Już jest pojedynczym obiektem\n                     : null,\n                    location: client.location && Array.isArray(client.location) && client.location.length > 0 ? client.location[0] // Weź pierwszy element z tablicy\n                     : client.location && !Array.isArray(client.location) ? client.location // Już jest pojedynczym obiektem\n                     : null // Brak lokalizacji\n                }));\n            // DEBUG: Sprawdź dane właścicieli\n            const clientsWithOwners = transformedClients.filter((client)=>client.owner);\n            const clientsWithoutOwners = transformedClients.filter((client)=>!client.owner);\n            console.log('✅ Klienci z właścicielami:', clientsWithOwners.length);\n            console.log('❌ Klienci bez właścicieli:', clientsWithoutOwners.length);\n            if (clientsWithOwners.length > 0) {\n                var _clientsWithOwners__owner, _clientsWithOwners__owner1;\n                console.log('👤 Przykład klienta z właścicielem:', {\n                    client: \"\".concat(clientsWithOwners[0].first_name, \" \").concat(clientsWithOwners[0].last_name),\n                    owner_id: clientsWithOwners[0].owner_id,\n                    owner_name: (_clientsWithOwners__owner = clientsWithOwners[0].owner) === null || _clientsWithOwners__owner === void 0 ? void 0 : _clientsWithOwners__owner.full_name,\n                    owner_email: (_clientsWithOwners__owner1 = clientsWithOwners[0].owner) === null || _clientsWithOwners__owner1 === void 0 ? void 0 : _clientsWithOwners__owner1.email\n                });\n            }\n            // 🚀 NOWE: Zwróć dane z informacją o paginacji\n            return {\n                clients: transformedClients,\n                total: count || transformedClients.length,\n                page: (filters === null || filters === void 0 ? void 0 : filters.page) || 1,\n                pageSize: (filters === null || filters === void 0 ? void 0 : filters.pageSize) || transformedClients.length\n            };\n        } catch (error) {\n            console.error('❌ Błąd w getClientsPaginated:', error);\n            throw error;\n        }\n    },\n    // 🔄 KOMPATYBILNOŚĆ: Stara funkcja zwracająca tylko tablicę klientów\n    async getClients (user, filters) {\n        try {\n            const result = await this.getClientsPaginated(user, filters);\n            return result.clients;\n        } catch (error) {\n            console.error('❌ Błąd w getClients:', error);\n            throw error;\n        }\n    },\n    // Dodaj nowego klienta z automatycznym przypisaniem właściciela\n    async createClient (client, user) {\n        // ZABEZPIECZENIE: Upewnij się że status nie jest pusty\n        const safeStatus = client.status || 'canvas';\n        const clientToCreate = {\n            ...client,\n            status: safeStatus,\n            owner_id: user.id,\n            location_id: client.location_id || user.location_id,\n            edited_by: user.id,\n            last_edited_by_name: user.full_name,\n            last_edited_by_avatar_url: user.avatar_url,\n            // Jeśli status to \"canvas\", ustaw status_changed_at\n            ...safeStatus === 'canvas' && {\n                status_changed_at: new Date().toISOString()\n            },\n            // Konwertuj undefined reminder na null dla bazy danych\n            reminder: client.reminder || null\n        };\n        console.log('📊 Tworzenie klienta z danymi:', clientToCreate);\n        const { data, error } = await supabase.from('clients').insert([\n            clientToCreate\n        ]).select().single();\n        if (error) {\n            console.error('❌ Błąd createClient:', error);\n            throw error;\n        }\n        return data;\n    },\n    // Zaktualizuj klienta z sprawdzeniem uprawnień\n    async updateClient (id, updates, user) {\n        try {\n            console.log('🔄 updateClient START:', {\n                id,\n                updates,\n                user: user.email\n            });\n            // Pobierz aktualny stan klienta aby sprawdzić czy status się zmienia\n            const { data: currentClient, error: fetchError } = await supabase.from('clients').select('status, owner_id').eq('id', id).single();\n            if (fetchError) {\n                console.error('❌ Błąd pobierania aktualnego klienta:', fetchError);\n                throw new Error(\"Nie można pobrać aktualnego stanu klienta: \".concat(fetchError.message));\n            }\n            console.log('✅ Aktualny stan klienta:', currentClient);\n            // NOWA LOGIKA: Każda osoba która edytuje klienta zostaje jego właścicielem\n            let updatedData = {\n                ...updates\n            };\n            // ZABEZPIECZENIE: Jeśli status jest w aktualizacji, upewnij się że nie jest pusty\n            if ('status' in updatedData && !updatedData.status) {\n                console.log('⚠️ UWAGA: Pusty status w aktualizacji - ustawiam domyślny \"canvas\"');\n                updatedData.status = 'canvas';\n            }\n            // Sprawdź czy status się zmienia\n            const statusChanged = updatedData.status && updatedData.status !== currentClient.status;\n            if (statusChanged) {\n                updatedData.status_changed_at = new Date().toISOString();\n                console.log('\\uD83D\\uDCCA Status zmieniony z \"'.concat(currentClient.status, '\" na \"').concat(updates.status, '\" - ustawiam status_changed_at'));\n                // Powiadomienie o zmianie na canvas\n                if (updates.status === 'canvas') {\n                    console.log('🔔 POWIADOMIENIE: Klient przeszedł na status CANVAS - start trackingu czasu!');\n                }\n            }\n            // Zawsze przypisz edytującego jako właściciela\n            updatedData.owner_id = user.id;\n            console.log(\"\\uD83C\\uDFAF Przypisuję klienta \".concat(id, \" do użytkownika \").concat(user.id, \" (\").concat(user.email, \") jako właściciela\"));\n            // Zapisz informacje o edytorze (szczególnie ważne dla pracowników)\n            updatedData.last_edited_by_name = user.full_name;\n            updatedData.last_edited_by_avatar_url = user.avatar_url;\n            console.log(\"\\uD83D\\uDC64 Zapisuję dane edytora: \".concat(user.full_name, \" (rola: \").concat(user.role, \")\"));\n            // Jeśli to pracownik i zmienia status - dodatkowy log\n            if (user.role === 'pracownik' && statusChanged) {\n                console.log(\"\\uD83D\\uDC77 Pracownik \".concat(user.email, ' zmienia status z \"').concat(currentClient.status, '\" na \"').concat(updates.status, '\"'));\n            }\n            console.log('🔄 Dane do aktualizacji:', updatedData);\n            // Przygotuj finalne dane do UPDATE\n            const finalData = {\n                ...updatedData,\n                edited_by: user.id,\n                updated_at: new Date().toISOString(),\n                // Konwertuj undefined reminder na null dla bazy danych\n                ...updatedData.reminder !== undefined && {\n                    reminder: updatedData.reminder || null\n                }\n            };\n            console.log('🔄 Finalne dane do UPDATE:', finalData);\n            // Bezpośrednia aktualizacja\n            const { data, error } = await supabase.from('clients').update(finalData).eq('id', id).select().single();\n            if (error) {\n                console.error('❌ Błąd UPDATE clients:', error);\n                console.error('❌ Kod błędu:', error.code);\n                console.error('❌ Szczegóły:', error.details);\n                console.error('❌ Hint:', error.hint);\n                throw new Error(\"Błąd aktualizacji: \".concat(error.message, \" (kod: \").concat(error.code, \")\"));\n            }\n            console.log('✅ updateClient SUCCESS:', data);\n            return data;\n        } catch (error) {\n            console.error('❌ updateClient FAILED:', error);\n            throw error;\n        }\n    },\n    // Aktualizuj czas ostatniego kliknięcia telefonu\n    async updateLastPhoneClick (clientId, user) {\n        console.log('📞 Aktualizuję czas ostatniego kliknięcia telefonu:', clientId);\n        const { data, error } = await supabase.from('clients').update({\n            last_phone_click: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        }).eq('id', clientId).select().single();\n        if (error) {\n            console.error('❌ Błąd updateLastPhoneClick:', error);\n            throw error;\n        }\n        // Zaloguj w activity_logs\n        try {\n            await activityLogsApi.createLog({\n                client_id: clientId,\n                changed_by: user.id,\n                change_type: 'update',\n                field_changed: 'last_phone_click',\n                old_value: undefined,\n                new_value: data.last_phone_click\n            });\n        } catch (logError) {\n            console.error('❌ Błąd logowania activity_logs (updateLastPhoneClick):', logError);\n        }\n        return data;\n    },\n    // Usuń klienta z sprawdzeniem uprawnień\n    async deleteClient (id, user) {\n        // Bezpośrednie usunięcie bez sprawdzania uprawnień\n        const { error } = await supabase.from('clients').delete().eq('id', id);\n        if (error) throw error;\n    },\n    // Przypisz klienta do innego użytkownika (tylko manager+)\n    async assignClient (clientId, newOwnerId, user) {\n        if (!permissionsApi.canAssignClients(user)) {\n            throw new Error('Brak uprawnień do przypisywania klientów');\n        }\n        const { data, error } = await supabase.from('clients').update({\n            owner_id: newOwnerId,\n            edited_by: user.id,\n            updated_at: new Date().toISOString()\n        }).eq('id', clientId).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Funkcja do czyszczenia nieistniejących owner_id\n    async cleanupInvalidOwnerIds () {\n        try {\n            console.log('🧹 Rozpoczynam czyszczenie nieistniejących owner_id...');\n            // Pobierz wszystkich klientów z owner_id\n            const { data: allClients, error: clientsError } = await supabase.from('clients').select('id, owner_id, first_name, last_name').not('owner_id', 'is', null);\n            if (clientsError) throw clientsError;\n            console.log('📊 Znaleziono klientów z owner_id:', (allClients === null || allClients === void 0 ? void 0 : allClients.length) || 0);\n            if (!allClients || allClients.length === 0) {\n                return {\n                    cleaned: 0,\n                    errors: []\n                };\n            }\n            // Pobierz wszystkie unikalne owner_id\n            const ownerIds = [\n                ...new Set(allClients.map((c)=>c.owner_id))\n            ];\n            console.log('🔍 Sprawdzam owner_id:', ownerIds);\n            // Sprawdź które użytkownicy istnieją\n            const { data: existingUsers, error: usersError } = await supabase.from('users').select('id').in('id', ownerIds);\n            if (usersError) throw usersError;\n            const existingUserIds = (existingUsers || []).map((u)=>u.id);\n            console.log('✅ Istniejący użytkownicy:', existingUserIds);\n            // Znajdź klientów z nieistniejącymi owner_id\n            const clientsToClean = allClients.filter((client)=>client.owner_id && !existingUserIds.includes(client.owner_id));\n            console.log('🧹 Klienci do wyczyszczenia:', clientsToClean.length);\n            if (clientsToClean.length === 0) {\n                console.log('✅ Brak klientów do wyczyszczenia');\n                return {\n                    cleaned: 0,\n                    errors: []\n                };\n            }\n            // Wyczyść owner_id dla problematycznych klientów\n            const cleanupResults = [];\n            const errors = [];\n            for (const client of clientsToClean){\n                try {\n                    console.log(\"\\uD83E\\uDDF9 Czyszczę owner_id dla \".concat(client.first_name, \" \").concat(client.last_name, \" (\").concat(client.owner_id, \")\"));\n                    const { error } = await supabase.from('clients').update({\n                        owner_id: null\n                    }).eq('id', client.id);\n                    if (error) {\n                        console.error(\"❌ Błąd czyszczenia \".concat(client.id, \":\"), error);\n                        errors.push({\n                            client: client.id,\n                            error: error.message\n                        });\n                    } else {\n                        cleanupResults.push(client.id);\n                    }\n                } catch (err) {\n                    console.error(\"❌ Wyjątek podczas czyszczenia \".concat(client.id, \":\"), err);\n                    errors.push({\n                        client: client.id,\n                        error: String(err)\n                    });\n                }\n            }\n            console.log(\"✅ Wyczyszczono \".concat(cleanupResults.length, \" klient\\xf3w\"));\n            if (errors.length > 0) {\n                console.error(\"❌ Błędy przy \".concat(errors.length, \" klientach:\"), errors);\n            }\n            return {\n                cleaned: cleanupResults.length,\n                errors,\n                cleanedClients: clientsToClean.filter((c)=>cleanupResults.includes(c.id))\n            };\n        } catch (error) {\n            console.error('❌ Błąd w cleanupInvalidOwnerIds:', error);\n            throw error;\n        }\n    },\n    // Subskrypcja na zmiany w czasie rzeczywistym\n    subscribeToChanges (callback) {\n        return supabase.channel('clients_changes').on('postgres_changes', {\n            event: '*',\n            schema: 'public',\n            table: 'clients'\n        }, callback).subscribe();\n    },\n    // Subskrypcja na zmiany owner_id dla real-time aktualizacji\n    subscribeToOwnerChanges (callback) {\n        try {\n            // Sprawdź czy callback jest funkcją\n            if (typeof callback !== 'function') {\n                console.error('❌ Callback nie jest funkcją w subscribeToOwnerChanges');\n                throw new Error('Callback musi być funkcją');\n            }\n            console.log('📡 Tworzę kanał Supabase dla owner changes...');\n            // Najpierw sprawdź czy real-time jest włączony i dostępny\n            const channelName = \"clients_owner_changes_\".concat(Date.now());\n            console.log('📡 Nazwa kanału:', channelName);\n            const channel = supabase.channel(channelName).on('postgres_changes', {\n                event: 'UPDATE',\n                schema: 'public',\n                table: 'clients',\n                filter: 'owner_id=neq.null' // Tylko gdy owner_id się zmienia\n            }, (payload)=>{\n                try {\n                    console.log('📡 Real-time payload otrzymany:', {\n                        eventType: payload.eventType,\n                        table: payload.table,\n                        changes: payload.new ? {\n                            id: payload.new.id,\n                            owner_id: payload.new.owner_id,\n                            first_name: payload.new.first_name,\n                            last_name: payload.new.last_name\n                        } : 'brak danych'\n                    });\n                    if (typeof callback === 'function') {\n                        callback(payload);\n                    } else {\n                        console.error('❌ Callback nie jest funkcją podczas wywołania');\n                    }\n                } catch (callbackError) {\n                    console.error('❌ Błąd w callback:', callbackError);\n                }\n            }).subscribe((status, err)=>{\n                console.log('📡 Subskrypcja owner_changes status:', status);\n                if (status === 'SUBSCRIBED') {\n                    console.log('✅ Subskrypcja owner_changes aktywna');\n                } else if (status === 'CLOSED') {\n                    console.warn('⚠️ Subskrypcja owner_changes zamknięta - prawdopodobnie problem z autoryzacją real-time');\n                    console.warn('💡 Real-time może być wyłączony w ustawieniach Supabase lub brakuje uprawnień');\n                } else if (status === 'CHANNEL_ERROR') {\n                    console.error('❌ Błąd kanału real-time:', err);\n                    console.error('💡 Sprawdź ustawienia real-time w Supabase Dashboard');\n                } else if (status === 'TIMED_OUT') {\n                    console.warn('⏰ Timeout subskrypcji - problemy z połączeniem WebSocket');\n                } else {\n                    console.log('📡 Status subskrypcji:', status);\n                }\n            });\n            // Sprawdź stan kanału po krótkim czasie\n            setTimeout(()=>{\n                if (channel.state === 'closed') {\n                    console.warn('⚠️ Kanał real-time został zamknięty - prawdopodobnie RLS blokuje real-time lub feature jest wyłączony');\n                }\n            }, 2000);\n            console.log('✅ Kanał owner changes utworzony');\n            return channel;\n        } catch (error) {\n            console.error('❌ Błąd w subscribeToOwnerChanges:', error);\n            console.warn('💡 Real-time nie będzie działać - aplikacja będzie używać okresowego odświeżania');\n            // Zwróć mock object aby nie powodować błędów\n            return {\n                unsubscribe: ()=>{\n                    console.log('🧹 Mock unsubscribe dla błędnego kanału');\n                }\n            };\n        }\n    },\n    // Pobierz klientów z przypomnieniami na konkretny dzień\n    async getClientsWithReminders (user, targetDate) {\n        try {\n            const today = targetDate || new Date().toISOString().split('T')[0] // format YYYY-MM-DD\n            ;\n            console.log(\"\\uD83D\\uDCC5 Pobieranie klient\\xf3w z przypomnieniami na: \".concat(today));\n            // Pobierz wszystkich klientów użytkownika (bez paginacji)\n            const allClients = await this.getClients(user);\n            // Filtruj tylko tych z przypomnieniami na dziś\n            const clientsWithTodayReminders = allClients.filter((client)=>{\n                // Sprawdź czy klient ma aktywne przypomnienie\n                const reminder = client.reminder || {\n                    enabled: false,\n                    date: '',\n                    time: '',\n                    note: ''\n                };\n                return reminder.enabled && reminder.date === today;\n            });\n            // Sortuj według godziny przypomnienia\n            const sortedClients = clientsWithTodayReminders.sort((a, b)=>{\n                var _a_reminder, _b_reminder;\n                const timeA = ((_a_reminder = a.reminder) === null || _a_reminder === void 0 ? void 0 : _a_reminder.time) || '00:00';\n                const timeB = ((_b_reminder = b.reminder) === null || _b_reminder === void 0 ? void 0 : _b_reminder.time) || '00:00';\n                return timeA.localeCompare(timeB);\n            });\n            console.log(\"✅ Znaleziono \".concat(sortedClients.length, \" klient\\xf3w z przypomnieniami na \").concat(today));\n            return sortedClients;\n        } catch (error) {\n            console.error('❌ Błąd pobierania klientów z przypomnieniami:', error);\n            throw error;\n        }\n    },\n    // Pobierz przypomnienia pogrupowane według slotów czasowych dla dashboardu\n    async getDailyScheduleWithClients (user, targetDate) {\n        try {\n            const clientsWithReminders = await this.getClientsWithReminders(user, targetDate);\n            // Definicja slotów czasowych (zgodnie z obecną strukturą dashboardu)\n            const timeSlots = [\n                {\n                    time: '8:00 - 10:00',\n                    type: 'canvas',\n                    color: '#06b6d4',\n                    startTime: '08:00',\n                    endTime: '10:00',\n                    statuses: [\n                        'canvas'\n                    ]\n                },\n                {\n                    time: '10:10 - 12:00',\n                    type: 'sales',\n                    color: '#10b981',\n                    startTime: '10:10',\n                    endTime: '12:00',\n                    statuses: [\n                        'sale'\n                    ]\n                },\n                {\n                    time: '12:30 - 15:00',\n                    type: 'antysales',\n                    color: '#f59e0b',\n                    startTime: '12:30',\n                    endTime: '15:00',\n                    statuses: [\n                        'antysale'\n                    ]\n                },\n                {\n                    time: '15:10 - 16:30',\n                    type: 'canvas + sales',\n                    color: '#8b5cf6',\n                    startTime: '15:10',\n                    endTime: '16:30',\n                    statuses: [\n                        'canvas',\n                        'sale'\n                    ]\n                }\n            ];\n            // Przypisz klientów do odpowiednich slotów na podstawie TYLKO czasu przypomnienia\n            const slotsWithClients = timeSlots.map((slot)=>{\n                const slotClients = clientsWithReminders.filter((client)=>{\n                    var _client_reminder;\n                    const reminderTime = ((_client_reminder = client.reminder) === null || _client_reminder === void 0 ? void 0 : _client_reminder.time) || '00:00';\n                    const [hours, minutes] = reminderTime.split(':').map(Number);\n                    const reminderMinutes = hours * 60 + minutes;\n                    const [startHours, startMins] = slot.startTime.split(':').map(Number);\n                    const [endHours, endMins] = slot.endTime.split(':').map(Number);\n                    const startMinutes = startHours * 60 + startMins;\n                    const endMinutes = endHours * 60 + endMins;\n                    // Sprawdź czy godzina przypomnienia mieści się w slocie czasowym\n                    const timeInSlot = reminderMinutes >= startMinutes && reminderMinutes <= endMinutes;\n                    console.log(\"\\uD83D\\uDD50 Klient \".concat(client.first_name, \" \").concat(client.last_name, \": czas \").concat(reminderTime, \" (\").concat(reminderMinutes, \"min) vs slot \").concat(slot.time, \" (\").concat(startMinutes, \"-\").concat(endMinutes, \"min) = \").concat(timeInSlot ? 'PASUJE' : 'NIE PASUJE'));\n                    return timeInSlot;\n                });\n                console.log(\"\\uD83D\\uDCCA Slot \".concat(slot.time, \": \").concat(slotClients.length, \" klient\\xf3w\"));\n                return {\n                    ...slot,\n                    clients: slotClients\n                };\n            });\n            console.log(\"\\uD83D\\uDCCA Plan dnia z \".concat(slotsWithClients.reduce((sum, slot)=>sum + slot.clients.length, 0), \" klientami\"));\n            return slotsWithClients;\n        } catch (error) {\n            console.error('❌ Błąd tworzenia planu dnia:', error);\n            throw error;\n        }\n    }\n};\n// Funkcje API dla logów aktywności\nconst activityLogsApi = {\n    // Pobierz logi aktywności\n    async getLogs (clientId) {\n        let query = supabase.from('activity_logs').select(\"\\n        *,\\n        clients(first_name, last_name)\\n      \").order('timestamp', {\n            ascending: false\n        }).limit(50);\n        if (clientId) {\n            query = query.eq('client_id', clientId);\n        }\n        const { data, error } = await query;\n        if (error) throw error;\n        return data;\n    },\n    // Pobierz historię zmian dla konkretnego klienta\n    async getClientHistory (clientId) {\n        try {\n            console.log('Pobieranie historii dla klienta:', clientId);\n            // Sprawdź czy użytkownik jest zalogowany\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('Aktualny użytkownik:', user === null || user === void 0 ? void 0 : user.id);\n            if (!user) {\n                console.error('Użytkownik nie jest zalogowany');\n                return [];\n            }\n            const { data, error } = await supabase.from('activity_logs').select(\"\\n          id,\\n          client_id,\\n          changed_by,\\n          change_type,\\n          field_changed,\\n          old_value,\\n          new_value,\\n          timestamp\\n        \").eq('client_id', clientId).order('timestamp', {\n                ascending: false\n            }).limit(20);\n            if (error) {\n                var _error_message;\n                console.error('Błąd query activity_logs:', error);\n                console.error('Szczegóły błędu:', JSON.stringify(error, null, 2));\n                // Sprawdź czy to problem z RLS\n                if (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS'))) {\n                    console.error('Problem z Row Level Security - użytkownik może nie mieć dostępu');\n                }\n                // Zwróć pustą tablicę zamiast rzucania błędem\n                return [];\n            }\n            console.log('Pobrano logi:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n            // Jeśli nie ma logów, zwróć pustą tablicę\n            if (!data || data.length === 0) {\n                return [];\n            }\n            // Pobierz informacje o użytkownikach osobno z avatarami\n            const userIds = [\n                ...new Set(data.map((log)=>log.changed_by).filter(Boolean))\n            ];\n            console.log('Pobieranie użytkowników:', userIds);\n            const { data: users, error: usersError } = await supabase.from('users').select('id, full_name, role, avatar_url').in('id', userIds);\n            if (usersError) {\n                console.error('Błąd pobierania użytkowników:', usersError);\n            // Kontynuuj bez danych użytkowników\n            }\n            console.log('Pobrano użytkowników:', (users === null || users === void 0 ? void 0 : users.length) || 0);\n            // Mapuj użytkowników do słownika dla szybkiego dostępu\n            const usersMap = (users || []).reduce((acc, user)=>{\n                acc[user.id] = user;\n                return acc;\n            }, {});\n            // Przekształć dane z informacjami o edytorze\n            const result = data.map((log)=>{\n                const user = usersMap[log.changed_by];\n                return {\n                    id: log.id,\n                    client_id: log.client_id,\n                    changed_by: log.changed_by,\n                    change_type: log.change_type,\n                    field_changed: log.field_changed,\n                    old_value: log.old_value,\n                    new_value: log.new_value,\n                    timestamp: log.timestamp,\n                    editor_name: (user === null || user === void 0 ? void 0 : user.full_name) || log.changed_by || 'Nieznany użytkownik',\n                    editor_role: (user === null || user === void 0 ? void 0 : user.role) || 'unknown',\n                    editor_avatar: (user === null || user === void 0 ? void 0 : user.avatar_url) || null\n                };\n            });\n            console.log('Zwracanie historii:', result.length, 'wpisów');\n            return result;\n        } catch (error) {\n            console.error('Błąd w getClientHistory:', error);\n            throw error;\n        }\n    },\n    // Dodaj log aktywności\n    async createLog (log) {\n        const { data, error } = await supabase.from('activity_logs').insert([\n            {\n                ...log,\n                timestamp: new Date().toISOString()\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Funkcja testowa do sprawdzania dostępu do activity_logs\n    async testActivityLogsAccess () {\n        try {\n            console.log('Testowanie dostępu do activity_logs...');\n            // Sprawdź autoryzację\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('Test - użytkownik:', user === null || user === void 0 ? void 0 : user.id, user === null || user === void 0 ? void 0 : user.email);\n            if (!user) {\n                return {\n                    success: false,\n                    error: 'Brak autoryzacji - użytkownik nie jest zalogowany'\n                };\n            }\n            // Sprawdź czy użytkownik istnieje w tabeli users\n            const { data: userProfile, error: userError } = await supabase.from('users').select('id, email, role').eq('id', user.id).single();\n            console.log('Test - profil użytkownika:', userProfile);\n            console.log('Test - błąd profilu:', userError);\n            if (userError || !userProfile) {\n                return {\n                    success: false,\n                    error: 'Użytkownik nie istnieje w tabeli users'\n                };\n            }\n            // Testuj dostęp do activity_logs\n            const { data, error, count } = await supabase.from('activity_logs').select('*', {\n                count: 'exact'\n            }).limit(1);\n            console.log('Test activity_logs - data:', data);\n            console.log('Test activity_logs - error:', error);\n            console.log('Test activity_logs - count:', count);\n            return {\n                success: !error,\n                data,\n                error,\n                count,\n                user: userProfile\n            };\n        } catch (error) {\n            console.error('Błąd testu activity_logs:', error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }\n};\n// Funkcje API dla raportów\nconst reportsApi = {\n    // Pobierz statystyki tylko pracowników z prowizją\n    async getEmployeeStats (user) {\n        try {\n            console.log('📊 Pobieranie statystyk pracowników...');\n            // KROK 1: Pobierz wszystkich użytkowników z rolą 'pracownik'\n            const { data: allEmployees, error: usersError } = await supabase.from('users').select(\"\\n          id,\\n          full_name,\\n          email,\\n          avatar_url,\\n          role\\n        \").eq('role', 'pracownik').order('full_name', {\n                ascending: true\n            });\n            if (usersError) {\n                console.error('❌ Błąd pobierania użytkowników-pracowników:', usersError);\n                throw usersError;\n            }\n            if (!allEmployees || allEmployees.length === 0) {\n                console.log('⚠️ Brak użytkowników z rolą pracownik');\n                return [];\n            }\n            console.log('✅ Pobrano wszystkich pracowników:', allEmployees.length, allEmployees.map((e)=>e.full_name));\n            // KROK 2: Pobierz statystyki z tabeli employee_stats dla tych pracowników\n            const employeeIds = allEmployees.map((emp)=>emp.id);\n            let existingStats = [];\n            try {\n                const { data, error: statsError } = await supabase.from('employee_stats').select('*').in('user_id', employeeIds);\n                if (statsError) {\n                    console.warn('⚠️ Błąd pobierania employee_stats:', statsError);\n                } else {\n                    existingStats = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać employee_stats:', error);\n            }\n            console.log('✅ Pobrano statystyki dla pracowników:', (existingStats === null || existingStats === void 0 ? void 0 : existingStats.length) || 0);\n            // KROK 3: Pobierz dzisiejsze statystyki z tabeli clients (z obsługą błędów)\n            const today = new Date().toISOString().split('T')[0];\n            let todayClients = [];\n            try {\n                const { data, error: clientsError } = await supabase.from('clients').select('status, edited_by, created_at, updated_at').gte('updated_at', \"\".concat(today, \"T00:00:00\")).lt('updated_at', \"\".concat(today, \"T23:59:59\"));\n                if (clientsError) {\n                    console.warn('⚠️ Błąd pobierania klientów z dzisiaj:', clientsError);\n                } else {\n                    todayClients = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać dzisiejszych klientów:', error);\n            }\n            console.log('✅ Pobrano dzisiejszych klientów:', todayClients.length);\n            // KROK 4: Pobierz wczorajsze statystyki dla kar (z obsługą błędów)\n            const yesterday = new Date();\n            yesterday.setDate(yesterday.getDate() - 1);\n            const yesterdayStr = yesterday.toISOString().split('T')[0];\n            let yesterdayClients = [];\n            try {\n                const { data, error: yesterdayError } = await supabase.from('clients').select('status, edited_by').gte('updated_at', \"\".concat(yesterdayStr, \"T00:00:00\")).lt('updated_at', \"\".concat(yesterdayStr, \"T23:59:59\"));\n                if (yesterdayError) {\n                    console.warn('⚠️ Błąd pobierania wczorajszych klientów:', yesterdayError);\n                } else {\n                    yesterdayClients = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać wczorajszych klientów:', error);\n            }\n            // KROK 5: Pobierz WSZYSTKICH klientów przypisanych do pracowników (z obsługą błędów)\n            let allOwnedClients = [];\n            try {\n                const { data, error: ownedError } = await supabase.from('clients').select('status, owner_id').not('owner_id', 'is', null).in('owner_id', employeeIds);\n                if (ownedError) {\n                    console.warn('⚠️ Błąd pobierania klientów przypisanych:', ownedError);\n                } else {\n                    allOwnedClients = data || [];\n                }\n            } catch (error) {\n                console.warn('⚠️ Nie udało się pobrać przypisanych klientów:', error);\n            }\n            console.log('✅ Pobrano wszystkich przypisanych klientów:', allOwnedClients.length);\n            // KROK 6: Agreguj dzisiejsze statystyki per pracownik\n            const todayStats = todayClients.reduce((acc, client)=>{\n                const userId = client.edited_by;\n                if (!userId) return acc;\n                if (!acc[userId]) {\n                    acc[userId] = {\n                        total: 0,\n                        canvas: 0,\n                        antysale: 0,\n                        sale: 0,\n                        other: 0\n                    };\n                }\n                acc[userId].total++;\n                if (client.status === 'canvas') acc[userId].canvas++;\n                else if (client.status === 'antysale') acc[userId].antysale++;\n                else if (client.status === 'sale') acc[userId].sale++;\n                else acc[userId].other++;\n                return acc;\n            }, {});\n            // KROK 7: Agreguj wczorajsze statystyki per pracownik\n            const yesterdayStats = yesterdayClients.reduce((acc, client)=>{\n                const userId = client.edited_by;\n                if (userId) {\n                    acc[userId] = (acc[userId] || 0) + 1;\n                }\n                return acc;\n            }, {});\n            // KROK 8: Agreguj statusy WSZYSTKICH przypisanych klientów per pracownik\n            const ownedClientsStats = allOwnedClients.reduce((acc, client)=>{\n                const ownerId = client.owner_id;\n                if (!ownerId) return acc;\n                if (!acc[ownerId]) {\n                    acc[ownerId] = {\n                        total: 0,\n                        canvas: 0,\n                        antysale: 0,\n                        sale: 0,\n                        brak_kontaktu: 0,\n                        nie_zainteresowany: 0,\n                        zdenerwowany: 0,\n                        '$$': 0\n                    };\n                }\n                acc[ownerId].total++;\n                switch(client.status){\n                    case 'canvas':\n                        acc[ownerId].canvas++;\n                        break;\n                    case 'antysale':\n                        acc[ownerId].antysale++;\n                        break;\n                    case 'sale':\n                        acc[ownerId].sale++;\n                        break;\n                    case 'brak_kontaktu':\n                        acc[ownerId].brak_kontaktu++;\n                        break;\n                    case 'nie_zainteresowany':\n                        acc[ownerId].nie_zainteresowany++;\n                        break;\n                    case 'zdenerwowany':\n                        acc[ownerId].zdenerwowany++;\n                        break;\n                    case '$$':\n                        acc[ownerId]['$$']++;\n                        break;\n                }\n                return acc;\n            }, {});\n            console.log('📊 Statystyki przypisanych klientów:', ownedClientsStats);\n            // KROK 9: Stwórz mapę statystyk employee_stats\n            const statsMap = new Map();\n            existingStats.forEach((stat)=>{\n                statsMap.set(stat.user_id, stat);\n            });\n            // KROK 10: Kombinuj dane - dla WSZYSTKICH pracowników (zawsze zwraca listę)\n            const enhancedStats = allEmployees.map((employee)=>{\n                const userId = employee.id;\n                // Pobierz statystyki z employee_stats lub utwórz domyślne\n                const basicStat = statsMap.get(userId) || {\n                    id: 'temp_' + userId,\n                    user_id: userId,\n                    daily_target: 20,\n                    commission_rate: 3.0,\n                    monthly_canvas: 0,\n                    monthly_antysale: 0,\n                    monthly_sale: 0,\n                    total_commissions: 0,\n                    total_penalties: 0,\n                    custom_clients_count: 0,\n                    custom_total_payments: 0,\n                    created_at: new Date().toISOString(),\n                    updated_at: new Date().toISOString()\n                };\n                const todayForUser = todayStats[userId] || {\n                    total: 0,\n                    canvas: 0,\n                    antysale: 0,\n                    sale: 0\n                };\n                const yesterdayForUser = yesterdayStats[userId] || 0;\n                const ownedForUser = ownedClientsStats[userId] || {\n                    total: 0,\n                    canvas: 0,\n                    antysale: 0,\n                    sale: 0,\n                    brak_kontaktu: 0,\n                    nie_zainteresowany: 0,\n                    zdenerwowany: 0,\n                    '$$': 0\n                };\n                // Oblicz karę za wczoraj\n                const yesterdayShortage = Math.max(0, basicStat.daily_target - yesterdayForUser);\n                const penalty = yesterdayShortage * 15;\n                // Oblicz prowizję na podstawie przypisanych klientów Sale\n                const commission = ownedForUser.sale * basicStat.commission_rate / 100 * 100;\n                console.log(\"\\uD83D\\uDC64 Pracownik \".concat(employee.full_name, \": Canvas=\").concat(ownedForUser.canvas, \", AntyS=\").concat(ownedForUser.antysale, \", Sale=\").concat(ownedForUser.sale));\n                return {\n                    ...basicStat,\n                    // WAŻNE: Dołącz dane użytkownika\n                    user: {\n                        id: employee.id,\n                        full_name: employee.full_name,\n                        email: employee.email,\n                        avatar_url: employee.avatar_url,\n                        role: employee.role\n                    },\n                    daily_achieved: todayForUser.total,\n                    yesterday_shortage: yesterdayShortage,\n                    status_changes_today: {\n                        canvas: todayForUser.canvas,\n                        antysale: todayForUser.antysale,\n                        sale: todayForUser.sale,\n                        other: todayForUser.other\n                    },\n                    // Używaj statystyk opartych na owner_id (przypisanych klientów)\n                    monthly_canvas: ownedForUser.canvas,\n                    monthly_antysale: ownedForUser.antysale,\n                    monthly_sale: ownedForUser.sale,\n                    total_commissions: commission,\n                    total_penalties: penalty\n                };\n            });\n            console.log('✅ Przygotowano rozszerzone statystyki dla wszystkich pracowników:', enhancedStats.length);\n            console.log('👥 Lista pracowników:', enhancedStats.map((s)=>{\n                var _s_user;\n                return (_s_user = s.user) === null || _s_user === void 0 ? void 0 : _s_user.full_name;\n            }).join(', '));\n            return enhancedStats;\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk pracowników:', error);\n            // W przypadku błędu, zwróć pustą listę zamiast rzucać błąd\n            return [];\n        }\n    },\n    // Podsumowanie dnia\n    async getDailySummary (date) {\n        const { data, error } = await supabase.from('clients').select('status, edited_by').gte('updated_at', \"\".concat(date, \"T00:00:00\")).lt('updated_at', \"\".concat(date, \"T23:59:59\"));\n        if (error) throw error;\n        // Agregacja danych\n        const statusBreakdown = data.reduce((acc, client)=>{\n            acc[client.status] = (acc[client.status] || 0) + 1;\n            return acc;\n        }, {});\n        const employeeStats = data.reduce((acc, client)=>{\n            acc[client.edited_by] = (acc[client.edited_by] || 0) + 1;\n            return acc;\n        }, {});\n        return {\n            totalClients: data.length,\n            statusBreakdown,\n            employeeStats\n        };\n    },\n    // Podsumowanie tygodniowe\n    async getWeeklySummary (startDate, endDate) {\n        const { data, error } = await supabase.from('clients').select('status, edited_by, updated_at').gte('updated_at', startDate).lt('updated_at', endDate);\n        if (error) throw error;\n        return data;\n    },\n    // Aktualizuj statystyki pracownika (dla manager/project_manager/junior_manager/szef/admin)\n    async updateEmployeeStats (userId, updates, currentUser) {\n        // Sprawdź uprawnienia\n        if (![\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            throw new Error('Brak uprawnień do modyfikacji statystyk');\n        }\n        const { data, error } = await supabase.from('employee_stats').update(updates).eq('user_id', userId).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Edytuj ilość klientów i sumę wpłat pracownika (dla manager/project_manager/junior_manager/szef/admin)\n    async updateEmployeeClientStats (userId, clientsCount, totalPayments, currentUser) {\n        // Sprawdź uprawnienia\n        if (![\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            throw new Error('Brak uprawnień do modyfikacji statystyk');\n        }\n        try {\n            console.log(\"\\uD83D\\uDCDD Aktualizuję statystyki pracownika \".concat(userId, \": klienci=\").concat(clientsCount, \", wpłaty=\").concat(totalPayments));\n            // METODA 1: Spróbuj prostą aktualizację w employee_stats\n            try {\n                console.log('📝 Próba prostej aktualizacji w employee_stats');\n                const legacyUpdates = {\n                    custom_clients_count: clientsCount,\n                    custom_total_payments: totalPayments,\n                    updated_at: new Date().toISOString()\n                };\n                const { data, error } = await supabase.from('employee_stats').update(legacyUpdates).eq('user_id', userId).select(\"\\n            *,\\n            user:users!user_id (\\n              id,\\n              full_name,\\n              email,\\n              avatar_url,\\n              role\\n            )\\n          \").single();\n                if (!error && data) {\n                    console.log('✅ Zaktualizowano statystyki w employee_stats (metoda 1)');\n                    console.log(\"\\uD83D\\uDCCA Klienci: \".concat(clientsCount, \", Wpłaty: €\").concat(totalPayments));\n                    return data;\n                } else {\n                    console.warn('⚠️ Metoda 1 nie zadziałała:', error);\n                    throw error;\n                }\n            } catch (method1Error) {\n                console.warn('⚠️ Metoda 1 (prosta aktualizacja) nie zadziałała:', method1Error);\n                // METODA 2: Spróbuj INSERT z ON CONFLICT\n                try {\n                    console.log('📝 Próba INSERT z ON CONFLICT w employee_stats');\n                    const insertData = {\n                        user_id: userId,\n                        daily_target: 20,\n                        commission_rate: 3.0,\n                        monthly_canvas: 0,\n                        monthly_antysale: 0,\n                        monthly_sale: 0,\n                        total_commissions: 0,\n                        total_penalties: 0,\n                        custom_clients_count: clientsCount,\n                        custom_total_payments: totalPayments,\n                        created_at: new Date().toISOString(),\n                        updated_at: new Date().toISOString()\n                    };\n                    const { data, error } = await supabase.from('employee_stats').upsert(insertData, {\n                        onConflict: 'user_id',\n                        ignoreDuplicates: false\n                    }).select(\"\\n              *,\\n              user:users!user_id (\\n                id,\\n                full_name,\\n                email,\\n                avatar_url,\\n                role\\n              )\\n            \").single();\n                    if (!error && data) {\n                        console.log('✅ Zaktualizowano statystyki w employee_stats (metoda 2)');\n                        console.log(\"\\uD83D\\uDCCA Klienci: \".concat(clientsCount, \", Wpłaty: €\").concat(totalPayments));\n                        return data;\n                    } else {\n                        console.warn('⚠️ Metoda 2 nie zadziałała:', error);\n                        throw error;\n                    }\n                } catch (method2Error) {\n                    console.warn('⚠️ Metoda 2 (upsert) nie zadziałała:', method2Error);\n                    // METODA 3: Zaktualizuj tylko w pamięci (fallback)\n                    console.log('📝 Fallback - zwracam symulowane dane');\n                    return {\n                        id: 'temp_' + userId,\n                        user_id: userId,\n                        daily_target: 20,\n                        commission_rate: 3.0,\n                        monthly_canvas: 0,\n                        monthly_antysale: 0,\n                        monthly_sale: 0,\n                        total_commissions: 0,\n                        total_penalties: 0,\n                        custom_clients_count: clientsCount,\n                        custom_total_payments: totalPayments,\n                        created_at: new Date().toISOString(),\n                        updated_at: new Date().toISOString(),\n                        user: {\n                            id: userId,\n                            full_name: 'Pracownik',\n                            email: 'brak@email.com',\n                            avatar_url: null,\n                            role: 'pracownik'\n                        }\n                    };\n                }\n            }\n        } catch (error) {\n            console.error('❌ Błąd w updateEmployeeClientStats:', error);\n            throw error;\n        }\n    },\n    // Stwórz statystyki dla nowego pracownika\n    async createEmployeeStats (userId, currentUser) {\n        // Sprawdź uprawnienia\n        if (![\n            'manager',\n            'project_manager',\n            'junior_manager',\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            throw new Error('Brak uprawnień do tworzenia statystyk');\n        }\n        const { data, error } = await supabase.from('employee_stats').insert([\n            {\n                user_id: userId,\n                daily_target: 20,\n                commission_rate: 3.0\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // 📊 Nowa funkcja: Pobierz statystyki wykorzystania bazy (klienci z/bez właściciela)\n    async getDatabaseUtilization () {\n        try {\n            console.log('📊 Pobieranie statystyk wykorzystania bazy...');\n            // Zlicz wszystkich klientów\n            const { count: totalCount, error: totalError } = await supabase.from('clients').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (totalError) {\n                console.error('❌ Błąd pobierania łącznej liczby klientów:', totalError);\n                throw totalError;\n            }\n            // Zlicz klientów z właścicielem (owner_id != null)\n            const { count: withOwnerCount, error: withOwnerError } = await supabase.from('clients').select('*', {\n                count: 'exact',\n                head: true\n            }).not('owner_id', 'is', null);\n            if (withOwnerError) {\n                console.error('❌ Błąd pobierania klientów z właścicielem:', withOwnerError);\n                throw withOwnerError;\n            }\n            // Oblicz klientów bez właściciela\n            const withoutOwnerCount = (totalCount || 0) - (withOwnerCount || 0);\n            // Oblicz procent wykorzystania\n            const utilizationPercentage = totalCount ? Math.round((withOwnerCount || 0) / totalCount * 100) : 0;\n            const result = {\n                withOwner: withOwnerCount || 0,\n                withoutOwner: withoutOwnerCount,\n                total: totalCount || 0,\n                utilizationPercentage\n            };\n            console.log('📊 Statystyki wykorzystania bazy:', result);\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk wykorzystania bazy:', error);\n            throw error;\n        }\n    },\n    // 🔄 ADMIN: Resetuj właścicieli wszystkich klientów\n    async resetAllClientOwners (currentUser) {\n        // Sprawdź uprawnienia - tylko admin\n        if (currentUser.role !== 'admin') {\n            throw new Error('Brak uprawnień! Tylko administrator może resetować właścicieli klientów.');\n        }\n        try {\n            console.log('🔄 Rozpoczynam resetowanie właścicieli klientów...');\n            // Pobierz liczbę klientów z właścicielem przed resetowaniem\n            const { count: beforeCount, error: beforeError } = await supabase.from('clients').select('*', {\n                count: 'exact',\n                head: true\n            }).not('owner_id', 'is', null);\n            if (beforeError) {\n                console.error('❌ Błąd sprawdzania stanu przed resetowaniem:', beforeError);\n                throw beforeError;\n            }\n            // Resetuj owner_id dla wszystkich klientów\n            const { data, error } = await supabase.from('clients').update({\n                owner_id: null\n            }).not('owner_id', 'is', null) // Tylko te które mają właściciela\n            .select('id, first_name, last_name');\n            if (error) {\n                console.error('❌ Błąd resetowania właścicieli:', error);\n                throw error;\n            }\n            const resetCount = (data === null || data === void 0 ? void 0 : data.length) || 0;\n            // Loguj akcję do activity_logs\n            try {\n                await activityLogsApi.createLog({\n                    client_id: 'bulk_action',\n                    changed_by: currentUser.id,\n                    change_type: 'update',\n                    field_changed: 'owner_id',\n                    old_value: 'various',\n                    new_value: 'null (reset by admin)'\n                });\n            } catch (logError) {\n                console.error('⚠️ Nie udało się zalogować akcji:', logError);\n            // Nie przerywamy procesu z powodu błędu logowania\n            }\n            console.log(\"✅ Zresetowano właścicieli dla \".concat(resetCount, \" klient\\xf3w\"));\n            return {\n                success: resetCount,\n                message: \"Pomyślnie zresetowano właścicieli dla \".concat(resetCount, \" klient\\xf3w. Wszyscy klienci są teraz bez przypisanego właściciela.\")\n            };\n        } catch (error) {\n            console.error('❌ Błąd resetowania właścicieli klientów:', error);\n            throw error;\n        }\n    },\n    // Pobierz statystyki aktywności pracowników z tabeli employee_statistics\n    async getEmployeeActivityStats (user) {\n        try {\n            console.log('📊 Pobieranie statystyk aktywności pracowników...');\n            // Sprawdź uprawnienia\n            if (!user || ![\n                'manager',\n                'project_manager',\n                'junior_manager',\n                'szef',\n                'admin'\n            ].includes(user.role)) {\n                console.warn('⚠️ Brak uprawnień do podglądu statystyk aktywności');\n                return [];\n            }\n            // KROK 1: Pobierz wszystkich użytkowników z rolą 'pracownik'\n            let allEmployees = [];\n            try {\n                const { data: employees, error: usersError } = await supabase.from('users').select(\"\\n            id,\\n            full_name,\\n            email,\\n            avatar_url,\\n            role\\n          \").eq('role', 'pracownik').order('full_name', {\n                    ascending: true\n                });\n                if (usersError) {\n                    console.error('❌ Błąd pobierania użytkowników-pracowników:', usersError);\n                    return [];\n                }\n                allEmployees = employees || [];\n                console.log(\"\\uD83D\\uDC65 Znaleziono pracownik\\xf3w: \".concat(allEmployees.length));\n                if (allEmployees.length === 0) {\n                    console.log('⚠️ Brak użytkowników z rolą pracownik');\n                    return [];\n                }\n            } catch (error) {\n                console.error('❌ Błąd pobierania pracowników:', error);\n                return [];\n            }\n            // KROK 2: Pobierz statystyki aktywności - z obsługą błędów RLS\n            let activityStats = [];\n            try {\n                const employeeIds = allEmployees.map((emp)=>emp.id);\n                console.log(\"\\uD83D\\uDD0D Pobieranie statystyk dla ID: \".concat(employeeIds.slice(0, 3).join(', '), \"... (\").concat(employeeIds.length, \" total)\"));\n                const { data: stats, error: statsError } = await supabase.from('employee_statistics').select('*').eq('period_type', 'monthly').in('user_id', employeeIds).order('period_end', {\n                    ascending: false\n                });\n                if (statsError) {\n                    var _statsError_message, _statsError_message1;\n                    console.error('❌ Błąd pobierania statystyk aktywności:', statsError);\n                    // Jeśli to błąd RLS (403), nie przerywaj - użyj domyślnych danych\n                    if (statsError.code === 'PGRST116' || ((_statsError_message = statsError.message) === null || _statsError_message === void 0 ? void 0 : _statsError_message.includes('RLS')) || ((_statsError_message1 = statsError.message) === null || _statsError_message1 === void 0 ? void 0 : _statsError_message1.includes('permission'))) {\n                        console.warn('🔒 Problem z RLS - używam domyślnych danych aktywności');\n                        activityStats = [];\n                    } else {\n                        console.error('💥 Krytyczny błąd pobierania statystyk - przerywam');\n                        return [];\n                    }\n                } else {\n                    activityStats = stats || [];\n                    console.log(\"\\uD83D\\uDCCA Znaleziono rekord\\xf3w aktywności: \".concat(activityStats.length));\n                }\n            } catch (error) {\n                console.error('❌ Błąd zapytania o statystyki aktywności:', error);\n                activityStats = [];\n            }\n            // KROK 3: Stwórz mapę najnowszych statystyk dla każdego pracownika\n            const latestStatsMap = new Map();\n            if (activityStats && activityStats.length > 0) {\n                activityStats.forEach((stat)=>{\n                    const userId = stat.user_id;\n                    if (!latestStatsMap.has(userId)) {\n                        latestStatsMap.set(userId, stat);\n                    }\n                });\n                console.log(\"\\uD83D\\uDDFA️ Zmapowano statystyki dla \".concat(latestStatsMap.size, \" pracownik\\xf3w\"));\n            } else {\n                console.log('⚠️ Brak danych aktywności - użyję domyślnych wartości');\n            }\n            // KROK 4: Kombinuj dane pracowników ze statystykami aktywności\n            const result = allEmployees.map((employee)=>{\n                const userId = employee.id;\n                const activityStat = latestStatsMap.get(userId);\n                if (activityStat) {\n                    // Mamy statystyki - użyj prawdziwych danych\n                    return {\n                        ...activityStat,\n                        user: {\n                            id: employee.id,\n                            full_name: employee.full_name,\n                            email: employee.email,\n                            avatar_url: employee.avatar_url,\n                            role: employee.role\n                        }\n                    };\n                } else {\n                    // Brak statystyk - stwórz domyślne dane\n                    const currentDate = new Date();\n                    const currentMonth = currentDate.getMonth() + 1;\n                    const currentYear = currentDate.getFullYear();\n                    const monthStart = \"\".concat(currentYear, \"-\").concat(currentMonth.toString().padStart(2, '0'), \"-01\");\n                    const monthEnd = new Date(currentYear, currentMonth, 0).toISOString().split('T')[0];\n                    return {\n                        id: 'temp_' + userId,\n                        user_id: userId,\n                        period_type: 'monthly',\n                        period_start: monthStart,\n                        period_end: monthEnd,\n                        total_work_minutes: 0,\n                        average_daily_minutes: 0,\n                        expected_work_minutes: 176 * 60,\n                        efficiency_percentage: 0,\n                        total_activities: 0,\n                        average_daily_activities: 0,\n                        days_worked: 0,\n                        days_absent: 0,\n                        user: {\n                            id: employee.id,\n                            full_name: employee.full_name,\n                            email: employee.email,\n                            avatar_url: employee.avatar_url,\n                            role: employee.role\n                        }\n                    };\n                }\n            });\n            console.log(\"✅ Przygotowano statystyki aktywności dla wszystkich pracownik\\xf3w: \".concat(result.length));\n            console.log(\"\\uD83D\\uDC65 Lista pracownik\\xf3w: \".concat(result.map((s)=>{\n                var _s_user;\n                return (_s_user = s.user) === null || _s_user === void 0 ? void 0 : _s_user.full_name;\n            }).join(', ')));\n            // Pokaż statystyki podsumowujące\n            const withData = result.filter((r)=>r.total_work_minutes > 0).length;\n            const withoutData = result.length - withData;\n            console.log(\"\\uD83D\\uDCCA Pracownicy z danymi: \".concat(withData, \", bez danych: \").concat(withoutData));\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk aktywności:', error);\n            // Graceful fallback - zwróć pustą tablicę zamiast crashować\n            console.log('🔄 Graceful fallback - zwracam pustą tablicę');\n            return [];\n        }\n    },\n    // Pobierz trendy sprzedażowe z ostatnich 7 dni\n    async getSalesTrends (user) {\n        try {\n            console.log('📈 Pobieranie trendów sprzedażowych z ostatnich 7 dni...');\n            // Pobierz dane z ostatnich 7 dni\n            const endDate = new Date();\n            const startDate = new Date();\n            startDate.setDate(endDate.getDate() - 6) // 7 dni wstecz (włącznie z dzisiaj)\n            ;\n            const { data, error } = await supabase.from('clients').select('status, updated_at, status_changed_at, owner_id, edited_by').gte('updated_at', startDate.toISOString().split('T')[0]).lte('updated_at', endDate.toISOString().split('T')[0] + 'T23:59:59').in('status', [\n                'canvas',\n                'sale',\n                'antysale'\n            ]).order('updated_at', {\n                ascending: true\n            });\n            if (error) {\n                console.error('❌ Błąd pobierania trendów sprzedażowych:', error);\n                throw error;\n            }\n            console.log(\"✅ Pobrano \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" rekord\\xf3w z ostatnich 7 dni\"));\n            // Filtruj klientów według uprawnień użytkownika\n            let filteredData = data || [];\n            if (user.role === 'pracownik') {\n                filteredData = filteredData.filter((client)=>client.owner_id === user.id || client.owner_id === null || client.edited_by === user.id);\n            }\n            // Stwórz mapę dla dni tygodnia\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const trends = {};\n            // Inicjalizuj ostatnie 7 dni\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                trends[dayName] = {\n                    canvas: 0,\n                    sale: 0,\n                    antysale: 0\n                };\n            }\n            // Grupuj dane według dni\n            filteredData.forEach((client)=>{\n                const date = new Date(client.updated_at);\n                const dayName = dayNames[date.getDay()];\n                if (trends[dayName]) {\n                    if (client.status === 'canvas') trends[dayName].canvas++;\n                    else if (client.status === 'sale') trends[dayName].sale++;\n                    else if (client.status === 'antysale') trends[dayName].antysale++;\n                }\n            });\n            // Przekształć na format dla wykresu (ostatnie 7 dni w kolejności)\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                result.push({\n                    day: dayName,\n                    canvas: trends[dayName].canvas,\n                    sale: trends[dayName].sale,\n                    antysale: trends[dayName].antysale\n                });\n            }\n            console.log('✅ Trendy sprzedażowe przygotowane:', result);\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania trendów sprzedażowych:', error);\n            // W przypadku błędu zwróć puste dane dla ostatnich 7 dni\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                result.push({\n                    day: dayName,\n                    canvas: 0,\n                    sale: 0,\n                    antysale: 0\n                });\n            }\n            return result;\n        }\n    },\n    // Pobierz statystyki kliknięć telefonu tylko dla pracowników\n    async getPhoneClicksStats (user) {\n        try {\n            console.log('📞 Pobieranie statystyk kliknięć telefonu...');\n            // Pobierz wszystkich pracowników\n            const { data: employees, error: employeesError } = await supabase.from('users').select('id').eq('role', 'pracownik');\n            if (employeesError) {\n                console.error('❌ Błąd pobierania pracowników:', employeesError);\n                throw employeesError;\n            }\n            const employeeIds = (employees || []).map((emp)=>emp.id);\n            console.log(\"\\uD83D\\uDC65 Znaleziono \".concat(employeeIds.length, \" pracownik\\xf3w\"));\n            if (employeeIds.length === 0) {\n                return {\n                    totalPhoneCalls: 0,\n                    totalPhoneCallsToday: 0\n                };\n            }\n            // Pobierz wszystkie kliknięcia telefonu z activity_logs tylko dla pracowników\n            const { data: allPhoneClicks, error: allClicksError } = await supabase.from('activity_logs').select('id, changed_by, timestamp').eq('field_changed', 'last_phone_click').in('changed_by', employeeIds);\n            if (allClicksError) {\n                console.error('❌ Błąd pobierania kliknięć telefonu:', allClicksError);\n                throw allClicksError;\n            }\n            const totalPhoneCalls = (allPhoneClicks === null || allPhoneClicks === void 0 ? void 0 : allPhoneClicks.length) || 0;\n            // Pobierz dzisiejsze kliknięcia telefonu\n            const today = new Date().toISOString().split('T')[0] // YYYY-MM-DD\n            ;\n            const { data: todayPhoneClicks, error: todayClicksError } = await supabase.from('activity_logs').select('id, changed_by, timestamp').eq('field_changed', 'last_phone_click').in('changed_by', employeeIds).gte('timestamp', \"\".concat(today, \"T00:00:00\")).lt('timestamp', \"\".concat(today, \"T23:59:59\"));\n            if (todayClicksError) {\n                console.error('❌ Błąd pobierania dzisiejszych kliknięć telefonu:', todayClicksError);\n                throw todayClicksError;\n            }\n            const totalPhoneCallsToday = (todayPhoneClicks === null || todayPhoneClicks === void 0 ? void 0 : todayPhoneClicks.length) || 0;\n            console.log(\"✅ Statystyki kliknięć telefonu: łącznie \".concat(totalPhoneCalls, \", dziś \").concat(totalPhoneCallsToday));\n            return {\n                totalPhoneCalls,\n                totalPhoneCallsToday\n            };\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk kliknięć telefonu:', error);\n            // W przypadku błędu zwróć zerowe statystyki\n            return {\n                totalPhoneCalls: 0,\n                totalPhoneCallsToday: 0\n            };\n        }\n    },\n    // Pobierz dane trendów wydajności zespołu z ostatnich 7 dni\n    async getTeamPerformanceTrends (user) {\n        try {\n            console.log('📊 Pobieranie trendów wydajności zespołu z ostatnich 7 dni...');\n            // Pobierz wszystkich pracowników\n            const { data: employees, error: employeesError } = await supabase.from('users').select('id').eq('role', 'pracownik');\n            if (employeesError) {\n                console.error('❌ Błąd pobierania pracowników:', employeesError);\n                throw employeesError;\n            }\n            const employeeIds = (employees || []).map((emp)=>emp.id);\n            console.log(\"\\uD83D\\uDC65 Znaleziono \".concat(employeeIds.length, \" pracownik\\xf3w\"));\n            if (employeeIds.length === 0) {\n                // Zwróć puste dane dla ostatnich 7 dni\n                const dayNames = [\n                    'Ndz',\n                    'Pon',\n                    'Wt',\n                    'Śr',\n                    'Czw',\n                    'Pt',\n                    'Sob'\n                ];\n                const result = [];\n                for(let i = 6; i >= 0; i--){\n                    const date = new Date();\n                    date.setDate(date.getDate() - i);\n                    const dayName = dayNames[date.getDay()];\n                    result.push({\n                        day: dayName,\n                        telefony: 0,\n                        konwersja: 0,\n                        klienci: 0\n                    });\n                }\n                return result;\n            }\n            // Pobierz dane z ostatnich 7 dni\n            const endDate = new Date();\n            const startDate = new Date();\n            startDate.setDate(endDate.getDate() - 6) // 7 dni wstecz (włącznie z dzisiaj)\n            ;\n            // 1. Pobierz kliknięcia telefonu z activity_logs (tylko pracownicy)\n            const { data: phoneClicks, error: phoneError } = await supabase.from('activity_logs').select('changed_by, timestamp').eq('field_changed', 'last_phone_click').in('changed_by', employeeIds).gte('timestamp', startDate.toISOString().split('T')[0]).lte('timestamp', endDate.toISOString().split('T')[0] + 'T23:59:59');\n            if (phoneError) {\n                console.error('❌ Błąd pobierania kliknięć telefonu:', phoneError);\n                throw phoneError;\n            }\n            // 2. Pobierz zmiany klientów z ostatnich 7 dni (tylko przez pracowników)\n            const { data: clientChanges, error: changesError } = await supabase.from('clients').select('updated_at, status, edited_by').in('edited_by', employeeIds).gte('updated_at', startDate.toISOString().split('T')[0]).lte('updated_at', endDate.toISOString().split('T')[0] + 'T23:59:59').order('updated_at', {\n                ascending: true\n            });\n            if (changesError) {\n                console.error('❌ Błąd pobierania zmian klientów:', changesError);\n                throw changesError;\n            }\n            console.log(\"✅ Pobrano \".concat((phoneClicks === null || phoneClicks === void 0 ? void 0 : phoneClicks.length) || 0, \" kliknięć telefonu i \").concat((clientChanges === null || clientChanges === void 0 ? void 0 : clientChanges.length) || 0, \" zmian klient\\xf3w\"));\n            // Stwórz mapę dla dni tygodnia\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const trendsData = {};\n            // Inicjalizuj ostatnie 7 dni\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                trendsData[dayName] = {\n                    telefony: 0,\n                    klienci: 0,\n                    sales: 0\n                };\n            }\n            // Grupuj kliknięcia telefonu według dni\n            if (phoneClicks && Array.isArray(phoneClicks)) {\n                phoneClicks.forEach((click)=>{\n                    const date = new Date(click.timestamp);\n                    const dayName = dayNames[date.getDay()];\n                    if (trendsData[dayName]) {\n                        trendsData[dayName].telefony++;\n                    }\n                });\n            }\n            // Grupuj zmiany klientów według dni\n            if (clientChanges && Array.isArray(clientChanges)) {\n                clientChanges.forEach((change)=>{\n                    const date = new Date(change.updated_at);\n                    const dayName = dayNames[date.getDay()];\n                    if (trendsData[dayName]) {\n                        trendsData[dayName].klienci++;\n                        if (change.status === 'sale') {\n                            trendsData[dayName].sales++;\n                        }\n                    }\n                });\n            }\n            // Przekształć na format dla wykresu (ostatnie 7 dni w kolejności)\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                const dayData = trendsData[dayName];\n                // Oblicz konwersję (procent sales względem wszystkich klientów)\n                const konwersja = dayData.klienci > 0 ? Math.round(dayData.sales / dayData.klienci * 100) : 0;\n                result.push({\n                    day: dayName,\n                    telefony: dayData.telefony,\n                    konwersja: konwersja,\n                    klienci: dayData.klienci\n                });\n            }\n            console.log('✅ Trendy wydajności zespołu przygotowane:', result);\n            return result;\n        } catch (error) {\n            console.error('❌ Błąd pobierania trendów wydajności zespołu:', error);\n            // W przypadku błędu zwróć puste dane dla ostatnich 7 dni\n            const dayNames = [\n                'Ndz',\n                'Pon',\n                'Wt',\n                'Śr',\n                'Czw',\n                'Pt',\n                'Sob'\n            ];\n            const result = [];\n            for(let i = 6; i >= 0; i--){\n                const date = new Date();\n                date.setDate(date.getDate() - i);\n                const dayName = dayNames[date.getDay()];\n                result.push({\n                    day: dayName,\n                    telefony: 0,\n                    konwersja: 0,\n                    klienci: 0\n                });\n            }\n            return result;\n        }\n    },\n    // API dla statystyk osobistych pracownika\n    async getMyPersonalStats (user) {\n        try {\n            console.log('📊 Pobieranie osobistych statystyk pracownika:', user.id, user.role);\n            // Sprawdź czy użytkownik to pracownik\n            if (user.role !== 'pracownik') {\n                console.error('❌ Nieautoryzowana rola:', user.role);\n                throw new Error('Dostęp tylko dla pracowników');\n            }\n            console.log('✅ Użytkownik autoryzowany jako pracownik');\n            const currentDate = new Date();\n            const currentMonth = currentDate.toISOString().slice(0, 7) // YYYY-MM\n            ;\n            // Ustaw pierwszy i ostatni dzień miesiąca prawidłowo\n            const startOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n            const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0, 23, 59, 59);\n            // 1. Pobierz liczbę telefonów w tym miesiącu (kliknięcia telefonu)\n            const { data: phoneClicks, error: phoneError } = await supabase.from('activity_logs').select('id, timestamp').eq('changed_by', user.id).eq('field_changed', 'last_phone_click').gte('timestamp', startOfMonth.toISOString()).lte('timestamp', endOfMonth.toISOString());\n            if (phoneError) {\n                console.error('❌ Błąd pobierania kliknięć telefonu:', phoneError);\n                throw phoneError;\n            }\n            const phoneCallsThisMonth = (phoneClicks === null || phoneClicks === void 0 ? void 0 : phoneClicks.length) || 0;\n            console.log(\"\\uD83D\\uDCDE Znaleziono \".concat(phoneCallsThisMonth, \" kliknięć telefonu w tym miesiącu\"));\n            // 2. Pobierz klientów przypisanych do pracownika\n            console.log('👥 Pobieranie klientów przypisanych do pracownika...');\n            const { data: myClients, error: clientsError } = await supabase.from('clients').select('id, status, first_name, last_name, company_name').eq('owner_id', user.id);\n            if (clientsError) {\n                console.error('❌ Błąd pobierania klientów:', clientsError);\n                throw clientsError;\n            }\n            const clients = myClients || [];\n            const totalClients = clients.length;\n            console.log(\"\\uD83D\\uDC64 Pracownik ma \".concat(totalClients, \" przypisanych klient\\xf3w\"));\n            // 3. Agreguj statusy klientów\n            console.log('📊 Agregowanie statusów klientów...');\n            const statusMap = new Map();\n            clients.forEach((client)=>{\n                const status = client.status;\n                statusMap.set(status, (statusMap.get(status) || 0) + 1);\n            });\n            console.log('📈 Statusy klientów:', Object.fromEntries(statusMap));\n            // Mapuj statusy na kolory\n            const statusColors = {\n                canvas: '#06b6d4',\n                sale: '#10b981',\n                antysale: '#f59e0b',\n                brak_kontaktu: '#6b7280',\n                nie_zainteresowany: '#ef4444',\n                zdenerwowany: '#dc2626',\n                '$$': '#fbbf24'\n            };\n            const clientStats = Array.from(statusMap.entries()).map((param)=>{\n                let [status, count] = param;\n                return {\n                    status,\n                    count,\n                    color: statusColors[status] || '#64748b'\n                };\n            });\n            // 4. Pobierz prowizję z tabeli employee_stats\n            console.log('💰 Pobieranie prowizji z tabeli employee_stats...');\n            let commissionTotal = 0 // w EUR\n            ;\n            try {\n                const { data: employeeStats, error: statsError } = await supabase.from('employee_stats').select('total_commissions').eq('user_id', user.id).single();\n                if (statsError) {\n                    console.warn('⚠️ Nie znaleziono statystyk pracownika, prowizja = 0:', statsError);\n                    commissionTotal = 0;\n                } else {\n                    // total_commissions już jest w EUR - używaj bezpośrednio\n                    commissionTotal = employeeStats.total_commissions || 0;\n                    console.log(\"\\uD83D\\uDCB0 Prowizja pobrana z bazy: \".concat(commissionTotal, \" EUR\"));\n                }\n            } catch (error) {\n                console.error('❌ Błąd pobierania prowizji z employee_stats:', error);\n                commissionTotal = 0;\n            }\n            // 5. Pobierz godziny pracy z tego miesiąca na podstawie activity_logs\n            console.log('⏰ Pobieranie aktywności z tego miesiąca...');\n            console.log(\"\\uD83D\\uDCC5 Zakres dat: \".concat(startOfMonth.toISOString(), \" - \").concat(endOfMonth.toISOString()));\n            const { data: activities, error: activitiesError } = await supabase.from('activity_logs').select('timestamp').eq('changed_by', user.id).gte('timestamp', startOfMonth.toISOString()).lte('timestamp', endOfMonth.toISOString()).order('timestamp', {\n                ascending: true\n            });\n            if (activitiesError) {\n                console.error('❌ Błąd pobierania aktywności:', activitiesError);\n                throw activitiesError;\n            }\n            console.log(\"⏰ Znaleziono \".concat((activities === null || activities === void 0 ? void 0 : activities.length) || 0, \" aktywności w tym miesiącu\"));\n            // Grupuj aktywności według dni i oblicz godziny pracy\n            console.log('📅 Grupowanie aktywności według dni...');\n            const dailyActivities = new Map();\n            if (activities && activities.length > 0) {\n                activities.forEach((activity)=>{\n                    const date = new Date(activity.timestamp);\n                    const day = date.toISOString().split('T')[0] // YYYY-MM-DD\n                    ;\n                    const hour = date.getHours();\n                    if (!dailyActivities.has(day)) {\n                        dailyActivities.set(day, new Set());\n                    }\n                    dailyActivities.get(day).add(hour);\n                });\n            }\n            // Przekształć na format dla wykresu\n            const workingHoursThisMonth = Array.from(dailyActivities.entries()).map((param)=>{\n                let [day, hours] = param;\n                return {\n                    day: new Date(day).toLocaleDateString('pl-PL', {\n                        weekday: 'short',\n                        day: 'numeric'\n                    }),\n                    hours: hours.size,\n                    sortDate: new Date(day) // Dodaj pole do sortowania\n                };\n            }).sort((a, b)=>a.sortDate.getTime() - b.sortDate.getTime()).map((param)=>{\n                let { day, hours } = param;\n                return {\n                    day,\n                    hours\n                };\n            }) // Usuń pole sortDate z wynikowych danych\n            ;\n            const totalWorkingHours = Array.from(dailyActivities.values()).reduce((sum, hours)=>sum + hours.size, 0);\n            const totalWorkingDays = dailyActivities.size;\n            console.log('✅ Statystyki osobiste przygotowane:', {\n                phoneCallsThisMonth,\n                totalClients,\n                commissionTotal,\n                totalWorkingHours,\n                totalWorkingDays\n            });\n            return {\n                phoneCallsThisMonth,\n                clientStats,\n                totalClients,\n                commissionTotal,\n                workingHoursThisMonth,\n                totalWorkingHours,\n                totalWorkingDays\n            };\n        } catch (error) {\n            var _error_message, _error_message1;\n            console.error('❌ Błąd pobierania osobistych statystyk:', error);\n            // Szczegółowe informacje o błędzie\n            if (error && typeof error === 'object') {\n                console.error('📋 Szczegóły błędu:', {\n                    message: error.message,\n                    code: error.code,\n                    details: error.details,\n                    hint: error.hint,\n                    stack: error.stack\n                });\n            }\n            // Jeśli to błąd RLS lub uprawnień, zwróć pustą strukturę zamiast crashować\n            if (error && typeof error === 'object' && (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS')) || ((_error_message1 = error.message) === null || _error_message1 === void 0 ? void 0 : _error_message1.includes('permission')))) {\n                console.warn('🔒 Problem z uprawnieniami - zwracam domyślne dane');\n                return {\n                    phoneCallsThisMonth: 0,\n                    clientStats: [],\n                    totalClients: 0,\n                    commissionTotal: 0,\n                    workingHoursThisMonth: [],\n                    totalWorkingHours: 0,\n                    totalWorkingDays: 0\n                };\n            }\n            throw error;\n        }\n    },\n    // Funkcje do zarządzania godzinami pracy pracownika\n    async saveWorkingHours (user, date, hours) {\n        try {\n            console.log(\"⏰ Zapisywanie godzin pracy: \".concat(hours, \"h dla dnia \").concat(date));\n            // Sprawdź czy użytkownik to pracownik\n            if (user.role !== 'pracownik') {\n                throw new Error('Dostęp tylko dla pracowników');\n            }\n            // ENHANCED DEBUG: Sprawdź czy to dzień roboczy (pon-pt) - bezpieczne parsowanie daty\n            console.log('\\uD83D\\uDD0D DEBUG: Input date string: \"'.concat(date, '\"'));\n            const dateParts = date.split('-') // \"2025-06-02\" -> [\"2025\", \"06\", \"02\"]\n            ;\n            console.log(\"\\uD83D\\uDD0D DEBUG: Date parts:\", dateParts);\n            const year = parseInt(dateParts[0]);\n            const month = parseInt(dateParts[1]) - 1 // -1 bo JavaScript używa 0-11 dla miesięcy\n            ;\n            const day = parseInt(dateParts[2]);\n            console.log(\"\\uD83D\\uDD0D DEBUG: Parsed components: year=\".concat(year, \", month=\").concat(month, \" (JS format), day=\").concat(day));\n            const dateObj = new Date(year, month, day);\n            const dayOfWeek = dateObj.getDay();\n            console.log(\"\\uD83D\\uDD0D DEBUG: Created Date object: \".concat(dateObj.toISOString()));\n            console.log(\"\\uD83D\\uDD0D DEBUG: Date in local format: \".concat(dateObj.toLocaleDateString('pl-PL', {\n                weekday: 'long',\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n            })));\n            console.log(\"\\uD83D\\uDDD3️ Sprawdzanie dnia roboczego: \".concat(date, \" => dayOfWeek=\").concat(dayOfWeek, \" (\").concat([\n                'niedziela',\n                'poniedziałek',\n                'wtorek',\n                'środa',\n                'czwartek',\n                'piątek',\n                'sobota'\n            ][dayOfWeek], \")\"));\n            if (dayOfWeek === 0 || dayOfWeek === 6) {\n                console.error(\"❌ BŁĄD: Pr\\xf3ba zapisania godzin dla weekendu! Dzień tygodnia: \".concat(dayOfWeek, \" (\").concat([\n                    'niedziela',\n                    'poniedziałek',\n                    'wtorek',\n                    'środa',\n                    'czwartek',\n                    'piątek',\n                    'sobota'\n                ][dayOfWeek], \")\"));\n                throw new Error('Można wpisywać godziny tylko dla dni roboczych (pon-pt)');\n            }\n            console.log(\"✅ Dzień roboczy potwierdzony: \".concat([\n                'niedziela',\n                'poniedziałek',\n                'wtorek',\n                'środa',\n                'czwartek',\n                'piątek',\n                'sobota'\n            ][dayOfWeek]));\n            // Walidacja godzin (0-12)\n            if (hours < 0 || hours > 12) {\n                throw new Error('Liczba godzin musi być między 0 a 12');\n            }\n            // Upsert godzin pracy w bazie danych (tabela już istnieje)\n            const { error } = await supabase.from('working_hours').upsert({\n                user_id: user.id,\n                work_date: date,\n                hours_worked: hours,\n                updated_at: new Date().toISOString()\n            }, {\n                onConflict: 'user_id,work_date'\n            });\n            if (error) {\n                console.error('❌ Błąd zapisywania godzin pracy do bazy:', error);\n                // Fallback do localStorage tylko przy błędzie bazy danych\n                console.warn('⚠️ Błąd bazy danych - używam localStorage jako fallback');\n                const storageKey = \"working_hours_\".concat(user.id);\n                const existingData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                existingData[date] = hours;\n                localStorage.setItem(storageKey, JSON.stringify(existingData));\n                console.log(\"✅ Zapisano \".concat(hours, \"h dla dnia \").concat(date, \" (localStorage fallback)\"));\n                return;\n            }\n            console.log(\"✅ Zapisano \".concat(hours, \"h dla dnia \").concat(date, \" (baza danych working_hours)\"));\n        } catch (error) {\n            console.error('❌ Błąd w saveWorkingHours:', error);\n            // Ultimate fallback - localStorage\n            try {\n                console.warn('⚠️ Używam localStorage jako ostateczny fallback');\n                const storageKey = \"working_hours_\".concat(user.id);\n                const existingData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                existingData[date] = hours;\n                localStorage.setItem(storageKey, JSON.stringify(existingData));\n                console.log(\"✅ Zapisano \".concat(hours, \"h dla dnia \").concat(date, \" (localStorage ultimate fallback)\"));\n            } catch (storageError) {\n                console.error('❌ Nie udało się zapisać nawet do localStorage:', storageError);\n                throw error;\n            }\n        }\n    },\n    async getWorkingHoursForMonth (user, year, month) {\n        try {\n            console.log(\"⏰ Pobieranie godzin pracy dla \".concat(year, \"-\").concat(month));\n            // Sprawdź czy użytkownik to pracownik\n            if (user.role !== 'pracownik') {\n                throw new Error('Dostęp tylko dla pracowników');\n            }\n            // Oblicz pierwszy i ostatni dzień miesiąca (poprawka strefy czasowej)\n            const startDate = \"\".concat(year, \"-\").concat(month.toString().padStart(2, '0'), \"-01\");\n            const endDate = \"\".concat(year, \"-\").concat(month.toString().padStart(2, '0'), \"-\").concat(new Date(year, month, 0).getDate().toString().padStart(2, '0'));\n            console.log(\"\\uD83D\\uDCC5 Pobieranie godzin dla zakresu: \".concat(startDate, \" - \").concat(endDate));\n            // Pobierz godziny pracy z tabeli working_hours (tabela już istnieje)\n            const { data, error } = await supabase.from('working_hours').select('work_date, hours_worked').eq('user_id', user.id).gte('work_date', startDate).lte('work_date', endDate);\n            if (error) {\n                console.error('❌ Błąd pobierania godzin pracy z bazy:', error);\n                console.warn('⚠️ Błąd bazy danych - używam localStorage jako fallback');\n                // Fallback do localStorage tylko przy błędzie bazy danych\n                const storageKey = \"working_hours_\".concat(user.id);\n                const storedData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                // Filtruj dane dla odpowiedniego miesiąca\n                const hoursMap = {};\n                Object.entries(storedData).forEach((param)=>{\n                    let [date, hours] = param;\n                    // Użyj porównania stringów dla dat w formacie YYYY-MM-DD\n                    if (date >= startDate && date <= endDate) {\n                        hoursMap[date] = hours;\n                    }\n                });\n                console.log(\"✅ Pobrano godziny pracy z localStorage fallback dla \".concat(Object.keys(hoursMap).length, \" dni\"));\n                return hoursMap;\n            }\n            // Konwertuj na obiekt date -> hours\n            const hoursMap = {};\n            if (data) {\n                data.forEach((entry)=>{\n                    hoursMap[entry.work_date] = entry.hours_worked;\n                });\n            }\n            console.log(\"✅ Pobrano godziny pracy z tabeli working_hours dla \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" dni\"));\n            return hoursMap;\n        } catch (error) {\n            console.error('❌ Błąd w getWorkingHoursForMonth:', error);\n            // Ultimate fallback - localStorage\n            try {\n                console.warn('⚠️ Używam localStorage jako ostateczny fallback');\n                const storageKey = \"working_hours_\".concat(user.id);\n                const storedData = JSON.parse(localStorage.getItem(storageKey) || '{}');\n                // Filtruj dane dla odpowiedniego miesiąca\n                const startDateStr = \"\".concat(year, \"-\").concat(month.toString().padStart(2, '0'), \"-01\");\n                const endDateStr = \"\".concat(year, \"-\").concat(month.toString().padStart(2, '0'), \"-\").concat(new Date(year, month, 0).getDate().toString().padStart(2, '0'));\n                const hoursMap = {};\n                Object.entries(storedData).forEach((param)=>{\n                    let [date, hours] = param;\n                    // Użyj porównania stringów dla dat w formacie YYYY-MM-DD\n                    if (date >= startDateStr && date <= endDateStr) {\n                        hoursMap[date] = hours;\n                    }\n                });\n                console.log(\"✅ Pobrano godziny pracy z localStorage ultimate fallback dla \".concat(Object.keys(hoursMap).length, \" dni\"));\n                return hoursMap;\n            } catch (storageError) {\n                console.error('❌ Nie udało się pobrać nawet z localStorage:', storageError);\n                return {};\n            }\n        }\n    },\n    // 🚀 NOWE FUNKCJE PERFORMANCE - Materializowane Widoki\n    // Zastępuje ciężkie JOIN'y - teraz natychmiastowe ładowanie\n    async getMonthlyEmployeePerformance (year, month) {\n        try {\n            console.log(\"\\uD83D\\uDCCA Pobieranie wydajności pracownik\\xf3w dla \".concat(year, \"-\").concat(month, \" (zoptymalizowane)...\"));\n            const { data, error } = await supabase.rpc('get_monthly_employee_performance', {\n                target_year: year,\n                target_month: month\n            });\n            if (error) {\n                console.error('❌ Błąd pobierania wydajności pracowników:', error);\n                throw error;\n            }\n            console.log(\"✅ Wydajność pracownik\\xf3w pobrana: \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" rekord\\xf3w\"));\n            return data;\n        } catch (error) {\n            console.error('❌ getMonthlyEmployeePerformance failed:', error);\n            throw error;\n        }\n    },\n    // Szybkie statystyki zespołu na podstawie materializowanych widoków\n    async getTeamSummary (year, month) {\n        try {\n            const { data, error } = await supabase.from('mv_monthly_employee_stats').select('*').eq('year', year).eq('month', month).order('owned_sales', {\n                ascending: false\n            });\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error('❌ getTeamSummary failed:', error);\n            throw error;\n        }\n    },\n    // Performance analytics - top performers\n    async getTopPerformers () {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n        try {\n            const { data, error } = await supabase.rpc('get_top_performers', {\n                limit_count: limit\n            });\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error('❌ getTopPerformers failed:', error);\n            throw error;\n        }\n    }\n};\n// API dla lokalizacji/krajów\nconst locationsApi = {\n    // Pobierz wszystkie lokalizacje (podstawowe informacje - dla rejestracji)\n    async getAllLocations () {\n        try {\n            const { data, error } = await supabase.from('locations').select(\"\\n          id,\\n          name,\\n          code,\\n          currency,\\n          timezone,\\n          region,\\n          created_at,\\n          updated_at\\n        \").order('name');\n            if (error) {\n                console.error('❌ Błąd pobierania lokalizacji:', error);\n                throw error;\n            }\n            console.log('✅ Pobrano lokalizacje:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n            return data;\n        } catch (error) {\n            console.error('❌ getAllLocations failed:', error);\n            throw error;\n        }\n    },\n    // Pobierz wszystkie lokalizacje z pełnymi informacjami (dla zalogowanych użytkowników)\n    async getAllLocationsWithManagers () {\n        const { data, error } = await supabase.from('locations').select(\"\\n        id,\\n        name,\\n        code,\\n        currency,\\n        timezone,\\n        region,\\n        project_manager_id,\\n        created_at,\\n        updated_at,\\n        project_manager:users!project_manager_id (\\n          id,\\n          full_name,\\n          email,\\n          avatar_url\\n        )\\n      \").order('name');\n        if (error) throw error;\n        // Przekształć dane - Supabase JOIN zwraca project_manager jako tablicę\n        const transformedData = data === null || data === void 0 ? void 0 : data.map((location)=>({\n                ...location,\n                project_manager: location.project_manager && Array.isArray(location.project_manager) && location.project_manager.length > 0 ? location.project_manager[0] // Weź pierwszy element z tablicy\n                 : location.project_manager && !Array.isArray(location.project_manager) ? location.project_manager // Już jest pojedynczym obiektem\n                 : null // Brak project managera\n            }));\n        return transformedData;\n    },\n    // Pobierz dostępne lokalizacje dla użytkownika\n    async getUserAccessibleLocations (userId) {\n        try {\n            // Najpierw spróbuj użyć funkcji SQL (jeśli istnieje)\n            const { data, error } = await supabase.rpc('get_user_accessible_locations', {\n                user_id: userId\n            });\n            if (error) {\n                console.warn('🔄 Funkcja SQL get_user_accessible_locations nie istnieje, używam fallback logiki');\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            console.warn('⚠️ Błąd wywołania funkcji SQL, używam JavaScript fallback:', error);\n            // Fallback - implementacja logiki w JavaScript\n            try {\n                // Pobierz użytkownika\n                const { data: user, error: userError } = await supabase.from('users').select('role, location_id').eq('id', userId).single();\n                if (userError) {\n                    console.error('❌ Nie można pobrać danych użytkownika:', userError);\n                    return this.getAllLocations() // Fallback - zwróć wszystkie\n                    ;\n                }\n                // Sprawdź rolę użytkownika\n                if (user.role === 'admin' || user.role === 'szef') {\n                    // Admin i szef widzą wszystkie lokalizacje\n                    console.log('👑 Admin/Szef - zwracam wszystkie lokalizacje');\n                    return this.getAllLocations();\n                } else {\n                    // Pozostali widzą tylko swoją lokalizację\n                    if (!user.location_id) {\n                        console.warn('⚠️ Użytkownik nie ma przypisanej lokalizacji');\n                        return [];\n                    }\n                    console.log('👤 Zwykły użytkownik - zwracam lokalizację:', user.location_id);\n                    const { data: location, error: locationError } = await supabase.from('locations').select('*').eq('id', user.location_id).single();\n                    if (locationError) {\n                        console.error('❌ Nie można pobrać lokalizacji użytkownika:', locationError);\n                        return [];\n                    }\n                    return [\n                        location\n                    ];\n                }\n            } catch (fallbackError) {\n                console.error('❌ Fallback logic failed:', fallbackError);\n                // Ostateczny fallback - wszystkie lokalizacje\n                return this.getAllLocations();\n            }\n        }\n    },\n    // Pobierz lokalizację po ID\n    async getLocationById (id) {\n        const { data, error } = await supabase.from('locations').select(\"\\n        id,\\n        name,\\n        code,\\n        currency,\\n        timezone,\\n        region,\\n        project_manager_id,\\n        created_at,\\n        updated_at,\\n        project_manager:users!project_manager_id (\\n          id,\\n          full_name,\\n          email,\\n          avatar_url\\n        )\\n      \").eq('id', id).single();\n        if (error) throw error;\n        // Przekształć dane - Supabase JOIN zwraca project_manager jako tablicę\n        const transformedData = {\n            ...data,\n            project_manager: data.project_manager && Array.isArray(data.project_manager) && data.project_manager.length > 0 ? data.project_manager[0] // Weź pierwszy element z tablicy\n             : data.project_manager && !Array.isArray(data.project_manager) ? data.project_manager // Już jest pojedynczym obiektem\n             : null // Brak project managera\n        };\n        return transformedData;\n    },\n    // Aktualizuj project managera dla lokalizacji\n    async updateLocationProjectManager (locationId, projectManagerId, currentUser) {\n        if (!permissionsApi.canChangeRoles(currentUser)) {\n            throw new Error('Brak uprawnień do zmiany project managera');\n        }\n        const { data, error } = await supabase.from('locations').update({\n            project_manager_id: projectManagerId,\n            updated_at: new Date().toISOString()\n        }).eq('id', locationId).select().single();\n        if (error) throw error;\n        return data;\n    }\n};\n// Funkcje autoryzacji\nconst authApi = {\n    // Zaloguj użytkownika\n    async signIn (email, password) {\n        const { data, error } = await supabase.auth.signInWithPassword({\n            email,\n            password\n        });\n        if (error) throw error;\n        return data;\n    },\n    // Zarejestruj nowego użytkownika\n    async signUp (email, password, fullName, locationId) {\n        const { data, error } = await supabase.auth.signUp({\n            email,\n            password,\n            options: {\n                data: {\n                    full_name: fullName,\n                    location_id: locationId\n                }\n            }\n        });\n        if (error) throw error;\n        return data;\n    },\n    // Wyloguj użytkownika\n    async signOut () {\n        const { error } = await supabase.auth.signOut();\n        if (error) throw error;\n    },\n    // Pobierz aktualnego użytkownika\n    async getCurrentUser () {\n        const { data: { user } } = await supabase.auth.getUser();\n        return user;\n    },\n    // Pobierz profil użytkownika z rolą\n    async getUserProfile (userId) {\n        const { data, error } = await supabase.from('users').select('*').eq('id', userId).single();\n        if (error) throw error;\n        return data;\n    },\n    // Pobierz wszystkich użytkowników (dla opcji filtrowania)\n    async getAllUsers () {\n        try {\n            console.log('👥 getAllUsers START - sprawdzam RLS...');\n            // Sprawdź aktualnego użytkownika\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('👤 Aktualny użytkownik:', user === null || user === void 0 ? void 0 : user.email, user === null || user === void 0 ? void 0 : user.id);\n            const { data, error } = await supabase.from('users').select('id, full_name, email, role, avatar_url').order('full_name');\n            console.log('👥 getAllUsers - znaleziono użytkowników:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n            console.log('👥 getAllUsers - błąd:', error);\n            if (error) {\n                var _error_message, _error_message1;\n                console.error('❌ RLS Error in getAllUsers:', error);\n                // Sprawdź czy to problem z RLS\n                if (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS')) || ((_error_message1 = error.message) === null || _error_message1 === void 0 ? void 0 : _error_message1.includes('permission'))) {\n                    console.error('🔒 Problem z Row Level Security - pracownik nie może widzieć innych użytkowników');\n                }\n                throw error;\n            }\n            if (data && data.length > 0) {\n                console.log('👥 Przykład użytkowników:', data.slice(0, 3).map((u)=>({\n                        id: u.id,\n                        name: u.full_name,\n                        role: u.role\n                    })));\n            } else {\n                console.log('👥 UWAGA: Brak danych użytkowników - może RLS blokuje dostęp');\n            }\n            return data;\n        } catch (error) {\n            console.error('❌ getAllUsers FAILED:', error);\n            throw error;\n        }\n    },\n    // Sprawdź sesję użytkownika\n    async getSession () {\n        const { data: { session } } = await supabase.auth.getSession();\n        return session;\n    },\n    // Nasłuchuj zmian w autoryzacji\n    onAuthStateChange (callback) {\n        return supabase.auth.onAuthStateChange(callback);\n    },\n    // Zaktualizuj język użytkownika\n    async updateUserLanguage (userId, language) {\n        const { data, error } = await supabase.from('users').update({\n            language\n        }).eq('id', userId).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Zaktualizuj profil użytkownika (w tym rolę)\n    async updateUser (userId, updates, currentUser) {\n        console.log('👥 updateUser START - aktualizacja użytkownika:', userId, updates);\n        // Sprawdź uprawnienia\n        if (!permissionsApi.canChangeRoles(currentUser)) {\n            throw new Error('Brak uprawnień do edycji użytkowników');\n        }\n        // Dodatkowa weryfikacja dla zmian ról\n        if (updates.role) {\n            const { data: targetUser, error: fetchError } = await supabase.from('users').select('*').eq('id', userId).single();\n            if (fetchError) throw fetchError;\n            // Sprawdź czy użytkownik może zmieniać rolę docelowego użytkownika\n            if (!permissionsApi.canManageUser(currentUser, targetUser)) {\n                throw new Error('Brak uprawnień do zmiany roli tego użytkownika');\n            }\n            console.log(\"\\uD83D\\uDD04 Zmiana roli: \".concat(targetUser.role, \" → \").concat(updates.role));\n        }\n        // Wykonaj aktualizację\n        const { data, error } = await supabase.from('users').update({\n            ...updates,\n            updated_at: new Date().toISOString()\n        }).eq('id', userId).select().single();\n        if (error) {\n            console.error('❌ Błąd aktualizacji użytkownika:', error);\n            throw error;\n        }\n        console.log('✅ Użytkownik zaktualizowany pomyślnie:', data.full_name);\n        return data;\n    },\n    // Promuj junior_manager do project_manager (dedykowana funkcja)\n    async promoteToProjectManager (userId, currentUser) {\n        console.log('🚀 promoteToProjectManager START - promowanie do PM:', userId);\n        // Sprawdź czy aktualny użytkownik ma uprawnienia (tylko Szef i Admin)\n        if (![\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            throw new Error('Tylko Szef i Administrator mogą promować użytkowników do roli Project Manager');\n        }\n        // Pobierz docelowego użytkownika\n        const { data: targetUser, error: fetchError } = await supabase.from('users').select('*').eq('id', userId).single();\n        if (fetchError) throw fetchError;\n        // Sprawdź czy ma rolę junior_manager\n        if (targetUser.role !== 'junior_manager') {\n            throw new Error('Można promować tylko użytkowników z rolą Junior Manager');\n        }\n        console.log(\"\\uD83D\\uDD04 Promowanie: \".concat(targetUser.full_name, \" (\").concat(targetUser.role, \" → project_manager)\"));\n        // Wykonaj promocję\n        const { data, error } = await supabase.from('users').update({\n            role: 'project_manager',\n            role_hierarchy_level: 1,\n            updated_at: new Date().toISOString()\n        }).eq('id', userId).select().single();\n        if (error) {\n            console.error('❌ Błąd promowania użytkownika:', error);\n            throw error;\n        }\n        console.log(\"✅ \".concat(targetUser.full_name, \" został promowany do Project Manager\"));\n        return data;\n    },\n    // Przypisz junior_manager (wraz z podwładnymi) do project_manager - UPROSZCZONA WERSJA\n    async assignJuniorManagerToProjectManager (juniorManagerId, projectManagerId, currentUser) {\n        console.log('🔗 assignJuniorManagerToProjectManager START (uproszczona wersja):', {\n            juniorManagerId,\n            projectManagerId\n        });\n        // Sprawdź uprawnienia - tylko Szef i Admin mogą zarządzać hierarchią\n        if (![\n            'szef',\n            'admin'\n        ].includes(currentUser.role)) {\n            console.error('❌ Brak uprawnień - użytkownik:', currentUser.email, 'rola:', currentUser.role);\n            throw new Error('Tylko Szef i Administrator mogą zarządzać hierarchię managerów');\n        }\n        try {\n            // Krok 1: Sprawdź czy Junior Manager istnieje\n            const { data: juniorManager, error: juniorError } = await supabase.from('users').select('id, full_name, role, manager_id').eq('id', juniorManagerId).eq('role', 'junior_manager').single();\n            if (juniorError || !juniorManager) {\n                throw new Error('Nie znaleziono Junior Manager o podanym ID');\n            }\n            // Krok 2: Sprawdź czy Project Manager istnieje\n            const { data: projectManager, error: projectError } = await supabase.from('users').select('id, full_name, role').eq('id', projectManagerId).eq('role', 'project_manager').single();\n            if (projectError || !projectManager) {\n                throw new Error('Nie znaleziono Project Manager o podanym ID');\n            }\n            console.log(\"\\uD83D\\uDD17 Przypisuję \".concat(juniorManager.full_name, \" do \").concat(projectManager.full_name));\n            // Krok 3: Znajdź pracowników Junior Managera (bez używania funkcji hierarchicznych)\n            const { data: employees, error: employeesError } = await supabase.from('users').select('id, full_name, role, manager_id').eq('manager_id', juniorManagerId).eq('role', 'pracownik');\n            if (employeesError) {\n                console.error('❌ Błąd pobierania pracowników:', employeesError);\n            // Kontynuuj mimo błędu - może nie ma pracowników\n            }\n            const employeesList = employees || [];\n            console.log(\"\\uD83D\\uDC65 Znaleziono \".concat(employeesList.length, \" pracownik\\xf3w pod \").concat(juniorManager.full_name));\n            // Krok 4: Aktualizuj Junior Manager - PROSTA AKTUALIZACJA\n            console.log('🔄 Aktualizuję manager_id dla junior managera');\n            const { data: updatedJuniorManager, error: updateError } = await supabase.from('users').update({\n                manager_id: projectManagerId,\n                updated_at: new Date().toISOString()\n            }).eq('id', juniorManagerId).select('id, full_name, role, manager_id').single();\n            if (updateError) {\n                console.error('❌ Błąd aktualizacji junior managera:', updateError);\n                throw new Error(\"Błąd aktualizacji: \".concat(updateError.message));\n            }\n            // Krok 5: Przenieś pracowników (jeśli istnieją)\n            let updatedEmployees = [];\n            if (employeesList.length > 0) {\n                console.log('🔄 Przenoszę pracowników pod Project Manager');\n                for (const employee of employeesList){\n                    const { data: updatedEmployee, error: moveError } = await supabase.from('users').update({\n                        manager_id: projectManagerId,\n                        updated_at: new Date().toISOString()\n                    }).eq('id', employee.id).select('id, full_name, role, manager_id').single();\n                    if (moveError) {\n                        console.error(\"❌ Błąd przenoszenia pracownika \".concat(employee.full_name, \":\"), moveError);\n                    } else if (updatedEmployee) {\n                        updatedEmployees.push(updatedEmployee);\n                    }\n                }\n                console.log(\"\\uD83D\\uDCE6 Przeniesiono \".concat(updatedEmployees.length, \"/\").concat(employeesList.length, \" pracownik\\xf3w\"));\n            }\n            const message = \"Junior Manager \".concat(juniorManager.full_name, \" został przypisany do Project Manager \").concat(projectManager.full_name, \". \").concat(updatedEmployees.length > 0 ? \"Przeniesiono r\\xf3wnież \".concat(updatedEmployees.length, \" pracownik\\xf3w.\") : '');\n            console.log(\"✅ SUKCES: \".concat(message));\n            return {\n                juniorManager: updatedJuniorManager,\n                affectedEmployees: updatedEmployees,\n                message\n            };\n        } catch (error) {\n            console.error('❌ BŁĄD w assignJuniorManagerToProjectManager:', error);\n            throw error;\n        }\n    },\n    // Pobierz hierarchię managerów z podwładnymi\n    async getManagerHierarchy (managerId) {\n        console.log('🏗️ getManagerHierarchy START:', managerId);\n        // Pobierz managera\n        const { data: manager, error: managerError } = await supabase.from('users').select('*').eq('id', managerId).single();\n        if (managerError) throw managerError;\n        // Pobierz bezpośrednich podwładnych\n        const { data: directReports, error: directError } = await supabase.from('users').select('*').eq('manager_id', managerId);\n        if (directError) throw directError;\n        // Pobierz wszystkich podwładnych (recursive dla junior managerów)\n        let allSubordinates = [\n            ...directReports || []\n        ];\n        for (const subordinate of directReports || []){\n            if (subordinate.role === 'junior_manager') {\n                const { data: subEmployees, error: subError } = await supabase.from('users').select('*').eq('manager_id', subordinate.id);\n                if (!subError && subEmployees) {\n                    allSubordinates.push(...subEmployees);\n                }\n            }\n        }\n        console.log(\"\\uD83D\\uDCCA Manager \".concat(manager.full_name, \": \").concat((directReports === null || directReports === void 0 ? void 0 : directReports.length) || 0, \" bezpośrednich, \").concat(allSubordinates.length, \" łącznie\"));\n        return {\n            manager: manager,\n            directReports: directReports || [],\n            allSubordinates: allSubordinates\n        };\n    },\n    // Pobierz wszystkich dostępnych project managerów\n    async getAvailableProjectManagers () {\n        const { data, error } = await supabase.from('users').select('*').eq('role', 'project_manager').eq('is_active', true).order('full_name');\n        if (error) throw error;\n        return data || [];\n    },\n    // Pobierz wszystkich junior managerów bez przypisanego project managera\n    async getUnassignedJuniorManagers () {\n        const { data, error } = await supabase.from('users').select('*').eq('role', 'junior_manager').is('manager_id', null).eq('is_active', true).order('full_name');\n        if (error) throw error;\n        return data || [];\n    },\n    // Bezpieczne pobieranie użytkowników do wyświetlania (odporne na RLS)\n    async getAllUsersForDisplay () {\n        try {\n            console.log('👥 getAllUsersForDisplay START - bezpieczne pobieranie...');\n            // Sprawdź aktualnego użytkownika\n            const { data: { user } } = await supabase.auth.getUser();\n            console.log('👤 Aktualny użytkownik:', user === null || user === void 0 ? void 0 : user.email, user === null || user === void 0 ? void 0 : user.id);\n            if (!user) {\n                console.log('❌ Brak zalogowanego użytkownika');\n                return [];\n            }\n            const { data, error } = await supabase.from('users').select('id, full_name, email, role, avatar_url').order('full_name');\n            console.log('👥 getAllUsersForDisplay - znaleziono użytkowników:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n            if (error) {\n                var _error_message, _error_message1;\n                console.error('❌ RLS Error in getAllUsersForDisplay:', error);\n                // Jeśli to problem z RLS, zwróć przynajmniej aktualnego użytkownika\n                if (error.code === 'PGRST116' || ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes('RLS')) || ((_error_message1 = error.message) === null || _error_message1 === void 0 ? void 0 : _error_message1.includes('permission'))) {\n                    console.error('🔒 RLS blokuje dostęp - zwracam tylko aktualnego użytkownika');\n                    // Pobierz profil aktualnego użytkownika\n                    try {\n                        const userProfile = await this.getUserProfile(user.id);\n                        console.log('👤 Fallback: używam profilu aktualnego użytkownika:', userProfile.full_name);\n                        return [\n                            userProfile\n                        ];\n                    } catch (profileError) {\n                        console.error('❌ Nie można pobrać profilu użytkownika:', profileError);\n                        return [];\n                    }\n                }\n                // Inny błąd - zwróć pustą tablicę\n                console.error('❌ Inny błąd - zwracam pustą tablicę');\n                return [];\n            }\n            if (data && data.length > 0) {\n                console.log('👥 Udane pobranie użytkowników:', data.length);\n                console.log('👥 Przykład użytkowników:', data.slice(0, 3).map((u)=>({\n                        id: u.id,\n                        name: u.full_name,\n                        role: u.role\n                    })));\n                return data;\n            } else {\n                console.log('👥 UWAGA: Brak danych użytkowników');\n                // Fallback - przynajmniej aktualny użytkownik\n                try {\n                    const userProfile = await this.getUserProfile(user.id);\n                    console.log('👤 Fallback: używam profilu aktualnego użytkownika:', userProfile.full_name);\n                    return [\n                        userProfile\n                    ];\n                } catch (profileError) {\n                    console.error('❌ Nie można pobrać profilu użytkownika:', profileError);\n                    return [];\n                }\n            }\n        } catch (error) {\n            console.error('❌ getAllUsersForDisplay CRITICAL ERROR:', error);\n            // Krytyczny fallback - spróbuj przynajmniej pobrać aktualnego użytkownika\n            try {\n                const { data: { user } } = await supabase.auth.getUser();\n                if (user) {\n                    const userProfile = await this.getUserProfile(user.id);\n                    console.log('👤 Krytyczny fallback: zwracam aktualnego użytkownika:', userProfile.full_name);\n                    return [\n                        userProfile\n                    ];\n                }\n            } catch (criticalError) {\n                console.error('❌ Krytyczny błąd fallback:', criticalError);\n            }\n            return [];\n        }\n    }\n};\n// Funkcja do określania koloru statusu \"canvas\" na podstawie czasu\nconst getCanvasStatusColor = (statusChangedAt)=>{\n    if (!statusChangedAt) {\n        return {\n            color: 'bg-blue-500/20 text-blue-400 border-blue-500/30',\n            description: 'Nowy',\n            priority: 'low'\n        };\n    }\n    const now = new Date();\n    const statusDate = new Date(statusChangedAt);\n    const daysDiff = Math.floor((now.getTime() - statusDate.getTime()) / (1000 * 60 * 60 * 24));\n    if (daysDiff <= 2) {\n        // 0-2 dni - zielony (świeży)\n        return {\n            color: 'bg-green-500/20 text-green-400 border-green-500/30',\n            description: \"Świeży (\".concat(daysDiff, \"d)\"),\n            priority: 'low'\n        };\n    } else if (daysDiff <= 4) {\n        // 2-4 dni - żółty (uwaga)\n        return {\n            color: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30',\n            description: \"Wymaga uwagi (\".concat(daysDiff, \"d)\"),\n            priority: 'medium'\n        };\n    } else {\n        // 5+ dni - czerwony (pilny)\n        return {\n            color: 'bg-red-500/20 text-red-400 border-red-500/30',\n            description: \"Pilny (\".concat(daysDiff, \"d)\"),\n            priority: 'high'\n        };\n    }\n};\n// Funkcja do pobierania klientów z oznaczeniami priorytetów\nconst getCanvasClientsWithPriority = async (user)=>{\n    try {\n        const clients = await clientsApi.getClients(user);\n        const canvasClients = clients.filter((client)=>client.status === 'canvas');\n        const priorityStats = {\n            high: 0,\n            medium: 0,\n            low: 0,\n            total: canvasClients.length\n        };\n        canvasClients.forEach((client)=>{\n            const { priority } = getCanvasStatusColor(client.status_changed_at);\n            priorityStats[priority]++;\n        });\n        return {\n            clients: canvasClients,\n            stats: priorityStats\n        };\n    } catch (error) {\n        console.error('Błąd pobierania klientów canvas:', error);\n        return {\n            clients: [],\n            stats: {\n                high: 0,\n                medium: 0,\n                low: 0,\n                total: 0\n            }\n        };\n    }\n};\n// 🚀 NOWE API PERFORMANCE - Materializowane Widoki i Optymalizacje\n// Dodane zgodnie z INSTRUKCJE_PERFORMANCE_OPTIMIZATIONS.md\nconst dashboardApi = {\n    // Zastępuje wolne zapytania dashboard - teraz ~10ms zamiast ~200ms\n    async getDashboardMetrics () {\n        try {\n            console.log('⚡ Pobieranie szybkich metryk dashboard z materializowanego widoku...');\n            const { data, error } = await supabase.rpc('get_dashboard_metrics');\n            if (error) {\n                console.error('❌ Błąd pobierania metryk dashboard:', error);\n                throw error;\n            }\n            console.log('✅ Dashboard metrics pobrane w trybie express:', (data === null || data === void 0 ? void 0 : data.length) || 0, 'metryk');\n            return data;\n        } catch (error) {\n            console.error('❌ getDashboardMetrics failed:', error);\n            throw error;\n        }\n    },\n    // Sprawdzenie czy materializowane widoki są świeże\n    async checkViewFreshness () {\n        try {\n            // Sprawdź czy tabela mv_dashboard_summary istnieje\n            const { data, error } = await supabase.from('mv_dashboard_summary').select('last_updated').limit(1).single();\n            if (error) {\n                console.warn('⚠️ Materialized view mv_dashboard_summary nie istnieje lub brak uprawnień:', error);\n                // Fallback - użyj aktualnego czasu\n                return {\n                    lastUpdate: new Date().toISOString(),\n                    minutesSinceUpdate: 0,\n                    isStale: false // Założ że dane są świeże jeśli nie ma widoku\n                };\n            }\n            const lastUpdate = new Date(data.last_updated);\n            const now = new Date();\n            const minutesSinceUpdate = Math.floor((now.getTime() - lastUpdate.getTime()) / (1000 * 60));\n            return {\n                lastUpdate: data.last_updated,\n                minutesSinceUpdate,\n                isStale: minutesSinceUpdate > 30 // Uznaj za nieaktualne po 30 minutach\n            };\n        } catch (error) {\n            console.error('❌ Błąd sprawdzania świeżości widoków:', error);\n            // Graceful fallback\n            return {\n                lastUpdate: new Date().toISOString(),\n                minutesSinceUpdate: 0,\n                isStale: false\n            };\n        }\n    }\n};\n// 🚀 NOWE FUNKCJE PERFORMANCE dodane do istniejącego reportsApi\nconst teamApi = {\n    // Szybki przegląd aktywności zespołu\n    async getTeamActivityOverview () {\n        try {\n            console.log('👥 Pobieranie przeglądu aktywności zespołu (zoptymalizowane)...');\n            const { data, error } = await supabase.from('mv_activity_summary').select('*').in('role', [\n                'pracownik',\n                'manager',\n                'project_manager',\n                'junior_manager',\n                'szef'\n            ]).order('activities_24h', {\n                ascending: false\n            });\n            if (error) {\n                console.error('❌ Błąd pobierania aktywności zespołu:', error);\n                throw error;\n            }\n            console.log(\"✅ Aktywność zespołu pobrana: \".concat((data === null || data === void 0 ? void 0 : data.length) || 0, \" użytkownik\\xf3w\"));\n            return data;\n        } catch (error) {\n            console.error('❌ getTeamActivityOverview failed:', error);\n            throw error;\n        }\n    },\n    // Sprawdzenie aktywnych użytkowników w czasie rzeczywistym\n    async getActiveUsersNow () {\n        try {\n            const { data, error } = await supabase.from('mv_activity_summary').select('user_id, full_name, activity_status, last_activity').eq('activity_status', 'active').order('last_activity', {\n                ascending: false\n            });\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error('❌ getActiveUsersNow failed:', error);\n            throw error;\n        }\n    },\n    // Statystyki produktywności zespołu\n    async getProductivityStats () {\n        try {\n            const { data, error } = await supabase.from('mv_activity_summary').select('activities_24h, activities_7d, phone_clicks, status_changes').in('role', [\n                'pracownik',\n                'manager',\n                'project_manager',\n                'junior_manager',\n                'szef'\n            ]);\n            if (error) throw error;\n            // Oblicz średnie\n            const totalUsers = data.length;\n            const avgDaily = data.reduce((sum, user)=>sum + user.activities_24h, 0) / totalUsers;\n            const avgWeekly = data.reduce((sum, user)=>sum + user.activities_7d, 0) / totalUsers;\n            return {\n                totalUsers,\n                avgDailyActivities: Math.round(avgDaily),\n                avgWeeklyActivities: Math.round(avgWeekly),\n                totalDailyActivities: data.reduce((sum, user)=>sum + user.activities_24h, 0),\n                totalWeeklyActivities: data.reduce((sum, user)=>sum + user.activities_7d, 0)\n            };\n        } catch (error) {\n            console.error('❌ getProductivityStats failed:', error);\n            throw error;\n        }\n    }\n};\n// 🔧 PERFORMANCE MONITORING API\nconst performanceApi = {\n    // Sprawdzenie metryk wydajności systemu\n    async getSystemMetrics () {\n        try {\n            console.log('🔍 Pobieranie metryk wydajności systemu...');\n            const tableStats = [];\n            // Pomocnicza funkcja do bezpiecznego pobierania statystyk tabeli\n            const getTableStats = async (tableName)=>{\n                try {\n                    const { count, error } = await supabase.from(tableName).select('*', {\n                        count: 'exact',\n                        head: true\n                    });\n                    if (error) {\n                        console.warn(\"⚠️ Nie można pobrać statystyk tabeli \".concat(tableName, \":\"), error.message);\n                        return null;\n                    }\n                    return {\n                        table_name: tableName,\n                        record_count: count || 0,\n                        table_size: 'N/A',\n                        last_updated: new Date().toISOString()\n                    };\n                } catch (err) {\n                    console.warn(\"⚠️ Błąd tabeli \".concat(tableName, \":\"), err);\n                    return null;\n                }\n            };\n            // Sprawdź każdą tabelę oddzielnie\n            const tables = [\n                'clients',\n                'users',\n                'activity_logs',\n                'activity_logs_archive'\n            ];\n            for (const tableName of tables){\n                const stats = await getTableStats(tableName);\n                if (stats) {\n                    tableStats.push(stats);\n                }\n            }\n            // Jeśli nie udało się pobrać żadnych statystyk, zwróć podstawowe informacje\n            if (tableStats.length === 0) {\n                console.warn('⚠️ Nie udało się pobrać statystyk żadnej tabeli - zwracam dane przykładowe');\n                tableStats.push({\n                    table_name: 'system_info',\n                    record_count: 0,\n                    table_size: 'Brak dostępu',\n                    last_updated: new Date().toISOString()\n                });\n            }\n            console.log(\"✅ Pobrano statystyki \".concat(tableStats.length, \" tabel\"));\n            return tableStats;\n        } catch (error) {\n            console.error('❌ getSystemMetrics failed:', error);\n            // Graceful fallback - zwróć podstawowe dane zamiast rzucać błąd\n            return [\n                {\n                    table_name: 'error_fallback',\n                    record_count: 0,\n                    table_size: 'Błąd połączenia',\n                    last_updated: new Date().toISOString()\n                }\n            ];\n        }\n    },\n    // Manualne odświeżenie materializowanych widoków\n    async refreshMaterializedViews () {\n        try {\n            console.log('🔄 Manualnie odświeżam materializowane widoki...');\n            const { data, error } = await supabase.rpc('refresh_all_materialized_views');\n            if (error) throw error;\n            console.log('✅ Widoki odświeżone:', data);\n            return data;\n        } catch (error) {\n            console.error('❌ refreshMaterializedViews failed:', error);\n            throw error;\n        }\n    },\n    // Archiwizacja starych logów\n    async archiveOldLogs () {\n        try {\n            console.log('📦 Uruchamiam archiwizację starych logów...');\n            const { data, error } = await supabase.rpc('archive_old_activity_logs');\n            if (error) throw error;\n            console.log(\"✅ Zarchiwizowano \".concat(data, \" starych log\\xf3w\"));\n            return data;\n        } catch (error) {\n            console.error('❌ archiveOldLogs failed:', error);\n            throw error;\n        }\n    },\n    // Optymalizacja bazy danych\n    async optimizeDatabase () {\n        try {\n            console.log('🚀 Uruchamiam optymalizację bazy danych...');\n            const { data, error } = await supabase.rpc('optimize_database_performance');\n            if (error) throw error;\n            console.log('✅ Baza danych zoptymalizowana:', data);\n            return data;\n        } catch (error) {\n            console.error('❌ optimizeDatabase failed:', error);\n            throw error;\n        }\n    }\n};\nconst callsApi = {\n    /**\r\n   * 📞 POBIERZ HISTORIĘ POŁĄCZEŃ\r\n   * \r\n   * Pobiera historię połączeń telefonicznych z activity_logs\r\n   * Uwzględnia uprawnienia użytkownika:\r\n   * - Admin/Szef: wszystkie połączenia z wybranego kraju\r\n   * - Project Manager/Junior Manager: wszystkie z ich lokalizacji\r\n   * - Pracownik: tylko swoje połączenia\r\n   */ async getCalls (user) {\n        let filter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            console.log('📞 Pobieranie historii połączeń...', {\n                user: user.role,\n                filter\n            });\n            let query = supabase.from('activity_logs').select(\"\\n          id,\\n          client_id,\\n          changed_by,\\n          timestamp,\\n          clients!inner (\\n            id,\\n            first_name,\\n            last_name,\\n            company_name,\\n            phone,\\n            location_id,\\n            location:locations (\\n              id,\\n              name,\\n              code\\n            )\\n          )\\n        \").eq('field_changed', 'last_phone_click').order('timestamp', {\n                ascending: false\n            }).limit(filter.limit || 100);\n            // Filtrowanie według uprawnień użytkownika\n            if (user.role === 'pracownik') {\n                // Pracownik widzi tylko swoje połączenia\n                query = query.eq('changed_by', user.id);\n            } else if ([\n                'junior_manager',\n                'manager',\n                'project_manager'\n            ].includes(user.role)) {\n                // Menedżerowie widzą połączenia z ich lokalizacji\n                if (filter.locationId) {\n                    // Jeśli wybrano konkretną lokalizację, filtruj po niej\n                    query = query.eq('clients.location_id', filter.locationId);\n                } else if (user.location_id) {\n                    // Jeśli nie wybrano lokalizacji, pokaż z lokalizacji użytkownika\n                    query = query.eq('clients.location_id', user.location_id);\n                }\n            } else if ([\n                'szef',\n                'admin'\n            ].includes(user.role)) {\n                // Szef i admin widzą wszystko, opcjonalnie filtrowane po lokalizacji\n                if (filter.locationId) {\n                    query = query.eq('clients.location_id', filter.locationId);\n                }\n            }\n            // Dodatkowe filtry czasowe\n            if (filter.startDate) {\n                query = query.gte('timestamp', filter.startDate);\n            }\n            if (filter.endDate) {\n                query = query.lte('timestamp', filter.endDate);\n            }\n            const { data: callLogs, error } = await query;\n            if (error) {\n                console.error('❌ Błąd pobierania połączeń:', error);\n                throw error;\n            }\n            if (!callLogs || callLogs.length === 0) {\n                console.log('📞 Brak połączeń dla podanych kryteriów');\n                return [];\n            }\n            // Pobierz informacje o użytkownikach (dzwoniących)\n            const callerIds = [\n                ...new Set(callLogs.map((log)=>log.changed_by))\n            ];\n            const { data: callers, error: callersError } = await supabase.from('users').select('id, full_name, role, avatar_url').in('id', callerIds);\n            if (callersError) {\n                console.error('❌ Błąd pobierania użytkowników:', callersError);\n            // Kontynuuj bez szczegółów użytkowników\n            }\n            // Stwórz mapę użytkowników\n            const callersMap = (callers || []).reduce((acc, caller)=>{\n                acc[caller.id] = caller;\n                return acc;\n            }, {});\n            // Przekształć dane na format CallRecord\n            const callRecords = callLogs.map((log)=>{\n                const client = Array.isArray(log.clients) ? log.clients[0] : log.clients;\n                const caller = callersMap[log.changed_by];\n                const location = Array.isArray(client === null || client === void 0 ? void 0 : client.location) ? client.location[0] : client === null || client === void 0 ? void 0 : client.location;\n                return {\n                    id: log.id,\n                    client_id: log.client_id,\n                    client_name: client ? \"\".concat(client.first_name, \" \").concat(client.last_name).trim() : 'Nieznany klient',\n                    client_company: (client === null || client === void 0 ? void 0 : client.company_name) || 'Brak informacji',\n                    client_phone: (client === null || client === void 0 ? void 0 : client.phone) || 'Brak telefonu',\n                    called_by: log.changed_by,\n                    caller_name: (caller === null || caller === void 0 ? void 0 : caller.full_name) || 'Nieznany użytkownik',\n                    caller_role: (caller === null || caller === void 0 ? void 0 : caller.role) || 'unknown',\n                    caller_avatar: (caller === null || caller === void 0 ? void 0 : caller.avatar_url) || null,\n                    call_timestamp: log.timestamp,\n                    location_id: (client === null || client === void 0 ? void 0 : client.location_id) || null,\n                    location_name: (location === null || location === void 0 ? void 0 : location.name) || null,\n                    location_code: (location === null || location === void 0 ? void 0 : location.code) || null\n                };\n            });\n            console.log(\"✅ Pobrano \".concat(callRecords.length, \" rekord\\xf3w połączeń\"));\n            return callRecords;\n        } catch (error) {\n            console.error('❌ Błąd w callsApi.getCalls:', error);\n            throw error;\n        }\n    },\n    /**\r\n   * 📊 POBIERZ STATYSTYKI POŁĄCZEŃ\r\n   * \r\n   * Pobiera statystyki połączeń dla wybranego okresu\r\n   */ async getCallsStats (user) {\n        let filter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            console.log('📊 Pobieranie statystyk połączeń...');\n            const now = new Date();\n            const today = now.toISOString().split('T')[0];\n            const weekStart = new Date(now.setDate(now.getDate() - now.getDay())).toISOString().split('T')[0];\n            const monthStart = new Date(now.getFullYear(), now.getMonth(), 1).toISOString();\n            // Pobierz wszystkie połączenia zgodnie z uprawnieniami\n            const allCalls = await callsApi.getCalls(user, {\n                ...filter,\n                limit: 1000\n            });\n            // Zlicz statystyki\n            const totalCalls = allCalls.length;\n            const callsToday = allCalls.filter((call)=>call.call_timestamp.startsWith(today)).length;\n            const callsThisWeek = allCalls.filter((call)=>call.call_timestamp >= weekStart).length;\n            const callsThisMonth = allCalls.filter((call)=>call.call_timestamp >= monthStart).length;\n            // Top dzwoniący\n            const callerCounts = allCalls.reduce((acc, call)=>{\n                const key = call.called_by;\n                if (!acc[key]) {\n                    acc[key] = {\n                        name: call.caller_name,\n                        role: call.caller_role,\n                        avatar: call.caller_avatar,\n                        count: 0\n                    };\n                }\n                acc[key].count++;\n                return acc;\n            }, {});\n            const topCallers = Object.values(callerCounts).sort((a, b)=>b.count - a.count).slice(0, 5);\n            return {\n                totalCalls,\n                callsToday,\n                callsThisWeek,\n                callsThisMonth,\n                topCallers\n            };\n        } catch (error) {\n            console.error('❌ Błąd pobierania statystyk połączeń:', error);\n            return {\n                totalCalls: 0,\n                callsToday: 0,\n                callsThisWeek: 0,\n                callsThisMonth: 0,\n                topCallers: []\n            };\n        }\n    }\n};\n// 📡 NOTIFICATIONS API - System powiadomień\nconst notificationsApi = {\n    // Pobierz powiadomienia dla użytkownika\n    async getNotifications (user, options) {\n        try {\n            let query = supabase.from('notifications').select(\"\\n          id,\\n          user_id,\\n          client_id,\\n          type,\\n          title,\\n          message,\\n          read,\\n          urgent,\\n          metadata,\\n          created_at,\\n          expires_at,\\n          client:clients (\\n            id,\\n            first_name,\\n            last_name,\\n            company_name\\n          )\\n        \").eq('user_id', user.id).order('created_at', {\n                ascending: false\n            });\n            // Filtruj tylko nieprzeczytane\n            if (options === null || options === void 0 ? void 0 : options.unreadOnly) {\n                query = query.eq('read', false);\n            }\n            // Filtruj po typie\n            if (options === null || options === void 0 ? void 0 : options.type) {\n                query = query.eq('type', options.type);\n            }\n            // Limit\n            if (options === null || options === void 0 ? void 0 : options.limit) {\n                query = query.limit(options.limit);\n            }\n            const { data, error } = await query;\n            if (error) {\n                console.error('❌ Błąd pobierania powiadomień:', error);\n                throw error;\n            }\n            return (data || []).map((notification)=>({\n                    ...notification,\n                    // Przekształć dane klienta z JOIN\n                    client: notification.client && Array.isArray(notification.client) && notification.client.length > 0 ? notification.client[0] : notification.client && !Array.isArray(notification.client) ? notification.client : undefined\n                }));\n        } catch (error) {\n            console.error('❌ Błąd w getNotifications:', error);\n            throw error;\n        }\n    },\n    // Pobierz liczbę nieprzeczytanych powiadomień\n    async getUnreadCount (user) {\n        try {\n            const { count, error } = await supabase.from('notifications').select('*', {\n                count: 'exact',\n                head: true\n            }).eq('user_id', user.id).eq('read', false);\n            if (error) {\n                console.error('❌ Błąd pobierania liczby nieprzeczytanych:', error);\n                throw error;\n            }\n            return count || 0;\n        } catch (error) {\n            console.error('❌ Błąd w getUnreadCount:', error);\n            return 0;\n        }\n    },\n    // Oznacz powiadomienie jako przeczytane\n    async markAsRead (notificationId) {\n        try {\n            const { error } = await supabase.rpc('mark_notification_as_read', {\n                notification_id: notificationId\n            });\n            if (error) {\n                console.error('❌ Błąd oznaczania jako przeczytane:', error);\n                throw error;\n            }\n        } catch (error) {\n            console.error('❌ Błąd w markAsRead:', error);\n            throw error;\n        }\n    },\n    // Oznacz wszystkie powiadomienia jako przeczytane\n    async markAllAsRead (user) {\n        try {\n            const { data, error } = await supabase.rpc('mark_all_notifications_as_read');\n            if (error) {\n                console.error('❌ Błąd oznaczania wszystkich jako przeczytane:', error);\n                throw error;\n            }\n            return data || 0;\n        } catch (error) {\n            console.error('❌ Błąd w markAllAsRead:', error);\n            throw error;\n        }\n    },\n    // Utwórz nowe powiadomienie\n    async createNotification (notification) {\n        try {\n            const { data, error } = await supabase.from('notifications').insert([\n                notification\n            ]).select().single();\n            if (error) {\n                console.error('❌ Błąd tworzenia powiadomienia:', error);\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            console.error('❌ Błąd w createNotification:', error);\n            throw error;\n        }\n    },\n    // Usuń powiadomienie\n    async deleteNotification (notificationId) {\n        try {\n            const { error } = await supabase.from('notifications').delete().eq('id', notificationId);\n            if (error) {\n                console.error('❌ Błąd usuwania powiadomienia:', error);\n                throw error;\n            }\n        } catch (error) {\n            console.error('❌ Błąd w deleteNotification:', error);\n            throw error;\n        }\n    },\n    // Wyczyść stare powiadomienia\n    async cleanupOldNotifications () {\n        try {\n            const { error } = await supabase.rpc('cleanup_old_notifications');\n            if (error) {\n                console.error('❌ Błąd czyszczenia starych powiadomień:', error);\n                throw error;\n            }\n        } catch (error) {\n            console.error('❌ Błąd w cleanupOldNotifications:', error);\n            throw error;\n        }\n    },\n    // Pobierz dzisiejsze przypomnienia dla dashboard\n    async getTodayReminders (user) {\n        try {\n            const today = new Date().toISOString().split('T')[0];\n            const { data, error } = await supabase.from('notifications').select(\"\\n          id,\\n          user_id,\\n          client_id,\\n          type,\\n          title,\\n          message,\\n          read,\\n          urgent,\\n          metadata,\\n          created_at,\\n          expires_at,\\n          client:clients (\\n            id,\\n            first_name,\\n            last_name,\\n            company_name\\n          )\\n        \").eq('user_id', user.id).eq('type', 'reminder').gte('created_at', \"\".concat(today, \"T00:00:00.000Z\")).lt('created_at', \"\".concat(today, \"T23:59:59.999Z\")).order('created_at', {\n                ascending: true\n            });\n            if (error) {\n                console.error('❌ Błąd pobierania dzisiejszych przypomnień:', error);\n                throw error;\n            }\n            return (data || []).map((notification)=>({\n                    ...notification,\n                    client: notification.client && Array.isArray(notification.client) && notification.client.length > 0 ? notification.client[0] : notification.client && !Array.isArray(notification.client) ? notification.client : undefined\n                }));\n        } catch (error) {\n            console.error('❌ Błąd w getTodayReminders:', error);\n            return [];\n        }\n    },\n    // Uruchom funkcje generowania powiadomień (do testowania)\n    async triggerReminderCheck () {\n        try {\n            const { error } = await supabase.rpc('create_reminder_notifications');\n            if (error) {\n                console.error('❌ Błąd uruchamiania sprawdzania przypomnień:', error);\n                throw error;\n            }\n        } catch (error) {\n            console.error('❌ Błąd w triggerReminderCheck:', error);\n            throw error;\n        }\n    },\n    async triggerAntisaleCheck () {\n        try {\n            const { error } = await supabase.rpc('create_antysale_warnings');\n            if (error) {\n                console.error('❌ Błąd uruchamiania sprawdzania antysale:', error);\n                throw error;\n            }\n        } catch (error) {\n            console.error('❌ Błąd w triggerAntisaleCheck:', error);\n            throw error;\n        }\n    },\n    // Subskrypcja na real-time powiadomienia\n    subscribeToNotifications (userId, callback) {\n        return supabase.channel(\"notifications_\".concat(userId)).on('postgres_changes', {\n            event: 'INSERT',\n            schema: 'public',\n            table: 'notifications',\n            filter: \"user_id=eq.\".concat(userId)\n        }, (payload)=>{\n            callback(payload.new);\n        }).subscribe();\n    }\n};\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/translations.ts":
/*!*****************************!*\
  !*** ./lib/translations.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVAILABLE_LANGUAGES: () => (/* binding */ AVAILABLE_LANGUAGES),\n/* harmony export */   translations: () => (/* binding */ translations),\n/* harmony export */   useTranslation: () => (/* binding */ useTranslation)\n/* harmony export */ });\n// Definicje języków\n// Dostępne języki z nazwami wyświetlanymi\nconst AVAILABLE_LANGUAGES = {\n    pl: {\n        name: 'Polski',\n        flag: '🇵🇱'\n    },\n    en: {\n        name: 'English',\n        flag: '🇬🇧'\n    },\n    sk: {\n        name: 'Slovenčina',\n        flag: '🇸🇰'\n    }\n};\n// Tłumaczenia - kompletne dla całej aplikacji\nconst translations = {\n    pl: {\n        // Ogólne\n        language: 'Język',\n        save: 'Zapisz',\n        cancel: 'Anuluj',\n        loading: 'Ładowanie...',\n        error: 'Błąd',\n        success: 'Sukces',\n        edit: 'Edytuj',\n        delete: 'Usuń',\n        add: 'Dodaj',\n        search: 'Szukaj',\n        filter: 'Filtruj',\n        reset: 'Resetuj',\n        close: 'Zamknij',\n        // Nawigacja\n        navigation: {\n            dashboard: 'Dashboard',\n            clients: 'Klienci',\n            reports: 'Raporty',\n            settings: 'Ustawienia',\n            logout: 'Wyloguj'\n        },\n        // Klienci\n        clients: {\n            title: 'Zarządzanie Klientami',\n            searchClients: 'Szukaj klientów...',\n            filterByOwner: 'Filtruj po właścicielu',\n            allOwners: 'Wszyscy właściciele',\n            noOwner: 'Bez właściciela',\n            resetFilters: 'Resetuj filtry',\n            employeeInfo: 'Widzisz wszystkich klientów i ich właścicieli, ale możesz filtrować tylko swoich klientów',\n            // Pola\n            firstName: 'Imię',\n            lastName: 'Nazwisko',\n            company: 'Firma',\n            phone: 'Telefon',\n            email: 'Email',\n            status: 'Status',\n            owner: 'Właściciel',\n            // Statusy\n            statuses: {\n                canvas: 'Canvas',\n                brak_kontaktu: 'Brak kontaktu',\n                nie_zainteresowany: 'Nie zainteresowany',\n                zdenerwowany: 'Zdenerwowany',\n                antysale: 'Anti-sale',\n                sale: 'Sprzedaż',\n                '$$': 'Płatny'\n            }\n        },\n        // Ustawienia\n        settings: {\n            title: 'Ustawienia',\n            languageSettings: 'Ustawienia językowe',\n            selectLanguage: 'Wybierz język aplikacji',\n            languageChanged: 'Język został zmieniony'\n        }\n    },\n    en: {\n        // General\n        language: 'Language',\n        save: 'Save',\n        cancel: 'Cancel',\n        loading: 'Loading...',\n        error: 'Error',\n        success: 'Success',\n        edit: 'Edit',\n        delete: 'Delete',\n        add: 'Add',\n        search: 'Search',\n        filter: 'Filter',\n        reset: 'Reset',\n        close: 'Close',\n        // Navigation\n        navigation: {\n            dashboard: 'Dashboard',\n            clients: 'Clients',\n            reports: 'Reports',\n            settings: 'Settings',\n            logout: 'Logout'\n        },\n        // Clients\n        clients: {\n            title: 'Client Management',\n            searchClients: 'Search clients...',\n            filterByOwner: 'Filter by owner',\n            allOwners: 'All owners',\n            noOwner: 'No owner',\n            resetFilters: 'Reset filters',\n            employeeInfo: 'You can see all clients and their owners, but can only filter your own clients',\n            // Fields\n            firstName: 'First Name',\n            lastName: 'Last Name',\n            company: 'Company',\n            phone: 'Phone',\n            email: 'Email',\n            status: 'Status',\n            owner: 'Owner',\n            // Statuses\n            statuses: {\n                canvas: 'Canvas',\n                brak_kontaktu: 'No contact',\n                nie_zainteresowany: 'Not interested',\n                zdenerwowany: 'Angry',\n                antysale: 'Anti-sale',\n                sale: 'Sale',\n                '$$': 'Paid'\n            }\n        },\n        // Settings\n        settings: {\n            title: 'Settings',\n            languageSettings: 'Language Settings',\n            selectLanguage: 'Select application language',\n            languageChanged: 'Language has been changed'\n        }\n    },\n    sk: {\n        // Všeobecné\n        language: 'Jazyk',\n        save: 'Uložiť',\n        cancel: 'Zrušiť',\n        loading: 'Načítava...',\n        error: 'Chyba',\n        success: 'Úspech',\n        edit: 'Upraviť',\n        delete: 'Vymazať',\n        add: 'Pridať',\n        search: 'Hľadať',\n        filter: 'Filtrovať',\n        reset: 'Resetovať',\n        close: 'Zavrieť',\n        // Navigácia\n        navigation: {\n            dashboard: 'Dashboard',\n            clients: 'Klienti',\n            reports: 'Reporty',\n            settings: 'Nastavenia',\n            logout: 'Odhlásiť'\n        },\n        // Klienti\n        clients: {\n            title: 'Správa Klientov',\n            searchClients: 'Hľadať klientov...',\n            filterByOwner: 'Filtrovať podľa vlastníka',\n            allOwners: 'Všetci vlastníci',\n            noOwner: 'Bez vlastníka',\n            resetFilters: 'Resetovať filtre',\n            employeeInfo: 'Vidíte všetkých klientov a ich vlastníkov, ale môžete filtrovať len svojich klientov',\n            // Polia\n            firstName: 'Meno',\n            lastName: 'Priezvisko',\n            company: 'Spoločnosť',\n            phone: 'Telefón',\n            email: 'Email',\n            status: 'Status',\n            owner: 'Vlastník',\n            // Statusy\n            statuses: {\n                canvas: 'Canvas',\n                brak_kontaktu: 'Bez kontaktu',\n                nie_zainteresowany: 'Nezaujíma sa',\n                zdenerwowany: 'Nahnevaný',\n                antysale: 'Anti-predaj',\n                sale: 'Predaj',\n                '$$': 'Platený'\n            }\n        },\n        // Nastavenia\n        settings: {\n            title: 'Nastavenia',\n            languageSettings: 'Nastavenia jazyka',\n            selectLanguage: 'Vybrať jazyk aplikácie',\n            languageChanged: 'Jazyk bol zmenený'\n        }\n    }\n};\n// Hook dla tłumaczeń\nfunction useTranslation() {\n    let language = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'pl';\n    return {\n        t: (key)=>{\n            const keys = key.split('.');\n            let value = translations[language];\n            for (const k of keys){\n                value = value === null || value === void 0 ? void 0 : value[k];\n            }\n            return value || key;\n        },\n        language,\n        availableLanguages: AVAILABLE_LANGUAGES\n    };\n}\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/translations.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADMIN_ROLES: () => (/* binding */ ADMIN_ROLES),\n/* harmony export */   FILE_IMPORT_ROLES: () => (/* binding */ FILE_IMPORT_ROLES),\n/* harmony export */   MANAGER_ROLES: () => (/* binding */ MANAGER_ROLES),\n/* harmony export */   REPORTS_ACCESS_ROLES: () => (/* binding */ REPORTS_ACCESS_ROLES),\n/* harmony export */   USER_MANAGEMENT_ROLES: () => (/* binding */ USER_MANAGEMENT_ROLES),\n/* harmony export */   USER_PROMOTION_ROLES: () => (/* binding */ USER_PROMOTION_ROLES),\n/* harmony export */   canImportFiles: () => (/* binding */ canImportFiles),\n/* harmony export */   canManageUsers: () => (/* binding */ canManageUsers),\n/* harmony export */   canPromoteUsers: () => (/* binding */ canPromoteUsers),\n/* harmony export */   cn: () => (/* binding */ cn),\n/* harmony export */   hasReportsAccess: () => (/* binding */ hasReportsAccess),\n/* harmony export */   isAdminLike: () => (/* binding */ isAdminLike),\n/* harmony export */   isManagerLike: () => (/* binding */ isManagerLike)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n/**\r\n * 🔐 HELPERY DO SPRAWDZANIA RÓL\r\n * \r\n * Centralne miejsce do zarządzania uprawnieniami ról.\r\n * Ułatwia utrzymanie i modyfikację uprawnień w przyszłości.\r\n */ // Role z pełnymi uprawnieniami (szef/admin)\nconst ADMIN_ROLES = [\n    'szef',\n    'admin'\n];\n// Role menedżerskie (wszyscy managerowie)\nconst MANAGER_ROLES = [\n    'manager',\n    'project_manager',\n    'junior_manager'\n];\n// Role z dostępem do raportów i statystyk\nconst REPORTS_ACCESS_ROLES = [\n    ...MANAGER_ROLES,\n    ...ADMIN_ROLES\n];\n// Role z dostępem do zarządzania użytkownikami (wszyscy menedżerowie + szef/admin)\nconst USER_MANAGEMENT_ROLES = [\n    ...MANAGER_ROLES,\n    ...ADMIN_ROLES\n];\n// Role z dostępem do promowania użytkowników (tylko szef i admin)\nconst USER_PROMOTION_ROLES = [\n    ...ADMIN_ROLES\n];\n// Role z dostępem do importu plików\nconst FILE_IMPORT_ROLES = REPORTS_ACCESS_ROLES;\n/**\r\n * Sprawdza czy użytkownik ma rolę menedżerską (manager, project_manager, junior_manager)\r\n */ function isManagerLike(userRole) {\n    return userRole ? MANAGER_ROLES.includes(userRole) : false;\n}\n/**\r\n * Sprawdza czy użytkownik ma rolę administracyjną (szef, admin)\r\n */ function isAdminLike(userRole) {\n    return userRole ? ADMIN_ROLES.includes(userRole) : false;\n}\n/**\r\n * Sprawdza czy użytkownik ma dostęp do raportów i statystyk\r\n */ function hasReportsAccess(userRole) {\n    return userRole ? REPORTS_ACCESS_ROLES.includes(userRole) : false;\n}\n/**\r\n * Sprawdza czy użytkownik może zarządzać innymi użytkownikami\r\n */ function canManageUsers(userRole) {\n    return userRole ? USER_MANAGEMENT_ROLES.includes(userRole) : false;\n}\n/**\r\n * Sprawdza czy użytkownik może importować pliki\r\n */ function canImportFiles(userRole) {\n    return userRole ? FILE_IMPORT_ROLES.includes(userRole) : false;\n}\n/**\r\n * Sprawdza czy użytkownik może promować innych użytkowników (tylko szef i admin)\r\n */ function canPromoteUsers(userRole) {\n    return userRole ? USER_PROMOTION_ROLES.includes(userRole) : false;\n}\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi91dGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEM7QUFDSjtBQUVqQyxTQUFTRTtJQUFHO1FBQUdDLE9BQUgsdUJBQXVCOztJQUN4QyxPQUFPRix1REFBT0EsQ0FBQ0QsMENBQUlBLENBQUNHO0FBQ3RCO0FBRUE7Ozs7O0NBS0MsR0FFRCw0Q0FBNEM7QUFDckMsTUFBTUMsY0FBYztJQUFDO0lBQVE7Q0FBUSxDQUFTO0FBRXJELDBDQUEwQztBQUNuQyxNQUFNQyxnQkFBZ0I7SUFBQztJQUFXO0lBQW1CO0NBQWlCLENBQVM7QUFFdEYsMENBQTBDO0FBQ25DLE1BQU1DLHVCQUF1QjtPQUFJRDtPQUFrQkQ7Q0FBWSxDQUFTO0FBRS9FLG1GQUFtRjtBQUM1RSxNQUFNRyx3QkFBd0I7T0FBSUY7T0FBa0JEO0NBQVksQ0FBUztBQUVoRixrRUFBa0U7QUFDM0QsTUFBTUksdUJBQXVCO09BQUlKO0NBQVksQ0FBUztBQUU3RCxvQ0FBb0M7QUFDN0IsTUFBTUssb0JBQW9CSCxxQkFBb0I7QUFFckQ7O0NBRUMsR0FDTSxTQUFTSSxjQUFjQyxRQUFpQjtJQUM3QyxPQUFPQSxXQUFXTixjQUFjTyxRQUFRLENBQUNELFlBQW1CO0FBQzlEO0FBRUE7O0NBRUMsR0FDTSxTQUFTRSxZQUFZRixRQUFpQjtJQUMzQyxPQUFPQSxXQUFXUCxZQUFZUSxRQUFRLENBQUNELFlBQW1CO0FBQzVEO0FBRUE7O0NBRUMsR0FDTSxTQUFTRyxpQkFBaUJILFFBQWlCO0lBQ2hELE9BQU9BLFdBQVdMLHFCQUFxQk0sUUFBUSxDQUFDRCxZQUFtQjtBQUNyRTtBQUVBOztDQUVDLEdBQ00sU0FBU0ksZUFBZUosUUFBaUI7SUFDOUMsT0FBT0EsV0FBV0osc0JBQXNCSyxRQUFRLENBQUNELFlBQW1CO0FBQ3RFO0FBRUE7O0NBRUMsR0FDTSxTQUFTSyxlQUFlTCxRQUFpQjtJQUM5QyxPQUFPQSxXQUFXRixrQkFBa0JHLFFBQVEsQ0FBQ0QsWUFBbUI7QUFDbEU7QUFFQTs7Q0FFQyxHQUNNLFNBQVNNLGdCQUFnQk4sUUFBaUI7SUFDL0MsT0FBT0EsV0FBV0gscUJBQXFCSSxRQUFRLENBQUNELFlBQW1CO0FBQ3JFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbGliXFx1dGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbHN4LCB0eXBlIENsYXNzVmFsdWUgfSBmcm9tIFwiY2xzeFwiXHJcbmltcG9ydCB7IHR3TWVyZ2UgfSBmcm9tIFwidGFpbHdpbmQtbWVyZ2VcIlxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNuKC4uLmlucHV0czogQ2xhc3NWYWx1ZVtdKSB7XHJcbiAgcmV0dXJuIHR3TWVyZ2UoY2xzeChpbnB1dHMpKVxyXG59XHJcblxyXG4vKipcclxuICog8J+UkCBIRUxQRVJZIERPIFNQUkFXRFpBTklBIFLDk0xcclxuICogXHJcbiAqIENlbnRyYWxuZSBtaWVqc2NlIGRvIHphcnrEhWR6YW5pYSB1cHJhd25pZW5pYW1pIHLDs2wuXHJcbiAqIFXFgmF0d2lhIHV0cnp5bWFuaWUgaSBtb2R5ZmlrYWNqxJkgdXByYXduaWXFhCB3IHByenlzesWCb8WbY2kuXHJcbiAqL1xyXG5cclxuLy8gUm9sZSB6IHBlxYJueW1pIHVwcmF3bmllbmlhbWkgKHN6ZWYvYWRtaW4pXHJcbmV4cG9ydCBjb25zdCBBRE1JTl9ST0xFUyA9IFsnc3plZicsICdhZG1pbiddIGFzIGNvbnN0XHJcblxyXG4vLyBSb2xlIG1lbmVkxbxlcnNraWUgKHdzenlzY3kgbWFuYWdlcm93aWUpXHJcbmV4cG9ydCBjb25zdCBNQU5BR0VSX1JPTEVTID0gWydtYW5hZ2VyJywgJ3Byb2plY3RfbWFuYWdlcicsICdqdW5pb3JfbWFuYWdlciddIGFzIGNvbnN0XHJcblxyXG4vLyBSb2xlIHogZG9zdMSZcGVtIGRvIHJhcG9ydMOzdyBpIHN0YXR5c3R5a1xyXG5leHBvcnQgY29uc3QgUkVQT1JUU19BQ0NFU1NfUk9MRVMgPSBbLi4uTUFOQUdFUl9ST0xFUywgLi4uQURNSU5fUk9MRVNdIGFzIGNvbnN0XHJcblxyXG4vLyBSb2xlIHogZG9zdMSZcGVtIGRvIHphcnrEhWR6YW5pYSB1xbx5dGtvd25pa2FtaSAod3N6eXNjeSBtZW5lZMW8ZXJvd2llICsgc3plZi9hZG1pbilcclxuZXhwb3J0IGNvbnN0IFVTRVJfTUFOQUdFTUVOVF9ST0xFUyA9IFsuLi5NQU5BR0VSX1JPTEVTLCAuLi5BRE1JTl9ST0xFU10gYXMgY29uc3RcclxuXHJcbi8vIFJvbGUgeiBkb3N0xJlwZW0gZG8gcHJvbW93YW5pYSB1xbx5dGtvd25pa8OzdyAodHlsa28gc3plZiBpIGFkbWluKVxyXG5leHBvcnQgY29uc3QgVVNFUl9QUk9NT1RJT05fUk9MRVMgPSBbLi4uQURNSU5fUk9MRVNdIGFzIGNvbnN0XHJcblxyXG4vLyBSb2xlIHogZG9zdMSZcGVtIGRvIGltcG9ydHUgcGxpa8Ozd1xyXG5leHBvcnQgY29uc3QgRklMRV9JTVBPUlRfUk9MRVMgPSBSRVBPUlRTX0FDQ0VTU19ST0xFU1xyXG5cclxuLyoqXHJcbiAqIFNwcmF3ZHphIGN6eSB1xbx5dGtvd25payBtYSByb2zEmSBtZW5lZMW8ZXJza8SFIChtYW5hZ2VyLCBwcm9qZWN0X21hbmFnZXIsIGp1bmlvcl9tYW5hZ2VyKVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzTWFuYWdlckxpa2UodXNlclJvbGU/OiBzdHJpbmcpOiBib29sZWFuIHtcclxuICByZXR1cm4gdXNlclJvbGUgPyBNQU5BR0VSX1JPTEVTLmluY2x1ZGVzKHVzZXJSb2xlIGFzIGFueSkgOiBmYWxzZVxyXG59XHJcblxyXG4vKipcclxuICogU3ByYXdkemEgY3p5IHXFvHl0a293bmlrIG1hIHJvbMSZIGFkbWluaXN0cmFjeWpuxIUgKHN6ZWYsIGFkbWluKVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzQWRtaW5MaWtlKHVzZXJSb2xlPzogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIHVzZXJSb2xlID8gQURNSU5fUk9MRVMuaW5jbHVkZXModXNlclJvbGUgYXMgYW55KSA6IGZhbHNlXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTcHJhd2R6YSBjenkgdcW8eXRrb3duaWsgbWEgZG9zdMSZcCBkbyByYXBvcnTDs3cgaSBzdGF0eXN0eWtcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBoYXNSZXBvcnRzQWNjZXNzKHVzZXJSb2xlPzogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIHVzZXJSb2xlID8gUkVQT1JUU19BQ0NFU1NfUk9MRVMuaW5jbHVkZXModXNlclJvbGUgYXMgYW55KSA6IGZhbHNlXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTcHJhd2R6YSBjenkgdcW8eXRrb3duaWsgbW/FvGUgemFyesSFZHphxIcgaW5ueW1pIHXFvHl0a293bmlrYW1pXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY2FuTWFuYWdlVXNlcnModXNlclJvbGU/OiBzdHJpbmcpOiBib29sZWFuIHtcclxuICByZXR1cm4gdXNlclJvbGUgPyBVU0VSX01BTkFHRU1FTlRfUk9MRVMuaW5jbHVkZXModXNlclJvbGUgYXMgYW55KSA6IGZhbHNlXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTcHJhd2R6YSBjenkgdcW8eXRrb3duaWsgbW/FvGUgaW1wb3J0b3dhxIcgcGxpa2lcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjYW5JbXBvcnRGaWxlcyh1c2VyUm9sZT86IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gIHJldHVybiB1c2VyUm9sZSA/IEZJTEVfSU1QT1JUX1JPTEVTLmluY2x1ZGVzKHVzZXJSb2xlIGFzIGFueSkgOiBmYWxzZVxyXG59XHJcblxyXG4vKipcclxuICogU3ByYXdkemEgY3p5IHXFvHl0a293bmlrIG1vxbxlIHByb21vd2HEhyBpbm55Y2ggdcW8eXRrb3duaWvDs3cgKHR5bGtvIHN6ZWYgaSBhZG1pbilcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjYW5Qcm9tb3RlVXNlcnModXNlclJvbGU/OiBzdHJpbmcpOiBib29sZWFuIHtcclxuICByZXR1cm4gdXNlclJvbGUgPyBVU0VSX1BST01PVElPTl9ST0xFUy5pbmNsdWRlcyh1c2VyUm9sZSBhcyBhbnkpIDogZmFsc2VcclxufVxyXG4iXSwibmFtZXMiOlsiY2xzeCIsInR3TWVyZ2UiLCJjbiIsImlucHV0cyIsIkFETUlOX1JPTEVTIiwiTUFOQUdFUl9ST0xFUyIsIlJFUE9SVFNfQUNDRVNTX1JPTEVTIiwiVVNFUl9NQU5BR0VNRU5UX1JPTEVTIiwiVVNFUl9QUk9NT1RJT05fUk9MRVMiLCJGSUxFX0lNUE9SVF9ST0xFUyIsImlzTWFuYWdlckxpa2UiLCJ1c2VyUm9sZSIsImluY2x1ZGVzIiwiaXNBZG1pbkxpa2UiLCJoYXNSZXBvcnRzQWNjZXNzIiwiY2FuTWFuYWdlVXNlcnMiLCJjYW5JbXBvcnRGaWxlcyIsImNhblByb21vdGVVc2VycyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@radix-ui/primitive/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeEventHandlers: () => (/* binding */ composeEventHandlers)\n/* harmony export */ });\n// packages/core/primitive/src/primitive.tsx\r\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\r\n  return function handleEvent(event) {\r\n    originalEventHandler?.(event);\r\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\r\n      return ourEventHandler?.(event);\r\n    }\r\n  };\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLHVFQUF1RSxrQ0FBa0MsSUFBSTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccHJpbWl0aXZlXFxkaXN0XFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvY29yZS9wcmltaXRpdmUvc3JjL3ByaW1pdGl2ZS50c3hcclxuZnVuY3Rpb24gY29tcG9zZUV2ZW50SGFuZGxlcnMob3JpZ2luYWxFdmVudEhhbmRsZXIsIG91ckV2ZW50SGFuZGxlciwgeyBjaGVja0ZvckRlZmF1bHRQcmV2ZW50ZWQgPSB0cnVlIH0gPSB7fSkge1xyXG4gIHJldHVybiBmdW5jdGlvbiBoYW5kbGVFdmVudChldmVudCkge1xyXG4gICAgb3JpZ2luYWxFdmVudEhhbmRsZXI/LihldmVudCk7XHJcbiAgICBpZiAoY2hlY2tGb3JEZWZhdWx0UHJldmVudGVkID09PSBmYWxzZSB8fCAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xyXG4gICAgICByZXR1cm4gb3VyRXZlbnRIYW5kbGVyPy4oZXZlbnQpO1xyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuZXhwb3J0IHtcclxuICBjb21wb3NlRXZlbnRIYW5kbGVyc1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-collection/dist/index.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@radix-ui/react-collection/dist/index.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCollection: () => (/* binding */ createCollection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ createCollection auto */ // packages/react/collection/src/Collection.tsx\n\n\n\n\n\nfunction createCollection(name) {\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n    const PROVIDER_NAME = name + \"CollectionProvider\";\n    const [createCollectionContext, createCollectionScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(PROVIDER_NAME);\n    const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {\n        collectionRef: {\n            current: null\n        },\n        itemMap: /* @__PURE__ */ new Map()\n    });\n    const CollectionProvider = (props)=>{\n        _s();\n        const { scope, children } = props;\n        const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n        const itemMap = react__WEBPACK_IMPORTED_MODULE_0__.useRef(/* @__PURE__ */ new Map()).current;\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CollectionProviderImpl, {\n            scope,\n            itemMap,\n            collectionRef: ref,\n            children\n        });\n    };\n    _s(CollectionProvider, \"i9R1RY532Tsw7syarXwOonBpwXM=\");\n    CollectionProvider.displayName = PROVIDER_NAME;\n    const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n    const CollectionSlot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s1((props, forwardedRef)=>{\n        _s1();\n        const { scope, children } = props;\n        const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n        const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, context.collectionRef);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot, {\n            ref: composedRefs,\n            children\n        });\n    }, \"5JQ4uy78XLW8WM+YuDpNgF/JIVs=\", false, function() {\n        return [\n            useCollectionContext,\n            _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n        ];\n    }));\n    CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n    const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n    const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n    const CollectionItemSlot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s2((props, forwardedRef)=>{\n        _s2();\n        const { scope, children, ...itemData } = props;\n        const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n        const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref);\n        const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n        react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n            \"createCollection.CollectionItemSlot.useEffect\": ()=>{\n                context.itemMap.set(ref, {\n                    ref,\n                    ...itemData\n                });\n                return ({\n                    \"createCollection.CollectionItemSlot.useEffect\": ()=>void context.itemMap.delete(ref)\n                })[\"createCollection.CollectionItemSlot.useEffect\"];\n            }\n        }[\"createCollection.CollectionItemSlot.useEffect\"]);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot, {\n            ...{\n                [ITEM_DATA_ATTR]: \"\"\n            },\n            ref: composedRefs,\n            children\n        });\n    }, \"eauD3DgWC2VdU7voCXLDR4PeA+k=\", false, function() {\n        return [\n            _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n            useCollectionContext\n        ];\n    }));\n    CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n    function useCollection(scope) {\n        _s3();\n        const context = useCollectionContext(name + \"CollectionConsumer\", scope);\n        const getItems = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n            \"createCollection.useCollection.useCallback[getItems]\": ()=>{\n                const collectionNode = context.collectionRef.current;\n                if (!collectionNode) return [];\n                const orderedNodes = Array.from(collectionNode.querySelectorAll(\"[\".concat(ITEM_DATA_ATTR, \"]\")));\n                const items = Array.from(context.itemMap.values());\n                const orderedItems = items.sort({\n                    \"createCollection.useCollection.useCallback[getItems].orderedItems\": (a, b)=>orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n                }[\"createCollection.useCollection.useCallback[getItems].orderedItems\"]);\n                return orderedItems;\n            }\n        }[\"createCollection.useCollection.useCallback[getItems]\"], [\n            context.collectionRef,\n            context.itemMap\n        ]);\n        return getItems;\n    }\n    _s3(useCollection, \"jCyvzZFUzVDqeEjq0R8vi6mUa78=\", false, function() {\n        return [\n            useCollectionContext\n        ];\n    });\n    return [\n        {\n            Provider: CollectionProvider,\n            Slot: CollectionSlot,\n            ItemSlot: CollectionItemSlot\n        },\n        useCollection,\n        createCollectionScope\n    ];\n}\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-collection/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-compose-refs/dist/index.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeRefs: () => (/* binding */ composeRefs),\n/* harmony export */   useComposedRefs: () => (/* binding */ useComposedRefs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/compose-refs/src/composeRefs.tsx\r\n\r\nfunction setRef(ref, value) {\r\n  if (typeof ref === \"function\") {\r\n    return ref(value);\r\n  } else if (ref !== null && ref !== void 0) {\r\n    ref.current = value;\r\n  }\r\n}\r\nfunction composeRefs(...refs) {\r\n  return (node) => {\r\n    let hasCleanup = false;\r\n    const cleanups = refs.map((ref) => {\r\n      const cleanup = setRef(ref, node);\r\n      if (!hasCleanup && typeof cleanup == \"function\") {\r\n        hasCleanup = true;\r\n      }\r\n      return cleanup;\r\n    });\r\n    if (hasCleanup) {\r\n      return () => {\r\n        for (let i = 0; i < cleanups.length; i++) {\r\n          const cleanup = cleanups[i];\r\n          if (typeof cleanup == \"function\") {\r\n            cleanup();\r\n          } else {\r\n            setRef(refs[i], null);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  };\r\n}\r\nfunction useComposedRefs(...refs) {\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(composeRefs(...refs), refs);\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDhDQUFpQjtBQUMxQjtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3QtY29tcG9zZS1yZWZzXFxkaXN0XFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvY29tcG9zZS1yZWZzL3NyYy9jb21wb3NlUmVmcy50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmZ1bmN0aW9uIHNldFJlZihyZWYsIHZhbHVlKSB7XHJcbiAgaWYgKHR5cGVvZiByZWYgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgcmV0dXJuIHJlZih2YWx1ZSk7XHJcbiAgfSBlbHNlIGlmIChyZWYgIT09IG51bGwgJiYgcmVmICE9PSB2b2lkIDApIHtcclxuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIGNvbXBvc2VSZWZzKC4uLnJlZnMpIHtcclxuICByZXR1cm4gKG5vZGUpID0+IHtcclxuICAgIGxldCBoYXNDbGVhbnVwID0gZmFsc2U7XHJcbiAgICBjb25zdCBjbGVhbnVwcyA9IHJlZnMubWFwKChyZWYpID0+IHtcclxuICAgICAgY29uc3QgY2xlYW51cCA9IHNldFJlZihyZWYsIG5vZGUpO1xyXG4gICAgICBpZiAoIWhhc0NsZWFudXAgJiYgdHlwZW9mIGNsZWFudXAgPT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgaGFzQ2xlYW51cCA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGNsZWFudXA7XHJcbiAgICB9KTtcclxuICAgIGlmIChoYXNDbGVhbnVwKSB7XHJcbiAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjbGVhbnVwcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgY29uc3QgY2xlYW51cCA9IGNsZWFudXBzW2ldO1xyXG4gICAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICBjbGVhbnVwKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZXRSZWYocmVmc1tpXSwgbnVsbCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuZnVuY3Rpb24gdXNlQ29tcG9zZWRSZWZzKC4uLnJlZnMpIHtcclxuICByZXR1cm4gUmVhY3QudXNlQ2FsbGJhY2soY29tcG9zZVJlZnMoLi4ucmVmcyksIHJlZnMpO1xyXG59XHJcbmV4cG9ydCB7XHJcbiAgY29tcG9zZVJlZnMsXHJcbiAgdXNlQ29tcG9zZWRSZWZzXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: () => (/* binding */ createContext2),\n/* harmony export */   createContextScope: () => (/* binding */ createContextScope)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/context/src/createContext.tsx\r\n\r\n\r\nfunction createContext2(rootComponentName, defaultContext) {\r\n  const Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\r\n  const Provider = (props) => {\r\n    const { children, ...context } = props;\r\n    const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\r\n  };\r\n  Provider.displayName = rootComponentName + \"Provider\";\r\n  function useContext2(consumerName) {\r\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\r\n    if (context) return context;\r\n    if (defaultContext !== void 0) return defaultContext;\r\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\r\n  }\r\n  return [Provider, useContext2];\r\n}\r\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\r\n  let defaultContexts = [];\r\n  function createContext3(rootComponentName, defaultContext) {\r\n    const BaseContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\r\n    const index = defaultContexts.length;\r\n    defaultContexts = [...defaultContexts, defaultContext];\r\n    const Provider = (props) => {\r\n      const { scope, children, ...context } = props;\r\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\r\n      const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\r\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\r\n    };\r\n    Provider.displayName = rootComponentName + \"Provider\";\r\n    function useContext2(consumerName, scope) {\r\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\r\n      const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\r\n      if (context) return context;\r\n      if (defaultContext !== void 0) return defaultContext;\r\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\r\n    }\r\n    return [Provider, useContext2];\r\n  }\r\n  const createScope = () => {\r\n    const scopeContexts = defaultContexts.map((defaultContext) => {\r\n      return react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\r\n    });\r\n    return function useScope(scope) {\r\n      const contexts = scope?.[scopeName] || scopeContexts;\r\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\r\n        [scope, contexts]\r\n      );\r\n    };\r\n  };\r\n  createScope.scopeName = scopeName;\r\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\r\n}\r\nfunction composeContextScopes(...scopes) {\r\n  const baseScope = scopes[0];\r\n  if (scopes.length === 1) return baseScope;\r\n  const createScope = () => {\r\n    const scopeHooks = scopes.map((createScope2) => ({\r\n      useScope: createScope2(),\r\n      scopeName: createScope2.scopeName\r\n    }));\r\n    return function useComposedScopes(overrideScopes) {\r\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\r\n        const scopeProps = useScope(overrideScopes);\r\n        const currentScope = scopeProps[`__scope${scopeName}`];\r\n        return { ...nextScopes2, ...currentScope };\r\n      }, {});\r\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\r\n    };\r\n  };\r\n  createScope.scopeName = baseScope.scopeName;\r\n  return createScope;\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29udGV4dC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4QztBQUNBLGtCQUFrQixnREFBbUI7QUFDckM7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxrQkFBa0IsMENBQWE7QUFDL0IsMkJBQTJCLHNEQUFHLHFCQUFxQixpQkFBaUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZDQUFnQjtBQUNwQztBQUNBO0FBQ0EseUJBQXlCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0Esb0JBQW9CLDBDQUFhO0FBQ2pDLDZCQUE2QixzREFBRyxxQkFBcUIsaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDZDQUFnQjtBQUN0QztBQUNBO0FBQ0EsMkJBQTJCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBbUI7QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFhO0FBQzFCLGlCQUFpQixXQUFXLFVBQVUsTUFBTSxtQ0FBbUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQSxrREFBa0QsVUFBVTtBQUM1RCxpQkFBaUI7QUFDakIsT0FBTyxJQUFJO0FBQ1gsYUFBYSwwQ0FBYSxVQUFVLFdBQVcsb0JBQW9CLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHJhZGl4LXVpXFxyZWFjdC1jb250ZXh0XFxkaXN0XFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvY29udGV4dC9zcmMvY3JlYXRlQ29udGV4dC50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0Mihyb290Q29tcG9uZW50TmFtZSwgZGVmYXVsdENvbnRleHQpIHtcclxuICBjb25zdCBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChkZWZhdWx0Q29udGV4dCk7XHJcbiAgY29uc3QgUHJvdmlkZXIgPSAocHJvcHMpID0+IHtcclxuICAgIGNvbnN0IHsgY2hpbGRyZW4sIC4uLmNvbnRleHQgfSA9IHByb3BzO1xyXG4gICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xyXG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW4gfSk7XHJcbiAgfTtcclxuICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xyXG4gIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSkge1xyXG4gICAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29udGV4dCk7XHJcbiAgICBpZiAoY29udGV4dCkgcmV0dXJuIGNvbnRleHQ7XHJcbiAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBcXGAke2NvbnN1bWVyTmFtZX1cXGAgbXVzdCBiZSB1c2VkIHdpdGhpbiBcXGAke3Jvb3RDb21wb25lbnROYW1lfVxcYGApO1xyXG4gIH1cclxuICByZXR1cm4gW1Byb3ZpZGVyLCB1c2VDb250ZXh0Ml07XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlQ29udGV4dFNjb3BlKHNjb3BlTmFtZSwgY3JlYXRlQ29udGV4dFNjb3BlRGVwcyA9IFtdKSB7XHJcbiAgbGV0IGRlZmF1bHRDb250ZXh0cyA9IFtdO1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQzKHJvb3RDb21wb25lbnROYW1lLCBkZWZhdWx0Q29udGV4dCkge1xyXG4gICAgY29uc3QgQmFzZUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcclxuICAgIGNvbnN0IGluZGV4ID0gZGVmYXVsdENvbnRleHRzLmxlbmd0aDtcclxuICAgIGRlZmF1bHRDb250ZXh0cyA9IFsuLi5kZWZhdWx0Q29udGV4dHMsIGRlZmF1bHRDb250ZXh0XTtcclxuICAgIGNvbnN0IFByb3ZpZGVyID0gKHByb3BzKSA9PiB7XHJcbiAgICAgIGNvbnN0IHsgc2NvcGUsIGNoaWxkcmVuLCAuLi5jb250ZXh0IH0gPSBwcm9wcztcclxuICAgICAgY29uc3QgQ29udGV4dCA9IHNjb3BlPy5bc2NvcGVOYW1lXT8uW2luZGV4XSB8fCBCYXNlQ29udGV4dDtcclxuICAgICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+IGNvbnRleHQsIE9iamVjdC52YWx1ZXMoY29udGV4dCkpO1xyXG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlLCBjaGlsZHJlbiB9KTtcclxuICAgIH07XHJcbiAgICBQcm92aWRlci5kaXNwbGF5TmFtZSA9IHJvb3RDb21wb25lbnROYW1lICsgXCJQcm92aWRlclwiO1xyXG4gICAgZnVuY3Rpb24gdXNlQ29udGV4dDIoY29uc3VtZXJOYW1lLCBzY29wZSkge1xyXG4gICAgICBjb25zdCBDb250ZXh0ID0gc2NvcGU/LltzY29wZU5hbWVdPy5baW5kZXhdIHx8IEJhc2VDb250ZXh0O1xyXG4gICAgICBjb25zdCBjb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChDb250ZXh0KTtcclxuICAgICAgaWYgKGNvbnRleHQpIHJldHVybiBjb250ZXh0O1xyXG4gICAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7Y29uc3VtZXJOYW1lfVxcYCBtdXN0IGJlIHVzZWQgd2l0aGluIFxcYCR7cm9vdENvbXBvbmVudE5hbWV9XFxgYCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gW1Byb3ZpZGVyLCB1c2VDb250ZXh0Ml07XHJcbiAgfVxyXG4gIGNvbnN0IGNyZWF0ZVNjb3BlID0gKCkgPT4ge1xyXG4gICAgY29uc3Qgc2NvcGVDb250ZXh0cyA9IGRlZmF1bHRDb250ZXh0cy5tYXAoKGRlZmF1bHRDb250ZXh0KSA9PiB7XHJcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVzZVNjb3BlKHNjb3BlKSB7XHJcbiAgICAgIGNvbnN0IGNvbnRleHRzID0gc2NvcGU/LltzY29wZU5hbWVdIHx8IHNjb3BlQ29udGV4dHM7XHJcbiAgICAgIHJldHVybiBSZWFjdC51c2VNZW1vKFxyXG4gICAgICAgICgpID0+ICh7IFtgX19zY29wZSR7c2NvcGVOYW1lfWBdOiB7IC4uLnNjb3BlLCBbc2NvcGVOYW1lXTogY29udGV4dHMgfSB9KSxcclxuICAgICAgICBbc2NvcGUsIGNvbnRleHRzXVxyXG4gICAgICApO1xyXG4gICAgfTtcclxuICB9O1xyXG4gIGNyZWF0ZVNjb3BlLnNjb3BlTmFtZSA9IHNjb3BlTmFtZTtcclxuICByZXR1cm4gW2NyZWF0ZUNvbnRleHQzLCBjb21wb3NlQ29udGV4dFNjb3BlcyhjcmVhdGVTY29wZSwgLi4uY3JlYXRlQ29udGV4dFNjb3BlRGVwcyldO1xyXG59XHJcbmZ1bmN0aW9uIGNvbXBvc2VDb250ZXh0U2NvcGVzKC4uLnNjb3Blcykge1xyXG4gIGNvbnN0IGJhc2VTY29wZSA9IHNjb3Blc1swXTtcclxuICBpZiAoc2NvcGVzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGJhc2VTY29wZTtcclxuICBjb25zdCBjcmVhdGVTY29wZSA9ICgpID0+IHtcclxuICAgIGNvbnN0IHNjb3BlSG9va3MgPSBzY29wZXMubWFwKChjcmVhdGVTY29wZTIpID0+ICh7XHJcbiAgICAgIHVzZVNjb3BlOiBjcmVhdGVTY29wZTIoKSxcclxuICAgICAgc2NvcGVOYW1lOiBjcmVhdGVTY29wZTIuc2NvcGVOYW1lXHJcbiAgICB9KSk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gdXNlQ29tcG9zZWRTY29wZXMob3ZlcnJpZGVTY29wZXMpIHtcclxuICAgICAgY29uc3QgbmV4dFNjb3BlcyA9IHNjb3BlSG9va3MucmVkdWNlKChuZXh0U2NvcGVzMiwgeyB1c2VTY29wZSwgc2NvcGVOYW1lIH0pID0+IHtcclxuICAgICAgICBjb25zdCBzY29wZVByb3BzID0gdXNlU2NvcGUob3ZlcnJpZGVTY29wZXMpO1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IHNjb3BlUHJvcHNbYF9fc2NvcGUke3Njb3BlTmFtZX1gXTtcclxuICAgICAgICByZXR1cm4geyAuLi5uZXh0U2NvcGVzMiwgLi4uY3VycmVudFNjb3BlIH07XHJcbiAgICAgIH0sIHt9KTtcclxuICAgICAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4gKHsgW2BfX3Njb3BlJHtiYXNlU2NvcGUuc2NvcGVOYW1lfWBdOiBuZXh0U2NvcGVzIH0pLCBbbmV4dFNjb3Blc10pO1xyXG4gICAgfTtcclxuICB9O1xyXG4gIGNyZWF0ZVNjb3BlLnNjb3BlTmFtZSA9IGJhc2VTY29wZS5zY29wZU5hbWU7XHJcbiAgcmV0dXJuIGNyZWF0ZVNjb3BlO1xyXG59XHJcbmV4cG9ydCB7XHJcbiAgY3JlYXRlQ29udGV4dDIgYXMgY3JlYXRlQ29udGV4dCxcclxuICBjcmVhdGVDb250ZXh0U2NvcGVcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Branch: () => (/* binding */ Branch),\n/* harmony export */   DismissableLayer: () => (/* binding */ DismissableLayer),\n/* harmony export */   DismissableLayerBranch: () => (/* binding */ DismissableLayerBranch),\n/* harmony export */   Root: () => (/* binding */ Root)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-escape-keydown */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Branch,DismissableLayer,DismissableLayerBranch,Root auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n// packages/react/dismissable-layer/src/DismissableLayer.tsx\n\n\n\n\n\n\n\nvar DISMISSABLE_LAYER_NAME = \"DismissableLayer\";\nvar CONTEXT_UPDATE = \"dismissableLayer.update\";\nvar POINTER_DOWN_OUTSIDE = \"dismissableLayer.pointerDownOutside\";\nvar FOCUS_OUTSIDE = \"dismissableLayer.focusOutside\";\nvar originalBodyPointerEvents;\nvar DismissableLayerContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n    layers: /* @__PURE__ */ new Set(),\n    layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),\n    branches: /* @__PURE__ */ new Set()\n});\nvar DismissableLayer = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    var _globalThis;\n    _s();\n    const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DismissableLayerContext);\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    var _node_ownerDocument;\n    const ownerDocument = (_node_ownerDocument = node === null || node === void 0 ? void 0 : node.ownerDocument) !== null && _node_ownerDocument !== void 0 ? _node_ownerDocument : (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    const [, force] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, {\n        \"DismissableLayer.useComposedRefs[composedRefs]\": (node2)=>setNode(node2)\n    }[\"DismissableLayer.useComposedRefs[composedRefs]\"]);\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [\n        ...context.layersWithOutsidePointerEventsDisabled\n    ].slice(-1);\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n    const pointerDownOutside = usePointerDownOutside({\n        \"DismissableLayer.usePointerDownOutside[pointerDownOutside]\": (event)=>{\n            const target = event.target;\n            const isPointerDownOnBranch = [\n                ...context.branches\n            ].some({\n                \"DismissableLayer.usePointerDownOutside[pointerDownOutside].isPointerDownOnBranch\": (branch)=>branch.contains(target)\n            }[\"DismissableLayer.usePointerDownOutside[pointerDownOutside].isPointerDownOnBranch\"]);\n            if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n            onPointerDownOutside === null || onPointerDownOutside === void 0 ? void 0 : onPointerDownOutside(event);\n            onInteractOutside === null || onInteractOutside === void 0 ? void 0 : onInteractOutside(event);\n            if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n        }\n    }[\"DismissableLayer.usePointerDownOutside[pointerDownOutside]\"], ownerDocument);\n    const focusOutside = useFocusOutside({\n        \"DismissableLayer.useFocusOutside[focusOutside]\": (event)=>{\n            const target = event.target;\n            const isFocusInBranch = [\n                ...context.branches\n            ].some({\n                \"DismissableLayer.useFocusOutside[focusOutside].isFocusInBranch\": (branch)=>branch.contains(target)\n            }[\"DismissableLayer.useFocusOutside[focusOutside].isFocusInBranch\"]);\n            if (isFocusInBranch) return;\n            onFocusOutside === null || onFocusOutside === void 0 ? void 0 : onFocusOutside(event);\n            onInteractOutside === null || onInteractOutside === void 0 ? void 0 : onInteractOutside(event);\n            if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n        }\n    }[\"DismissableLayer.useFocusOutside[focusOutside]\"], ownerDocument);\n    (0,_radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown)({\n        \"DismissableLayer.useEscapeKeydown\": (event)=>{\n            const isHighestLayer = index === context.layers.size - 1;\n            if (!isHighestLayer) return;\n            onEscapeKeyDown === null || onEscapeKeyDown === void 0 ? void 0 : onEscapeKeyDown(event);\n            if (!event.defaultPrevented && onDismiss) {\n                event.preventDefault();\n                onDismiss();\n            }\n        }\n    }[\"DismissableLayer.useEscapeKeydown\"], ownerDocument);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayer.useEffect\": ()=>{\n            if (!node) return;\n            if (disableOutsidePointerEvents) {\n                if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n                    originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n                    ownerDocument.body.style.pointerEvents = \"none\";\n                }\n                context.layersWithOutsidePointerEventsDisabled.add(node);\n            }\n            context.layers.add(node);\n            dispatchUpdate();\n            return ({\n                \"DismissableLayer.useEffect\": ()=>{\n                    if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {\n                        ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n                    }\n                }\n            })[\"DismissableLayer.useEffect\"];\n        }\n    }[\"DismissableLayer.useEffect\"], [\n        node,\n        ownerDocument,\n        disableOutsidePointerEvents,\n        context\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayer.useEffect\": ()=>{\n            return ({\n                \"DismissableLayer.useEffect\": ()=>{\n                    if (!node) return;\n                    context.layers.delete(node);\n                    context.layersWithOutsidePointerEventsDisabled.delete(node);\n                    dispatchUpdate();\n                }\n            })[\"DismissableLayer.useEffect\"];\n        }\n    }[\"DismissableLayer.useEffect\"], [\n        node,\n        context\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayer.useEffect\": ()=>{\n            const handleUpdate = {\n                \"DismissableLayer.useEffect.handleUpdate\": ()=>force({})\n            }[\"DismissableLayer.useEffect.handleUpdate\"];\n            document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n            return ({\n                \"DismissableLayer.useEffect\": ()=>document.removeEventListener(CONTEXT_UPDATE, handleUpdate)\n            })[\"DismissableLayer.useEffect\"];\n        }\n    }[\"DismissableLayer.useEffect\"], []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...layerProps,\n        ref: composedRefs,\n        style: {\n            pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? \"auto\" : \"none\" : void 0,\n            ...props.style\n        },\n        onFocusCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onFocusCapture, focusOutside.onFocusCapture),\n        onBlurCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onBlurCapture, focusOutside.onBlurCapture),\n        onPointerDownCapture: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)\n    });\n}, \"Cv1Mp9NkKD7dAs9oYGx4QOBfHI8=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs,\n        usePointerDownOutside,\n        useFocusOutside,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown\n    ];\n})), \"Cv1Mp9NkKD7dAs9oYGx4QOBfHI8=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs,\n        usePointerDownOutside,\n        useFocusOutside,\n        _radix_ui_react_use_escape_keydown__WEBPACK_IMPORTED_MODULE_3__.useEscapeKeydown\n    ];\n});\n_c1 = DismissableLayer;\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\nvar BRANCH_NAME = \"DismissableLayerBranch\";\nvar DismissableLayerBranch = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s1((props, forwardedRef)=>{\n    _s1();\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DismissableLayerContext);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs)(forwardedRef, ref);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"DismissableLayerBranch.useEffect\": ()=>{\n            const node = ref.current;\n            if (node) {\n                context.branches.add(node);\n                return ({\n                    \"DismissableLayerBranch.useEffect\": ()=>{\n                        context.branches.delete(node);\n                    }\n                })[\"DismissableLayerBranch.useEffect\"];\n            }\n        }\n    }[\"DismissableLayerBranch.useEffect\"], [\n        context.branches\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...props,\n        ref: composedRefs\n    });\n}, \"GBdJ+COKIgE+yfoxVYovlSfvJLw=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs\n    ];\n})), \"GBdJ+COKIgE+yfoxVYovlSfvJLw=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.useComposedRefs\n    ];\n});\n_c3 = DismissableLayerBranch;\nDismissableLayerBranch.displayName = BRANCH_NAME;\nfunction usePointerDownOutside(onPointerDownOutside) {\n    let ownerDocument = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (()=>{\n        var _globalThis;\n        return (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    })();\n    _s2();\n    const handlePointerDownOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onPointerDownOutside);\n    const isPointerInsideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const handleClickRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        \"usePointerDownOutside.useRef[handleClickRef]\": ()=>{}\n    }[\"usePointerDownOutside.useRef[handleClickRef]\"]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"usePointerDownOutside.useEffect\": ()=>{\n            const handlePointerDown = {\n                \"usePointerDownOutside.useEffect.handlePointerDown\": (event)=>{\n                    if (event.target && !isPointerInsideReactTreeRef.current) {\n                        let handleAndDispatchPointerDownOutsideEvent2 = {\n                            \"usePointerDownOutside.useEffect.handlePointerDown.handleAndDispatchPointerDownOutsideEvent2\": function() {\n                                handleAndDispatchCustomEvent(POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {\n                                    discrete: true\n                                });\n                            }\n                        }[\"usePointerDownOutside.useEffect.handlePointerDown.handleAndDispatchPointerDownOutsideEvent2\"];\n                        var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;\n                        const eventDetail = {\n                            originalEvent: event\n                        };\n                        if (event.pointerType === \"touch\") {\n                            ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n                            handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;\n                            ownerDocument.addEventListener(\"click\", handleClickRef.current, {\n                                once: true\n                            });\n                        } else {\n                            handleAndDispatchPointerDownOutsideEvent2();\n                        }\n                    } else {\n                        ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n                    }\n                    isPointerInsideReactTreeRef.current = false;\n                }\n            }[\"usePointerDownOutside.useEffect.handlePointerDown\"];\n            const timerId = window.setTimeout({\n                \"usePointerDownOutside.useEffect.timerId\": ()=>{\n                    ownerDocument.addEventListener(\"pointerdown\", handlePointerDown);\n                }\n            }[\"usePointerDownOutside.useEffect.timerId\"], 0);\n            return ({\n                \"usePointerDownOutside.useEffect\": ()=>{\n                    window.clearTimeout(timerId);\n                    ownerDocument.removeEventListener(\"pointerdown\", handlePointerDown);\n                    ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n                }\n            })[\"usePointerDownOutside.useEffect\"];\n        }\n    }[\"usePointerDownOutside.useEffect\"], [\n        ownerDocument,\n        handlePointerDownOutside\n    ]);\n    return {\n        // ensures we check React component tree (not just DOM tree)\n        onPointerDownCapture: ()=>isPointerInsideReactTreeRef.current = true\n    };\n}\n_s2(usePointerDownOutside, \"M0Jqtgoae/27FfRizMxidmqs6b8=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef\n    ];\n});\nfunction useFocusOutside(onFocusOutside) {\n    let ownerDocument = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (()=>{\n        var _globalThis;\n        return (_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : _globalThis.document;\n    })();\n    _s3();\n    const handleFocusOutside = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef)(onFocusOutside);\n    const isFocusInsideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"useFocusOutside.useEffect\": ()=>{\n            const handleFocus = {\n                \"useFocusOutside.useEffect.handleFocus\": (event)=>{\n                    if (event.target && !isFocusInsideReactTreeRef.current) {\n                        const eventDetail = {\n                            originalEvent: event\n                        };\n                        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n                            discrete: false\n                        });\n                    }\n                }\n            }[\"useFocusOutside.useEffect.handleFocus\"];\n            ownerDocument.addEventListener(\"focusin\", handleFocus);\n            return ({\n                \"useFocusOutside.useEffect\": ()=>ownerDocument.removeEventListener(\"focusin\", handleFocus)\n            })[\"useFocusOutside.useEffect\"];\n        }\n    }[\"useFocusOutside.useEffect\"], [\n        ownerDocument,\n        handleFocusOutside\n    ]);\n    return {\n        onFocusCapture: ()=>isFocusInsideReactTreeRef.current = true,\n        onBlurCapture: ()=>isFocusInsideReactTreeRef.current = false\n    };\n}\n_s3(useFocusOutside, \"IjUuEsgpHwQc3lZUTypKaC1ceUQ=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_6__.useCallbackRef\n    ];\n});\nfunction dispatchUpdate() {\n    const event = new CustomEvent(CONTEXT_UPDATE);\n    document.dispatchEvent(event);\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, param) {\n    let { discrete } = param;\n    const target = detail.originalEvent.target;\n    const event = new CustomEvent(name, {\n        bubbles: false,\n        cancelable: true,\n        detail\n    });\n    if (handler) target.addEventListener(name, handler, {\n        once: true\n    });\n    if (discrete) {\n        (0,_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.dispatchDiscreteCustomEvent)(target, event);\n    } else {\n        target.dispatchEvent(event);\n    }\n}\nvar Root = DismissableLayer;\nvar Branch = DismissableLayerBranch;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"DismissableLayer$React.forwardRef\");\n$RefreshReg$(_c1, \"DismissableLayer\");\n$RefreshReg$(_c2, \"DismissableLayerBranch$React.forwardRef\");\n$RefreshReg$(_c3, \"DismissableLayerBranch\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@radix-ui/react-portal/dist/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   Root: () => (/* binding */ Root)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Portal,Root auto */ var _s = $RefreshSig$();\n// packages/react/portal/src/Portal.tsx\n\n\n\n\n\nvar PORTAL_NAME = \"Portal\";\nvar Portal = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    var _globalThis_document, _globalThis;\n    _s();\n    const { container: containerProp, ...portalProps } = props;\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_3__.useLayoutEffect)({\n        \"Portal.useLayoutEffect\": ()=>setMounted(true)\n    }[\"Portal.useLayoutEffect\"], []);\n    const container = containerProp || mounted && ((_globalThis = globalThis) === null || _globalThis === void 0 ? void 0 : (_globalThis_document = _globalThis.document) === null || _globalThis_document === void 0 ? void 0 : _globalThis_document.body);\n    return container ? /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n        ...portalProps,\n        ref: forwardedRef\n    }), container) : null;\n}, \"FcnMiGdgWOI6sDTng8DolPv2NRo=\")), \"FcnMiGdgWOI6sDTng8DolPv2NRo=\");\n_c1 = Portal;\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Portal$React.forwardRef\");\n$RefreshReg$(_c1, \"Portal\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcG9ydGFsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRUEsdUNBQXVDO0FBQ1I7QUFDRTtBQUNxQjtBQUNjO0FBQzVCO0FBQ3hDLElBQUlLLGNBQWM7QUFDbEIsSUFBSUMsdUJBQVNOLEdBQUFBLDZDQUFnQixTQUFDLENBQUNRLE9BQU9DO1FBSVVDLHNCQUFBQTs7SUFIOUMsTUFBTSxFQUFFQyxXQUFXQyxhQUFhLEVBQUUsR0FBR0MsYUFBYSxHQUFHTDtJQUNyRCxNQUFNLENBQUNNLFNBQVNDLFdBQVcsR0FBR2YsMkNBQWMsQ0FBQztJQUM3Q0csa0ZBQWVBO2tDQUFDLElBQU1ZLFdBQVc7aUNBQU8sRUFBRTtJQUMxQyxNQUFNSixZQUFZQyxpQkFBaUJFLGFBQVdKLGNBQUFBLHdCQUFBQSxtQ0FBQUEsdUJBQUFBLFlBQVlPLFFBQVEsY0FBcEJQLDJDQUFBQSxxQkFBc0JRLElBQUk7SUFDeEUsT0FBT1AsMEJBQVlWLG1EQUFxQixDQUFDLGFBQWEsR0FBR0csc0RBQUdBLENBQUNGLGdFQUFTQSxDQUFDa0IsR0FBRyxFQUFFO1FBQUUsR0FBR1AsV0FBVztRQUFFUSxLQUFLWjtJQUFhLElBQUlFLGFBQWE7QUFDbkk7O0FBQ0FMLE9BQU9nQixXQUFXLEdBQUdqQjtBQUNyQixJQUFJa0IsT0FBT2pCO0FBSVQsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3QtcG9ydGFsXFxkaXN0XFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG4vLyBwYWNrYWdlcy9yZWFjdC9wb3J0YWwvc3JjL1BvcnRhbC50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XHJcbmltcG9ydCB7IFByaW1pdGl2ZSB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlXCI7XHJcbmltcG9ydCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3RcIjtcclxuaW1wb3J0IHsganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XHJcbnZhciBQT1JUQUxfTkFNRSA9IFwiUG9ydGFsXCI7XHJcbnZhciBQb3J0YWwgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XHJcbiAgY29uc3QgeyBjb250YWluZXI6IGNvbnRhaW5lclByb3AsIC4uLnBvcnRhbFByb3BzIH0gPSBwcm9wcztcclxuICBjb25zdCBbbW91bnRlZCwgc2V0TW91bnRlZF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XHJcbiAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHNldE1vdW50ZWQodHJ1ZSksIFtdKTtcclxuICBjb25zdCBjb250YWluZXIgPSBjb250YWluZXJQcm9wIHx8IG1vdW50ZWQgJiYgZ2xvYmFsVGhpcz8uZG9jdW1lbnQ/LmJvZHk7XHJcbiAgcmV0dXJuIGNvbnRhaW5lciA/IFJlYWN0RE9NLmNyZWF0ZVBvcnRhbCgvKiBAX19QVVJFX18gKi8ganN4KFByaW1pdGl2ZS5kaXYsIHsgLi4ucG9ydGFsUHJvcHMsIHJlZjogZm9yd2FyZGVkUmVmIH0pLCBjb250YWluZXIpIDogbnVsbDtcclxufSk7XHJcblBvcnRhbC5kaXNwbGF5TmFtZSA9IFBPUlRBTF9OQU1FO1xyXG52YXIgUm9vdCA9IFBvcnRhbDtcclxuZXhwb3J0IHtcclxuICBQb3J0YWwsXHJcbiAgUm9vdFxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlJlYWN0RE9NIiwiUHJpbWl0aXZlIiwidXNlTGF5b3V0RWZmZWN0IiwianN4IiwiUE9SVEFMX05BTUUiLCJQb3J0YWwiLCJmb3J3YXJkUmVmIiwicHJvcHMiLCJmb3J3YXJkZWRSZWYiLCJnbG9iYWxUaGlzIiwiY29udGFpbmVyIiwiY29udGFpbmVyUHJvcCIsInBvcnRhbFByb3BzIiwibW91bnRlZCIsInNldE1vdW50ZWQiLCJ1c2VTdGF0ZSIsImRvY3VtZW50IiwiYm9keSIsImNyZWF0ZVBvcnRhbCIsImRpdiIsInJlZiIsImRpc3BsYXlOYW1lIiwiUm9vdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@radix-ui/react-presence/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Presence: () => (/* binding */ Presence)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ Presence auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n// packages/react/presence/src/Presence.tsx\n\n\n\n// packages/react/presence/src/useStateMachine.tsx\n\nfunction useStateMachine(initialState, machine) {\n    _s();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useReducer({\n        \"useStateMachine.useReducer\": (state, event)=>{\n            const nextState = machine[state][event];\n            return nextState !== null && nextState !== void 0 ? nextState : state;\n        }\n    }[\"useStateMachine.useReducer\"], initialState);\n}\n_s(useStateMachine, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n// packages/react/presence/src/Presence.tsx\nvar Presence = (props)=>{\n    _s1();\n    const { present, children } = props;\n    const presence = usePresence(present);\n    const child = typeof children === \"function\" ? children({\n        present: presence.isPresent\n    }) : react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);\n    const ref = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__.useComposedRefs)(presence.ref, getElementRef(child));\n    const forceMount = typeof children === \"function\";\n    return forceMount || presence.isPresent ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {\n        ref\n    }) : null;\n};\n_s1(Presence, \"uNryTcoDvJa4CrInYRt27opyun0=\", false, function() {\n    return [\n        usePresence,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_1__.useComposedRefs\n    ];\n});\n_c = Presence;\nPresence.displayName = \"Presence\";\nfunction usePresence(present) {\n    _s2();\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const stylesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n    const prevPresentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(present);\n    const prevAnimationNameRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(\"none\");\n    const initialState = present ? \"mounted\" : \"unmounted\";\n    const [state, send] = useStateMachine(initialState, {\n        mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n        },\n        unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n        },\n        unmounted: {\n            MOUNT: \"mounted\"\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"usePresence.useEffect\": ()=>{\n            const currentAnimationName = getAnimationName(stylesRef.current);\n            prevAnimationNameRef.current = state === \"mounted\" ? currentAnimationName : \"none\";\n        }\n    }[\"usePresence.useEffect\"], [\n        state\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)({\n        \"usePresence.useLayoutEffect\": ()=>{\n            const styles = stylesRef.current;\n            const wasPresent = prevPresentRef.current;\n            const hasPresentChanged = wasPresent !== present;\n            if (hasPresentChanged) {\n                const prevAnimationName = prevAnimationNameRef.current;\n                const currentAnimationName = getAnimationName(styles);\n                if (present) {\n                    send(\"MOUNT\");\n                } else if (currentAnimationName === \"none\" || (styles === null || styles === void 0 ? void 0 : styles.display) === \"none\") {\n                    send(\"UNMOUNT\");\n                } else {\n                    const isAnimating = prevAnimationName !== currentAnimationName;\n                    if (wasPresent && isAnimating) {\n                        send(\"ANIMATION_OUT\");\n                    } else {\n                        send(\"UNMOUNT\");\n                    }\n                }\n                prevPresentRef.current = present;\n            }\n        }\n    }[\"usePresence.useLayoutEffect\"], [\n        present,\n        send\n    ]);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)({\n        \"usePresence.useLayoutEffect\": ()=>{\n            if (node) {\n                let timeoutId;\n                var _node_ownerDocument_defaultView;\n                const ownerWindow = (_node_ownerDocument_defaultView = node.ownerDocument.defaultView) !== null && _node_ownerDocument_defaultView !== void 0 ? _node_ownerDocument_defaultView : window;\n                const handleAnimationEnd = {\n                    \"usePresence.useLayoutEffect.handleAnimationEnd\": (event)=>{\n                        const currentAnimationName = getAnimationName(stylesRef.current);\n                        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n                        if (event.target === node && isCurrentAnimation) {\n                            send(\"ANIMATION_END\");\n                            if (!prevPresentRef.current) {\n                                const currentFillMode = node.style.animationFillMode;\n                                node.style.animationFillMode = \"forwards\";\n                                timeoutId = ownerWindow.setTimeout({\n                                    \"usePresence.useLayoutEffect.handleAnimationEnd\": ()=>{\n                                        if (node.style.animationFillMode === \"forwards\") {\n                                            node.style.animationFillMode = currentFillMode;\n                                        }\n                                    }\n                                }[\"usePresence.useLayoutEffect.handleAnimationEnd\"]);\n                            }\n                        }\n                    }\n                }[\"usePresence.useLayoutEffect.handleAnimationEnd\"];\n                const handleAnimationStart = {\n                    \"usePresence.useLayoutEffect.handleAnimationStart\": (event)=>{\n                        if (event.target === node) {\n                            prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n                        }\n                    }\n                }[\"usePresence.useLayoutEffect.handleAnimationStart\"];\n                node.addEventListener(\"animationstart\", handleAnimationStart);\n                node.addEventListener(\"animationcancel\", handleAnimationEnd);\n                node.addEventListener(\"animationend\", handleAnimationEnd);\n                return ({\n                    \"usePresence.useLayoutEffect\": ()=>{\n                        ownerWindow.clearTimeout(timeoutId);\n                        node.removeEventListener(\"animationstart\", handleAnimationStart);\n                        node.removeEventListener(\"animationcancel\", handleAnimationEnd);\n                        node.removeEventListener(\"animationend\", handleAnimationEnd);\n                    }\n                })[\"usePresence.useLayoutEffect\"];\n            } else {\n                send(\"ANIMATION_END\");\n            }\n        }\n    }[\"usePresence.useLayoutEffect\"], [\n        node,\n        send\n    ]);\n    return {\n        isPresent: [\n            \"mounted\",\n            \"unmountSuspended\"\n        ].includes(state),\n        ref: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n            \"usePresence.useCallback\": (node2)=>{\n                if (node2) stylesRef.current = getComputedStyle(node2);\n                setNode(node2);\n            }\n        }[\"usePresence.useCallback\"], [])\n    };\n}\n_s2(usePresence, \"ncCWxmFAyU87e4PnaTkbrqgR834=\", false, function() {\n    return [\n        useStateMachine\n    ];\n});\nfunction getAnimationName(styles) {\n    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || \"none\";\n}\nfunction getElementRef(element) {\n    var _Object_getOwnPropertyDescriptor, _Object_getOwnPropertyDescriptor1;\n    let getter = (_Object_getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor(element.props, \"ref\")) === null || _Object_getOwnPropertyDescriptor === void 0 ? void 0 : _Object_getOwnPropertyDescriptor.get;\n    let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.ref;\n    }\n    getter = (_Object_getOwnPropertyDescriptor1 = Object.getOwnPropertyDescriptor(element, \"ref\")) === null || _Object_getOwnPropertyDescriptor1 === void 0 ? void 0 : _Object_getOwnPropertyDescriptor1.get;\n    mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.props.ref;\n    }\n    return element.props.ref || element.ref;\n}\n //# sourceMappingURL=index.mjs.map\nvar _c;\n$RefreshReg$(_c, \"Presence\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@radix-ui/react-primitive/dist/index.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Primitive: () => (/* binding */ Primitive),\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   dispatchDiscreteCustomEvent: () => (/* binding */ dispatchDiscreteCustomEvent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/primitive/src/Primitive.tsx\r\n\r\n\r\n\r\n\r\nvar NODES = [\r\n  \"a\",\r\n  \"button\",\r\n  \"div\",\r\n  \"form\",\r\n  \"h2\",\r\n  \"h3\",\r\n  \"img\",\r\n  \"input\",\r\n  \"label\",\r\n  \"li\",\r\n  \"nav\",\r\n  \"ol\",\r\n  \"p\",\r\n  \"span\",\r\n  \"svg\",\r\n  \"ul\"\r\n];\r\nvar Primitive = NODES.reduce((primitive, node) => {\r\n  const Node = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\r\n    const { asChild, ...primitiveProps } = props;\r\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.Slot : node;\r\n    if (typeof window !== \"undefined\") {\r\n      window[Symbol.for(\"radix-ui\")] = true;\r\n    }\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });\r\n  });\r\n  Node.displayName = `Primitive.${node}`;\r\n  return { ...primitive, [node]: Node };\r\n}, {});\r\nfunction dispatchDiscreteCustomEvent(target, event) {\r\n  if (target) react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(() => target.dispatchEvent(event));\r\n}\r\nvar Root = Primitive;\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUNPO0FBQ007QUFDSjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkNBQWdCO0FBQy9CLFlBQVksNkJBQTZCO0FBQ3pDLDJCQUEyQixzREFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsc0RBQUcsU0FBUyxzQ0FBc0M7QUFDN0UsR0FBRztBQUNILGtDQUFrQyxLQUFLO0FBQ3ZDLFdBQVc7QUFDWCxDQUFDLElBQUk7QUFDTDtBQUNBLGNBQWMsZ0RBQWtCO0FBQ2hDO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHJlYWN0LXByaW1pdGl2ZVxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3ByaW1pdGl2ZS9zcmMvUHJpbWl0aXZlLnRzeFxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0ICogYXMgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xyXG5pbXBvcnQgeyBTbG90IH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1zbG90XCI7XHJcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG52YXIgTk9ERVMgPSBbXHJcbiAgXCJhXCIsXHJcbiAgXCJidXR0b25cIixcclxuICBcImRpdlwiLFxyXG4gIFwiZm9ybVwiLFxyXG4gIFwiaDJcIixcclxuICBcImgzXCIsXHJcbiAgXCJpbWdcIixcclxuICBcImlucHV0XCIsXHJcbiAgXCJsYWJlbFwiLFxyXG4gIFwibGlcIixcclxuICBcIm5hdlwiLFxyXG4gIFwib2xcIixcclxuICBcInBcIixcclxuICBcInNwYW5cIixcclxuICBcInN2Z1wiLFxyXG4gIFwidWxcIlxyXG5dO1xyXG52YXIgUHJpbWl0aXZlID0gTk9ERVMucmVkdWNlKChwcmltaXRpdmUsIG5vZGUpID0+IHtcclxuICBjb25zdCBOb2RlID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xyXG4gICAgY29uc3QgeyBhc0NoaWxkLCAuLi5wcmltaXRpdmVQcm9wcyB9ID0gcHJvcHM7XHJcbiAgICBjb25zdCBDb21wID0gYXNDaGlsZCA/IFNsb3QgOiBub2RlO1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgd2luZG93W1N5bWJvbC5mb3IoXCJyYWRpeC11aVwiKV0gPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29tcCwgeyAuLi5wcmltaXRpdmVQcm9wcywgcmVmOiBmb3J3YXJkZWRSZWYgfSk7XHJcbiAgfSk7XHJcbiAgTm9kZS5kaXNwbGF5TmFtZSA9IGBQcmltaXRpdmUuJHtub2RlfWA7XHJcbiAgcmV0dXJuIHsgLi4ucHJpbWl0aXZlLCBbbm9kZV06IE5vZGUgfTtcclxufSwge30pO1xyXG5mdW5jdGlvbiBkaXNwYXRjaERpc2NyZXRlQ3VzdG9tRXZlbnQodGFyZ2V0LCBldmVudCkge1xyXG4gIGlmICh0YXJnZXQpIFJlYWN0RE9NLmZsdXNoU3luYygoKSA9PiB0YXJnZXQuZGlzcGF0Y2hFdmVudChldmVudCkpO1xyXG59XHJcbnZhciBSb290ID0gUHJpbWl0aXZlO1xyXG5leHBvcnQge1xyXG4gIFByaW1pdGl2ZSxcclxuICBSb290LFxyXG4gIGRpc3BhdGNoRGlzY3JldGVDdXN0b21FdmVudFxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-slot/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   Slot: () => (/* binding */ Slot),\n/* harmony export */   Slottable: () => (/* binding */ Slottable)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/slot/src/Slot.tsx\r\n\r\n\r\n\r\nvar Slot = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\r\n  const { children, ...slotProps } = props;\r\n  const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);\r\n  const slottable = childrenArray.find(isSlottable);\r\n  if (slottable) {\r\n    const newElement = slottable.props.children;\r\n    const newChildren = childrenArray.map((child) => {\r\n      if (child === slottable) {\r\n        if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null);\r\n        return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? newElement.props.children : null;\r\n      } else {\r\n        return child;\r\n      }\r\n    });\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement, void 0, newChildren) : null });\r\n  }\r\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });\r\n});\r\nSlot.displayName = \"Slot\";\r\nvar SlotClone = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\r\n  const { children, ...slotProps } = props;\r\n  if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {\r\n    const childrenRef = getElementRef(children);\r\n    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, {\r\n      ...mergeProps(slotProps, children.props),\r\n      // @ts-ignore\r\n      ref: forwardedRef ? (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(forwardedRef, childrenRef) : childrenRef\r\n    });\r\n  }\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null) : null;\r\n});\r\nSlotClone.displayName = \"SlotClone\";\r\nvar Slottable = ({ children }) => {\r\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children });\r\n};\r\nfunction isSlottable(child) {\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && child.type === Slottable;\r\n}\r\nfunction mergeProps(slotProps, childProps) {\r\n  const overrideProps = { ...childProps };\r\n  for (const propName in childProps) {\r\n    const slotPropValue = slotProps[propName];\r\n    const childPropValue = childProps[propName];\r\n    const isHandler = /^on[A-Z]/.test(propName);\r\n    if (isHandler) {\r\n      if (slotPropValue && childPropValue) {\r\n        overrideProps[propName] = (...args) => {\r\n          childPropValue(...args);\r\n          slotPropValue(...args);\r\n        };\r\n      } else if (slotPropValue) {\r\n        overrideProps[propName] = slotPropValue;\r\n      }\r\n    } else if (propName === \"style\") {\r\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\r\n    } else if (propName === \"className\") {\r\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\r\n    }\r\n  }\r\n  return { ...slotProps, ...overrideProps };\r\n}\r\nfunction getElementRef(element) {\r\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\r\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\r\n  if (mayWarn) {\r\n    return element.ref;\r\n  }\r\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\r\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\r\n  if (mayWarn) {\r\n    return element.props.ref;\r\n  }\r\n  return element.props.ref || element.ref;\r\n}\r\nvar Root = Slot;\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3Qtc2xvdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUM0QjtBQUNUO0FBQ2xELFdBQVcsNkNBQWdCO0FBQzNCLFVBQVUseUJBQXlCO0FBQ25DLHdCQUF3QiwyQ0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBYywrQkFBK0IsMkNBQWM7QUFDdkUsZUFBZSxpREFBb0I7QUFDbkMsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLHNEQUFHLGNBQWMsMkNBQTJDLGlEQUFvQixlQUFlLCtDQUFrQiwwQ0FBMEM7QUFDdEw7QUFDQSx5QkFBeUIsc0RBQUcsY0FBYywyQ0FBMkM7QUFDckYsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLDZDQUFnQjtBQUNoQyxVQUFVLHlCQUF5QjtBQUNuQyxNQUFNLGlEQUFvQjtBQUMxQjtBQUNBLFdBQVcsK0NBQWtCO0FBQzdCO0FBQ0E7QUFDQSwwQkFBMEIseUVBQVc7QUFDckMsS0FBSztBQUNMO0FBQ0EsU0FBUywyQ0FBYyx1QkFBdUIsMkNBQWM7QUFDNUQsQ0FBQztBQUNEO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0IseUJBQXlCLHNEQUFHLENBQUMsdURBQVEsSUFBSSxVQUFVO0FBQ25EO0FBQ0E7QUFDQSxTQUFTLGlEQUFvQjtBQUM3QjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ04sa0NBQWtDO0FBQ2xDLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHJhZGl4LXVpXFxyZWFjdC1zbG90XFxkaXN0XFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3Qvc2xvdC9zcmMvU2xvdC50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbXBvc2VSZWZzIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1jb21wb3NlLXJlZnNcIjtcclxuaW1wb3J0IHsgRnJhZ21lbnQsIGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG52YXIgU2xvdCA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcclxuICBjb25zdCB7IGNoaWxkcmVuLCAuLi5zbG90UHJvcHMgfSA9IHByb3BzO1xyXG4gIGNvbnN0IGNoaWxkcmVuQXJyYXkgPSBSZWFjdC5DaGlsZHJlbi50b0FycmF5KGNoaWxkcmVuKTtcclxuICBjb25zdCBzbG90dGFibGUgPSBjaGlsZHJlbkFycmF5LmZpbmQoaXNTbG90dGFibGUpO1xyXG4gIGlmIChzbG90dGFibGUpIHtcclxuICAgIGNvbnN0IG5ld0VsZW1lbnQgPSBzbG90dGFibGUucHJvcHMuY2hpbGRyZW47XHJcbiAgICBjb25zdCBuZXdDaGlsZHJlbiA9IGNoaWxkcmVuQXJyYXkubWFwKChjaGlsZCkgPT4ge1xyXG4gICAgICBpZiAoY2hpbGQgPT09IHNsb3R0YWJsZSkge1xyXG4gICAgICAgIGlmIChSZWFjdC5DaGlsZHJlbi5jb3VudChuZXdFbGVtZW50KSA+IDEpIHJldHVybiBSZWFjdC5DaGlsZHJlbi5vbmx5KG51bGwpO1xyXG4gICAgICAgIHJldHVybiBSZWFjdC5pc1ZhbGlkRWxlbWVudChuZXdFbGVtZW50KSA/IG5ld0VsZW1lbnQucHJvcHMuY2hpbGRyZW4gOiBudWxsO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBjaGlsZDtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChTbG90Q2xvbmUsIHsgLi4uc2xvdFByb3BzLCByZWY6IGZvcndhcmRlZFJlZiwgY2hpbGRyZW46IFJlYWN0LmlzVmFsaWRFbGVtZW50KG5ld0VsZW1lbnQpID8gUmVhY3QuY2xvbmVFbGVtZW50KG5ld0VsZW1lbnQsIHZvaWQgMCwgbmV3Q2hpbGRyZW4pIDogbnVsbCB9KTtcclxuICB9XHJcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goU2xvdENsb25lLCB7IC4uLnNsb3RQcm9wcywgcmVmOiBmb3J3YXJkZWRSZWYsIGNoaWxkcmVuIH0pO1xyXG59KTtcclxuU2xvdC5kaXNwbGF5TmFtZSA9IFwiU2xvdFwiO1xyXG52YXIgU2xvdENsb25lID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xyXG4gIGNvbnN0IHsgY2hpbGRyZW4sIC4uLnNsb3RQcm9wcyB9ID0gcHJvcHM7XHJcbiAgaWYgKFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSkge1xyXG4gICAgY29uc3QgY2hpbGRyZW5SZWYgPSBnZXRFbGVtZW50UmVmKGNoaWxkcmVuKTtcclxuICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIHtcclxuICAgICAgLi4ubWVyZ2VQcm9wcyhzbG90UHJvcHMsIGNoaWxkcmVuLnByb3BzKSxcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICByZWY6IGZvcndhcmRlZFJlZiA/IGNvbXBvc2VSZWZzKGZvcndhcmRlZFJlZiwgY2hpbGRyZW5SZWYpIDogY2hpbGRyZW5SZWZcclxuICAgIH0pO1xyXG4gIH1cclxuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID4gMSA/IFJlYWN0LkNoaWxkcmVuLm9ubHkobnVsbCkgOiBudWxsO1xyXG59KTtcclxuU2xvdENsb25lLmRpc3BsYXlOYW1lID0gXCJTbG90Q2xvbmVcIjtcclxudmFyIFNsb3R0YWJsZSA9ICh7IGNoaWxkcmVuIH0pID0+IHtcclxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChGcmFnbWVudCwgeyBjaGlsZHJlbiB9KTtcclxufTtcclxuZnVuY3Rpb24gaXNTbG90dGFibGUoY2hpbGQpIHtcclxuICByZXR1cm4gUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpICYmIGNoaWxkLnR5cGUgPT09IFNsb3R0YWJsZTtcclxufVxyXG5mdW5jdGlvbiBtZXJnZVByb3BzKHNsb3RQcm9wcywgY2hpbGRQcm9wcykge1xyXG4gIGNvbnN0IG92ZXJyaWRlUHJvcHMgPSB7IC4uLmNoaWxkUHJvcHMgfTtcclxuICBmb3IgKGNvbnN0IHByb3BOYW1lIGluIGNoaWxkUHJvcHMpIHtcclxuICAgIGNvbnN0IHNsb3RQcm9wVmFsdWUgPSBzbG90UHJvcHNbcHJvcE5hbWVdO1xyXG4gICAgY29uc3QgY2hpbGRQcm9wVmFsdWUgPSBjaGlsZFByb3BzW3Byb3BOYW1lXTtcclxuICAgIGNvbnN0IGlzSGFuZGxlciA9IC9eb25bQS1aXS8udGVzdChwcm9wTmFtZSk7XHJcbiAgICBpZiAoaXNIYW5kbGVyKSB7XHJcbiAgICAgIGlmIChzbG90UHJvcFZhbHVlICYmIGNoaWxkUHJvcFZhbHVlKSB7XHJcbiAgICAgICAgb3ZlcnJpZGVQcm9wc1twcm9wTmFtZV0gPSAoLi4uYXJncykgPT4ge1xyXG4gICAgICAgICAgY2hpbGRQcm9wVmFsdWUoLi4uYXJncyk7XHJcbiAgICAgICAgICBzbG90UHJvcFZhbHVlKC4uLmFyZ3MpO1xyXG4gICAgICAgIH07XHJcbiAgICAgIH0gZWxzZSBpZiAoc2xvdFByb3BWYWx1ZSkge1xyXG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gc2xvdFByb3BWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmIChwcm9wTmFtZSA9PT0gXCJzdHlsZVwiKSB7XHJcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0geyAuLi5zbG90UHJvcFZhbHVlLCAuLi5jaGlsZFByb3BWYWx1ZSB9O1xyXG4gICAgfSBlbHNlIGlmIChwcm9wTmFtZSA9PT0gXCJjbGFzc05hbWVcIikge1xyXG4gICAgICBvdmVycmlkZVByb3BzW3Byb3BOYW1lXSA9IFtzbG90UHJvcFZhbHVlLCBjaGlsZFByb3BWYWx1ZV0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4geyAuLi5zbG90UHJvcHMsIC4uLm92ZXJyaWRlUHJvcHMgfTtcclxufVxyXG5mdW5jdGlvbiBnZXRFbGVtZW50UmVmKGVsZW1lbnQpIHtcclxuICBsZXQgZ2V0dGVyID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlbGVtZW50LnByb3BzLCBcInJlZlwiKT8uZ2V0O1xyXG4gIGxldCBtYXlXYXJuID0gZ2V0dGVyICYmIFwiaXNSZWFjdFdhcm5pbmdcIiBpbiBnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nO1xyXG4gIGlmIChtYXlXYXJuKSB7XHJcbiAgICByZXR1cm4gZWxlbWVudC5yZWY7XHJcbiAgfVxyXG4gIGdldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZWxlbWVudCwgXCJyZWZcIik/LmdldDtcclxuICBtYXlXYXJuID0gZ2V0dGVyICYmIFwiaXNSZWFjdFdhcm5pbmdcIiBpbiBnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nO1xyXG4gIGlmIChtYXlXYXJuKSB7XHJcbiAgICByZXR1cm4gZWxlbWVudC5wcm9wcy5yZWY7XHJcbiAgfVxyXG4gIHJldHVybiBlbGVtZW50LnByb3BzLnJlZiB8fCBlbGVtZW50LnJlZjtcclxufVxyXG52YXIgUm9vdCA9IFNsb3Q7XHJcbmV4cG9ydCB7XHJcbiAgUm9vdCxcclxuICBTbG90LFxyXG4gIFNsb3R0YWJsZVxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-toast/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@radix-ui/react-toast/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: () => (/* binding */ Action),\n/* harmony export */   Close: () => (/* binding */ Close),\n/* harmony export */   Description: () => (/* binding */ Description),\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   Root: () => (/* binding */ Root2),\n/* harmony export */   Title: () => (/* binding */ Title),\n/* harmony export */   Toast: () => (/* binding */ Toast),\n/* harmony export */   ToastAction: () => (/* binding */ ToastAction),\n/* harmony export */   ToastClose: () => (/* binding */ ToastClose),\n/* harmony export */   ToastDescription: () => (/* binding */ ToastDescription),\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   ToastTitle: () => (/* binding */ ToastTitle),\n/* harmony export */   ToastViewport: () => (/* binding */ ToastViewport),\n/* harmony export */   Viewport: () => (/* binding */ Viewport),\n/* harmony export */   createToastScope: () => (/* binding */ createToastScope)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-collection */ \"(app-pages-browser)/./node_modules/@radix-ui/react-collection/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-dismissable-layer */ \"(app-pages-browser)/./node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @radix-ui/react-portal */ \"(app-pages-browser)/./node_modules/@radix-ui/react-portal/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-presence */ \"(app-pages-browser)/./node_modules/@radix-ui/react-presence/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @radix-ui/react-use-controllable-state */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @radix-ui/react-visually-hidden */ \"(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Action,Close,Description,Provider,Root,Title,Toast,ToastAction,ToastClose,ToastDescription,ToastProvider,ToastTitle,ToastViewport,Viewport,createToastScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$();\n// packages/react/toast/src/Toast.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar PROVIDER_NAME = \"ToastProvider\";\nvar [Collection, useCollection, createCollectionScope] = (0,_radix_ui_react_collection__WEBPACK_IMPORTED_MODULE_3__.createCollection)(\"Toast\");\nvar [createToastContext, createToastScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_4__.createContextScope)(\"Toast\", [\n    createCollectionScope\n]);\nvar [ToastProviderProvider, useToastProviderContext] = createToastContext(PROVIDER_NAME);\nvar ToastProvider = (props)=>{\n    _s();\n    const { __scopeToast, label = \"Notification\", duration = 5e3, swipeDirection = \"right\", swipeThreshold = 50, children } = props;\n    const [viewport, setViewport] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [toastCount, setToastCount] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const isFocusedToastEscapeKeyDownRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const isClosePausedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    if (!label.trim()) {\n        console.error(\"Invalid prop `label` supplied to `\".concat(PROVIDER_NAME, \"`. Expected non-empty `string`.\"));\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.Provider, {\n        scope: __scopeToast,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastProviderProvider, {\n            scope: __scopeToast,\n            label,\n            duration,\n            swipeDirection,\n            swipeThreshold,\n            toastCount,\n            viewport,\n            onViewportChange: setViewport,\n            onToastAdd: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n                \"ToastProvider.useCallback\": ()=>setToastCount({\n                        \"ToastProvider.useCallback\": (prevCount)=>prevCount + 1\n                    }[\"ToastProvider.useCallback\"])\n            }[\"ToastProvider.useCallback\"], []),\n            onToastRemove: react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n                \"ToastProvider.useCallback\": ()=>setToastCount({\n                        \"ToastProvider.useCallback\": (prevCount)=>prevCount - 1\n                    }[\"ToastProvider.useCallback\"])\n            }[\"ToastProvider.useCallback\"], []),\n            isFocusedToastEscapeKeyDownRef,\n            isClosePausedRef,\n            children\n        })\n    });\n};\n_s(ToastProvider, \"5WX6HlT2GKgkJ8VW69vXumjrMKo=\");\n_c = ToastProvider;\nToastProvider.displayName = PROVIDER_NAME;\nvar VIEWPORT_NAME = \"ToastViewport\";\nvar VIEWPORT_DEFAULT_HOTKEY = [\n    \"F8\"\n];\nvar VIEWPORT_PAUSE = \"toast.viewportPause\";\nvar VIEWPORT_RESUME = \"toast.viewportResume\";\nvar ToastViewport = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c1 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopeToast, hotkey = VIEWPORT_DEFAULT_HOTKEY, label = \"Notifications ({hotkey})\", ...viewportProps } = props;\n    const context = useToastProviderContext(VIEWPORT_NAME, __scopeToast);\n    const getItems = useCollection(__scopeToast);\n    const wrapperRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const headFocusProxyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const tailFocusProxyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, ref, context.onViewportChange);\n    const hotkeyLabel = hotkey.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\");\n    const hasToasts = context.toastCount > 0;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const handleKeyDown = {\n                \"ToastViewport.useEffect.handleKeyDown\": (event)=>{\n                    var _ref_current;\n                    const isHotkeyPressed = hotkey.length !== 0 && hotkey.every({\n                        \"ToastViewport.useEffect.handleKeyDown\": (key)=>event[key] || event.code === key\n                    }[\"ToastViewport.useEffect.handleKeyDown\"]);\n                    if (isHotkeyPressed) (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();\n                }\n            }[\"ToastViewport.useEffect.handleKeyDown\"];\n            document.addEventListener(\"keydown\", handleKeyDown);\n            return ({\n                \"ToastViewport.useEffect\": ()=>document.removeEventListener(\"keydown\", handleKeyDown)\n            })[\"ToastViewport.useEffect\"];\n        }\n    }[\"ToastViewport.useEffect\"], [\n        hotkey\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const wrapper = wrapperRef.current;\n            const viewport = ref.current;\n            if (hasToasts && wrapper && viewport) {\n                const handlePause = {\n                    \"ToastViewport.useEffect.handlePause\": ()=>{\n                        if (!context.isClosePausedRef.current) {\n                            const pauseEvent = new CustomEvent(VIEWPORT_PAUSE);\n                            viewport.dispatchEvent(pauseEvent);\n                            context.isClosePausedRef.current = true;\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handlePause\"];\n                const handleResume = {\n                    \"ToastViewport.useEffect.handleResume\": ()=>{\n                        if (context.isClosePausedRef.current) {\n                            const resumeEvent = new CustomEvent(VIEWPORT_RESUME);\n                            viewport.dispatchEvent(resumeEvent);\n                            context.isClosePausedRef.current = false;\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handleResume\"];\n                const handleFocusOutResume = {\n                    \"ToastViewport.useEffect.handleFocusOutResume\": (event)=>{\n                        const isFocusMovingOutside = !wrapper.contains(event.relatedTarget);\n                        if (isFocusMovingOutside) handleResume();\n                    }\n                }[\"ToastViewport.useEffect.handleFocusOutResume\"];\n                const handlePointerLeaveResume = {\n                    \"ToastViewport.useEffect.handlePointerLeaveResume\": ()=>{\n                        const isFocusInside = wrapper.contains(document.activeElement);\n                        if (!isFocusInside) handleResume();\n                    }\n                }[\"ToastViewport.useEffect.handlePointerLeaveResume\"];\n                wrapper.addEventListener(\"focusin\", handlePause);\n                wrapper.addEventListener(\"focusout\", handleFocusOutResume);\n                wrapper.addEventListener(\"pointermove\", handlePause);\n                wrapper.addEventListener(\"pointerleave\", handlePointerLeaveResume);\n                window.addEventListener(\"blur\", handlePause);\n                window.addEventListener(\"focus\", handleResume);\n                return ({\n                    \"ToastViewport.useEffect\": ()=>{\n                        wrapper.removeEventListener(\"focusin\", handlePause);\n                        wrapper.removeEventListener(\"focusout\", handleFocusOutResume);\n                        wrapper.removeEventListener(\"pointermove\", handlePause);\n                        wrapper.removeEventListener(\"pointerleave\", handlePointerLeaveResume);\n                        window.removeEventListener(\"blur\", handlePause);\n                        window.removeEventListener(\"focus\", handleResume);\n                    }\n                })[\"ToastViewport.useEffect\"];\n            }\n        }\n    }[\"ToastViewport.useEffect\"], [\n        hasToasts,\n        context.isClosePausedRef\n    ]);\n    const getSortedTabbableCandidates = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"ToastViewport.useCallback[getSortedTabbableCandidates]\": (param)=>{\n            let { tabbingDirection } = param;\n            const toastItems = getItems();\n            const tabbableCandidates = toastItems.map({\n                \"ToastViewport.useCallback[getSortedTabbableCandidates].tabbableCandidates\": (toastItem)=>{\n                    const toastNode = toastItem.ref.current;\n                    const toastTabbableCandidates = [\n                        toastNode,\n                        ...getTabbableCandidates(toastNode)\n                    ];\n                    return tabbingDirection === \"forwards\" ? toastTabbableCandidates : toastTabbableCandidates.reverse();\n                }\n            }[\"ToastViewport.useCallback[getSortedTabbableCandidates].tabbableCandidates\"]);\n            return (tabbingDirection === \"forwards\" ? tabbableCandidates.reverse() : tabbableCandidates).flat();\n        }\n    }[\"ToastViewport.useCallback[getSortedTabbableCandidates]\"], [\n        getItems\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastViewport.useEffect\": ()=>{\n            const viewport = ref.current;\n            if (viewport) {\n                const handleKeyDown = {\n                    \"ToastViewport.useEffect.handleKeyDown\": (event)=>{\n                        const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n                        const isTabKey = event.key === \"Tab\" && !isMetaKey;\n                        if (isTabKey) {\n                            const focusedElement = document.activeElement;\n                            const isTabbingBackwards = event.shiftKey;\n                            const targetIsViewport = event.target === viewport;\n                            if (targetIsViewport && isTabbingBackwards) {\n                                var _headFocusProxyRef_current;\n                                (_headFocusProxyRef_current = headFocusProxyRef.current) === null || _headFocusProxyRef_current === void 0 ? void 0 : _headFocusProxyRef_current.focus();\n                                return;\n                            }\n                            const tabbingDirection = isTabbingBackwards ? \"backwards\" : \"forwards\";\n                            const sortedCandidates = getSortedTabbableCandidates({\n                                tabbingDirection\n                            });\n                            const index = sortedCandidates.findIndex({\n                                \"ToastViewport.useEffect.handleKeyDown.index\": (candidate)=>candidate === focusedElement\n                            }[\"ToastViewport.useEffect.handleKeyDown.index\"]);\n                            if (focusFirst(sortedCandidates.slice(index + 1))) {\n                                event.preventDefault();\n                            } else {\n                                var _headFocusProxyRef_current1, _tailFocusProxyRef_current;\n                                isTabbingBackwards ? (_headFocusProxyRef_current1 = headFocusProxyRef.current) === null || _headFocusProxyRef_current1 === void 0 ? void 0 : _headFocusProxyRef_current1.focus() : (_tailFocusProxyRef_current = tailFocusProxyRef.current) === null || _tailFocusProxyRef_current === void 0 ? void 0 : _tailFocusProxyRef_current.focus();\n                            }\n                        }\n                    }\n                }[\"ToastViewport.useEffect.handleKeyDown\"];\n                viewport.addEventListener(\"keydown\", handleKeyDown);\n                return ({\n                    \"ToastViewport.useEffect\": ()=>viewport.removeEventListener(\"keydown\", handleKeyDown)\n                })[\"ToastViewport.useEffect\"];\n            }\n        }\n    }[\"ToastViewport.useEffect\"], [\n        getItems,\n        getSortedTabbableCandidates\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__.Branch, {\n        ref: wrapperRef,\n        role: \"region\",\n        \"aria-label\": label.replace(\"{hotkey}\", hotkeyLabel),\n        tabIndex: -1,\n        style: {\n            pointerEvents: hasToasts ? void 0 : \"none\"\n        },\n        children: [\n            hasToasts && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(FocusProxy, {\n                ref: headFocusProxyRef,\n                onFocusFromOutsideViewport: ()=>{\n                    const tabbableCandidates = getSortedTabbableCandidates({\n                        tabbingDirection: \"forwards\"\n                    });\n                    focusFirst(tabbableCandidates);\n                }\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.Slot, {\n                scope: __scopeToast,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.ol, {\n                    tabIndex: -1,\n                    ...viewportProps,\n                    ref: composedRefs\n                })\n            }),\n            hasToasts && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(FocusProxy, {\n                ref: tailFocusProxyRef,\n                onFocusFromOutsideViewport: ()=>{\n                    const tabbableCandidates = getSortedTabbableCandidates({\n                        tabbingDirection: \"backwards\"\n                    });\n                    focusFirst(tabbableCandidates);\n                }\n            })\n        ]\n    });\n}, \"ixsRCQPkHELg47p3bu1Fa/8Nqww=\", false, function() {\n    return [\n        useToastProviderContext,\n        useCollection,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs\n    ];\n})), \"ixsRCQPkHELg47p3bu1Fa/8Nqww=\", false, function() {\n    return [\n        useToastProviderContext,\n        useCollection,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs\n    ];\n});\n_c2 = ToastViewport;\nToastViewport.displayName = VIEWPORT_NAME;\nvar FOCUS_PROXY_NAME = \"ToastFocusProxy\";\nvar FocusProxy = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;\n    const context = useToastProviderContext(FOCUS_PROXY_NAME, __scopeToast);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__.VisuallyHidden, {\n        \"aria-hidden\": true,\n        tabIndex: 0,\n        ...proxyProps,\n        ref: forwardedRef,\n        style: {\n            position: \"fixed\"\n        },\n        onFocus: (event)=>{\n            var _context_viewport;\n            const prevFocusedElement = event.relatedTarget;\n            const isFocusFromOutsideViewport = !((_context_viewport = context.viewport) === null || _context_viewport === void 0 ? void 0 : _context_viewport.contains(prevFocusedElement));\n            if (isFocusFromOutsideViewport) onFocusFromOutsideViewport();\n        }\n    });\n}, \"v+vTl4n43vTKnNVIR8ksMaNPHN4=\", false, function() {\n    return [\n        useToastProviderContext\n    ];\n}));\n_c3 = FocusProxy;\nFocusProxy.displayName = FOCUS_PROXY_NAME;\nvar TOAST_NAME = \"Toast\";\nvar TOAST_SWIPE_START = \"toast.swipeStart\";\nvar TOAST_SWIPE_MOVE = \"toast.swipeMove\";\nvar TOAST_SWIPE_CANCEL = \"toast.swipeCancel\";\nvar TOAST_SWIPE_END = \"toast.swipeEnd\";\nvar Toast = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = _s3((props, forwardedRef)=>{\n    _s3();\n    const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;\n    const [open = true, setOpen] = (0,_radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__.useControllableState)({\n        prop: openProp,\n        defaultProp: defaultOpen,\n        onChange: onOpenChange\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_presence__WEBPACK_IMPORTED_MODULE_10__.Presence, {\n        present: forceMount || open,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastImpl, {\n            open,\n            ...toastProps,\n            ref: forwardedRef,\n            onClose: ()=>setOpen(false),\n            onPause: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(props.onPause),\n            onResume: (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(props.onResume),\n            onSwipeStart: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeStart, (event)=>{\n                event.currentTarget.setAttribute(\"data-swipe\", \"start\");\n            }),\n            onSwipeMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeMove, (event)=>{\n                const { x, y } = event.detail.delta;\n                event.currentTarget.setAttribute(\"data-swipe\", \"move\");\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-x\", \"\".concat(x, \"px\"));\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-move-y\", \"\".concat(y, \"px\"));\n            }),\n            onSwipeCancel: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeCancel, (event)=>{\n                event.currentTarget.setAttribute(\"data-swipe\", \"cancel\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-end-y\");\n            }),\n            onSwipeEnd: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onSwipeEnd, (event)=>{\n                const { x, y } = event.detail.delta;\n                event.currentTarget.setAttribute(\"data-swipe\", \"end\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-x\");\n                event.currentTarget.style.removeProperty(\"--radix-toast-swipe-move-y\");\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-x\", \"\".concat(x, \"px\"));\n                event.currentTarget.style.setProperty(\"--radix-toast-swipe-end-y\", \"\".concat(y, \"px\"));\n                setOpen(false);\n            })\n        })\n    });\n}, \"GYcbsAOjzeO5jx8hj6HARBbv4Lg=\", false, function() {\n    return [\n        _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__.useControllableState,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n})), \"GYcbsAOjzeO5jx8hj6HARBbv4Lg=\", false, function() {\n    return [\n        _radix_ui_react_use_controllable_state__WEBPACK_IMPORTED_MODULE_9__.useControllableState,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n});\n_c5 = Toast;\nToast.displayName = TOAST_NAME;\nvar [ToastInteractiveProvider, useToastInteractiveContext] = createToastContext(TOAST_NAME, {\n    onClose () {}\n});\nvar ToastImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s4((props, forwardedRef)=>{\n    _s4();\n    const { __scopeToast, type = \"foreground\", duration: durationProp, open, onClose, onEscapeKeyDown, onPause, onResume, onSwipeStart, onSwipeMove, onSwipeCancel, onSwipeEnd, ...toastProps } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [node, setNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const composedRefs = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs)(forwardedRef, {\n        \"ToastImpl.useComposedRefs[composedRefs]\": (node2)=>setNode(node2)\n    }[\"ToastImpl.useComposedRefs[composedRefs]\"]);\n    const pointerStartRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const swipeDeltaRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const duration = durationProp || context.duration;\n    const closeTimerStartTimeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const closeTimerRemainingTimeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(duration);\n    const closeTimerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const { onToastAdd, onToastRemove } = context;\n    const handleClose = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)({\n        \"ToastImpl.useCallbackRef[handleClose]\": ()=>{\n            var _context_viewport;\n            const isFocusInToast = node === null || node === void 0 ? void 0 : node.contains(document.activeElement);\n            if (isFocusInToast) (_context_viewport = context.viewport) === null || _context_viewport === void 0 ? void 0 : _context_viewport.focus();\n            onClose();\n        }\n    }[\"ToastImpl.useCallbackRef[handleClose]\"]);\n    const startTimer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"ToastImpl.useCallback[startTimer]\": (duration2)=>{\n            if (!duration2 || duration2 === Infinity) return;\n            window.clearTimeout(closeTimerRef.current);\n            closeTimerStartTimeRef.current = /* @__PURE__ */ new Date().getTime();\n            closeTimerRef.current = window.setTimeout(handleClose, duration2);\n        }\n    }[\"ToastImpl.useCallback[startTimer]\"], [\n        handleClose\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            const viewport = context.viewport;\n            if (viewport) {\n                const handleResume = {\n                    \"ToastImpl.useEffect.handleResume\": ()=>{\n                        startTimer(closeTimerRemainingTimeRef.current);\n                        onResume === null || onResume === void 0 ? void 0 : onResume();\n                    }\n                }[\"ToastImpl.useEffect.handleResume\"];\n                const handlePause = {\n                    \"ToastImpl.useEffect.handlePause\": ()=>{\n                        const elapsedTime = /* @__PURE__ */ new Date().getTime() - closeTimerStartTimeRef.current;\n                        closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;\n                        window.clearTimeout(closeTimerRef.current);\n                        onPause === null || onPause === void 0 ? void 0 : onPause();\n                    }\n                }[\"ToastImpl.useEffect.handlePause\"];\n                viewport.addEventListener(VIEWPORT_PAUSE, handlePause);\n                viewport.addEventListener(VIEWPORT_RESUME, handleResume);\n                return ({\n                    \"ToastImpl.useEffect\": ()=>{\n                        viewport.removeEventListener(VIEWPORT_PAUSE, handlePause);\n                        viewport.removeEventListener(VIEWPORT_RESUME, handleResume);\n                    }\n                })[\"ToastImpl.useEffect\"];\n            }\n        }\n    }[\"ToastImpl.useEffect\"], [\n        context.viewport,\n        duration,\n        onPause,\n        onResume,\n        startTimer\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            if (open && !context.isClosePausedRef.current) startTimer(duration);\n        }\n    }[\"ToastImpl.useEffect\"], [\n        open,\n        duration,\n        context.isClosePausedRef,\n        startTimer\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastImpl.useEffect\": ()=>{\n            onToastAdd();\n            return ({\n                \"ToastImpl.useEffect\": ()=>onToastRemove()\n            })[\"ToastImpl.useEffect\"];\n        }\n    }[\"ToastImpl.useEffect\"], [\n        onToastAdd,\n        onToastRemove\n    ]);\n    const announceTextContent = react__WEBPACK_IMPORTED_MODULE_0__.useMemo({\n        \"ToastImpl.useMemo[announceTextContent]\": ()=>{\n            return node ? getAnnounceTextContent(node) : null;\n        }\n    }[\"ToastImpl.useMemo[announceTextContent]\"], [\n        node\n    ]);\n    if (!context.viewport) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children: [\n            announceTextContent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounce, {\n                __scopeToast,\n                role: \"status\",\n                \"aria-live\": type === \"foreground\" ? \"assertive\" : \"polite\",\n                \"aria-atomic\": true,\n                children: announceTextContent\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastInteractiveProvider, {\n                scope: __scopeToast,\n                onClose: handleClose,\n                children: /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Collection.ItemSlot, {\n                    scope: __scopeToast,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_dismissable_layer__WEBPACK_IMPORTED_MODULE_6__.Root, {\n                        asChild: true,\n                        onEscapeKeyDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(onEscapeKeyDown, ()=>{\n                            if (!context.isFocusedToastEscapeKeyDownRef.current) handleClose();\n                            context.isFocusedToastEscapeKeyDownRef.current = false;\n                        }),\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.li, {\n                            role: \"status\",\n                            \"aria-live\": \"off\",\n                            \"aria-atomic\": true,\n                            tabIndex: 0,\n                            \"data-state\": open ? \"open\" : \"closed\",\n                            \"data-swipe-direction\": context.swipeDirection,\n                            ...toastProps,\n                            ref: composedRefs,\n                            style: {\n                                userSelect: \"none\",\n                                touchAction: \"none\",\n                                ...props.style\n                            },\n                            onKeyDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onKeyDown, (event)=>{\n                                if (event.key !== \"Escape\") return;\n                                onEscapeKeyDown === null || onEscapeKeyDown === void 0 ? void 0 : onEscapeKeyDown(event.nativeEvent);\n                                if (!event.nativeEvent.defaultPrevented) {\n                                    context.isFocusedToastEscapeKeyDownRef.current = true;\n                                    handleClose();\n                                }\n                            }),\n                            onPointerDown: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerDown, (event)=>{\n                                if (event.button !== 0) return;\n                                pointerStartRef.current = {\n                                    x: event.clientX,\n                                    y: event.clientY\n                                };\n                            }),\n                            onPointerMove: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerMove, (event)=>{\n                                if (!pointerStartRef.current) return;\n                                const x = event.clientX - pointerStartRef.current.x;\n                                const y = event.clientY - pointerStartRef.current.y;\n                                const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);\n                                const isHorizontalSwipe = [\n                                    \"left\",\n                                    \"right\"\n                                ].includes(context.swipeDirection);\n                                const clamp = [\n                                    \"left\",\n                                    \"up\"\n                                ].includes(context.swipeDirection) ? Math.min : Math.max;\n                                const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n                                const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n                                const moveStartBuffer = event.pointerType === \"touch\" ? 10 : 2;\n                                const delta = {\n                                    x: clampedX,\n                                    y: clampedY\n                                };\n                                const eventDetail = {\n                                    originalEvent: event,\n                                    delta\n                                };\n                                if (hasSwipeMoveStarted) {\n                                    swipeDeltaRef.current = delta;\n                                    handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {\n                                        discrete: false\n                                    });\n                                } else if (isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {\n                                    swipeDeltaRef.current = delta;\n                                    handleAndDispatchCustomEvent(TOAST_SWIPE_START, onSwipeStart, eventDetail, {\n                                        discrete: false\n                                    });\n                                    event.target.setPointerCapture(event.pointerId);\n                                } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n                                    pointerStartRef.current = null;\n                                }\n                            }),\n                            onPointerUp: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onPointerUp, (event)=>{\n                                const delta = swipeDeltaRef.current;\n                                const target = event.target;\n                                if (target.hasPointerCapture(event.pointerId)) {\n                                    target.releasePointerCapture(event.pointerId);\n                                }\n                                swipeDeltaRef.current = null;\n                                pointerStartRef.current = null;\n                                if (delta) {\n                                    const toast = event.currentTarget;\n                                    const eventDetail = {\n                                        originalEvent: event,\n                                        delta\n                                    };\n                                    if (isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold)) {\n                                        handleAndDispatchCustomEvent(TOAST_SWIPE_END, onSwipeEnd, eventDetail, {\n                                            discrete: true\n                                        });\n                                    } else {\n                                        handleAndDispatchCustomEvent(TOAST_SWIPE_CANCEL, onSwipeCancel, eventDetail, {\n                                            discrete: true\n                                        });\n                                    }\n                                    toast.addEventListener(\"click\", (event2)=>event2.preventDefault(), {\n                                        once: true\n                                    });\n                                }\n                            })\n                        })\n                    })\n                }), context.viewport)\n            })\n        ]\n    });\n}, \"7BpmiAQPEbHD32/tfcY+D7MYfsk=\", false, function() {\n    return [\n        useToastProviderContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_5__.useComposedRefs,\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n}));\n_c6 = ToastImpl;\nvar ToastAnnounce = (props)=>{\n    _s5();\n    const { __scopeToast, children, ...announceProps } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [renderAnnounceText, setRenderAnnounceText] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [isAnnounced, setIsAnnounced] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    useNextFrame({\n        \"ToastAnnounce.useNextFrame\": ()=>setRenderAnnounceText(true)\n    }[\"ToastAnnounce.useNextFrame\"]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"ToastAnnounce.useEffect\": ()=>{\n            const timer = window.setTimeout({\n                \"ToastAnnounce.useEffect.timer\": ()=>setIsAnnounced(true)\n            }[\"ToastAnnounce.useEffect.timer\"], 1e3);\n            return ({\n                \"ToastAnnounce.useEffect\": ()=>window.clearTimeout(timer)\n            })[\"ToastAnnounce.useEffect\"];\n        }\n    }[\"ToastAnnounce.useEffect\"], []);\n    return isAnnounced ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_portal__WEBPACK_IMPORTED_MODULE_13__.Portal, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_visually_hidden__WEBPACK_IMPORTED_MODULE_8__.VisuallyHidden, {\n            ...announceProps,\n            children: renderAnnounceText && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n                children: [\n                    context.label,\n                    \" \",\n                    children\n                ]\n            })\n        })\n    });\n};\n_s5(ToastAnnounce, \"d6EX7hT1Y0tSA97It++iyDoZbs8=\", false, function() {\n    return [\n        useToastProviderContext,\n        useNextFrame\n    ];\n});\n_c7 = ToastAnnounce;\nvar TITLE_NAME = \"ToastTitle\";\nvar ToastTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c8 = (props, forwardedRef)=>{\n    const { __scopeToast, ...titleProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        ...titleProps,\n        ref: forwardedRef\n    });\n});\n_c9 = ToastTitle;\nToastTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"ToastDescription\";\nvar ToastDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c10 = (props, forwardedRef)=>{\n    const { __scopeToast, ...descriptionProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        ...descriptionProps,\n        ref: forwardedRef\n    });\n});\n_c11 = ToastDescription;\nToastDescription.displayName = DESCRIPTION_NAME;\nvar ACTION_NAME = \"ToastAction\";\nvar ToastAction = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c12 = (props, forwardedRef)=>{\n    const { altText, ...actionProps } = props;\n    if (!altText.trim()) {\n        console.error(\"Invalid prop `altText` supplied to `\".concat(ACTION_NAME, \"`. Expected non-empty `string`.\"));\n        return null;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounceExclude, {\n        altText,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastClose, {\n            ...actionProps,\n            ref: forwardedRef\n        })\n    });\n});\n_c13 = ToastAction;\nToastAction.displayName = ACTION_NAME;\nvar CLOSE_NAME = \"ToastClose\";\nvar ToastClose = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const { __scopeToast, ...closeProps } = props;\n    const interactiveContext = useToastInteractiveContext(CLOSE_NAME, __scopeToast);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ToastAnnounceExclude, {\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.button, {\n            type: \"button\",\n            ...closeProps,\n            ref: forwardedRef,\n            onClick: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(props.onClick, interactiveContext.onClose)\n        })\n    });\n}, \"6ZMkG0Unpl4/gIv2taZUcwphf68=\", false, function() {\n    return [\n        useToastInteractiveContext\n    ];\n}));\n_c14 = ToastClose;\nToastClose.displayName = CLOSE_NAME;\nvar ToastAnnounceExclude = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef)=>{\n    const { __scopeToast, altText, ...announceExcludeProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.Primitive.div, {\n        \"data-radix-toast-announce-exclude\": \"\",\n        \"data-radix-toast-announce-alt\": altText || void 0,\n        ...announceExcludeProps,\n        ref: forwardedRef\n    });\n});\n_c15 = ToastAnnounceExclude;\nfunction getAnnounceTextContent(container) {\n    const textContent = [];\n    const childNodes = Array.from(container.childNodes);\n    childNodes.forEach((node)=>{\n        if (node.nodeType === node.TEXT_NODE && node.textContent) textContent.push(node.textContent);\n        if (isHTMLElement(node)) {\n            const isHidden = node.ariaHidden || node.hidden || node.style.display === \"none\";\n            const isExcluded = node.dataset.radixToastAnnounceExclude === \"\";\n            if (!isHidden) {\n                if (isExcluded) {\n                    const altText = node.dataset.radixToastAnnounceAlt;\n                    if (altText) textContent.push(altText);\n                } else {\n                    textContent.push(...getAnnounceTextContent(node));\n                }\n            }\n        }\n    });\n    return textContent;\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, param) {\n    let { discrete } = param;\n    const currentTarget = detail.originalEvent.currentTarget;\n    const event = new CustomEvent(name, {\n        bubbles: true,\n        cancelable: true,\n        detail\n    });\n    if (handler) currentTarget.addEventListener(name, handler, {\n        once: true\n    });\n    if (discrete) {\n        (0,_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_7__.dispatchDiscreteCustomEvent)(currentTarget, event);\n    } else {\n        currentTarget.dispatchEvent(event);\n    }\n}\nvar isDeltaInDirection = function(delta, direction) {\n    let threshold = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;\n    const deltaX = Math.abs(delta.x);\n    const deltaY = Math.abs(delta.y);\n    const isDeltaX = deltaX > deltaY;\n    if (direction === \"left\" || direction === \"right\") {\n        return isDeltaX && deltaX > threshold;\n    } else {\n        return !isDeltaX && deltaY > threshold;\n    }\n};\nfunction useNextFrame() {\n    let callback = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ()=>{};\n    _s7();\n    const fn = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef)(callback);\n    (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_14__.useLayoutEffect)({\n        \"useNextFrame.useLayoutEffect\": ()=>{\n            let raf1 = 0;\n            let raf2 = 0;\n            raf1 = window.requestAnimationFrame({\n                \"useNextFrame.useLayoutEffect\": ()=>raf2 = window.requestAnimationFrame(fn)\n            }[\"useNextFrame.useLayoutEffect\"]);\n            return ({\n                \"useNextFrame.useLayoutEffect\": ()=>{\n                    window.cancelAnimationFrame(raf1);\n                    window.cancelAnimationFrame(raf2);\n                }\n            })[\"useNextFrame.useLayoutEffect\"];\n        }\n    }[\"useNextFrame.useLayoutEffect\"], [\n        fn\n    ]);\n}\n_s7(useNextFrame, \"io2gR/UjflKlYiMuWmlTjpci2xM=\", false, function() {\n    return [\n        _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_11__.useCallbackRef\n    ];\n});\nfunction isHTMLElement(node) {\n    return node.nodeType === node.ELEMENT_NODE;\n}\nfunction getTabbableCandidates(container) {\n    const nodes = [];\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n        acceptNode: (node)=>{\n            const isHiddenInput = node.tagName === \"INPUT\" && node.type === \"hidden\";\n            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n        }\n    });\n    while(walker.nextNode())nodes.push(walker.currentNode);\n    return nodes;\n}\nfunction focusFirst(candidates) {\n    const previouslyFocusedElement = document.activeElement;\n    return candidates.some((candidate)=>{\n        if (candidate === previouslyFocusedElement) return true;\n        candidate.focus();\n        return document.activeElement !== previouslyFocusedElement;\n    });\n}\nvar Provider = ToastProvider;\nvar Viewport = ToastViewport;\nvar Root2 = Toast;\nvar Title = ToastTitle;\nvar Description = ToastDescription;\nvar Action = ToastAction;\nvar Close = ToastClose;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"ToastProvider\");\n$RefreshReg$(_c1, \"ToastViewport$React.forwardRef\");\n$RefreshReg$(_c2, \"ToastViewport\");\n$RefreshReg$(_c3, \"FocusProxy\");\n$RefreshReg$(_c4, \"Toast$React.forwardRef\");\n$RefreshReg$(_c5, \"Toast\");\n$RefreshReg$(_c6, \"ToastImpl\");\n$RefreshReg$(_c7, \"ToastAnnounce\");\n$RefreshReg$(_c8, \"ToastTitle$React.forwardRef\");\n$RefreshReg$(_c9, \"ToastTitle\");\n$RefreshReg$(_c10, \"ToastDescription$React.forwardRef\");\n$RefreshReg$(_c11, \"ToastDescription\");\n$RefreshReg$(_c12, \"ToastAction$React.forwardRef\");\n$RefreshReg$(_c13, \"ToastAction\");\n$RefreshReg$(_c14, \"ToastClose\");\n$RefreshReg$(_c15, \"ToastAnnounceExclude\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-toast/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCallbackRef: () => (/* binding */ useCallbackRef)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-callback-ref/src/useCallbackRef.tsx\r\n\r\nfunction useCallbackRef(callback) {\r\n  const callbackRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(callback);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    callbackRef.current = callback;\r\n  });\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (...args) => callbackRef.current?.(...args), []);\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWNhbGxiYWNrLXJlZi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0Esc0JBQXNCLHlDQUFZO0FBQ2xDLEVBQUUsNENBQWU7QUFDakI7QUFDQSxHQUFHO0FBQ0gsU0FBUywwQ0FBYTtBQUN0QjtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3QtdXNlLWNhbGxiYWNrLXJlZlxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3VzZS1jYWxsYmFjay1yZWYvc3JjL3VzZUNhbGxiYWNrUmVmLnRzeFxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuZnVuY3Rpb24gdXNlQ2FsbGJhY2tSZWYoY2FsbGJhY2spIHtcclxuICBjb25zdCBjYWxsYmFja1JlZiA9IFJlYWN0LnVzZVJlZihjYWxsYmFjayk7XHJcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNhbGxiYWNrUmVmLmN1cnJlbnQgPSBjYWxsYmFjaztcclxuICB9KTtcclxuICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiAoLi4uYXJncykgPT4gY2FsbGJhY2tSZWYuY3VycmVudD8uKC4uLmFyZ3MpLCBbXSk7XHJcbn1cclxuZXhwb3J0IHtcclxuICB1c2VDYWxsYmFja1JlZlxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useControllableState: () => (/* binding */ useControllableState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n// packages/react/use-controllable-state/src/useControllableState.tsx\r\n\r\n\r\nfunction useControllableState({\r\n  prop,\r\n  defaultProp,\r\n  onChange = () => {\r\n  }\r\n}) {\r\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\r\n  const isControlled = prop !== void 0;\r\n  const value = isControlled ? prop : uncontrolledProp;\r\n  const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);\r\n  const setValue = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (nextValue) => {\r\n      if (isControlled) {\r\n        const setter = nextValue;\r\n        const value2 = typeof nextValue === \"function\" ? setter(prop) : nextValue;\r\n        if (value2 !== prop) handleChange(value2);\r\n      } else {\r\n        setUncontrolledProp(nextValue);\r\n      }\r\n    },\r\n    [isControlled, prop, setUncontrolledProp, handleChange]\r\n  );\r\n  return [value, setValue];\r\n}\r\nfunction useUncontrolledState({\r\n  defaultProp,\r\n  onChange\r\n}) {\r\n  const uncontrolledState = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultProp);\r\n  const [value] = uncontrolledState;\r\n  const prevValueRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(value);\r\n  const handleChange = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onChange);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (prevValueRef.current !== value) {\r\n      handleChange(value);\r\n      prevValueRef.current = value;\r\n    }\r\n  }, [value, prevValueRef, handleChange]);\r\n  return uncontrolledState;\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWNvbnRyb2xsYWJsZS1zdGF0ZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUMrQjtBQUNtQztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHlFQUF5RSx1QkFBdUI7QUFDaEc7QUFDQTtBQUNBLHVCQUF1QixnRkFBYztBQUNyQyxtQkFBbUIsOENBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEIsMkNBQWM7QUFDMUM7QUFDQSx1QkFBdUIseUNBQVk7QUFDbkMsdUJBQXVCLGdGQUFjO0FBQ3JDLEVBQUUsNENBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3QtdXNlLWNvbnRyb2xsYWJsZS1zdGF0ZVxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3VzZS1jb250cm9sbGFibGUtc3RhdGUvc3JjL3VzZUNvbnRyb2xsYWJsZVN0YXRlLnRzeFxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlQ2FsbGJhY2tSZWYgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1jYWxsYmFjay1yZWZcIjtcclxuZnVuY3Rpb24gdXNlQ29udHJvbGxhYmxlU3RhdGUoe1xyXG4gIHByb3AsXHJcbiAgZGVmYXVsdFByb3AsXHJcbiAgb25DaGFuZ2UgPSAoKSA9PiB7XHJcbiAgfVxyXG59KSB7XHJcbiAgY29uc3QgW3VuY29udHJvbGxlZFByb3AsIHNldFVuY29udHJvbGxlZFByb3BdID0gdXNlVW5jb250cm9sbGVkU3RhdGUoeyBkZWZhdWx0UHJvcCwgb25DaGFuZ2UgfSk7XHJcbiAgY29uc3QgaXNDb250cm9sbGVkID0gcHJvcCAhPT0gdm9pZCAwO1xyXG4gIGNvbnN0IHZhbHVlID0gaXNDb250cm9sbGVkID8gcHJvcCA6IHVuY29udHJvbGxlZFByb3A7XHJcbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gdXNlQ2FsbGJhY2tSZWYob25DaGFuZ2UpO1xyXG4gIGNvbnN0IHNldFZhbHVlID0gUmVhY3QudXNlQ2FsbGJhY2soXHJcbiAgICAobmV4dFZhbHVlKSA9PiB7XHJcbiAgICAgIGlmIChpc0NvbnRyb2xsZWQpIHtcclxuICAgICAgICBjb25zdCBzZXR0ZXIgPSBuZXh0VmFsdWU7XHJcbiAgICAgICAgY29uc3QgdmFsdWUyID0gdHlwZW9mIG5leHRWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gc2V0dGVyKHByb3ApIDogbmV4dFZhbHVlO1xyXG4gICAgICAgIGlmICh2YWx1ZTIgIT09IHByb3ApIGhhbmRsZUNoYW5nZSh2YWx1ZTIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNldFVuY29udHJvbGxlZFByb3AobmV4dFZhbHVlKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIFtpc0NvbnRyb2xsZWQsIHByb3AsIHNldFVuY29udHJvbGxlZFByb3AsIGhhbmRsZUNoYW5nZV1cclxuICApO1xyXG4gIHJldHVybiBbdmFsdWUsIHNldFZhbHVlXTtcclxufVxyXG5mdW5jdGlvbiB1c2VVbmNvbnRyb2xsZWRTdGF0ZSh7XHJcbiAgZGVmYXVsdFByb3AsXHJcbiAgb25DaGFuZ2VcclxufSkge1xyXG4gIGNvbnN0IHVuY29udHJvbGxlZFN0YXRlID0gUmVhY3QudXNlU3RhdGUoZGVmYXVsdFByb3ApO1xyXG4gIGNvbnN0IFt2YWx1ZV0gPSB1bmNvbnRyb2xsZWRTdGF0ZTtcclxuICBjb25zdCBwcmV2VmFsdWVSZWYgPSBSZWFjdC51c2VSZWYodmFsdWUpO1xyXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IHVzZUNhbGxiYWNrUmVmKG9uQ2hhbmdlKTtcclxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKHByZXZWYWx1ZVJlZi5jdXJyZW50ICE9PSB2YWx1ZSkge1xyXG4gICAgICBoYW5kbGVDaGFuZ2UodmFsdWUpO1xyXG4gICAgICBwcmV2VmFsdWVSZWYuY3VycmVudCA9IHZhbHVlO1xyXG4gICAgfVxyXG4gIH0sIFt2YWx1ZSwgcHJldlZhbHVlUmVmLCBoYW5kbGVDaGFuZ2VdKTtcclxuICByZXR1cm4gdW5jb250cm9sbGVkU3RhdGU7XHJcbn1cclxuZXhwb3J0IHtcclxuICB1c2VDb250cm9sbGFibGVTdGF0ZVxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEscapeKeydown: () => (/* binding */ useEscapeKeydown)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-callback-ref */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs\");\n// packages/react/use-escape-keydown/src/useEscapeKeydown.tsx\r\n\r\n\r\nfunction useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {\r\n  const onEscapeKeyDown = (0,_radix_ui_react_use_callback_ref__WEBPACK_IMPORTED_MODULE_1__.useCallbackRef)(onEscapeKeyDownProp);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === \"Escape\") {\r\n        onEscapeKeyDown(event);\r\n      }\r\n    };\r\n    ownerDocument.addEventListener(\"keydown\", handleKeyDown, { capture: true });\r\n    return () => ownerDocument.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\r\n  }, [onEscapeKeyDown, ownerDocument]);\r\n}\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWVzY2FwZS1rZXlkb3duL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQ21DO0FBQ2xFO0FBQ0EsMEJBQTBCLGdGQUFjO0FBQ3hDLEVBQUUsNENBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxlQUFlO0FBQzlFLCtFQUErRSxlQUFlO0FBQzlGLEdBQUc7QUFDSDtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEByYWRpeC11aVxccmVhY3QtdXNlLWVzY2FwZS1rZXlkb3duXFxkaXN0XFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvdXNlLWVzY2FwZS1rZXlkb3duL3NyYy91c2VFc2NhcGVLZXlkb3duLnRzeFxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlQ2FsbGJhY2tSZWYgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1jYWxsYmFjay1yZWZcIjtcclxuZnVuY3Rpb24gdXNlRXNjYXBlS2V5ZG93bihvbkVzY2FwZUtleURvd25Qcm9wLCBvd25lckRvY3VtZW50ID0gZ2xvYmFsVGhpcz8uZG9jdW1lbnQpIHtcclxuICBjb25zdCBvbkVzY2FwZUtleURvd24gPSB1c2VDYWxsYmFja1JlZihvbkVzY2FwZUtleURvd25Qcm9wKTtcclxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgaGFuZGxlS2V5RG93biA9IChldmVudCkgPT4ge1xyXG4gICAgICBpZiAoZXZlbnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgICAgb25Fc2NhcGVLZXlEb3duKGV2ZW50KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIG93bmVyRG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93biwgeyBjYXB0dXJlOiB0cnVlIH0pO1xyXG4gICAgcmV0dXJuICgpID0+IG93bmVyRG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93biwgeyBjYXB0dXJlOiB0cnVlIH0pO1xyXG4gIH0sIFtvbkVzY2FwZUtleURvd24sIG93bmVyRG9jdW1lbnRdKTtcclxufVxyXG5leHBvcnQge1xyXG4gIHVzZUVzY2FwZUtleWRvd25cclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLayoutEffect: () => (/* binding */ useLayoutEffect2)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-layout-effect/src/useLayoutEffect.tsx\r\n\r\nvar useLayoutEffect2 = Boolean(globalThis?.document) ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : () => {\r\n};\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUMrQjtBQUMvQix1REFBdUQsa0RBQXFCO0FBQzVFO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHJhZGl4LXVpXFxyZWFjdC11c2UtbGF5b3V0LWVmZmVjdFxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3VzZS1sYXlvdXQtZWZmZWN0L3NyYy91c2VMYXlvdXRFZmZlY3QudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG52YXIgdXNlTGF5b3V0RWZmZWN0MiA9IEJvb2xlYW4oZ2xvYmFsVGhpcz8uZG9jdW1lbnQpID8gUmVhY3QudXNlTGF5b3V0RWZmZWN0IDogKCkgPT4ge1xyXG59O1xyXG5leHBvcnQge1xyXG4gIHVzZUxheW91dEVmZmVjdDIgYXMgdXNlTGF5b3V0RWZmZWN0XHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   VisuallyHidden: () => (/* binding */ VisuallyHidden)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/visually-hidden/src/VisuallyHidden.tsx\r\n\r\n\r\n\r\nvar NAME = \"VisuallyHidden\";\r\nvar VisuallyHidden = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(\r\n  (props, forwardedRef) => {\r\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\r\n      _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.Primitive.span,\r\n      {\r\n        ...props,\r\n        ref: forwardedRef,\r\n        style: {\r\n          // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss\r\n          position: \"absolute\",\r\n          border: 0,\r\n          width: 1,\r\n          height: 1,\r\n          padding: 0,\r\n          margin: -1,\r\n          overflow: \"hidden\",\r\n          clip: \"rect(0, 0, 0, 0)\",\r\n          whiteSpace: \"nowrap\",\r\n          wordWrap: \"normal\",\r\n          ...props.style\r\n        }\r\n      }\r\n    );\r\n  }\r\n);\r\nVisuallyHidden.displayName = NAME;\r\nvar Root = VisuallyHidden;\r\n\r\n//# sourceMappingURL=index.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdmlzdWFsbHktaGlkZGVuL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDK0I7QUFDdUI7QUFDZDtBQUN4QztBQUNBLHFCQUFxQiw2Q0FBZ0I7QUFDckM7QUFDQSwyQkFBMkIsc0RBQUc7QUFDOUIsTUFBTSxnRUFBUztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAcmFkaXgtdWlcXHJlYWN0LXZpc3VhbGx5LWhpZGRlblxcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3Zpc3VhbGx5LWhpZGRlbi9zcmMvVmlzdWFsbHlIaWRkZW4udHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXByaW1pdGl2ZVwiO1xyXG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcclxudmFyIE5BTUUgPSBcIlZpc3VhbGx5SGlkZGVuXCI7XHJcbnZhciBWaXN1YWxseUhpZGRlbiA9IFJlYWN0LmZvcndhcmRSZWYoXHJcbiAgKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcclxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFxyXG4gICAgICBQcmltaXRpdmUuc3BhbixcclxuICAgICAge1xyXG4gICAgICAgIC4uLnByb3BzLFxyXG4gICAgICAgIHJlZjogZm9yd2FyZGVkUmVmLFxyXG4gICAgICAgIHN0eWxlOiB7XHJcbiAgICAgICAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vc2Nzcy9taXhpbnMvX3Zpc3VhbGx5LWhpZGRlbi5zY3NzXHJcbiAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxyXG4gICAgICAgICAgYm9yZGVyOiAwLFxyXG4gICAgICAgICAgd2lkdGg6IDEsXHJcbiAgICAgICAgICBoZWlnaHQ6IDEsXHJcbiAgICAgICAgICBwYWRkaW5nOiAwLFxyXG4gICAgICAgICAgbWFyZ2luOiAtMSxcclxuICAgICAgICAgIG92ZXJmbG93OiBcImhpZGRlblwiLFxyXG4gICAgICAgICAgY2xpcDogXCJyZWN0KDAsIDAsIDAsIDApXCIsXHJcbiAgICAgICAgICB3aGl0ZVNwYWNlOiBcIm5vd3JhcFwiLFxyXG4gICAgICAgICAgd29yZFdyYXA6IFwibm9ybWFsXCIsXHJcbiAgICAgICAgICAuLi5wcm9wcy5zdHlsZVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9XHJcbik7XHJcblZpc3VhbGx5SGlkZGVuLmRpc3BsYXlOYW1lID0gTkFNRTtcclxudmFyIFJvb3QgPSBWaXN1YWxseUhpZGRlbjtcclxuZXhwb3J0IHtcclxuICBSb290LFxyXG4gIFZpc3VhbGx5SGlkZGVuXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n\r\nconst AuthAdminApi = _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthAdminApi);\r\n//# sourceMappingURL=AuthAdminApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9BdXRoQWRtaW5BcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEM7QUFDOUMscUJBQXFCLHVEQUFjO0FBQ25DLGlFQUFlLFlBQVksRUFBQztBQUM1QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxhdXRoLWpzXFxkaXN0XFxtb2R1bGVcXEF1dGhBZG1pbkFwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR29UcnVlQWRtaW5BcGkgZnJvbSAnLi9Hb1RydWVBZG1pbkFwaSc7XHJcbmNvbnN0IEF1dGhBZG1pbkFwaSA9IEdvVHJ1ZUFkbWluQXBpO1xyXG5leHBvcnQgZGVmYXVsdCBBdXRoQWRtaW5BcGk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhBZG1pbkFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthClient.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n\r\nconst AuthClient = _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthClient);\r\n//# sourceMappingURL=AuthClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9BdXRoQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQzFDLG1CQUFtQixxREFBWTtBQUMvQixpRUFBZSxVQUFVLEVBQUM7QUFDMUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxBdXRoQ2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHb1RydWVDbGllbnQgZnJvbSAnLi9Hb1RydWVDbGllbnQnO1xyXG5jb25zdCBBdXRoQ2xpZW50ID0gR29UcnVlQ2xpZW50O1xyXG5leHBvcnQgZGVmYXVsdCBBdXRoQ2xpZW50O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GoTrueAdminApi)\n/* harmony export */ });\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/types */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\nclass GoTrueAdminApi {\r\n    constructor({ url = '', headers = {}, fetch, }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\r\n        this.mfa = {\r\n            listFactors: this._listFactors.bind(this),\r\n            deleteFactor: this._deleteFactor.bind(this),\r\n        };\r\n    }\r\n    /**\r\n     * Removes a logged-in session.\r\n     * @param jwt A valid, logged-in JWT.\r\n     * @param scope The logout sope.\r\n     */\r\n    async signOut(jwt, scope = _lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES[0]) {\r\n        if (_lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\r\n            throw new Error(`@supabase/auth-js: Parameter scope must be one of ${_lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES.join(', ')}`);\r\n        }\r\n        try {\r\n            await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\r\n                headers: this.headers,\r\n                jwt,\r\n                noResolveJson: true,\r\n            });\r\n            return { data: null, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Sends an invite link to an email address.\r\n     * @param email The email address of the user.\r\n     * @param options Additional options to be included when inviting.\r\n     */\r\n    async inviteUserByEmail(email, options = {}) {\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/invite`, {\r\n                body: { email, data: options.data },\r\n                headers: this.headers,\r\n                redirectTo: options.redirectTo,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Generates email links and OTPs to be sent via a custom email provider.\r\n     * @param email The user's email.\r\n     * @param options.password User password. For signup only.\r\n     * @param options.data Optional user metadata. For signup only.\r\n     * @param options.redirectTo The redirect url which should be appended to the generated link\r\n     */\r\n    async generateLink(params) {\r\n        try {\r\n            const { options } = params, rest = __rest(params, [\"options\"]);\r\n            const body = Object.assign(Object.assign({}, rest), options);\r\n            if ('newEmail' in rest) {\r\n                // replace newEmail with new_email in request body\r\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\r\n                delete body['newEmail'];\r\n            }\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\r\n                body: body,\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._generateLinkResponse,\r\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return {\r\n                    data: {\r\n                        properties: null,\r\n                        user: null,\r\n                    },\r\n                    error,\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    // User Admin API\r\n    /**\r\n     * Creates a new user.\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async createUser(attributes) {\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\r\n                body: attributes,\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get a list of users.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\r\n     */\r\n    async listUsers(params) {\r\n        var _a, _b, _c, _d, _e, _f, _g;\r\n        try {\r\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\r\n            const response = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\r\n                headers: this.headers,\r\n                noResolveJson: true,\r\n                query: {\r\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\r\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._noResolveJsonResponse,\r\n            });\r\n            if (response.error)\r\n                throw response.error;\r\n            const users = await response.json();\r\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\r\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\r\n            if (links.length > 0) {\r\n                links.forEach((link) => {\r\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\r\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\r\n                    pagination[`${rel}Page`] = page;\r\n                });\r\n                pagination.total = parseInt(total);\r\n            }\r\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { users: [] }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get user by id.\r\n     *\r\n     * @param uid The user's unique identifier\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async getUserById(uid) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(uid);\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Updates the user data.\r\n     *\r\n     * @param attributes The data you want to update.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async updateUserById(uid, attributes) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(uid);\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\r\n                body: attributes,\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Delete a user. Requires a `service_role` key.\r\n     *\r\n     * @param id The user id you want to remove.\r\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\r\n     * Defaults to false for backward compatibility.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    async deleteUser(id, shouldSoftDelete = false) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(id);\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    should_soft_delete: shouldSoftDelete,\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _listFactors(params) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.userId);\r\n        try {\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\r\n                headers: this.headers,\r\n                xform: (factors) => {\r\n                    return { data: { factors }, error: null };\r\n                },\r\n            });\r\n            return { data, error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _deleteFactor(params) {\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.userId);\r\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.id);\r\n        try {\r\n            const data = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\r\n                headers: this.headers,\r\n            });\r\n            return { data, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=GoTrueAdminApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GoTrueClient)\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/local-storage */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\");\n/* harmony import */ var _lib_polyfills__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/polyfills */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\");\n/* harmony import */ var _lib_version__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/version */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/locks */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n/* harmony import */ var _lib_base64url__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/base64url */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(0,_lib_polyfills__WEBPACK_IMPORTED_MODULE_6__.polyfillGlobalThis)(); // Make \"globalThis\" available\r\nconst DEFAULT_OPTIONS = {\r\n    url: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.GOTRUE_URL,\r\n    storageKey: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.STORAGE_KEY,\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: true,\r\n    headers: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS,\r\n    flowType: 'implicit',\r\n    debug: false,\r\n    hasCustomAuthorizationHeader: false,\r\n};\r\nasync function lockNoOp(name, acquireTimeout, fn) {\r\n    return await fn();\r\n}\r\nclass GoTrueClient {\r\n    /**\r\n     * Create a new client for use in the browser.\r\n     */\r\n    constructor(options) {\r\n        var _a, _b;\r\n        this.memoryStorage = null;\r\n        this.stateChangeEmitters = new Map();\r\n        this.autoRefreshTicker = null;\r\n        this.visibilityChangedCallback = null;\r\n        this.refreshingDeferred = null;\r\n        /**\r\n         * Keeps track of the async client initialization.\r\n         * When null or not yet resolved the auth state is `unknown`\r\n         * Once resolved the the auth state is known and it's save to call any further client methods.\r\n         * Keep extra care to never reject or throw uncaught errors\r\n         */\r\n        this.initializePromise = null;\r\n        this.detectSessionInUrl = true;\r\n        this.hasCustomAuthorizationHeader = false;\r\n        this.suppressGetSessionWarning = false;\r\n        this.lockAcquired = false;\r\n        this.pendingInLock = [];\r\n        /**\r\n         * Used to broadcast state change events to other tabs listening.\r\n         */\r\n        this.broadcastChannel = null;\r\n        this.logger = console.log;\r\n        this.instanceID = GoTrueClient.nextInstanceID;\r\n        GoTrueClient.nextInstanceID += 1;\r\n        if (this.instanceID > 0 && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) {\r\n            console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\r\n        }\r\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\r\n        this.logDebugMessages = !!settings.debug;\r\n        if (typeof settings.debug === 'function') {\r\n            this.logger = settings.debug;\r\n        }\r\n        this.persistSession = settings.persistSession;\r\n        this.storageKey = settings.storageKey;\r\n        this.autoRefreshToken = settings.autoRefreshToken;\r\n        this.admin = new _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            url: settings.url,\r\n            headers: settings.headers,\r\n            fetch: settings.fetch,\r\n        });\r\n        this.url = settings.url;\r\n        this.headers = settings.headers;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.resolveFetch)(settings.fetch);\r\n        this.lock = settings.lock || lockNoOp;\r\n        this.detectSessionInUrl = settings.detectSessionInUrl;\r\n        this.flowType = settings.flowType;\r\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\r\n        if (settings.lock) {\r\n            this.lock = settings.lock;\r\n        }\r\n        else if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\r\n            this.lock = _lib_locks__WEBPACK_IMPORTED_MODULE_8__.navigatorLock;\r\n        }\r\n        else {\r\n            this.lock = lockNoOp;\r\n        }\r\n        this.jwks = { keys: [] };\r\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\r\n        this.mfa = {\r\n            verify: this._verify.bind(this),\r\n            enroll: this._enroll.bind(this),\r\n            unenroll: this._unenroll.bind(this),\r\n            challenge: this._challenge.bind(this),\r\n            listFactors: this._listFactors.bind(this),\r\n            challengeAndVerify: this._challengeAndVerify.bind(this),\r\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\r\n        };\r\n        if (this.persistSession) {\r\n            if (settings.storage) {\r\n                this.storage = settings.storage;\r\n            }\r\n            else {\r\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.supportsLocalStorage)()) {\r\n                    this.storage = _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.localStorageAdapter;\r\n                }\r\n                else {\r\n                    this.memoryStorage = {};\r\n                    this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.memoryStorage = {};\r\n            this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\r\n        }\r\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\r\n            try {\r\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\r\n            }\r\n            catch (e) {\r\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\r\n            }\r\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async (event) => {\r\n                this._debug('received broadcast notification from other tab or client', event);\r\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\r\n            });\r\n        }\r\n        this.initialize();\r\n    }\r\n    _debug(...args) {\r\n        if (this.logDebugMessages) {\r\n            this.logger(`GoTrueClient@${this.instanceID} (${_lib_version__WEBPACK_IMPORTED_MODULE_7__.version}) ${new Date().toISOString()}`, ...args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Initializes the client session either from the url or from storage.\r\n     * This method is automatically called when instantiating the client, but should also be called\r\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\r\n     */\r\n    async initialize() {\r\n        if (this.initializePromise) {\r\n            return await this.initializePromise;\r\n        }\r\n        this.initializePromise = (async () => {\r\n            return await this._acquireLock(-1, async () => {\r\n                return await this._initialize();\r\n            });\r\n        })();\r\n        return await this.initializePromise;\r\n    }\r\n    /**\r\n     * IMPORTANT:\r\n     * 1. Never throw in this method, as it is called from the constructor\r\n     * 2. Never return a session from this method as it would be cached over\r\n     *    the whole lifetime of the client\r\n     */\r\n    async _initialize() {\r\n        var _a;\r\n        try {\r\n            const params = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.parseParametersFromURL)(window.location.href);\r\n            let callbackUrlType = 'none';\r\n            if (this._isImplicitGrantCallback(params)) {\r\n                callbackUrlType = 'implicit';\r\n            }\r\n            else if (await this._isPKCECallback(params)) {\r\n                callbackUrlType = 'pkce';\r\n            }\r\n            /**\r\n             * Attempt to get the session from the URL only if these conditions are fulfilled\r\n             *\r\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\r\n             * then there could be an existing session so we don't want to prematurely remove it\r\n             */\r\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\r\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\r\n                if (error) {\r\n                    this._debug('#_initialize()', 'error detecting session from URL', error);\r\n                    if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthImplicitGrantRedirectError)(error)) {\r\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\r\n                        if (errorCode === 'identity_already_exists' ||\r\n                            errorCode === 'identity_not_found' ||\r\n                            errorCode === 'single_identity_not_deletable') {\r\n                            return { error };\r\n                        }\r\n                    }\r\n                    // failed login attempt via url,\r\n                    // remove old session as in verifyOtp, signUp and signInWith*\r\n                    await this._removeSession();\r\n                    return { error };\r\n                }\r\n                const { session, redirectType } = data;\r\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\r\n                await this._saveSession(session);\r\n                setTimeout(async () => {\r\n                    if (redirectType === 'recovery') {\r\n                        await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\r\n                    }\r\n                    else {\r\n                        await this._notifyAllSubscribers('SIGNED_IN', session);\r\n                    }\r\n                }, 0);\r\n                return { error: null };\r\n            }\r\n            // no login attempt via callback url try to recover session from storage\r\n            await this._recoverAndRefresh();\r\n            return { error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { error };\r\n            }\r\n            return {\r\n                error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError('Unexpected error during initialization', error),\r\n            };\r\n        }\r\n        finally {\r\n            await this._handleVisibilityChange();\r\n            this._debug('#_initialize()', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new anonymous user.\r\n     *\r\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\r\n     */\r\n    async signInAnonymously(credentials) {\r\n        var _a, _b, _c;\r\n        try {\r\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\r\n                    gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken },\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            const { data, error } = res;\r\n            if (error || !data) {\r\n                return { data: { user: null, session: null }, error: error };\r\n            }\r\n            const session = data.session;\r\n            const user = data.user;\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', session);\r\n            }\r\n            return { data: { user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new user.\r\n     *\r\n     * Be aware that if a user account exists in the system you may get back an\r\n     * error message that attempts to hide this information from the user.\r\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\r\n     *\r\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\r\n     * @returns A user if the server has \"autoconfirm\" OFF\r\n     */\r\n    async signUp(credentials) {\r\n        var _a, _b, _c;\r\n        try {\r\n            let res;\r\n            if ('email' in credentials) {\r\n                const { email, password, options } = credentials;\r\n                let codeChallenge = null;\r\n                let codeChallengeMethod = null;\r\n                if (this.flowType === 'pkce') {\r\n                    ;\r\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n                }\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                    headers: this.headers,\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                    body: {\r\n                        email,\r\n                        password,\r\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        code_challenge: codeChallenge,\r\n                        code_challenge_method: codeChallengeMethod,\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n            }\r\n            else if ('phone' in credentials) {\r\n                const { phone, password, options } = credentials;\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        password,\r\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\r\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n            }\r\n            else {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\r\n            }\r\n            const { data, error } = res;\r\n            if (error || !data) {\r\n                return { data: { user: null, session: null }, error: error };\r\n            }\r\n            const session = data.session;\r\n            const user = data.user;\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', session);\r\n            }\r\n            return { data: { user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in an existing user with an email and password or phone and password.\r\n     *\r\n     * Be aware that you may get back an error message that will not distinguish\r\n     * between the cases where the account does not exist or that the\r\n     * email/phone and password combination is wrong or that the account can only\r\n     * be accessed via social login.\r\n     */\r\n    async signInWithPassword(credentials) {\r\n        try {\r\n            let res;\r\n            if ('email' in credentials) {\r\n                const { email, password, options } = credentials;\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        email,\r\n                        password,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword,\r\n                });\r\n            }\r\n            else if ('phone' in credentials) {\r\n                const { phone, password, options } = credentials;\r\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        password,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword,\r\n                });\r\n            }\r\n            else {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\r\n            }\r\n            const { data, error } = res;\r\n            if (error) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            else if (!data || !data.session || !data.user) {\r\n                return { data: { user: null, session: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError() };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return {\r\n                data: Object.assign({ user: data.user, session: data.session }, (data.weak_password ? { weakPassword: data.weak_password } : null)),\r\n                error,\r\n            };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in an existing user via a third-party provider.\r\n     * This method supports the PKCE flow.\r\n     */\r\n    async signInWithOAuth(credentials) {\r\n        var _a, _b, _c, _d;\r\n        return await this._handleProviderSignIn(credentials.provider, {\r\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\r\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\r\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\r\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\r\n        });\r\n    }\r\n    /**\r\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\r\n     */\r\n    async exchangeCodeForSession(authCode) {\r\n        await this.initializePromise;\r\n        return this._acquireLock(-1, async () => {\r\n            return this._exchangeCodeForSession(authCode);\r\n        });\r\n    }\r\n    /**\r\n     * Signs in a user by verifying a message signed by the user's private key.\r\n     * Only Solana supported at this time, using the Sign in with Solana standard.\r\n     */\r\n    async signInWithWeb3(credentials) {\r\n        const { chain } = credentials;\r\n        if (chain === 'solana') {\r\n            return await this.signInWithSolana(credentials);\r\n        }\r\n        throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\r\n    }\r\n    async signInWithSolana(credentials) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n        let message;\r\n        let signature;\r\n        if ('message' in credentials) {\r\n            message = credentials.message;\r\n            signature = credentials.signature;\r\n        }\r\n        else {\r\n            const { chain, wallet, statement, options } = credentials;\r\n            let resolvedWallet;\r\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) {\r\n                if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\r\n                    throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\r\n                }\r\n                resolvedWallet = wallet;\r\n            }\r\n            else if (typeof wallet === 'object') {\r\n                resolvedWallet = wallet;\r\n            }\r\n            else {\r\n                const windowAny = window;\r\n                if ('solana' in windowAny &&\r\n                    typeof windowAny.solana === 'object' &&\r\n                    (('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function') ||\r\n                        ('signMessage' in windowAny.solana &&\r\n                            typeof windowAny.solana.signMessage === 'function'))) {\r\n                    resolvedWallet = windowAny.solana;\r\n                }\r\n                else {\r\n                    throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\r\n                }\r\n            }\r\n            const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\r\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\r\n                const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({ issuedAt: new Date().toISOString() }, options === null || options === void 0 ? void 0 : options.signInWithSolana), { \r\n                    // non-overridable properties\r\n                    version: '1', domain: url.host, uri: url.href }), (statement ? { statement } : null)));\r\n                let outputToProcess;\r\n                if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\r\n                    outputToProcess = output[0];\r\n                }\r\n                else if (output &&\r\n                    typeof output === 'object' &&\r\n                    'signedMessage' in output &&\r\n                    'signature' in output) {\r\n                    outputToProcess = output;\r\n                }\r\n                else {\r\n                    throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\r\n                }\r\n                if ('signedMessage' in outputToProcess &&\r\n                    'signature' in outputToProcess &&\r\n                    (typeof outputToProcess.signedMessage === 'string' ||\r\n                        outputToProcess.signedMessage instanceof Uint8Array) &&\r\n                    outputToProcess.signature instanceof Uint8Array) {\r\n                    message =\r\n                        typeof outputToProcess.signedMessage === 'string'\r\n                            ? outputToProcess.signedMessage\r\n                            : new TextDecoder().decode(outputToProcess.signedMessage);\r\n                    signature = outputToProcess.signature;\r\n                }\r\n                else {\r\n                    throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\r\n                }\r\n            }\r\n            else {\r\n                if (!('signMessage' in resolvedWallet) ||\r\n                    typeof resolvedWallet.signMessage !== 'function' ||\r\n                    !('publicKey' in resolvedWallet) ||\r\n                    typeof resolvedWallet !== 'object' ||\r\n                    !resolvedWallet.publicKey ||\r\n                    !('toBase58' in resolvedWallet.publicKey) ||\r\n                    typeof resolvedWallet.publicKey.toBase58 !== 'function') {\r\n                    throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\r\n                }\r\n                message = [\r\n                    `${url.host} wants you to sign in with your Solana account:`,\r\n                    resolvedWallet.publicKey.toBase58(),\r\n                    ...(statement ? ['', statement, ''] : ['']),\r\n                    'Version: 1',\r\n                    `URI: ${url.href}`,\r\n                    `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`,\r\n                    ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore)\r\n                        ? [`Not Before: ${options.signInWithSolana.notBefore}`]\r\n                        : []),\r\n                    ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime)\r\n                        ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`]\r\n                        : []),\r\n                    ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId)\r\n                        ? [`Chain ID: ${options.signInWithSolana.chainId}`]\r\n                        : []),\r\n                    ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []),\r\n                    ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId)\r\n                        ? [`Request ID: ${options.signInWithSolana.requestId}`]\r\n                        : []),\r\n                    ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length)\r\n                        ? [\r\n                            'Resources',\r\n                            ...options.signInWithSolana.resources.map((resource) => `- ${resource}`),\r\n                        ]\r\n                        : []),\r\n                ].join('\\n');\r\n                const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\r\n                if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\r\n                    throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\r\n                }\r\n                signature = maybeSignature;\r\n            }\r\n        }\r\n        try {\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\r\n                headers: this.headers,\r\n                body: Object.assign({ chain: 'solana', message, signature: (0,_lib_base64url__WEBPACK_IMPORTED_MODULE_9__.bytesToBase64URL)(signature) }, (((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken)\r\n                    ? { gotrue_meta_security: { captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken } }\r\n                    : null)),\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            if (!data || !data.session || !data.user) {\r\n                return {\r\n                    data: { user: null, session: null },\r\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\r\n                };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return { data: Object.assign({}, data), error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _exchangeCodeForSession(authCode) {\r\n        const storageItem = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\r\n        try {\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    auth_code: authCode,\r\n                    code_verifier: codeVerifier,\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            if (!data || !data.session || !data.user) {\r\n                return {\r\n                    data: { user: null, session: null, redirectType: null },\r\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\r\n                };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null, redirectType: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Allows signing in with an OIDC ID token. The authentication provider used\r\n     * should be enabled and configured.\r\n     */\r\n    async signInWithIdToken(credentials) {\r\n        try {\r\n            const { options, provider, token, access_token, nonce } = credentials;\r\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    provider,\r\n                    id_token: token,\r\n                    access_token,\r\n                    nonce,\r\n                    gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            const { data, error } = res;\r\n            if (error) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            else if (!data || !data.session || !data.user) {\r\n                return {\r\n                    data: { user: null, session: null },\r\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\r\n                };\r\n            }\r\n            if (data.session) {\r\n                await this._saveSession(data.session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return { data, error };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in a user using magiclink or a one-time password (OTP).\r\n     *\r\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\r\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\r\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\r\n     *\r\n     * Be aware that you may get back an error message that will not distinguish\r\n     * between the cases where the account does not exist or, that the account\r\n     * can only be accessed via social login.\r\n     *\r\n     * Do note that you will need to configure a Whatsapp sender on Twilio\r\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\r\n     * channel is not supported on other providers\r\n     * at this time.\r\n     * This method supports PKCE when an email is passed.\r\n     */\r\n    async signInWithOtp(credentials) {\r\n        var _a, _b, _c, _d, _e;\r\n        try {\r\n            if ('email' in credentials) {\r\n                const { email, options } = credentials;\r\n                let codeChallenge = null;\r\n                let codeChallengeMethod = null;\r\n                if (this.flowType === 'pkce') {\r\n                    ;\r\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n                }\r\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        email,\r\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\r\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        code_challenge: codeChallenge,\r\n                        code_challenge_method: codeChallengeMethod,\r\n                    },\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                });\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            if ('phone' in credentials) {\r\n                const { phone, options } = credentials;\r\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\r\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\r\n                    },\r\n                });\r\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\r\n            }\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number.');\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\r\n     */\r\n    async verifyOtp(params) {\r\n        var _a, _b;\r\n        try {\r\n            let redirectTo = undefined;\r\n            let captchaToken = undefined;\r\n            if ('options' in params) {\r\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\r\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\r\n            }\r\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/verify`, {\r\n                headers: this.headers,\r\n                body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),\r\n                redirectTo,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            if (!data) {\r\n                throw new Error('An error occurred on token verification.');\r\n            }\r\n            const session = data.session;\r\n            const user = data.user;\r\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\r\n                await this._saveSession(session);\r\n                await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\r\n            }\r\n            return { data: { user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Attempts a single-sign on using an enterprise Identity Provider. A\r\n     * successful SSO attempt will redirect the current page to the identity\r\n     * provider authorization page. The redirect URL is implementation and SSO\r\n     * protocol specific.\r\n     *\r\n     * You can use it by providing a SSO domain. Typically you can extract this\r\n     * domain by asking users for their email address. If this domain is\r\n     * registered on the Auth instance the redirect will use that organization's\r\n     * currently active SSO Identity Provider for the login.\r\n     *\r\n     * If you have built an organization-specific login page, you can use the\r\n     * organization's SSO Identity Provider UUID directly instead.\r\n     */\r\n    async signInWithSSO(params) {\r\n        var _a, _b, _c;\r\n        try {\r\n            let codeChallenge = null;\r\n            let codeChallengeMethod = null;\r\n            if (this.flowType === 'pkce') {\r\n                ;\r\n                [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n            }\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/sso`, {\r\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\r\n                    ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\r\n                    : null)), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\r\n                headers: this.headers,\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._ssoResponse,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Sends a reauthentication OTP to the user's email or phone number.\r\n     * Requires the user to be signed-in.\r\n     */\r\n    async reauthenticate() {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._reauthenticate();\r\n        });\r\n    }\r\n    async _reauthenticate() {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                const { data: { session }, error: sessionError, } = result;\r\n                if (sessionError)\r\n                    throw sessionError;\r\n                if (!session)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\r\n                    headers: this.headers,\r\n                    jwt: session.access_token,\r\n                });\r\n                return { data: { user: null, session: null }, error };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\r\n     */\r\n    async resend(credentials) {\r\n        try {\r\n            const endpoint = `${this.url}/resend`;\r\n            if ('email' in credentials) {\r\n                const { email, type, options } = credentials;\r\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        email,\r\n                        type,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                });\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            else if ('phone' in credentials) {\r\n                const { phone, type, options } = credentials;\r\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        phone,\r\n                        type,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                });\r\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\r\n            }\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the session, refreshing it if necessary.\r\n     *\r\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\r\n     *\r\n     * **IMPORTANT:** This method loads values directly from the storage attached\r\n     * to the client. If that storage is based on request cookies for example,\r\n     * the values in it may not be authentic and therefore it's strongly advised\r\n     * against using this method and its results in such circumstances. A warning\r\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\r\n     */\r\n    async getSession() {\r\n        await this.initializePromise;\r\n        const result = await this._acquireLock(-1, async () => {\r\n            return this._useSession(async (result) => {\r\n                return result;\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Acquires a global lock based on the storage key.\r\n     */\r\n    async _acquireLock(acquireTimeout, fn) {\r\n        this._debug('#_acquireLock', 'begin', acquireTimeout);\r\n        try {\r\n            if (this.lockAcquired) {\r\n                const last = this.pendingInLock.length\r\n                    ? this.pendingInLock[this.pendingInLock.length - 1]\r\n                    : Promise.resolve();\r\n                const result = (async () => {\r\n                    await last;\r\n                    return await fn();\r\n                })();\r\n                this.pendingInLock.push((async () => {\r\n                    try {\r\n                        await result;\r\n                    }\r\n                    catch (e) {\r\n                        // we just care if it finished\r\n                    }\r\n                })());\r\n                return result;\r\n            }\r\n            return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\r\n                this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\r\n                try {\r\n                    this.lockAcquired = true;\r\n                    const result = fn();\r\n                    this.pendingInLock.push((async () => {\r\n                        try {\r\n                            await result;\r\n                        }\r\n                        catch (e) {\r\n                            // we just care if it finished\r\n                        }\r\n                    })());\r\n                    await result;\r\n                    // keep draining the queue until there's nothing to wait on\r\n                    while (this.pendingInLock.length) {\r\n                        const waitOn = [...this.pendingInLock];\r\n                        await Promise.all(waitOn);\r\n                        this.pendingInLock.splice(0, waitOn.length);\r\n                    }\r\n                    return await result;\r\n                }\r\n                finally {\r\n                    this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\r\n                    this.lockAcquired = false;\r\n                }\r\n            });\r\n        }\r\n        finally {\r\n            this._debug('#_acquireLock', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * Use instead of {@link #getSession} inside the library. It is\r\n     * semantically usually what you want, as getting a session involves some\r\n     * processing afterwards that requires only one client operating on the\r\n     * session at once across multiple tabs or processes.\r\n     */\r\n    async _useSession(fn) {\r\n        this._debug('#_useSession', 'begin');\r\n        try {\r\n            // the use of __loadSession here is the only correct use of the function!\r\n            const result = await this.__loadSession();\r\n            return await fn(result);\r\n        }\r\n        finally {\r\n            this._debug('#_useSession', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * NEVER USE DIRECTLY!\r\n     *\r\n     * Always use {@link #_useSession}.\r\n     */\r\n    async __loadSession() {\r\n        this._debug('#__loadSession()', 'begin');\r\n        if (!this.lockAcquired) {\r\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\r\n        }\r\n        try {\r\n            let currentSession = null;\r\n            const maybeSession = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\r\n            this._debug('#getSession()', 'session from storage', maybeSession);\r\n            if (maybeSession !== null) {\r\n                if (this._isValidSession(maybeSession)) {\r\n                    currentSession = maybeSession;\r\n                }\r\n                else {\r\n                    this._debug('#getSession()', 'session from storage is not valid');\r\n                    await this._removeSession();\r\n                }\r\n            }\r\n            if (!currentSession) {\r\n                return { data: { session: null }, error: null };\r\n            }\r\n            // A session is considered expired before the access token _actually_\r\n            // expires. When the autoRefreshToken option is off (or when the tab is\r\n            // in the background), very eager users of getSession() -- like\r\n            // realtime-js -- might send a valid JWT which will expire by the time it\r\n            // reaches the server.\r\n            const hasExpired = currentSession.expires_at\r\n                ? currentSession.expires_at * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS\r\n                : false;\r\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\r\n            if (!hasExpired) {\r\n                if (this.storage.isServer) {\r\n                    let suppressWarning = this.suppressGetSessionWarning;\r\n                    const proxySession = new Proxy(currentSession, {\r\n                        get: (target, prop, receiver) => {\r\n                            if (!suppressWarning && prop === 'user') {\r\n                                // only show warning when the user object is being accessed from the server\r\n                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\r\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\r\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\r\n                            }\r\n                            return Reflect.get(target, prop, receiver);\r\n                        },\r\n                    });\r\n                    currentSession = proxySession;\r\n                }\r\n                return { data: { session: currentSession }, error: null };\r\n            }\r\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\r\n            if (error) {\r\n                return { data: { session: null }, error };\r\n            }\r\n            return { data: { session }, error: null };\r\n        }\r\n        finally {\r\n            this._debug('#__loadSession()', 'end');\r\n        }\r\n    }\r\n    /**\r\n     * Gets the current user details if there is an existing session. This method\r\n     * performs a network request to the Supabase Auth server, so the returned\r\n     * value is authentic and can be used to base authorization rules on.\r\n     *\r\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\r\n     */\r\n    async getUser(jwt) {\r\n        if (jwt) {\r\n            return await this._getUser(jwt);\r\n        }\r\n        await this.initializePromise;\r\n        const result = await this._acquireLock(-1, async () => {\r\n            return await this._getUser();\r\n        });\r\n        return result;\r\n    }\r\n    async _getUser(jwt) {\r\n        try {\r\n            if (jwt) {\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    jwt: jwt,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n            }\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b, _c;\r\n                const { data, error } = result;\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                // returns an error if there is no access_token or custom authorization header\r\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\r\n                    return { data: { user: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError() };\r\n                }\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthSessionMissingError)(error)) {\r\n                    // JWT contains a `session_id` which does not correspond to an active\r\n                    // session in the database, indicating the user is signed out.\r\n                    await this._removeSession();\r\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n                }\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Updates user data for a logged in user.\r\n     */\r\n    async updateUser(attributes, options = {}) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._updateUser(attributes, options);\r\n        });\r\n    }\r\n    async _updateUser(attributes, options = {}) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                const { data: sessionData, error: sessionError } = result;\r\n                if (sessionError) {\r\n                    throw sessionError;\r\n                }\r\n                if (!sessionData.session) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const session = sessionData.session;\r\n                let codeChallenge = null;\r\n                let codeChallengeMethod = null;\r\n                if (this.flowType === 'pkce' && attributes.email != null) {\r\n                    ;\r\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n                }\r\n                const { data, error: userError } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'PUT', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                    body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\r\n                    jwt: session.access_token,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n                if (userError)\r\n                    throw userError;\r\n                session.user = data.user;\r\n                await this._saveSession(session);\r\n                await this._notifyAllSubscribers('USER_UPDATED', session);\r\n                return { data: { user: session.user }, error: null };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\r\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\r\n     * @param currentSession The current session that minimally contains an access token and refresh token.\r\n     */\r\n    async setSession(currentSession) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._setSession(currentSession);\r\n        });\r\n    }\r\n    async _setSession(currentSession) {\r\n        try {\r\n            if (!currentSession.access_token || !currentSession.refresh_token) {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n            }\r\n            const timeNow = Date.now() / 1000;\r\n            let expiresAt = timeNow;\r\n            let hasExpired = true;\r\n            let session = null;\r\n            const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(currentSession.access_token);\r\n            if (payload.exp) {\r\n                expiresAt = payload.exp;\r\n                hasExpired = expiresAt <= timeNow;\r\n            }\r\n            if (hasExpired) {\r\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\r\n                if (error) {\r\n                    return { data: { user: null, session: null }, error: error };\r\n                }\r\n                if (!refreshedSession) {\r\n                    return { data: { user: null, session: null }, error: null };\r\n                }\r\n                session = refreshedSession;\r\n            }\r\n            else {\r\n                const { data, error } = await this._getUser(currentSession.access_token);\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                session = {\r\n                    access_token: currentSession.access_token,\r\n                    refresh_token: currentSession.refresh_token,\r\n                    user: data.user,\r\n                    token_type: 'bearer',\r\n                    expires_in: expiresAt - timeNow,\r\n                    expires_at: expiresAt,\r\n                };\r\n                await this._saveSession(session);\r\n                await this._notifyAllSubscribers('SIGNED_IN', session);\r\n            }\r\n            return { data: { user: session.user, session }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { session: null, user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new session, regardless of expiry status.\r\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\r\n     * If the current session's refresh token is invalid, an error will be thrown.\r\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\r\n     */\r\n    async refreshSession(currentSession) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._refreshSession(currentSession);\r\n        });\r\n    }\r\n    async _refreshSession(currentSession) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a;\r\n                if (!currentSession) {\r\n                    const { data, error } = result;\r\n                    if (error) {\r\n                        throw error;\r\n                    }\r\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\r\n                }\r\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\r\n                if (error) {\r\n                    return { data: { user: null, session: null }, error: error };\r\n                }\r\n                if (!session) {\r\n                    return { data: { user: null, session: null }, error: null };\r\n                }\r\n                return { data: { user: session.user, session }, error: null };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the session data from a URL string\r\n     */\r\n    async _getSessionFromURL(params, callbackUrlType) {\r\n        try {\r\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)())\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No browser detected.');\r\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\r\n            if (params.error || params.error_description || params.error_code) {\r\n                // The error class returned implies that the redirect is from an implicit grant flow\r\n                // but it could also be from a redirect error from a PKCE flow.\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\r\n                    error: params.error || 'unspecified_error',\r\n                    code: params.error_code || 'unspecified_code',\r\n                });\r\n            }\r\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\r\n            switch (callbackUrlType) {\r\n                case 'implicit':\r\n                    if (this.flowType === 'pkce') {\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\r\n                    }\r\n                    break;\r\n                case 'pkce':\r\n                    if (this.flowType === 'implicit') {\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\r\n                    }\r\n                    break;\r\n                default:\r\n                // there's no mismatch so we continue\r\n            }\r\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\r\n            if (callbackUrlType === 'pkce') {\r\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\r\n                if (!params.code)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('No code detected.');\r\n                const { data, error } = await this._exchangeCodeForSession(params.code);\r\n                if (error)\r\n                    throw error;\r\n                const url = new URL(window.location.href);\r\n                url.searchParams.delete('code');\r\n                window.history.replaceState(window.history.state, '', url.toString());\r\n                return { data: { session: data.session, redirectType: null }, error: null };\r\n            }\r\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, } = params;\r\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No session defined in URL');\r\n            }\r\n            const timeNow = Math.round(Date.now() / 1000);\r\n            const expiresIn = parseInt(expires_in);\r\n            let expiresAt = timeNow + expiresIn;\r\n            if (expires_at) {\r\n                expiresAt = parseInt(expires_at);\r\n            }\r\n            const actuallyExpiresIn = expiresAt - timeNow;\r\n            if (actuallyExpiresIn * 1000 <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS) {\r\n                console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\r\n            }\r\n            const issuedAt = expiresAt - expiresIn;\r\n            if (timeNow - issuedAt >= 120) {\r\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\r\n            }\r\n            else if (timeNow - issuedAt < 0) {\r\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\r\n            }\r\n            const { data, error } = await this._getUser(access_token);\r\n            if (error)\r\n                throw error;\r\n            const session = {\r\n                provider_token,\r\n                provider_refresh_token,\r\n                access_token,\r\n                expires_in: expiresIn,\r\n                expires_at: expiresAt,\r\n                refresh_token,\r\n                token_type,\r\n                user: data.user,\r\n            };\r\n            // Remove tokens from URL\r\n            window.location.hash = '';\r\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\r\n            return { data: { session, redirectType: params.type }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { session: null, redirectType: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\r\n     */\r\n    _isImplicitGrantCallback(params) {\r\n        return Boolean(params.access_token || params.error_description);\r\n    }\r\n    /**\r\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\r\n     */\r\n    async _isPKCECallback(params) {\r\n        const currentStorageContent = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n        return !!(params.code && currentStorageContent);\r\n    }\r\n    /**\r\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\r\n     *\r\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\r\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\r\n     *\r\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\r\n     */\r\n    async signOut(options = { scope: 'global' }) {\r\n        await this.initializePromise;\r\n        return await this._acquireLock(-1, async () => {\r\n            return await this._signOut(options);\r\n        });\r\n    }\r\n    async _signOut({ scope } = { scope: 'global' }) {\r\n        return await this._useSession(async (result) => {\r\n            var _a;\r\n            const { data, error: sessionError } = result;\r\n            if (sessionError) {\r\n                return { error: sessionError };\r\n            }\r\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\r\n            if (accessToken) {\r\n                const { error } = await this.admin.signOut(accessToken, scope);\r\n                if (error) {\r\n                    // ignore 404s since user might not exist anymore\r\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\r\n                    if (!((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthApiError)(error) &&\r\n                        (error.status === 404 || error.status === 401 || error.status === 403))) {\r\n                        return { error };\r\n                    }\r\n                }\r\n            }\r\n            if (scope !== 'others') {\r\n                await this._removeSession();\r\n                await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            }\r\n            return { error: null };\r\n        });\r\n    }\r\n    /**\r\n     * Receive a notification every time an auth event happens.\r\n     * @param callback A callback function to be invoked when an auth event happens.\r\n     */\r\n    onAuthStateChange(callback) {\r\n        const id = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.uuid)();\r\n        const subscription = {\r\n            id,\r\n            callback,\r\n            unsubscribe: () => {\r\n                this._debug('#unsubscribe()', 'state change callback with id removed', id);\r\n                this.stateChangeEmitters.delete(id);\r\n            },\r\n        };\r\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\r\n        this.stateChangeEmitters.set(id, subscription);\r\n        (async () => {\r\n            await this.initializePromise;\r\n            await this._acquireLock(-1, async () => {\r\n                this._emitInitialSession(id);\r\n            });\r\n        })();\r\n        return { data: { subscription } };\r\n    }\r\n    async _emitInitialSession(id) {\r\n        return await this._useSession(async (result) => {\r\n            var _a, _b;\r\n            try {\r\n                const { data: { session }, error, } = result;\r\n                if (error)\r\n                    throw error;\r\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\r\n                this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\r\n            }\r\n            catch (err) {\r\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\r\n                this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\r\n                console.error(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\r\n     *\r\n     * @param email The email address of the user.\r\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\r\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\r\n     */\r\n    async resetPasswordForEmail(email, options = {}) {\r\n        let codeChallenge = null;\r\n        let codeChallengeMethod = null;\r\n        if (this.flowType === 'pkce') {\r\n            ;\r\n            [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\r\n            );\r\n        }\r\n        try {\r\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/recover`, {\r\n                body: {\r\n                    email,\r\n                    code_challenge: codeChallenge,\r\n                    code_challenge_method: codeChallengeMethod,\r\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\r\n                },\r\n                headers: this.headers,\r\n                redirectTo: options.redirectTo,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Gets all the identities linked to a user.\r\n     */\r\n    async getUserIdentities() {\r\n        var _a;\r\n        try {\r\n            const { data, error } = await this.getUser();\r\n            if (error)\r\n                throw error;\r\n            return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Links an oauth identity to an existing user.\r\n     * This method supports the PKCE flow.\r\n     */\r\n    async linkIdentity(credentials) {\r\n        var _a;\r\n        try {\r\n            const { data, error } = await this._useSession(async (result) => {\r\n                var _a, _b, _c, _d, _e;\r\n                const { data, error } = result;\r\n                if (error)\r\n                    throw error;\r\n                const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\r\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\r\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\r\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\r\n                    skipBrowserRedirect: true,\r\n                });\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', url, {\r\n                    headers: this.headers,\r\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined,\r\n                });\r\n            });\r\n            if (error)\r\n                throw error;\r\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\r\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\r\n            }\r\n            return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { provider: credentials.provider, url: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\r\n     */\r\n    async unlinkIdentity(identity) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b;\r\n                const { data, error } = result;\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\r\n                    headers: this.headers,\r\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\r\n                });\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Generates a new JWT.\r\n     * @param refreshToken A valid refresh token that was returned on login.\r\n     */\r\n    async _refreshAccessToken(refreshToken) {\r\n        const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\r\n        this._debug(debugName, 'begin');\r\n        try {\r\n            const startedAt = Date.now();\r\n            // will attempt to refresh the token with exponential backoff\r\n            return await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.retryable)(async (attempt) => {\r\n                if (attempt > 0) {\r\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\r\n                }\r\n                this._debug(debugName, 'refreshing attempt', attempt);\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\r\n                    body: { refresh_token: refreshToken },\r\n                    headers: this.headers,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n            }, (attempt, error) => {\r\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\r\n                return (error &&\r\n                    (0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error) &&\r\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\r\n                    Date.now() + nextBackOffInterval - startedAt < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\r\n            });\r\n        }\r\n        catch (error) {\r\n            this._debug(debugName, 'error', error);\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: { session: null, user: null }, error };\r\n            }\r\n            throw error;\r\n        }\r\n        finally {\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    _isValidSession(maybeSession) {\r\n        const isValidSession = typeof maybeSession === 'object' &&\r\n            maybeSession !== null &&\r\n            'access_token' in maybeSession &&\r\n            'refresh_token' in maybeSession &&\r\n            'expires_at' in maybeSession;\r\n        return isValidSession;\r\n    }\r\n    async _handleProviderSignIn(provider, options) {\r\n        const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\r\n            redirectTo: options.redirectTo,\r\n            scopes: options.scopes,\r\n            queryParams: options.queryParams,\r\n        });\r\n        this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\r\n        // try to open on the browser\r\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !options.skipBrowserRedirect) {\r\n            window.location.assign(url);\r\n        }\r\n        return { data: { provider, url }, error: null };\r\n    }\r\n    /**\r\n     * Recovers the session from LocalStorage and refreshes the token\r\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\r\n     */\r\n    async _recoverAndRefresh() {\r\n        var _a;\r\n        const debugName = '#_recoverAndRefresh()';\r\n        this._debug(debugName, 'begin');\r\n        try {\r\n            const currentSession = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\r\n            this._debug(debugName, 'session from storage', currentSession);\r\n            if (!this._isValidSession(currentSession)) {\r\n                this._debug(debugName, 'session is not valid');\r\n                if (currentSession !== null) {\r\n                    await this._removeSession();\r\n                }\r\n                return;\r\n            }\r\n            const expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS;\r\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS}s`);\r\n            if (expiresWithMargin) {\r\n                if (this.autoRefreshToken && currentSession.refresh_token) {\r\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\r\n                    if (error) {\r\n                        console.error(error);\r\n                        if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\r\n                            this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\r\n                            await this._removeSession();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no need to persist currentSession again, as we just loaded it from\r\n                // local storage; persisting it again may overwrite a value saved by\r\n                // another client with access to the same local storage\r\n                await this._notifyAllSubscribers('SIGNED_IN', currentSession);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this._debug(debugName, 'error', err);\r\n            console.error(err);\r\n            return;\r\n        }\r\n        finally {\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    async _callRefreshToken(refreshToken) {\r\n        var _a, _b;\r\n        if (!refreshToken) {\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n        }\r\n        // refreshing is already in progress\r\n        if (this.refreshingDeferred) {\r\n            return this.refreshingDeferred.promise;\r\n        }\r\n        const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\r\n        this._debug(debugName, 'begin');\r\n        try {\r\n            this.refreshingDeferred = new _lib_helpers__WEBPACK_IMPORTED_MODULE_4__.Deferred();\r\n            const { data, error } = await this._refreshAccessToken(refreshToken);\r\n            if (error)\r\n                throw error;\r\n            if (!data.session)\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n            await this._saveSession(data.session);\r\n            await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\r\n            const result = { session: data.session, error: null };\r\n            this.refreshingDeferred.resolve(result);\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            this._debug(debugName, 'error', error);\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                const result = { session: null, error };\r\n                if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\r\n                    await this._removeSession();\r\n                }\r\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\r\n                return result;\r\n            }\r\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\r\n            throw error;\r\n        }\r\n        finally {\r\n            this.refreshingDeferred = null;\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    async _notifyAllSubscribers(event, session, broadcast = true) {\r\n        const debugName = `#_notifyAllSubscribers(${event})`;\r\n        this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\r\n        try {\r\n            if (this.broadcastChannel && broadcast) {\r\n                this.broadcastChannel.postMessage({ event, session });\r\n            }\r\n            const errors = [];\r\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\r\n                try {\r\n                    await x.callback(event, session);\r\n                }\r\n                catch (e) {\r\n                    errors.push(e);\r\n                }\r\n            });\r\n            await Promise.all(promises);\r\n            if (errors.length > 0) {\r\n                for (let i = 0; i < errors.length; i += 1) {\r\n                    console.error(errors[i]);\r\n                }\r\n                throw errors[0];\r\n            }\r\n        }\r\n        finally {\r\n            this._debug(debugName, 'end');\r\n        }\r\n    }\r\n    /**\r\n     * set currentSession and currentUser\r\n     * process to _startAutoRefreshToken if possible\r\n     */\r\n    async _saveSession(session) {\r\n        this._debug('#_saveSession()', session);\r\n        // _saveSession is always called whenever a new session has been acquired\r\n        // so we can safely suppress the warning returned by future getSession calls\r\n        this.suppressGetSessionWarning = true;\r\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, this.storageKey, session);\r\n    }\r\n    async _removeSession() {\r\n        this._debug('#_removeSession()');\r\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey);\r\n        await this._notifyAllSubscribers('SIGNED_OUT', null);\r\n    }\r\n    /**\r\n     * Removes any registered visibilitychange callback.\r\n     *\r\n     * {@see #startAutoRefresh}\r\n     * {@see #stopAutoRefresh}\r\n     */\r\n    _removeVisibilityChangedCallback() {\r\n        this._debug('#_removeVisibilityChangedCallback()');\r\n        const callback = this.visibilityChangedCallback;\r\n        this.visibilityChangedCallback = null;\r\n        try {\r\n            if (callback && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\r\n                window.removeEventListener('visibilitychange', callback);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error('removing visibilitychange callback failed', e);\r\n        }\r\n    }\r\n    /**\r\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\r\n     * within the library.\r\n     */\r\n    async _startAutoRefresh() {\r\n        await this._stopAutoRefresh();\r\n        this._debug('#_startAutoRefresh()');\r\n        const ticker = setInterval(() => this._autoRefreshTokenTick(), _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\r\n        this.autoRefreshTicker = ticker;\r\n        if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\r\n            // ticker is a NodeJS Timeout object that has an `unref` method\r\n            // https://nodejs.org/api/timers.html#timeoutunref\r\n            // When auto refresh is used in NodeJS (like for testing) the\r\n            // `setInterval` is preventing the process from being marked as\r\n            // finished and tests run endlessly. This can be prevented by calling\r\n            // `unref()` on the returned object.\r\n            ticker.unref();\r\n            // @ts-expect-error TS has no context of Deno\r\n        }\r\n        else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\r\n            // similar like for NodeJS, but with the Deno API\r\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\r\n            // @ts-expect-error TS has no context of Deno\r\n            Deno.unrefTimer(ticker);\r\n        }\r\n        // run the tick immediately, but in the next pass of the event loop so that\r\n        // #_initialize can be allowed to complete without recursively waiting on\r\n        // itself\r\n        setTimeout(async () => {\r\n            await this.initializePromise;\r\n            await this._autoRefreshTokenTick();\r\n        }, 0);\r\n    }\r\n    /**\r\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\r\n     * within the library.\r\n     */\r\n    async _stopAutoRefresh() {\r\n        this._debug('#_stopAutoRefresh()');\r\n        const ticker = this.autoRefreshTicker;\r\n        this.autoRefreshTicker = null;\r\n        if (ticker) {\r\n            clearInterval(ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Starts an auto-refresh process in the background. The session is checked\r\n     * every few seconds. Close to the time of expiration a process is started to\r\n     * refresh the session. If refreshing fails it will be retried for as long as\r\n     * necessary.\r\n     *\r\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\r\n     * to call this function, it will be called for you.\r\n     *\r\n     * On browsers the refresh process works only when the tab/window is in the\r\n     * foreground to conserve resources as well as prevent race conditions and\r\n     * flooding auth with requests. If you call this method any managed\r\n     * visibility change callback will be removed and you must manage visibility\r\n     * changes on your own.\r\n     *\r\n     * On non-browser platforms the refresh process works *continuously* in the\r\n     * background, which may not be desirable. You should hook into your\r\n     * platform's foreground indication mechanism and call these methods\r\n     * appropriately to conserve resources.\r\n     *\r\n     * {@see #stopAutoRefresh}\r\n     */\r\n    async startAutoRefresh() {\r\n        this._removeVisibilityChangedCallback();\r\n        await this._startAutoRefresh();\r\n    }\r\n    /**\r\n     * Stops an active auto refresh process running in the background (if any).\r\n     *\r\n     * If you call this method any managed visibility change callback will be\r\n     * removed and you must manage visibility changes on your own.\r\n     *\r\n     * See {@link #startAutoRefresh} for more details.\r\n     */\r\n    async stopAutoRefresh() {\r\n        this._removeVisibilityChangedCallback();\r\n        await this._stopAutoRefresh();\r\n    }\r\n    /**\r\n     * Runs the auto refresh token tick.\r\n     */\r\n    async _autoRefreshTokenTick() {\r\n        this._debug('#_autoRefreshTokenTick()', 'begin');\r\n        try {\r\n            await this._acquireLock(0, async () => {\r\n                try {\r\n                    const now = Date.now();\r\n                    try {\r\n                        return await this._useSession(async (result) => {\r\n                            const { data: { session }, } = result;\r\n                            if (!session || !session.refresh_token || !session.expires_at) {\r\n                                this._debug('#_autoRefreshTokenTick()', 'no session');\r\n                                return;\r\n                            }\r\n                            // session will expire in this many ticks (or has already expired if <= 0)\r\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\r\n                            this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\r\n                            if (expiresInTicks <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD) {\r\n                                await this._callRefreshToken(session.refresh_token);\r\n                            }\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\r\n                    }\r\n                }\r\n                finally {\r\n                    this._debug('#_autoRefreshTokenTick()', 'end');\r\n                }\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e.isAcquireTimeout || e instanceof _lib_locks__WEBPACK_IMPORTED_MODULE_8__.LockAcquireTimeoutError) {\r\n                this._debug('auto refresh token tick lock not available');\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Registers callbacks on the browser / platform, which in-turn run\r\n     * algorithms when the browser window/tab are in foreground. On non-browser\r\n     * platforms it assumes always foreground.\r\n     */\r\n    async _handleVisibilityChange() {\r\n        this._debug('#_handleVisibilityChange()');\r\n        if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\r\n            if (this.autoRefreshToken) {\r\n                // in non-browser environments the refresh token ticker runs always\r\n                this.startAutoRefresh();\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\r\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\r\n            // now immediately call the visbility changed callback to setup with the\r\n            // current visbility state\r\n            await this._onVisibilityChanged(true); // initial call\r\n        }\r\n        catch (error) {\r\n            console.error('_handleVisibilityChange', error);\r\n        }\r\n    }\r\n    /**\r\n     * Callback registered with `window.addEventListener('visibilitychange')`.\r\n     */\r\n    async _onVisibilityChanged(calledFromInitialize) {\r\n        const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\r\n        this._debug(methodName, 'visibilityState', document.visibilityState);\r\n        if (document.visibilityState === 'visible') {\r\n            if (this.autoRefreshToken) {\r\n                // in browser environments the refresh token ticker runs only on focused tabs\r\n                // which prevents race conditions\r\n                this._startAutoRefresh();\r\n            }\r\n            if (!calledFromInitialize) {\r\n                // called when the visibility has changed, i.e. the browser\r\n                // transitioned from hidden -> visible so we need to see if the session\r\n                // should be recovered immediately... but to do that we need to acquire\r\n                // the lock first asynchronously\r\n                await this.initializePromise;\r\n                await this._acquireLock(-1, async () => {\r\n                    if (document.visibilityState !== 'visible') {\r\n                        this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\r\n                        // visibility has changed while waiting for the lock, abort\r\n                        return;\r\n                    }\r\n                    // recover the session\r\n                    await this._recoverAndRefresh();\r\n                });\r\n            }\r\n        }\r\n        else if (document.visibilityState === 'hidden') {\r\n            if (this.autoRefreshToken) {\r\n                this._stopAutoRefresh();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Generates the relevant login URL for a third-party provider.\r\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\r\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\r\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\r\n     */\r\n    async _getUrlForProvider(url, provider, options) {\r\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\r\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\r\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\r\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\r\n        }\r\n        if (this.flowType === 'pkce') {\r\n            const [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\r\n            const flowParams = new URLSearchParams({\r\n                code_challenge: `${encodeURIComponent(codeChallenge)}`,\r\n                code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\r\n            });\r\n            urlParams.push(flowParams.toString());\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\r\n            const query = new URLSearchParams(options.queryParams);\r\n            urlParams.push(query.toString());\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\r\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\r\n        }\r\n        return `${url}?${urlParams.join('&')}`;\r\n    }\r\n    async _unenroll(params) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a;\r\n                const { data: sessionData, error: sessionError } = result;\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    async _enroll(params) {\r\n        try {\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b;\r\n                const { data: sessionData, error: sessionError } = result;\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                const body = Object.assign({ friendly_name: params.friendlyName, factor_type: params.factorType }, (params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }));\r\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors`, {\r\n                    body,\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n                if (error) {\r\n                    return { data: null, error };\r\n                }\r\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\r\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\r\n                }\r\n                return { data, error: null };\r\n            });\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#verify}\r\n     */\r\n    async _verify(params) {\r\n        return this._acquireLock(-1, async () => {\r\n            try {\r\n                return await this._useSession(async (result) => {\r\n                    var _a;\r\n                    const { data: sessionData, error: sessionError } = result;\r\n                    if (sessionError) {\r\n                        return { data: null, error: sessionError };\r\n                    }\r\n                    const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\r\n                        body: { code: params.code, challenge_id: params.challengeId },\r\n                        headers: this.headers,\r\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                    });\r\n                    if (error) {\r\n                        return { data: null, error };\r\n                    }\r\n                    await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\r\n                    await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\r\n                    return { data, error };\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#challenge}\r\n     */\r\n    async _challenge(params) {\r\n        return this._acquireLock(-1, async () => {\r\n            try {\r\n                return await this._useSession(async (result) => {\r\n                    var _a;\r\n                    const { data: sessionData, error: sessionError } = result;\r\n                    if (sessionError) {\r\n                        return { data: null, error: sessionError };\r\n                    }\r\n                    return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\r\n                        body: { channel: params.channel },\r\n                        headers: this.headers,\r\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                    });\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#challengeAndVerify}\r\n     */\r\n    async _challengeAndVerify(params) {\r\n        // both _challenge and _verify independently acquire the lock, so no need\r\n        // to acquire it here\r\n        const { data: challengeData, error: challengeError } = await this._challenge({\r\n            factorId: params.factorId,\r\n        });\r\n        if (challengeError) {\r\n            return { data: null, error: challengeError };\r\n        }\r\n        return await this._verify({\r\n            factorId: params.factorId,\r\n            challengeId: challengeData.id,\r\n            code: params.code,\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#listFactors}\r\n     */\r\n    async _listFactors() {\r\n        // use #getUser instead of #_getUser as the former acquires a lock\r\n        const { data: { user }, error: userError, } = await this.getUser();\r\n        if (userError) {\r\n            return { data: null, error: userError };\r\n        }\r\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\r\n        const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\r\n        const phone = factors.filter((factor) => factor.factor_type === 'phone' && factor.status === 'verified');\r\n        return {\r\n            data: {\r\n                all: factors,\r\n                totp,\r\n                phone,\r\n            },\r\n            error: null,\r\n        };\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\r\n     */\r\n    async _getAuthenticatorAssuranceLevel() {\r\n        return this._acquireLock(-1, async () => {\r\n            return await this._useSession(async (result) => {\r\n                var _a, _b;\r\n                const { data: { session }, error: sessionError, } = result;\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                if (!session) {\r\n                    return {\r\n                        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\r\n                        error: null,\r\n                    };\r\n                }\r\n                const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(session.access_token);\r\n                let currentLevel = null;\r\n                if (payload.aal) {\r\n                    currentLevel = payload.aal;\r\n                }\r\n                let nextLevel = currentLevel;\r\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\r\n                if (verifiedFactors.length > 0) {\r\n                    nextLevel = 'aal2';\r\n                }\r\n                const currentAuthenticationMethods = payload.amr || [];\r\n                return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\r\n            });\r\n        });\r\n    }\r\n    async fetchJwk(kid, jwks = { keys: [] }) {\r\n        // try fetching from the supplied jwks\r\n        let jwk = jwks.keys.find((key) => key.kid === kid);\r\n        if (jwk) {\r\n            return jwk;\r\n        }\r\n        // try fetching from cache\r\n        jwk = this.jwks.keys.find((key) => key.kid === kid);\r\n        // jwk exists and jwks isn't stale\r\n        if (jwk && this.jwks_cached_at + _lib_constants__WEBPACK_IMPORTED_MODULE_1__.JWKS_TTL > Date.now()) {\r\n            return jwk;\r\n        }\r\n        // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\r\n        const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\r\n            headers: this.headers,\r\n        });\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        if (!data.keys || data.keys.length === 0) {\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError('JWKS is empty');\r\n        }\r\n        this.jwks = data;\r\n        this.jwks_cached_at = Date.now();\r\n        // Find the signing key\r\n        jwk = data.keys.find((key) => key.kid === kid);\r\n        if (!jwk) {\r\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError('No matching signing key found in JWKS');\r\n        }\r\n        return jwk;\r\n    }\r\n    /**\r\n     * @experimental This method may change in future versions.\r\n     * @description Gets the claims from a JWT. If the JWT is symmetric JWTs, it will call getUser() to verify against the server. If the JWT is asymmetric, it will be verified against the JWKS using the WebCrypto API.\r\n     */\r\n    async getClaims(jwt, jwks = { keys: [] }) {\r\n        try {\r\n            let token = jwt;\r\n            if (!token) {\r\n                const { data, error } = await this.getSession();\r\n                if (error || !data.session) {\r\n                    return { data: null, error };\r\n                }\r\n                token = data.session.access_token;\r\n            }\r\n            const { header, payload, signature, raw: { header: rawHeader, payload: rawPayload }, } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(token);\r\n            // Reject expired JWTs\r\n            (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.validateExp)(payload.exp);\r\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\r\n            if (!header.kid ||\r\n                header.alg === 'HS256' ||\r\n                !('crypto' in globalThis && 'subtle' in globalThis.crypto)) {\r\n                const { error } = await this.getUser(token);\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                // getUser succeeds so the claims in the JWT can be trusted\r\n                return {\r\n                    data: {\r\n                        claims: payload,\r\n                        header,\r\n                        signature,\r\n                    },\r\n                    error: null,\r\n                };\r\n            }\r\n            const algorithm = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getAlgorithm)(header.alg);\r\n            const signingKey = await this.fetchJwk(header.kid, jwks);\r\n            // Convert JWK to CryptoKey\r\n            const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, [\r\n                'verify',\r\n            ]);\r\n            // Verify the signature\r\n            const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0,_lib_base64url__WEBPACK_IMPORTED_MODULE_9__.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\r\n            if (!isValid) {\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError('Invalid JWT signature');\r\n            }\r\n            // If verification succeeds, decode and return claims\r\n            return {\r\n                data: {\r\n                    claims: payload,\r\n                    header,\r\n                    signature,\r\n                },\r\n                error: null,\r\n            };\r\n        }\r\n        catch (error) {\r\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                return { data: null, error };\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n}\r\nGoTrueClient.nextInstanceID = 0;\r\n//# sourceMappingURL=GoTrueClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthAdminApi: () => (/* reexport safe */ _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   AuthApiError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthApiError),\n/* harmony export */   AuthClient: () => (/* reexport safe */ _AuthClient__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   AuthError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthError),\n/* harmony export */   AuthImplicitGrantRedirectError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthImplicitGrantRedirectError),\n/* harmony export */   AuthInvalidCredentialsError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidCredentialsError),\n/* harmony export */   AuthInvalidJwtError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidJwtError),\n/* harmony export */   AuthInvalidTokenResponseError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidTokenResponseError),\n/* harmony export */   AuthPKCEGrantCodeExchangeError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthPKCEGrantCodeExchangeError),\n/* harmony export */   AuthRetryableFetchError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthRetryableFetchError),\n/* harmony export */   AuthSessionMissingError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthSessionMissingError),\n/* harmony export */   AuthUnknownError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthUnknownError),\n/* harmony export */   AuthWeakPasswordError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthWeakPasswordError),\n/* harmony export */   CustomAuthError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.CustomAuthError),\n/* harmony export */   GoTrueAdminApi: () => (/* reexport safe */ _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   GoTrueClient: () => (/* reexport safe */ _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   NavigatorLockAcquireTimeoutError: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.NavigatorLockAcquireTimeoutError),\n/* harmony export */   SIGN_OUT_SCOPES: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_4__.SIGN_OUT_SCOPES),\n/* harmony export */   isAuthApiError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthApiError),\n/* harmony export */   isAuthError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthError),\n/* harmony export */   isAuthImplicitGrantRedirectError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthImplicitGrantRedirectError),\n/* harmony export */   isAuthRetryableFetchError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthRetryableFetchError),\n/* harmony export */   isAuthSessionMissingError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthSessionMissingError),\n/* harmony export */   isAuthWeakPasswordError: () => (/* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthWeakPasswordError),\n/* harmony export */   lockInternals: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.internals),\n/* harmony export */   navigatorLock: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.navigatorLock),\n/* harmony export */   processLock: () => (/* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.processLock)\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoTrueClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n/* harmony import */ var _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\");\n/* harmony import */ var _AuthClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/types */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/locks */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0o7QUFDQTtBQUNKO0FBQzRCO0FBQ3RDO0FBQ0M7QUFDMkY7QUFDeEgiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR29UcnVlQWRtaW5BcGkgZnJvbSAnLi9Hb1RydWVBZG1pbkFwaSc7XHJcbmltcG9ydCBHb1RydWVDbGllbnQgZnJvbSAnLi9Hb1RydWVDbGllbnQnO1xyXG5pbXBvcnQgQXV0aEFkbWluQXBpIGZyb20gJy4vQXV0aEFkbWluQXBpJztcclxuaW1wb3J0IEF1dGhDbGllbnQgZnJvbSAnLi9BdXRoQ2xpZW50JztcclxuZXhwb3J0IHsgR29UcnVlQWRtaW5BcGksIEdvVHJ1ZUNsaWVudCwgQXV0aEFkbWluQXBpLCBBdXRoQ2xpZW50IH07XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL3R5cGVzJztcclxuZXhwb3J0ICogZnJvbSAnLi9saWIvZXJyb3JzJztcclxuZXhwb3J0IHsgbmF2aWdhdG9yTG9jaywgTmF2aWdhdG9yTG9ja0FjcXVpcmVUaW1lb3V0RXJyb3IsIGludGVybmFscyBhcyBsb2NrSW50ZXJuYWxzLCBwcm9jZXNzTG9jaywgfSBmcm9tICcuL2xpYi9sb2Nrcyc7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/base64url.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64UrlToUint8Array: () => (/* binding */ base64UrlToUint8Array),\n/* harmony export */   byteFromBase64URL: () => (/* binding */ byteFromBase64URL),\n/* harmony export */   byteToBase64URL: () => (/* binding */ byteToBase64URL),\n/* harmony export */   bytesToBase64URL: () => (/* binding */ bytesToBase64URL),\n/* harmony export */   codepointToUTF8: () => (/* binding */ codepointToUTF8),\n/* harmony export */   stringFromBase64URL: () => (/* binding */ stringFromBase64URL),\n/* harmony export */   stringFromUTF8: () => (/* binding */ stringFromUTF8),\n/* harmony export */   stringToBase64URL: () => (/* binding */ stringToBase64URL),\n/* harmony export */   stringToUTF8: () => (/* binding */ stringToUTF8),\n/* harmony export */   stringToUint8Array: () => (/* binding */ stringToUint8Array)\n/* harmony export */ });\n/**\r\n * Avoid modifying this file. It's part of\r\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\r\n * that repo!\r\n */\r\n/**\r\n * An array of characters that encode 6 bits into a Base64-URL alphabet\r\n * character.\r\n */\r\nconst TO_BASE64URL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split('');\r\n/**\r\n * An array of characters that can appear in a Base64-URL encoded string but\r\n * should be ignored.\r\n */\r\nconst IGNORE_BASE64URL = ' \\t\\n\\r='.split('');\r\n/**\r\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\r\n * used to skip the character, or if -1 used to error out.\r\n */\r\nconst FROM_BASE64URL = (() => {\r\n    const charMap = new Array(128);\r\n    for (let i = 0; i < charMap.length; i += 1) {\r\n        charMap[i] = -1;\r\n    }\r\n    for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\r\n        charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\r\n    }\r\n    for (let i = 0; i < TO_BASE64URL.length; i += 1) {\r\n        charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\r\n    }\r\n    return charMap;\r\n})();\r\n/**\r\n * Converts a byte to a Base64-URL string.\r\n *\r\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\r\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\r\n * @param emit A function called with the next Base64 character when ready.\r\n */\r\nfunction byteToBase64URL(byte, state, emit) {\r\n    if (byte !== null) {\r\n        state.queue = (state.queue << 8) | byte;\r\n        state.queuedBits += 8;\r\n        while (state.queuedBits >= 6) {\r\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\r\n            emit(TO_BASE64URL[pos]);\r\n            state.queuedBits -= 6;\r\n        }\r\n    }\r\n    else if (state.queuedBits > 0) {\r\n        state.queue = state.queue << (6 - state.queuedBits);\r\n        state.queuedBits = 6;\r\n        while (state.queuedBits >= 6) {\r\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\r\n            emit(TO_BASE64URL[pos]);\r\n            state.queuedBits -= 6;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\r\n *\r\n * @param charCode The char code of the JavaScript string.\r\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\r\n * @param emit A function called with the next byte.\r\n */\r\nfunction byteFromBase64URL(charCode, state, emit) {\r\n    const bits = FROM_BASE64URL[charCode];\r\n    if (bits > -1) {\r\n        // valid Base64-URL character\r\n        state.queue = (state.queue << 6) | bits;\r\n        state.queuedBits += 6;\r\n        while (state.queuedBits >= 8) {\r\n            emit((state.queue >> (state.queuedBits - 8)) & 0xff);\r\n            state.queuedBits -= 8;\r\n        }\r\n    }\r\n    else if (bits === -2) {\r\n        // ignore spaces, tabs, newlines, =\r\n        return;\r\n    }\r\n    else {\r\n        throw new Error(`Invalid Base64-URL character \"${String.fromCharCode(charCode)}\"`);\r\n    }\r\n}\r\n/**\r\n * Converts a JavaScript string (which may include any valid character) into a\r\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\r\n * then encoded as Base64-URL.\r\n *\r\n * @param str The string to convert.\r\n */\r\nfunction stringToBase64URL(str) {\r\n    const base64 = [];\r\n    const emitter = (char) => {\r\n        base64.push(char);\r\n    };\r\n    const state = { queue: 0, queuedBits: 0 };\r\n    stringToUTF8(str, (byte) => {\r\n        byteToBase64URL(byte, state, emitter);\r\n    });\r\n    byteToBase64URL(null, state, emitter);\r\n    return base64.join('');\r\n}\r\n/**\r\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\r\n * that the underlying string has been encoded as UTF-8.\r\n *\r\n * @param str The Base64-URL encoded string.\r\n */\r\nfunction stringFromBase64URL(str) {\r\n    const conv = [];\r\n    const utf8Emit = (codepoint) => {\r\n        conv.push(String.fromCodePoint(codepoint));\r\n    };\r\n    const utf8State = {\r\n        utf8seq: 0,\r\n        codepoint: 0,\r\n    };\r\n    const b64State = { queue: 0, queuedBits: 0 };\r\n    const byteEmit = (byte) => {\r\n        stringFromUTF8(byte, utf8State, utf8Emit);\r\n    };\r\n    for (let i = 0; i < str.length; i += 1) {\r\n        byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit);\r\n    }\r\n    return conv.join('');\r\n}\r\n/**\r\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\r\n *\r\n * @param codepoint The Unicode codepoint.\r\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\r\n */\r\nfunction codepointToUTF8(codepoint, emit) {\r\n    if (codepoint <= 0x7f) {\r\n        emit(codepoint);\r\n        return;\r\n    }\r\n    else if (codepoint <= 0x7ff) {\r\n        emit(0xc0 | (codepoint >> 6));\r\n        emit(0x80 | (codepoint & 0x3f));\r\n        return;\r\n    }\r\n    else if (codepoint <= 0xffff) {\r\n        emit(0xe0 | (codepoint >> 12));\r\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\r\n        emit(0x80 | (codepoint & 0x3f));\r\n        return;\r\n    }\r\n    else if (codepoint <= 0x10ffff) {\r\n        emit(0xf0 | (codepoint >> 18));\r\n        emit(0x80 | ((codepoint >> 12) & 0x3f));\r\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\r\n        emit(0x80 | (codepoint & 0x3f));\r\n        return;\r\n    }\r\n    throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`);\r\n}\r\n/**\r\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\r\n *\r\n * @param str  The string to convert to UTF-8.\r\n * @param emit Function which will be called for each UTF-8 byte of the string.\r\n */\r\nfunction stringToUTF8(str, emit) {\r\n    for (let i = 0; i < str.length; i += 1) {\r\n        let codepoint = str.charCodeAt(i);\r\n        if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\r\n            // most UTF-16 codepoints are Unicode codepoints, except values in this\r\n            // range where the next UTF-16 codepoint needs to be combined with the\r\n            // current one to get the Unicode codepoint\r\n            const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff;\r\n            const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff;\r\n            codepoint = (lowSurrogate | highSurrogate) + 0x10000;\r\n            i += 1;\r\n        }\r\n        codepointToUTF8(codepoint, emit);\r\n    }\r\n}\r\n/**\r\n * Converts a UTF-8 byte to a Unicode codepoint.\r\n *\r\n * @param byte  The UTF-8 byte next in the sequence.\r\n * @param state The shared state between consecutive UTF-8 bytes in the\r\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\r\n * @param emit  Function which will be called for each codepoint.\r\n */\r\nfunction stringFromUTF8(byte, state, emit) {\r\n    if (state.utf8seq === 0) {\r\n        if (byte <= 0x7f) {\r\n            emit(byte);\r\n            return;\r\n        }\r\n        // count the number of 1 leading bits until you reach 0\r\n        for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\r\n            if (((byte >> (7 - leadingBit)) & 1) === 0) {\r\n                state.utf8seq = leadingBit;\r\n                break;\r\n            }\r\n        }\r\n        if (state.utf8seq === 2) {\r\n            state.codepoint = byte & 31;\r\n        }\r\n        else if (state.utf8seq === 3) {\r\n            state.codepoint = byte & 15;\r\n        }\r\n        else if (state.utf8seq === 4) {\r\n            state.codepoint = byte & 7;\r\n        }\r\n        else {\r\n            throw new Error('Invalid UTF-8 sequence');\r\n        }\r\n        state.utf8seq -= 1;\r\n    }\r\n    else if (state.utf8seq > 0) {\r\n        if (byte <= 0x7f) {\r\n            throw new Error('Invalid UTF-8 sequence');\r\n        }\r\n        state.codepoint = (state.codepoint << 6) | (byte & 63);\r\n        state.utf8seq -= 1;\r\n        if (state.utf8seq === 0) {\r\n            emit(state.codepoint);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper functions to convert different types of strings to Uint8Array\r\n */\r\nfunction base64UrlToUint8Array(str) {\r\n    const result = [];\r\n    const state = { queue: 0, queuedBits: 0 };\r\n    const onByte = (byte) => {\r\n        result.push(byte);\r\n    };\r\n    for (let i = 0; i < str.length; i += 1) {\r\n        byteFromBase64URL(str.charCodeAt(i), state, onByte);\r\n    }\r\n    return new Uint8Array(result);\r\n}\r\nfunction stringToUint8Array(str) {\r\n    const result = [];\r\n    stringToUTF8(str, (byte) => result.push(byte));\r\n    return new Uint8Array(result);\r\n}\r\nfunction bytesToBase64URL(bytes) {\r\n    const result = [];\r\n    const state = { queue: 0, queuedBits: 0 };\r\n    const onChar = (char) => {\r\n        result.push(char);\r\n    };\r\n    bytes.forEach((byte) => byteToBase64URL(byte, state, onChar));\r\n    // always call with `null` after processing all bytes\r\n    byteToBase64URL(null, state, onChar);\r\n    return result.join('');\r\n}\r\n//# sourceMappingURL=base64url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/constants.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSIONS: () => (/* binding */ API_VERSIONS),\n/* harmony export */   API_VERSION_HEADER_NAME: () => (/* binding */ API_VERSION_HEADER_NAME),\n/* harmony export */   AUDIENCE: () => (/* binding */ AUDIENCE),\n/* harmony export */   AUTO_REFRESH_TICK_DURATION_MS: () => (/* binding */ AUTO_REFRESH_TICK_DURATION_MS),\n/* harmony export */   AUTO_REFRESH_TICK_THRESHOLD: () => (/* binding */ AUTO_REFRESH_TICK_THRESHOLD),\n/* harmony export */   BASE64URL_REGEX: () => (/* binding */ BASE64URL_REGEX),\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS),\n/* harmony export */   EXPIRY_MARGIN_MS: () => (/* binding */ EXPIRY_MARGIN_MS),\n/* harmony export */   GOTRUE_URL: () => (/* binding */ GOTRUE_URL),\n/* harmony export */   JWKS_TTL: () => (/* binding */ JWKS_TTL),\n/* harmony export */   NETWORK_FAILURE: () => (/* binding */ NETWORK_FAILURE),\n/* harmony export */   STORAGE_KEY: () => (/* binding */ STORAGE_KEY)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n\r\n/** Current session will be checked for refresh at this interval. */\r\nconst AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\r\n/**\r\n * A token refresh will be attempted this many ticks before the current session expires. */\r\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\r\n/*\r\n * Earliest time before an access token expires that the session should be refreshed.\r\n */\r\nconst EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\r\nconst GOTRUE_URL = 'http://localhost:9999';\r\nconst STORAGE_KEY = 'supabase.auth.token';\r\nconst AUDIENCE = '';\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst NETWORK_FAILURE = {\r\n    MAX_RETRIES: 10,\r\n    RETRY_INTERVAL: 2, // in deciseconds\r\n};\r\nconst API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\r\nconst API_VERSIONS = {\r\n    '2024-01-01': {\r\n        timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\r\n        name: '2024-01-01',\r\n    },\r\n};\r\nconst BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\r\nconst JWKS_TTL = 600000; // 10 minutes\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDcEM7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhCQUE4Qiw2Q0FBTyxDQUFDO0FBQ2hFO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPLHNDQUFzQyxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRTtBQUN6RSx5QkFBeUI7QUFDaEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcclxuLyoqIEN1cnJlbnQgc2Vzc2lvbiB3aWxsIGJlIGNoZWNrZWQgZm9yIHJlZnJlc2ggYXQgdGhpcyBpbnRlcnZhbC4gKi9cclxuZXhwb3J0IGNvbnN0IEFVVE9fUkVGUkVTSF9USUNLX0RVUkFUSU9OX01TID0gMzAgKiAxMDAwO1xyXG4vKipcclxuICogQSB0b2tlbiByZWZyZXNoIHdpbGwgYmUgYXR0ZW1wdGVkIHRoaXMgbWFueSB0aWNrcyBiZWZvcmUgdGhlIGN1cnJlbnQgc2Vzc2lvbiBleHBpcmVzLiAqL1xyXG5leHBvcnQgY29uc3QgQVVUT19SRUZSRVNIX1RJQ0tfVEhSRVNIT0xEID0gMztcclxuLypcclxuICogRWFybGllc3QgdGltZSBiZWZvcmUgYW4gYWNjZXNzIHRva2VuIGV4cGlyZXMgdGhhdCB0aGUgc2Vzc2lvbiBzaG91bGQgYmUgcmVmcmVzaGVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVYUElSWV9NQVJHSU5fTVMgPSBBVVRPX1JFRlJFU0hfVElDS19USFJFU0hPTEQgKiBBVVRPX1JFRlJFU0hfVElDS19EVVJBVElPTl9NUztcclxuZXhwb3J0IGNvbnN0IEdPVFJVRV9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo5OTk5JztcclxuZXhwb3J0IGNvbnN0IFNUT1JBR0VfS0VZID0gJ3N1cGFiYXNlLmF1dGgudG9rZW4nO1xyXG5leHBvcnQgY29uc3QgQVVESUVOQ0UgPSAnJztcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgZ290cnVlLWpzLyR7dmVyc2lvbn1gIH07XHJcbmV4cG9ydCBjb25zdCBORVRXT1JLX0ZBSUxVUkUgPSB7XHJcbiAgICBNQVhfUkVUUklFUzogMTAsXHJcbiAgICBSRVRSWV9JTlRFUlZBTDogMiwgLy8gaW4gZGVjaXNlY29uZHNcclxufTtcclxuZXhwb3J0IGNvbnN0IEFQSV9WRVJTSU9OX0hFQURFUl9OQU1FID0gJ1gtU3VwYWJhc2UtQXBpLVZlcnNpb24nO1xyXG5leHBvcnQgY29uc3QgQVBJX1ZFUlNJT05TID0ge1xyXG4gICAgJzIwMjQtMDEtMDEnOiB7XHJcbiAgICAgICAgdGltZXN0YW1wOiBEYXRlLnBhcnNlKCcyMDI0LTAxLTAxVDAwOjAwOjAwLjBaJyksXHJcbiAgICAgICAgbmFtZTogJzIwMjQtMDEtMDEnLFxyXG4gICAgfSxcclxufTtcclxuZXhwb3J0IGNvbnN0IEJBU0U2NFVSTF9SRUdFWCA9IC9eKFthLXowLTlfLV17NH0pKigkfFthLXowLTlfLV17M30kfFthLXowLTlfLV17Mn0kKSQvaTtcclxuZXhwb3J0IGNvbnN0IEpXS1NfVFRMID0gNjAwMDAwOyAvLyAxMCBtaW51dGVzXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/errors.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthApiError: () => (/* binding */ AuthApiError),\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   AuthImplicitGrantRedirectError: () => (/* binding */ AuthImplicitGrantRedirectError),\n/* harmony export */   AuthInvalidCredentialsError: () => (/* binding */ AuthInvalidCredentialsError),\n/* harmony export */   AuthInvalidJwtError: () => (/* binding */ AuthInvalidJwtError),\n/* harmony export */   AuthInvalidTokenResponseError: () => (/* binding */ AuthInvalidTokenResponseError),\n/* harmony export */   AuthPKCEGrantCodeExchangeError: () => (/* binding */ AuthPKCEGrantCodeExchangeError),\n/* harmony export */   AuthRetryableFetchError: () => (/* binding */ AuthRetryableFetchError),\n/* harmony export */   AuthSessionMissingError: () => (/* binding */ AuthSessionMissingError),\n/* harmony export */   AuthUnknownError: () => (/* binding */ AuthUnknownError),\n/* harmony export */   AuthWeakPasswordError: () => (/* binding */ AuthWeakPasswordError),\n/* harmony export */   CustomAuthError: () => (/* binding */ CustomAuthError),\n/* harmony export */   isAuthApiError: () => (/* binding */ isAuthApiError),\n/* harmony export */   isAuthError: () => (/* binding */ isAuthError),\n/* harmony export */   isAuthImplicitGrantRedirectError: () => (/* binding */ isAuthImplicitGrantRedirectError),\n/* harmony export */   isAuthRetryableFetchError: () => (/* binding */ isAuthRetryableFetchError),\n/* harmony export */   isAuthSessionMissingError: () => (/* binding */ isAuthSessionMissingError),\n/* harmony export */   isAuthWeakPasswordError: () => (/* binding */ isAuthWeakPasswordError)\n/* harmony export */ });\nclass AuthError extends Error {\r\n    constructor(message, status, code) {\r\n        super(message);\r\n        this.__isAuthError = true;\r\n        this.name = 'AuthError';\r\n        this.status = status;\r\n        this.code = code;\r\n    }\r\n}\r\nfunction isAuthError(error) {\r\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\r\n}\r\nclass AuthApiError extends AuthError {\r\n    constructor(message, status, code) {\r\n        super(message, status, code);\r\n        this.name = 'AuthApiError';\r\n        this.status = status;\r\n        this.code = code;\r\n    }\r\n}\r\nfunction isAuthApiError(error) {\r\n    return isAuthError(error) && error.name === 'AuthApiError';\r\n}\r\nclass AuthUnknownError extends AuthError {\r\n    constructor(message, originalError) {\r\n        super(message);\r\n        this.name = 'AuthUnknownError';\r\n        this.originalError = originalError;\r\n    }\r\n}\r\nclass CustomAuthError extends AuthError {\r\n    constructor(message, name, status, code) {\r\n        super(message, status, code);\r\n        this.name = name;\r\n        this.status = status;\r\n    }\r\n}\r\nclass AuthSessionMissingError extends CustomAuthError {\r\n    constructor() {\r\n        super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\r\n    }\r\n}\r\nfunction isAuthSessionMissingError(error) {\r\n    return isAuthError(error) && error.name === 'AuthSessionMissingError';\r\n}\r\nclass AuthInvalidTokenResponseError extends CustomAuthError {\r\n    constructor() {\r\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\r\n    }\r\n}\r\nclass AuthInvalidCredentialsError extends CustomAuthError {\r\n    constructor(message) {\r\n        super(message, 'AuthInvalidCredentialsError', 400, undefined);\r\n    }\r\n}\r\nclass AuthImplicitGrantRedirectError extends CustomAuthError {\r\n    constructor(message, details = null) {\r\n        super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\r\n        this.details = null;\r\n        this.details = details;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n            details: this.details,\r\n        };\r\n    }\r\n}\r\nfunction isAuthImplicitGrantRedirectError(error) {\r\n    return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError';\r\n}\r\nclass AuthPKCEGrantCodeExchangeError extends CustomAuthError {\r\n    constructor(message, details = null) {\r\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\r\n        this.details = null;\r\n        this.details = details;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n            details: this.details,\r\n        };\r\n    }\r\n}\r\nclass AuthRetryableFetchError extends CustomAuthError {\r\n    constructor(message, status) {\r\n        super(message, 'AuthRetryableFetchError', status, undefined);\r\n    }\r\n}\r\nfunction isAuthRetryableFetchError(error) {\r\n    return isAuthError(error) && error.name === 'AuthRetryableFetchError';\r\n}\r\n/**\r\n * This error is thrown on certain methods when the password used is deemed\r\n * weak. Inspect the reasons to identify what password strength rules are\r\n * inadequate.\r\n */\r\nclass AuthWeakPasswordError extends CustomAuthError {\r\n    constructor(message, status, reasons) {\r\n        super(message, 'AuthWeakPasswordError', status, 'weak_password');\r\n        this.reasons = reasons;\r\n    }\r\n}\r\nfunction isAuthWeakPasswordError(error) {\r\n    return isAuthError(error) && error.name === 'AuthWeakPasswordError';\r\n}\r\nclass AuthInvalidJwtError extends CustomAuthError {\r\n    constructor(message) {\r\n        super(message, 'AuthInvalidJwtError', 400, 'invalid_jwt');\r\n    }\r\n}\r\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXGVycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQXV0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzLCBjb2RlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5fX2lzQXV0aEVycm9yID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSAnQXV0aEVycm9yJztcclxuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcclxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhFcnJvcihlcnJvcikge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBlcnJvciA9PT0gJ29iamVjdCcgJiYgZXJyb3IgIT09IG51bGwgJiYgJ19faXNBdXRoRXJyb3InIGluIGVycm9yO1xyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoQXBpRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzLCBjb2RlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgc3RhdHVzLCBjb2RlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSAnQXV0aEFwaUVycm9yJztcclxuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcclxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhBcGlFcnJvcihlcnJvcikge1xyXG4gICAgcmV0dXJuIGlzQXV0aEVycm9yKGVycm9yKSAmJiBlcnJvci5uYW1lID09PSAnQXV0aEFwaUVycm9yJztcclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aFVua25vd25FcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBvcmlnaW5hbEVycm9yKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJ0F1dGhVbmtub3duRXJyb3InO1xyXG4gICAgICAgIHRoaXMub3JpZ2luYWxFcnJvciA9IG9yaWdpbmFsRXJyb3I7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEN1c3RvbUF1dGhFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBuYW1lLCBzdGF0dXMsIGNvZGUpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlLCBzdGF0dXMsIGNvZGUpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhTZXNzaW9uTWlzc2luZ0Vycm9yIGV4dGVuZHMgQ3VzdG9tQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCdBdXRoIHNlc3Npb24gbWlzc2luZyEnLCAnQXV0aFNlc3Npb25NaXNzaW5nRXJyb3InLCA0MDAsIHVuZGVmaW5lZCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGlzQXV0aFNlc3Npb25NaXNzaW5nRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhTZXNzaW9uTWlzc2luZ0Vycm9yJztcclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aEludmFsaWRUb2tlblJlc3BvbnNlRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoJ0F1dGggc2Vzc2lvbiBvciB1c2VyIG1pc3NpbmcnLCAnQXV0aEludmFsaWRUb2tlblJlc3BvbnNlRXJyb3InLCA1MDAsIHVuZGVmaW5lZCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhJbnZhbGlkQ3JlZGVudGlhbHNFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0F1dGhJbnZhbGlkQ3JlZGVudGlhbHNFcnJvcicsIDQwMCwgdW5kZWZpbmVkKTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aEltcGxpY2l0R3JhbnRSZWRpcmVjdEVycm9yIGV4dGVuZHMgQ3VzdG9tQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGRldGFpbHMgPSBudWxsKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0F1dGhJbXBsaWNpdEdyYW50UmVkaXJlY3RFcnJvcicsIDUwMCwgdW5kZWZpbmVkKTtcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XHJcbiAgICB9XHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXHJcbiAgICAgICAgICAgIGRldGFpbHM6IHRoaXMuZGV0YWlscyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhJbXBsaWNpdEdyYW50UmVkaXJlY3RFcnJvcihlcnJvcikge1xyXG4gICAgcmV0dXJuIGlzQXV0aEVycm9yKGVycm9yKSAmJiBlcnJvci5uYW1lID09PSAnQXV0aEltcGxpY2l0R3JhbnRSZWRpcmVjdEVycm9yJztcclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aFBLQ0VHcmFudENvZGVFeGNoYW5nZUVycm9yIGV4dGVuZHMgQ3VzdG9tQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGRldGFpbHMgPSBudWxsKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0F1dGhQS0NFR3JhbnRDb2RlRXhjaGFuZ2VFcnJvcicsIDUwMCwgdW5kZWZpbmVkKTtcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XHJcbiAgICB9XHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXHJcbiAgICAgICAgICAgIGRldGFpbHM6IHRoaXMuZGV0YWlscyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoUmV0cnlhYmxlRmV0Y2hFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0dXMpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQXV0aFJldHJ5YWJsZUZldGNoRXJyb3InLCBzdGF0dXMsIHVuZGVmaW5lZCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGlzQXV0aFJldHJ5YWJsZUZldGNoRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhSZXRyeWFibGVGZXRjaEVycm9yJztcclxufVxyXG4vKipcclxuICogVGhpcyBlcnJvciBpcyB0aHJvd24gb24gY2VydGFpbiBtZXRob2RzIHdoZW4gdGhlIHBhc3N3b3JkIHVzZWQgaXMgZGVlbWVkXHJcbiAqIHdlYWsuIEluc3BlY3QgdGhlIHJlYXNvbnMgdG8gaWRlbnRpZnkgd2hhdCBwYXNzd29yZCBzdHJlbmd0aCBydWxlcyBhcmVcclxuICogaW5hZGVxdWF0ZS5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBBdXRoV2Vha1Bhc3N3b3JkRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzLCByZWFzb25zKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0F1dGhXZWFrUGFzc3dvcmRFcnJvcicsIHN0YXR1cywgJ3dlYWtfcGFzc3dvcmQnKTtcclxuICAgICAgICB0aGlzLnJlYXNvbnMgPSByZWFzb25zO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhXZWFrUGFzc3dvcmRFcnJvcihlcnJvcikge1xyXG4gICAgcmV0dXJuIGlzQXV0aEVycm9yKGVycm9yKSAmJiBlcnJvci5uYW1lID09PSAnQXV0aFdlYWtQYXNzd29yZEVycm9yJztcclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aEludmFsaWRKd3RFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0F1dGhJbnZhbGlkSnd0RXJyb3InLCA0MDAsICdpbnZhbGlkX2p3dCcpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/fetch.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateLinkResponse: () => (/* binding */ _generateLinkResponse),\n/* harmony export */   _noResolveJsonResponse: () => (/* binding */ _noResolveJsonResponse),\n/* harmony export */   _request: () => (/* binding */ _request),\n/* harmony export */   _sessionResponse: () => (/* binding */ _sessionResponse),\n/* harmony export */   _sessionResponsePassword: () => (/* binding */ _sessionResponsePassword),\n/* harmony export */   _ssoResponse: () => (/* binding */ _ssoResponse),\n/* harmony export */   _userResponse: () => (/* binding */ _userResponse),\n/* harmony export */   handleError: () => (/* binding */ handleError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\r\nconst NETWORK_ERROR_CODES = [502, 503, 504];\r\nasync function handleError(error) {\r\n    var _a;\r\n    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.looksLikeFetchResponse)(error)) {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), 0);\r\n    }\r\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\r\n        // status in 500...599 range - server had an error, request might be retryed.\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), error.status);\r\n    }\r\n    let data;\r\n    try {\r\n        data = await error.json();\r\n    }\r\n    catch (e) {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError(_getErrorMessage(e), e);\r\n    }\r\n    let errorCode = undefined;\r\n    const responseAPIVersion = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.parseResponseAPIVersion)(error);\r\n    if (responseAPIVersion &&\r\n        responseAPIVersion.getTime() >= _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS['2024-01-01'].timestamp &&\r\n        typeof data === 'object' &&\r\n        data &&\r\n        typeof data.code === 'string') {\r\n        errorCode = data.code;\r\n    }\r\n    else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\r\n        errorCode = data.error_code;\r\n    }\r\n    if (!errorCode) {\r\n        // Legacy support for weak password errors, when there were no error codes\r\n        if (typeof data === 'object' &&\r\n            data &&\r\n            typeof data.weak_password === 'object' &&\r\n            data.weak_password &&\r\n            Array.isArray(data.weak_password.reasons) &&\r\n            data.weak_password.reasons.length &&\r\n            data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\r\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\r\n        }\r\n    }\r\n    else if (errorCode === 'weak_password') {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\r\n    }\r\n    else if (errorCode === 'session_not_found') {\r\n        // The `session_id` inside the JWT does not correspond to a row in the\r\n        // `sessions` table. This usually means the user has signed out, has been\r\n        // deleted, or their session has somehow been terminated.\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n    }\r\n    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\r\n}\r\nconst _getRequestParams = (method, options, parameters, body) => {\r\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\r\n    if (method === 'GET') {\r\n        return params;\r\n    }\r\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\r\n    params.body = JSON.stringify(body);\r\n    return Object.assign(Object.assign({}, params), parameters);\r\n};\r\nasync function _request(fetcher, method, url, options) {\r\n    var _a;\r\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\r\n    if (!headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME]) {\r\n        headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME] = _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS['2024-01-01'].name;\r\n    }\r\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\r\n        headers['Authorization'] = `Bearer ${options.jwt}`;\r\n    }\r\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\r\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\r\n        qs['redirect_to'] = options.redirectTo;\r\n    }\r\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\r\n    const data = await _handleRequest(fetcher, method, url + queryString, {\r\n        headers,\r\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson,\r\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\r\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\r\n}\r\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\r\n    const requestParams = _getRequestParams(method, options, parameters, body);\r\n    let result;\r\n    try {\r\n        result = await fetcher(url, Object.assign({}, requestParams));\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        // fetch failed, likely due to a network or CORS error\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(e), 0);\r\n    }\r\n    if (!result.ok) {\r\n        await handleError(result);\r\n    }\r\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\r\n        return result;\r\n    }\r\n    try {\r\n        return await result.json();\r\n    }\r\n    catch (e) {\r\n        await handleError(e);\r\n    }\r\n}\r\nfunction _sessionResponse(data) {\r\n    var _a;\r\n    let session = null;\r\n    if (hasSession(data)) {\r\n        session = Object.assign({}, data);\r\n        if (!data.expires_at) {\r\n            session.expires_at = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.expiresAt)(data.expires_in);\r\n        }\r\n    }\r\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\r\n    return { data: { session, user }, error: null };\r\n}\r\nfunction _sessionResponsePassword(data) {\r\n    const response = _sessionResponse(data);\r\n    if (!response.error &&\r\n        data.weak_password &&\r\n        typeof data.weak_password === 'object' &&\r\n        Array.isArray(data.weak_password.reasons) &&\r\n        data.weak_password.reasons.length &&\r\n        data.weak_password.message &&\r\n        typeof data.weak_password.message === 'string' &&\r\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\r\n        response.data.weak_password = data.weak_password;\r\n    }\r\n    return response;\r\n}\r\nfunction _userResponse(data) {\r\n    var _a;\r\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\r\n    return { data: { user }, error: null };\r\n}\r\nfunction _ssoResponse(data) {\r\n    return { data, error: null };\r\n}\r\nfunction _generateLinkResponse(data) {\r\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\r\n    const properties = {\r\n        action_link,\r\n        email_otp,\r\n        hashed_token,\r\n        redirect_to,\r\n        verification_type,\r\n    };\r\n    const user = Object.assign({}, rest);\r\n    return {\r\n        data: {\r\n            properties,\r\n            user,\r\n        },\r\n        error: null,\r\n    };\r\n}\r\nfunction _noResolveJsonResponse(data) {\r\n    return data;\r\n}\r\n/**\r\n * hasSession checks if the response object contains a valid session\r\n * @param data A response object\r\n * @returns true if a session is in the response\r\n */\r\nfunction hasSession(data) {\r\n    return data.access_token && data.refresh_token && data.expires_in;\r\n}\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/helpers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deferred: () => (/* binding */ Deferred),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   expiresAt: () => (/* binding */ expiresAt),\n/* harmony export */   generatePKCEChallenge: () => (/* binding */ generatePKCEChallenge),\n/* harmony export */   generatePKCEVerifier: () => (/* binding */ generatePKCEVerifier),\n/* harmony export */   getAlgorithm: () => (/* binding */ getAlgorithm),\n/* harmony export */   getCodeChallengeAndMethod: () => (/* binding */ getCodeChallengeAndMethod),\n/* harmony export */   getItemAsync: () => (/* binding */ getItemAsync),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   looksLikeFetchResponse: () => (/* binding */ looksLikeFetchResponse),\n/* harmony export */   parseParametersFromURL: () => (/* binding */ parseParametersFromURL),\n/* harmony export */   parseResponseAPIVersion: () => (/* binding */ parseResponseAPIVersion),\n/* harmony export */   removeItemAsync: () => (/* binding */ removeItemAsync),\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch),\n/* harmony export */   retryable: () => (/* binding */ retryable),\n/* harmony export */   setItemAsync: () => (/* binding */ setItemAsync),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   supportsLocalStorage: () => (/* binding */ supportsLocalStorage),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   validateExp: () => (/* binding */ validateExp),\n/* harmony export */   validateUUID: () => (/* binding */ validateUUID)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _base64url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\r\n\r\n\r\nfunction expiresAt(expiresIn) {\r\n    const timeNow = Math.round(Date.now() / 1000);\r\n    return timeNow + expiresIn;\r\n}\r\nfunction uuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\nconst isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\r\nconst localStorageWriteTests = {\r\n    tested: false,\r\n    writable: false,\r\n};\r\n/**\r\n * Checks whether localStorage is supported on this browser.\r\n */\r\nconst supportsLocalStorage = () => {\r\n    if (!isBrowser()) {\r\n        return false;\r\n    }\r\n    try {\r\n        if (typeof globalThis.localStorage !== 'object') {\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // DOM exception when accessing `localStorage`\r\n        return false;\r\n    }\r\n    if (localStorageWriteTests.tested) {\r\n        return localStorageWriteTests.writable;\r\n    }\r\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\r\n    try {\r\n        globalThis.localStorage.setItem(randomKey, randomKey);\r\n        globalThis.localStorage.removeItem(randomKey);\r\n        localStorageWriteTests.tested = true;\r\n        localStorageWriteTests.writable = true;\r\n    }\r\n    catch (e) {\r\n        // localStorage can't be written to\r\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\r\n        localStorageWriteTests.tested = true;\r\n        localStorageWriteTests.writable = false;\r\n    }\r\n    return localStorageWriteTests.writable;\r\n};\r\n/**\r\n * Extracts parameters encoded in the URL both in the query and fragment.\r\n */\r\nfunction parseParametersFromURL(href) {\r\n    const result = {};\r\n    const url = new URL(href);\r\n    if (url.hash && url.hash[0] === '#') {\r\n        try {\r\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\r\n            hashSearchParams.forEach((value, key) => {\r\n                result[key] = value;\r\n            });\r\n        }\r\n        catch (e) {\r\n            // hash is not a query string\r\n        }\r\n    }\r\n    // search parameters take precedence over hash parameters\r\n    url.searchParams.forEach((value, key) => {\r\n        result[key] = value;\r\n    });\r\n    return result;\r\n}\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst looksLikeFetchResponse = (maybeResponse) => {\r\n    return (typeof maybeResponse === 'object' &&\r\n        maybeResponse !== null &&\r\n        'status' in maybeResponse &&\r\n        'ok' in maybeResponse &&\r\n        'json' in maybeResponse &&\r\n        typeof maybeResponse.json === 'function');\r\n};\r\n// Storage helpers\r\nconst setItemAsync = async (storage, key, data) => {\r\n    await storage.setItem(key, JSON.stringify(data));\r\n};\r\nconst getItemAsync = async (storage, key) => {\r\n    const value = await storage.getItem(key);\r\n    if (!value) {\r\n        return null;\r\n    }\r\n    try {\r\n        return JSON.parse(value);\r\n    }\r\n    catch (_a) {\r\n        return value;\r\n    }\r\n};\r\nconst removeItemAsync = async (storage, key) => {\r\n    await storage.removeItem(key);\r\n};\r\n/**\r\n * A deferred represents some asynchronous work that is not yet finished, which\r\n * may or may not culminate in a value.\r\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n        ;\r\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n            ;\r\n            this.resolve = res;\r\n            this.reject = rej;\r\n        });\r\n    }\r\n}\r\nDeferred.promiseConstructor = Promise;\r\nfunction decodeJWT(token) {\r\n    const parts = token.split('.');\r\n    if (parts.length !== 3) {\r\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError('Invalid JWT structure');\r\n    }\r\n    // Regex checks for base64url format\r\n    for (let i = 0; i < parts.length; i++) {\r\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.BASE64URL_REGEX.test(parts[i])) {\r\n            throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError('JWT not in base64url format');\r\n        }\r\n    }\r\n    const data = {\r\n        // using base64url lib\r\n        header: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[0])),\r\n        payload: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[1])),\r\n        signature: (0,_base64url__WEBPACK_IMPORTED_MODULE_2__.base64UrlToUint8Array)(parts[2]),\r\n        raw: {\r\n            header: parts[0],\r\n            payload: parts[1],\r\n        },\r\n    };\r\n    return data;\r\n}\r\n/**\r\n * Creates a promise that resolves to null after some time.\r\n */\r\nasync function sleep(time) {\r\n    return await new Promise((accept) => {\r\n        setTimeout(() => accept(null), time);\r\n    });\r\n}\r\n/**\r\n * Converts the provided async function into a retryable function. Each result\r\n * or thrown error is sent to the isRetryable function which should return true\r\n * if the function should run again.\r\n */\r\nfunction retryable(fn, isRetryable) {\r\n    const promise = new Promise((accept, reject) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n        ;\r\n        (async () => {\r\n            for (let attempt = 0; attempt < Infinity; attempt++) {\r\n                try {\r\n                    const result = await fn(attempt);\r\n                    if (!isRetryable(attempt, null, result)) {\r\n                        accept(result);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!isRetryable(attempt, e)) {\r\n                        reject(e);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n    });\r\n    return promise;\r\n}\r\nfunction dec2hex(dec) {\r\n    return ('0' + dec.toString(16)).substr(-2);\r\n}\r\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\r\nfunction generatePKCEVerifier() {\r\n    const verifierLength = 56;\r\n    const array = new Uint32Array(verifierLength);\r\n    if (typeof crypto === 'undefined') {\r\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n        const charSetLen = charSet.length;\r\n        let verifier = '';\r\n        for (let i = 0; i < verifierLength; i++) {\r\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\r\n        }\r\n        return verifier;\r\n    }\r\n    crypto.getRandomValues(array);\r\n    return Array.from(array, dec2hex).join('');\r\n}\r\nasync function sha256(randomString) {\r\n    const encoder = new TextEncoder();\r\n    const encodedData = encoder.encode(randomString);\r\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\r\n    const bytes = new Uint8Array(hash);\r\n    return Array.from(bytes)\r\n        .map((c) => String.fromCharCode(c))\r\n        .join('');\r\n}\r\nasync function generatePKCEChallenge(verifier) {\r\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\r\n        typeof crypto.subtle !== 'undefined' &&\r\n        typeof TextEncoder !== 'undefined';\r\n    if (!hasCryptoSupport) {\r\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\r\n        return verifier;\r\n    }\r\n    const hashed = await sha256(verifier);\r\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n}\r\nasync function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\r\n    const codeVerifier = generatePKCEVerifier();\r\n    let storedCodeVerifier = codeVerifier;\r\n    if (isPasswordRecovery) {\r\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\r\n    }\r\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\r\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\r\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\r\n    return [codeChallenge, codeChallengeMethod];\r\n}\r\n/** Parses the API version which is 2YYY-MM-DD. */\r\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\r\nfunction parseResponseAPIVersion(response) {\r\n    const apiVersion = response.headers.get(_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME);\r\n    if (!apiVersion) {\r\n        return null;\r\n    }\r\n    if (!apiVersion.match(API_VERSION_REGEX)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\r\n        return date;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\nfunction validateExp(exp) {\r\n    if (!exp) {\r\n        throw new Error('Missing exp claim');\r\n    }\r\n    const timeNow = Math.floor(Date.now() / 1000);\r\n    if (exp <= timeNow) {\r\n        throw new Error('JWT has expired');\r\n    }\r\n}\r\nfunction getAlgorithm(alg) {\r\n    switch (alg) {\r\n        case 'RS256':\r\n            return {\r\n                name: 'RSASSA-PKCS1-v1_5',\r\n                hash: { name: 'SHA-256' },\r\n            };\r\n        case 'ES256':\r\n            return {\r\n                name: 'ECDSA',\r\n                namedCurve: 'P-256',\r\n                hash: { name: 'SHA-256' },\r\n            };\r\n        default:\r\n            throw new Error('Invalid alg claim');\r\n    }\r\n}\r\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\r\nfunction validateUUID(str) {\r\n    if (!UUID_REGEX.test(str)) {\r\n        throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\r\n    }\r\n}\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localStorageAdapter: () => (/* binding */ localStorageAdapter),\n/* harmony export */   memoryLocalStorageAdapter: () => (/* binding */ memoryLocalStorageAdapter)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n\r\n/**\r\n * Provides safe access to the globalThis.localStorage property.\r\n */\r\nconst localStorageAdapter = {\r\n    getItem: (key) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return null;\r\n        }\r\n        return globalThis.localStorage.getItem(key);\r\n    },\r\n    setItem: (key, value) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return;\r\n        }\r\n        globalThis.localStorage.setItem(key, value);\r\n    },\r\n    removeItem: (key) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return;\r\n        }\r\n        globalThis.localStorage.removeItem(key);\r\n    },\r\n};\r\n/**\r\n * Returns a localStorage-like object that stores the key-value pairs in\r\n * memory.\r\n */\r\nfunction memoryLocalStorageAdapter(store = {}) {\r\n    return {\r\n        getItem: (key) => {\r\n            return store[key] || null;\r\n        },\r\n        setItem: (key, value) => {\r\n            store[key] = value;\r\n        },\r\n        removeItem: (key) => {\r\n            delete store[key];\r\n        },\r\n    };\r\n}\r\n//# sourceMappingURL=local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsOERBQW9CO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWEsOERBQW9CO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWEsOERBQW9CO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkNBQTZDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXGF1dGgtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxsb2NhbC1zdG9yYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN1cHBvcnRzTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi9oZWxwZXJzJztcclxuLyoqXHJcbiAqIFByb3ZpZGVzIHNhZmUgYWNjZXNzIHRvIHRoZSBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZSBwcm9wZXJ0eS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBsb2NhbFN0b3JhZ2VBZGFwdGVyID0ge1xyXG4gICAgZ2V0SXRlbTogKGtleSkgPT4ge1xyXG4gICAgICAgIGlmICghc3VwcG9ydHNMb2NhbFN0b3JhZ2UoKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGdsb2JhbFRoaXMubG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcclxuICAgIH0sXHJcbiAgICBzZXRJdGVtOiAoa2V5LCB2YWx1ZSkgPT4ge1xyXG4gICAgICAgIGlmICghc3VwcG9ydHNMb2NhbFN0b3JhZ2UoKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGdsb2JhbFRoaXMubG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCB2YWx1ZSk7XHJcbiAgICB9LFxyXG4gICAgcmVtb3ZlSXRlbTogKGtleSkgPT4ge1xyXG4gICAgICAgIGlmICghc3VwcG9ydHNMb2NhbFN0b3JhZ2UoKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGdsb2JhbFRoaXMubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcclxuICAgIH0sXHJcbn07XHJcbi8qKlxyXG4gKiBSZXR1cm5zIGEgbG9jYWxTdG9yYWdlLWxpa2Ugb2JqZWN0IHRoYXQgc3RvcmVzIHRoZSBrZXktdmFsdWUgcGFpcnMgaW5cclxuICogbWVtb3J5LlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1lbW9yeUxvY2FsU3RvcmFnZUFkYXB0ZXIoc3RvcmUgPSB7fSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBnZXRJdGVtOiAoa2V5KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBzdG9yZVtrZXldIHx8IG51bGw7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXRJdGVtOiAoa2V5LCB2YWx1ZSkgPT4ge1xyXG4gICAgICAgICAgICBzdG9yZVtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZW1vdmVJdGVtOiAoa2V5KSA9PiB7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBzdG9yZVtrZXldO1xyXG4gICAgICAgIH0sXHJcbiAgICB9O1xyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvY2FsLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/locks.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LockAcquireTimeoutError: () => (/* binding */ LockAcquireTimeoutError),\n/* harmony export */   NavigatorLockAcquireTimeoutError: () => (/* binding */ NavigatorLockAcquireTimeoutError),\n/* harmony export */   ProcessLockAcquireTimeoutError: () => (/* binding */ ProcessLockAcquireTimeoutError),\n/* harmony export */   internals: () => (/* binding */ internals),\n/* harmony export */   navigatorLock: () => (/* binding */ navigatorLock),\n/* harmony export */   processLock: () => (/* binding */ processLock)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n\r\n/**\r\n * @experimental\r\n */\r\nconst internals = {\r\n    /**\r\n     * @experimental\r\n     */\r\n    debug: !!(globalThis &&\r\n        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)() &&\r\n        globalThis.localStorage &&\r\n        globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'),\r\n};\r\n/**\r\n * An error thrown when a lock cannot be acquired after some amount of time.\r\n *\r\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\r\n */\r\nclass LockAcquireTimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.isAcquireTimeout = true;\r\n    }\r\n}\r\nclass NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\r\n}\r\nclass ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\r\n}\r\n/**\r\n * Implements a global exclusive lock using the Navigator LockManager API. It\r\n * is available on all browsers released after 2022-03-15 with Safari being the\r\n * last one to release support. If the API is not available, this function will\r\n * throw. Make sure you check availablility before configuring {@link\r\n * GoTrueClient}.\r\n *\r\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\r\n * local storage item to `true`.\r\n *\r\n * Internals:\r\n *\r\n * Since the LockManager API does not preserve stack traces for the async\r\n * function passed in the `request` method, a trick is used where acquiring the\r\n * lock releases a previously started promise to run the operation in the `fn`\r\n * function. The lock waits for that promise to finish (with or without error),\r\n * while the function will finally wait for the result anyway.\r\n *\r\n * @param name Name of the lock to be acquired.\r\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\r\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\r\n *                       will time out after so many milliseconds. An error is\r\n *                       a timeout if it has `isAcquireTimeout` set to true.\r\n * @param fn The operation to run once the lock is acquired.\r\n */\r\nasync function navigatorLock(name, acquireTimeout, fn) {\r\n    if (internals.debug) {\r\n        console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\r\n    }\r\n    const abortController = new globalThis.AbortController();\r\n    if (acquireTimeout > 0) {\r\n        setTimeout(() => {\r\n            abortController.abort();\r\n            if (internals.debug) {\r\n                console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\r\n            }\r\n        }, acquireTimeout);\r\n    }\r\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\r\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\r\n    // libraries like zone.js patch the Promise object to track the execution\r\n    // context. However, it appears that most browsers use an internal promise\r\n    // implementation when using the navigator.locks.request() API causing them\r\n    // to lose context and emit confusing log messages or break certain features.\r\n    // This wrapping is believed to help zone.js track the execution context\r\n    // better.\r\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0\r\n        ? {\r\n            mode: 'exclusive',\r\n            ifAvailable: true,\r\n        }\r\n        : {\r\n            mode: 'exclusive',\r\n            signal: abortController.signal,\r\n        }, async (lock) => {\r\n        if (lock) {\r\n            if (internals.debug) {\r\n                console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\r\n            }\r\n            try {\r\n                return await fn();\r\n            }\r\n            finally {\r\n                if (internals.debug) {\r\n                    console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (acquireTimeout === 0) {\r\n                if (internals.debug) {\r\n                    console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\r\n                }\r\n                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\r\n            }\r\n            else {\r\n                if (internals.debug) {\r\n                    try {\r\n                        const result = await globalThis.navigator.locks.query();\r\n                        console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\r\n                    }\r\n                    catch (e) {\r\n                        console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\r\n                    }\r\n                }\r\n                // Browser is not following the Navigator LockManager spec, it\r\n                // returned a null lock when we didn't use ifAvailable. So we can\r\n                // pretend the lock is acquired in the name of backward compatibility\r\n                // and user experience and just run the function.\r\n                console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\r\n                return await fn();\r\n            }\r\n        }\r\n    }));\r\n}\r\nconst PROCESS_LOCKS = {};\r\n/**\r\n * Implements a global exclusive lock that works only in the current process.\r\n * Useful for environments like React Native or other non-browser\r\n * single-process (i.e. no concept of \"tabs\") environments.\r\n *\r\n * Use {@link #navigatorLock} in browser environments.\r\n *\r\n * @param name Name of the lock to be acquired.\r\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\r\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\r\n *                       will time out after so many milliseconds. An error is\r\n *                       a timeout if it has `isAcquireTimeout` set to true.\r\n * @param fn The operation to run once the lock is acquired.\r\n */\r\nasync function processLock(name, acquireTimeout, fn) {\r\n    var _a;\r\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\r\n    const currentOperation = Promise.race([\r\n        previousOperation.catch(() => {\r\n            // ignore error of previous operation that we're waiting to finish\r\n            return null;\r\n        }),\r\n        acquireTimeout >= 0\r\n            ? new Promise((_, reject) => {\r\n                setTimeout(() => {\r\n                    reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\r\n                }, acquireTimeout);\r\n            })\r\n            : null,\r\n    ].filter((x) => x))\r\n        .catch((e) => {\r\n        if (e && e.isAcquireTimeout) {\r\n            throw e;\r\n        }\r\n        return null;\r\n    })\r\n        .then(async () => {\r\n        // previous operations finished and we didn't get a race on the acquire\r\n        // timeout, so the current operation can finally start\r\n        return await fn();\r\n    });\r\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e) => {\r\n        if (e && e.isAcquireTimeout) {\r\n            // if the current operation timed out, it doesn't mean that the previous\r\n            // operation finished, so we need contnue waiting for it to finish\r\n            await previousOperation;\r\n            return null;\r\n        }\r\n        throw e;\r\n    });\r\n    // finally wait for the current operation to finish successfully, with an\r\n    // error or with an acquire timeout error\r\n    return await currentOperation;\r\n}\r\n//# sourceMappingURL=locks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   polyfillGlobalThis: () => (/* binding */ polyfillGlobalThis)\n/* harmony export */ });\n/**\r\n * https://mathiasbynens.be/notes/globalthis\r\n */\r\nfunction polyfillGlobalThis() {\r\n    if (typeof globalThis === 'object')\r\n        return;\r\n    try {\r\n        Object.defineProperty(Object.prototype, '__magic__', {\r\n            get: function () {\r\n                return this;\r\n            },\r\n            configurable: true,\r\n        });\r\n        // @ts-expect-error 'Allow access to magic'\r\n        __magic__.globalThis = __magic__;\r\n        // @ts-expect-error 'Allow access to magic'\r\n        delete Object.prototype.__magic__;\r\n    }\r\n    catch (e) {\r\n        if (typeof self !== 'undefined') {\r\n            // @ts-expect-error 'Allow access to globals'\r\n            self.globalThis = self;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=polyfills.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvcG9seWZpbGxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxhdXRoLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxccG9seWZpbGxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvZ2xvYmFsdGhpc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHBvbHlmaWxsR2xvYmFsVGhpcygpIHtcclxuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoT2JqZWN0LnByb3RvdHlwZSwgJ19fbWFnaWNfXycsIHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgJ0FsbG93IGFjY2VzcyB0byBtYWdpYydcclxuICAgICAgICBfX21hZ2ljX18uZ2xvYmFsVGhpcyA9IF9fbWFnaWNfXztcclxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yICdBbGxvdyBhY2Nlc3MgdG8gbWFnaWMnXHJcbiAgICAgICAgZGVsZXRlIE9iamVjdC5wcm90b3R5cGUuX19tYWdpY19fO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgJ0FsbG93IGFjY2VzcyB0byBnbG9iYWxzJ1xyXG4gICAgICAgICAgICBzZWxmLmdsb2JhbFRoaXMgPSBzZWxmO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb2x5ZmlsbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/types.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIGN_OUT_SCOPES: () => (/* binding */ SIGN_OUT_SCOPES)\n/* harmony export */ });\nconst SIGN_OUT_SCOPES = ['global', 'local', 'others'];\r\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcYXV0aC1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXHR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBTSUdOX09VVF9TQ09QRVMgPSBbJ2dsb2JhbCcsICdsb2NhbCcsICdvdGhlcnMnXTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = '2.70.0';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxhdXRoLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjcwLjAnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionsClient: () => (/* binding */ FunctionsClient)\n/* harmony export */ });\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nclass FunctionsClient {\r\n    constructor(url, { headers = {}, customFetch, region = _types__WEBPACK_IMPORTED_MODULE_0__.FunctionRegion.Any, } = {}) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.region = region;\r\n        this.fetch = (0,_helper__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(customFetch);\r\n    }\r\n    /**\r\n     * Updates the authorization header\r\n     * @param token - the new jwt token sent in the authorisation header\r\n     */\r\n    setAuth(token) {\r\n        this.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    /**\r\n     * Invokes a function\r\n     * @param functionName - The name of the Function to invoke.\r\n     * @param options - Options for invoking the Function.\r\n     */\r\n    invoke(functionName, options = {}) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { headers, method, body: functionArgs } = options;\r\n                let _headers = {};\r\n                let { region } = options;\r\n                if (!region) {\r\n                    region = this.region;\r\n                }\r\n                if (region && region !== 'any') {\r\n                    _headers['x-region'] = region;\r\n                }\r\n                let body;\r\n                if (functionArgs &&\r\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\r\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\r\n                        functionArgs instanceof ArrayBuffer) {\r\n                        // will work for File as File inherits Blob\r\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\r\n                        _headers['Content-Type'] = 'application/octet-stream';\r\n                        body = functionArgs;\r\n                    }\r\n                    else if (typeof functionArgs === 'string') {\r\n                        // plain string\r\n                        _headers['Content-Type'] = 'text/plain';\r\n                        body = functionArgs;\r\n                    }\r\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\r\n                        // don't set content-type headers\r\n                        // Request will automatically add the right boundary value\r\n                        body = functionArgs;\r\n                    }\r\n                    else {\r\n                        // default, assume this is JSON\r\n                        _headers['Content-Type'] = 'application/json';\r\n                        body = JSON.stringify(functionArgs);\r\n                    }\r\n                }\r\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\r\n                    method: method || 'POST',\r\n                    // headers priority is (high to low):\r\n                    // 1. invoke-level headers\r\n                    // 2. client-level headers\r\n                    // 3. default Content-Type header\r\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\r\n                    body,\r\n                }).catch((fetchError) => {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsFetchError(fetchError);\r\n                });\r\n                const isRelayError = response.headers.get('x-relay-error');\r\n                if (isRelayError && isRelayError === 'true') {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsRelayError(response);\r\n                }\r\n                if (!response.ok) {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsHttpError(response);\r\n                }\r\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\r\n                let data;\r\n                if (responseType === 'application/json') {\r\n                    data = yield response.json();\r\n                }\r\n                else if (responseType === 'application/octet-stream') {\r\n                    data = yield response.blob();\r\n                }\r\n                else if (responseType === 'text/event-stream') {\r\n                    data = response;\r\n                }\r\n                else if (responseType === 'multipart/form-data') {\r\n                    data = yield response.formData();\r\n                }\r\n                else {\r\n                    // default to text\r\n                    data = yield response.text();\r\n                }\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                return { data: null, error };\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=FunctionsClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/helper.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch)\n/* harmony export */ });\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\n//# sourceMappingURL=helper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZnVuY3Rpb25zLWpzL2Rpc3QvbW9kdWxlL2hlbHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHNMQUE4QixTQUFTLGdCQUFnQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxmdW5jdGlvbnMtanNcXGRpc3RcXG1vZHVsZVxcaGVscGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcclxuICAgIGxldCBfZmV0Y2g7XHJcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcclxuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBfZmV0Y2ggPSAoLi4uYXJncykgPT4gaW1wb3J0KCdAc3VwYWJhc2Uvbm9kZS1mZXRjaCcpLnRoZW4oKHsgZGVmYXVsdDogZmV0Y2ggfSkgPT4gZmV0Y2goLi4uYXJncykpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgX2ZldGNoID0gZmV0Y2g7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IF9mZXRjaCguLi5hcmdzKTtcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/types.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionRegion: () => (/* binding */ FunctionRegion),\n/* harmony export */   FunctionsError: () => (/* binding */ FunctionsError),\n/* harmony export */   FunctionsFetchError: () => (/* binding */ FunctionsFetchError),\n/* harmony export */   FunctionsHttpError: () => (/* binding */ FunctionsHttpError),\n/* harmony export */   FunctionsRelayError: () => (/* binding */ FunctionsRelayError)\n/* harmony export */ });\nclass FunctionsError extends Error {\r\n    constructor(message, name = 'FunctionsError', context) {\r\n        super(message);\r\n        this.name = name;\r\n        this.context = context;\r\n    }\r\n}\r\nclass FunctionsFetchError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\r\n    }\r\n}\r\nclass FunctionsRelayError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\r\n    }\r\n}\r\nclass FunctionsHttpError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\r\n    }\r\n}\r\n// Define the enum for the 'region' property\r\nvar FunctionRegion;\r\n(function (FunctionRegion) {\r\n    FunctionRegion[\"Any\"] = \"any\";\r\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\r\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\r\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\r\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\r\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\r\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\r\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\r\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\r\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\r\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\r\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\r\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\r\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\r\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\r\n})(FunctionRegion || (FunctionRegion = {}));\r\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZnVuY3Rpb25zLWpzL2Rpc3QvbW9kdWxlL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUN6QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxmdW5jdGlvbnMtanNcXGRpc3RcXG1vZHVsZVxcdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEZ1bmN0aW9uc0Vycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgbmFtZSA9ICdGdW5jdGlvbnNFcnJvcicsIGNvbnRleHQpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEZ1bmN0aW9uc0ZldGNoRXJyb3IgZXh0ZW5kcyBGdW5jdGlvbnNFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb250ZXh0KSB7XHJcbiAgICAgICAgc3VwZXIoJ0ZhaWxlZCB0byBzZW5kIGEgcmVxdWVzdCB0byB0aGUgRWRnZSBGdW5jdGlvbicsICdGdW5jdGlvbnNGZXRjaEVycm9yJywgY29udGV4dCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEZ1bmN0aW9uc1JlbGF5RXJyb3IgZXh0ZW5kcyBGdW5jdGlvbnNFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb250ZXh0KSB7XHJcbiAgICAgICAgc3VwZXIoJ1JlbGF5IEVycm9yIGludm9raW5nIHRoZSBFZGdlIEZ1bmN0aW9uJywgJ0Z1bmN0aW9uc1JlbGF5RXJyb3InLCBjb250ZXh0KTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgRnVuY3Rpb25zSHR0cEVycm9yIGV4dGVuZHMgRnVuY3Rpb25zRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCkge1xyXG4gICAgICAgIHN1cGVyKCdFZGdlIEZ1bmN0aW9uIHJldHVybmVkIGEgbm9uLTJ4eCBzdGF0dXMgY29kZScsICdGdW5jdGlvbnNIdHRwRXJyb3InLCBjb250ZXh0KTtcclxuICAgIH1cclxufVxyXG4vLyBEZWZpbmUgdGhlIGVudW0gZm9yIHRoZSAncmVnaW9uJyBwcm9wZXJ0eVxyXG5leHBvcnQgdmFyIEZ1bmN0aW9uUmVnaW9uO1xyXG4oZnVuY3Rpb24gKEZ1bmN0aW9uUmVnaW9uKSB7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFueVwiXSA9IFwiYW55XCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFwTm9ydGhlYXN0MVwiXSA9IFwiYXAtbm9ydGhlYXN0LTFcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQXBOb3J0aGVhc3QyXCJdID0gXCJhcC1ub3J0aGVhc3QtMlwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcFNvdXRoMVwiXSA9IFwiYXAtc291dGgtMVwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcFNvdXRoZWFzdDFcIl0gPSBcImFwLXNvdXRoZWFzdC0xXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFwU291dGhlYXN0MlwiXSA9IFwiYXAtc291dGhlYXN0LTJcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQ2FDZW50cmFsMVwiXSA9IFwiY2EtY2VudHJhbC0xXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkV1Q2VudHJhbDFcIl0gPSBcImV1LWNlbnRyYWwtMVwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJFdVdlc3QxXCJdID0gXCJldS13ZXN0LTFcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiRXVXZXN0MlwiXSA9IFwiZXUtd2VzdC0yXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIkV1V2VzdDNcIl0gPSBcImV1LXdlc3QtM1wiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJTYUVhc3QxXCJdID0gXCJzYS1lYXN0LTFcIjtcclxuICAgIEZ1bmN0aW9uUmVnaW9uW1wiVXNFYXN0MVwiXSA9IFwidXMtZWFzdC0xXCI7XHJcbiAgICBGdW5jdGlvblJlZ2lvbltcIlVzV2VzdDFcIl0gPSBcInVzLXdlc3QtMVwiO1xyXG4gICAgRnVuY3Rpb25SZWdpb25bXCJVc1dlc3QyXCJdID0gXCJ1cy13ZXN0LTJcIjtcclxufSkoRnVuY3Rpb25SZWdpb24gfHwgKEZ1bmN0aW9uUmVnaW9uID0ge30pKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/@supabase/node-fetch/browser.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n\r\n\r\n// ref: https://github.com/tc39/proposal-global\r\nvar getGlobal = function() {\r\n    // the only reliable means to get the global object is\r\n    // `Function('return this')()`\r\n    // However, this causes CSP violations in Chrome apps.\r\n    if (typeof self !== 'undefined') { return self; }\r\n    if (typeof window !== 'undefined') { return window; }\r\n    if (typeof __webpack_require__.g !== 'undefined') { return __webpack_require__.g; }\r\n    throw new Error('unable to locate global object');\r\n}\r\n\r\nvar globalObject = getGlobal();\r\n\r\nconst fetch = globalObject.fetch;\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (globalObject.fetch.bind(globalObject));\r\n\r\nconst Headers = globalObject.Headers;\r\nconst Request = globalObject.Request;\r\nconst Response = globalObject.Response;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvbm9kZS1mZXRjaC9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMseUNBQXlDO0FBQ3pDLGVBQWUscUJBQU0sb0JBQW9CLE9BQU8scUJBQU07QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxpRUFBZSxxQ0FBcUMsRUFBQztBQUNyRDtBQUNPO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxub2RlLWZldGNoXFxicm93c2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8gcmVmOiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1nbG9iYWxcclxudmFyIGdldEdsb2JhbCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgLy8gdGhlIG9ubHkgcmVsaWFibGUgbWVhbnMgdG8gZ2V0IHRoZSBnbG9iYWwgb2JqZWN0IGlzXHJcbiAgICAvLyBgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKWBcclxuICAgIC8vIEhvd2V2ZXIsIHRoaXMgY2F1c2VzIENTUCB2aW9sYXRpb25zIGluIENocm9tZSBhcHBzLlxyXG4gICAgaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gc2VsZjsgfVxyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiB3aW5kb3c7IH1cclxuICAgIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gZ2xvYmFsOyB9XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VuYWJsZSB0byBsb2NhdGUgZ2xvYmFsIG9iamVjdCcpO1xyXG59XHJcblxyXG52YXIgZ2xvYmFsT2JqZWN0ID0gZ2V0R2xvYmFsKCk7XHJcblxyXG5leHBvcnQgY29uc3QgZmV0Y2ggPSBnbG9iYWxPYmplY3QuZmV0Y2g7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBnbG9iYWxPYmplY3QuZmV0Y2guYmluZChnbG9iYWxPYmplY3QpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEhlYWRlcnMgPSBnbG9iYWxPYmplY3QuSGVhZGVycztcclxuZXhwb3J0IGNvbnN0IFJlcXVlc3QgPSBnbG9iYWxPYmplY3QuUmVxdWVzdDtcclxuZXhwb3J0IGNvbnN0IFJlc3BvbnNlID0gZ2xvYmFsT2JqZWN0LlJlc3BvbnNlO1xyXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n// @ts-ignore\r\nconst node_fetch_1 = __importDefault(__webpack_require__(/*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\"));\r\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\r\nclass PostgrestBuilder {\r\n    constructor(builder) {\r\n        this.shouldThrowOnError = false;\r\n        this.method = builder.method;\r\n        this.url = builder.url;\r\n        this.headers = builder.headers;\r\n        this.schema = builder.schema;\r\n        this.body = builder.body;\r\n        this.shouldThrowOnError = builder.shouldThrowOnError;\r\n        this.signal = builder.signal;\r\n        this.isMaybeSingle = builder.isMaybeSingle;\r\n        if (builder.fetch) {\r\n            this.fetch = builder.fetch;\r\n        }\r\n        else if (typeof fetch === 'undefined') {\r\n            this.fetch = node_fetch_1.default;\r\n        }\r\n        else {\r\n            this.fetch = fetch;\r\n        }\r\n    }\r\n    /**\r\n     * If there's an error with the query, throwOnError will reject the promise by\r\n     * throwing the error instead of returning it as part of a successful response.\r\n     *\r\n     * {@link https://github.com/supabase/supabase-js/issues/92}\r\n     */\r\n    throwOnError() {\r\n        this.shouldThrowOnError = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Set an HTTP header for the request.\r\n     */\r\n    setHeader(name, value) {\r\n        this.headers = Object.assign({}, this.headers);\r\n        this.headers[name] = value;\r\n        return this;\r\n    }\r\n    then(onfulfilled, onrejected) {\r\n        // https://postgrest.org/en/stable/api.html#switching-schemas\r\n        if (this.schema === undefined) {\r\n            // skip\r\n        }\r\n        else if (['GET', 'HEAD'].includes(this.method)) {\r\n            this.headers['Accept-Profile'] = this.schema;\r\n        }\r\n        else {\r\n            this.headers['Content-Profile'] = this.schema;\r\n        }\r\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\r\n            this.headers['Content-Type'] = 'application/json';\r\n        }\r\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\r\n        // https://github.com/supabase/postgrest-js/pull/247\r\n        const _fetch = this.fetch;\r\n        let res = _fetch(this.url.toString(), {\r\n            method: this.method,\r\n            headers: this.headers,\r\n            body: JSON.stringify(this.body),\r\n            signal: this.signal,\r\n        }).then(async (res) => {\r\n            var _a, _b, _c;\r\n            let error = null;\r\n            let data = null;\r\n            let count = null;\r\n            let status = res.status;\r\n            let statusText = res.statusText;\r\n            if (res.ok) {\r\n                if (this.method !== 'HEAD') {\r\n                    const body = await res.text();\r\n                    if (body === '') {\r\n                        // Prefer: return=minimal\r\n                    }\r\n                    else if (this.headers['Accept'] === 'text/csv') {\r\n                        data = body;\r\n                    }\r\n                    else if (this.headers['Accept'] &&\r\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\r\n                        data = body;\r\n                    }\r\n                    else {\r\n                        data = JSON.parse(body);\r\n                    }\r\n                }\r\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\r\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\r\n                if (countHeader && contentRange && contentRange.length > 1) {\r\n                    count = parseInt(contentRange[1]);\r\n                }\r\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\r\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\r\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\r\n                    if (data.length > 1) {\r\n                        error = {\r\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\r\n                            code: 'PGRST116',\r\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\r\n                            hint: null,\r\n                            message: 'JSON object requested, multiple (or no) rows returned',\r\n                        };\r\n                        data = null;\r\n                        count = null;\r\n                        status = 406;\r\n                        statusText = 'Not Acceptable';\r\n                    }\r\n                    else if (data.length === 1) {\r\n                        data = data[0];\r\n                    }\r\n                    else {\r\n                        data = null;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                const body = await res.text();\r\n                try {\r\n                    error = JSON.parse(body);\r\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\r\n                    if (Array.isArray(error) && res.status === 404) {\r\n                        data = [];\r\n                        error = null;\r\n                        status = 200;\r\n                        statusText = 'OK';\r\n                    }\r\n                }\r\n                catch (_d) {\r\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\r\n                    if (res.status === 404 && body === '') {\r\n                        status = 204;\r\n                        statusText = 'No Content';\r\n                    }\r\n                    else {\r\n                        error = {\r\n                            message: body,\r\n                        };\r\n                    }\r\n                }\r\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('0 rows'))) {\r\n                    error = null;\r\n                    status = 200;\r\n                    statusText = 'OK';\r\n                }\r\n                if (error && this.shouldThrowOnError) {\r\n                    throw new PostgrestError_1.default(error);\r\n                }\r\n            }\r\n            const postgrestResponse = {\r\n                error,\r\n                data,\r\n                count,\r\n                status,\r\n                statusText,\r\n            };\r\n            return postgrestResponse;\r\n        });\r\n        if (!this.shouldThrowOnError) {\r\n            res = res.catch((fetchError) => {\r\n                var _a, _b, _c;\r\n                return ({\r\n                    error: {\r\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\r\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\r\n                        hint: '',\r\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\r\n                    },\r\n                    data: null,\r\n                    count: null,\r\n                    status: 0,\r\n                    statusText: '',\r\n                });\r\n            });\r\n        }\r\n        return res.then(onfulfilled, onrejected);\r\n    }\r\n    /**\r\n     * Override the type of the returned `data`.\r\n     *\r\n     * @typeParam NewResult - The new result type to override with\r\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\r\n     */\r\n    returns() {\r\n        /* istanbul ignore next */\r\n        return this;\r\n    }\r\n    /**\r\n     * Override the type of the returned `data` field in the response.\r\n     *\r\n     * @typeParam NewResult - The new type to cast the response data to\r\n     * @typeParam Options - Optional type configuration (defaults to { merge: true })\r\n     * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\r\n     * @example\r\n     * ```typescript\r\n     * // Merge with existing types (default behavior)\r\n     * const query = supabase\r\n     *   .from('users')\r\n     *   .select()\r\n     *   .overrideTypes<{ custom_field: string }>()\r\n     *\r\n     * // Replace existing types completely\r\n     * const replaceQuery = supabase\r\n     *   .from('users')\r\n     *   .select()\r\n     *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\r\n     * ```\r\n     * @returns A PostgrestBuilder instance with the new type\r\n     */\r\n    overrideTypes() {\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestBuilder;\r\n//# sourceMappingURL=PostgrestBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\r\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\");\r\n/**\r\n * PostgREST client.\r\n *\r\n * @typeParam Database - Types for the schema from the [type\r\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\r\n *\r\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\r\n * literal, the same one passed to the constructor. If the schema is not\r\n * `\"public\"`, this must be supplied manually.\r\n */\r\nclass PostgrestClient {\r\n    // TODO: Add back shouldThrowOnError once we figure out the typings\r\n    /**\r\n     * Creates a PostgREST client.\r\n     *\r\n     * @param url - URL of the PostgREST endpoint\r\n     * @param options - Named parameters\r\n     * @param options.headers - Custom headers\r\n     * @param options.schema - Postgres schema to switch to\r\n     * @param options.fetch - Custom fetch\r\n     */\r\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\r\n        this.url = url;\r\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\r\n        this.schemaName = schema;\r\n        this.fetch = fetch;\r\n    }\r\n    /**\r\n     * Perform a query on a table or a view.\r\n     *\r\n     * @param relation - The table or view name to query\r\n     */\r\n    from(relation) {\r\n        const url = new URL(`${this.url}/${relation}`);\r\n        return new PostgrestQueryBuilder_1.default(url, {\r\n            headers: Object.assign({}, this.headers),\r\n            schema: this.schemaName,\r\n            fetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Select a schema to query or perform an function (rpc) call.\r\n     *\r\n     * The schema needs to be on the list of exposed schemas inside Supabase.\r\n     *\r\n     * @param schema - The schema to query\r\n     */\r\n    schema(schema) {\r\n        return new PostgrestClient(this.url, {\r\n            headers: this.headers,\r\n            schema,\r\n            fetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Perform a function call.\r\n     *\r\n     * @param fn - The function name to call\r\n     * @param args - The arguments to pass to the function call\r\n     * @param options - Named parameters\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     * @param options.get - When set to `true`, the function will be called with\r\n     * read-only access mode.\r\n     * @param options.count - Count algorithm to use to count rows returned by the\r\n     * function. Only applicable for [set-returning\r\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    rpc(fn, args = {}, { head = false, get = false, count, } = {}) {\r\n        let method;\r\n        const url = new URL(`${this.url}/rpc/${fn}`);\r\n        let body;\r\n        if (head || get) {\r\n            method = head ? 'HEAD' : 'GET';\r\n            Object.entries(args)\r\n                // params with undefined value needs to be filtered out, otherwise it'll\r\n                // show up as `?param=undefined`\r\n                .filter(([_, value]) => value !== undefined)\r\n                // array values need special syntax\r\n                .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\r\n                .forEach(([name, value]) => {\r\n                url.searchParams.append(name, value);\r\n            });\r\n        }\r\n        else {\r\n            method = 'POST';\r\n            body = args;\r\n        }\r\n        const headers = Object.assign({}, this.headers);\r\n        if (count) {\r\n            headers['Prefer'] = `count=${count}`;\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url,\r\n            headers,\r\n            schema: this.schemaName,\r\n            body,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestClient;\r\n//# sourceMappingURL=PostgrestClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n/**\r\n * Error format\r\n *\r\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\r\n */\r\nclass PostgrestError extends Error {\r\n    constructor(context) {\r\n        super(context.message);\r\n        this.name = 'PostgrestError';\r\n        this.details = context.details;\r\n        this.hint = context.hint;\r\n        this.code = context.code;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestError;\r\n//# sourceMappingURL=PostgrestError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL1Bvc3RncmVzdEVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccG9zdGdyZXN0LWpzXFxkaXN0XFxjanNcXFBvc3RncmVzdEVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbi8qKlxyXG4gKiBFcnJvciBmb3JtYXRcclxuICpcclxuICoge0BsaW5rIGh0dHBzOi8vcG9zdGdyZXN0Lm9yZy9lbi9zdGFibGUvYXBpLmh0bWw/aGlnaGxpZ2h0PW9wdGlvbnMjZXJyb3JzLWFuZC1odHRwLXN0YXR1cy1jb2Rlc31cclxuICovXHJcbmNsYXNzIFBvc3RncmVzdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCkge1xyXG4gICAgICAgIHN1cGVyKGNvbnRleHQubWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Bvc3RncmVzdEVycm9yJztcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBjb250ZXh0LmRldGFpbHM7XHJcbiAgICAgICAgdGhpcy5oaW50ID0gY29udGV4dC5oaW50O1xyXG4gICAgICAgIHRoaXMuY29kZSA9IGNvbnRleHQuY29kZTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLmRlZmF1bHQgPSBQb3N0Z3Jlc3RFcnJvcjtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UG9zdGdyZXN0RXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\r\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\r\n    /**\r\n     * Match only rows where `column` is equal to `value`.\r\n     *\r\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    eq(column, value) {\r\n        this.url.searchParams.append(column, `eq.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is not equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    neq(column, value) {\r\n        this.url.searchParams.append(column, `neq.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is greater than `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    gt(column, value) {\r\n        this.url.searchParams.append(column, `gt.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is greater than or equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    gte(column, value) {\r\n        this.url.searchParams.append(column, `gte.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is less than `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    lt(column, value) {\r\n        this.url.searchParams.append(column, `lt.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is less than or equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    lte(column, value) {\r\n        this.url.searchParams.append(column, `lte.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches `pattern` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param pattern - The pattern to match with\r\n     */\r\n    like(column, pattern) {\r\n        this.url.searchParams.append(column, `like.${pattern}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    likeAllOf(column, patterns) {\r\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    likeAnyOf(column, patterns) {\r\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches `pattern` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param pattern - The pattern to match with\r\n     */\r\n    ilike(column, pattern) {\r\n        this.url.searchParams.append(column, `ilike.${pattern}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    ilikeAllOf(column, patterns) {\r\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    ilikeAnyOf(column, patterns) {\r\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` IS `value`.\r\n     *\r\n     * For non-boolean columns, this is only relevant for checking if the value of\r\n     * `column` is NULL by setting `value` to `null`.\r\n     *\r\n     * For boolean columns, you can also set `value` to `true` or `false` and it\r\n     * will behave the same way as `.eq()`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    is(column, value) {\r\n        this.url.searchParams.append(column, `is.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is included in the `values` array.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param values - The values array to filter with\r\n     */\r\n    in(column, values) {\r\n        const cleanedValues = Array.from(new Set(values))\r\n            .map((s) => {\r\n            // handle postgrest reserved characters\r\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\r\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\r\n                return `\"${s}\"`;\r\n            else\r\n                return `${s}`;\r\n        })\r\n            .join(',');\r\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for jsonb, array, and range columns. Match only rows where\r\n     * `column` contains every element appearing in `value`.\r\n     *\r\n     * @param column - The jsonb, array, or range column to filter on\r\n     * @param value - The jsonb, array, or range value to filter with\r\n     */\r\n    contains(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\r\n            // keep it simple and accept a string\r\n            this.url.searchParams.append(column, `cs.${value}`);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            // array\r\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\r\n        }\r\n        else {\r\n            // json\r\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for jsonb, array, and range columns. Match only rows where\r\n     * every element appearing in `column` is contained by `value`.\r\n     *\r\n     * @param column - The jsonb, array, or range column to filter on\r\n     * @param value - The jsonb, array, or range value to filter with\r\n     */\r\n    containedBy(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range\r\n            this.url.searchParams.append(column, `cd.${value}`);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            // array\r\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\r\n        }\r\n        else {\r\n            // json\r\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is greater than any element in `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeGt(column, range) {\r\n        this.url.searchParams.append(column, `sr.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is either contained in `range` or greater than any element in\r\n     * `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeGte(column, range) {\r\n        this.url.searchParams.append(column, `nxl.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is less than any element in `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeLt(column, range) {\r\n        this.url.searchParams.append(column, `sl.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is either contained in `range` or less than any element in\r\n     * `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeLte(column, range) {\r\n        this.url.searchParams.append(column, `nxr.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where `column` is\r\n     * mutually exclusive to `range` and there can be no element between the two\r\n     * ranges.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeAdjacent(column, range) {\r\n        this.url.searchParams.append(column, `adj.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for array and range columns. Match only rows where\r\n     * `column` and `value` have an element in common.\r\n     *\r\n     * @param column - The array or range column to filter on\r\n     * @param value - The array or range value to filter with\r\n     */\r\n    overlaps(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range\r\n            this.url.searchParams.append(column, `ov.${value}`);\r\n        }\r\n        else {\r\n            // array\r\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for text and tsvector columns. Match only rows where\r\n     * `column` matches the query string in `query`.\r\n     *\r\n     * @param column - The text or tsvector column to filter on\r\n     * @param query - The query text to match with\r\n     * @param options - Named parameters\r\n     * @param options.config - The text search configuration to use\r\n     * @param options.type - Change how the `query` text is interpreted\r\n     */\r\n    textSearch(column, query, { config, type } = {}) {\r\n        let typePart = '';\r\n        if (type === 'plain') {\r\n            typePart = 'pl';\r\n        }\r\n        else if (type === 'phrase') {\r\n            typePart = 'ph';\r\n        }\r\n        else if (type === 'websearch') {\r\n            typePart = 'w';\r\n        }\r\n        const configPart = config === undefined ? '' : `(${config})`;\r\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where each column in `query` keys is equal to its\r\n     * associated value. Shorthand for multiple `.eq()`s.\r\n     *\r\n     * @param query - The object to filter with, with column names as keys mapped\r\n     * to their filter values\r\n     */\r\n    match(query) {\r\n        Object.entries(query).forEach(([column, value]) => {\r\n            this.url.searchParams.append(column, `eq.${value}`);\r\n        });\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which doesn't satisfy the filter.\r\n     *\r\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\r\n     * follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure they are properly sanitized.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param operator - The operator to be negated to filter with, following\r\n     * PostgREST syntax\r\n     * @param value - The value to filter with, following PostgREST syntax\r\n     */\r\n    not(column, operator, value) {\r\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which satisfy at least one of the filters.\r\n     *\r\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure it's properly sanitized.\r\n     *\r\n     * It's currently not possible to do an `.or()` filter across multiple tables.\r\n     *\r\n     * @param filters - The filters to use, following PostgREST syntax\r\n     * @param options - Named parameters\r\n     * @param options.referencedTable - Set this to filter on referenced tables\r\n     * instead of the parent table\r\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\r\n     */\r\n    or(filters, { foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const key = referencedTable ? `${referencedTable}.or` : 'or';\r\n        this.url.searchParams.append(key, `(${filters})`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which satisfy the filter. This is an escape hatch - you\r\n     * should use the specific filter methods wherever possible.\r\n     *\r\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\r\n     * follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure they are properly sanitized.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param operator - The operator to filter with, following PostgREST syntax\r\n     * @param value - The value to filter with, following PostgREST syntax\r\n     */\r\n    filter(column, operator, value) {\r\n        this.url.searchParams.append(column, `${operator}.${value}`);\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestFilterBuilder;\r\n//# sourceMappingURL=PostgrestFilterBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\r\nclass PostgrestQueryBuilder {\r\n    constructor(url, { headers = {}, schema, fetch, }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.schema = schema;\r\n        this.fetch = fetch;\r\n    }\r\n    /**\r\n     * Perform a SELECT query on the table or view.\r\n     *\r\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     *\r\n     * @param options.count - Count algorithm to use to count rows in the table or view.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    select(columns, { head = false, count, } = {}) {\r\n        const method = head ? 'HEAD' : 'GET';\r\n        // Remove whitespaces except when quoted\r\n        let quoted = false;\r\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\r\n            .split('')\r\n            .map((c) => {\r\n            if (/\\s/.test(c) && !quoted) {\r\n                return '';\r\n            }\r\n            if (c === '\"') {\r\n                quoted = !quoted;\r\n            }\r\n            return c;\r\n        })\r\n            .join('');\r\n        this.url.searchParams.set('select', cleanedColumns);\r\n        if (count) {\r\n            this.headers['Prefer'] = `count=${count}`;\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an INSERT into the table or view.\r\n     *\r\n     * By default, inserted rows are not returned. To return it, chain the call\r\n     * with `.select()`.\r\n     *\r\n     * @param values - The values to insert. Pass an object to insert a single row\r\n     * or an array to insert multiple rows.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count inserted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     *\r\n     * @param options.defaultToNull - Make missing fields default to `null`.\r\n     * Otherwise, use the default value for the column. Only applies for bulk\r\n     * inserts.\r\n     */\r\n    insert(values, { count, defaultToNull = true, } = {}) {\r\n        const method = 'POST';\r\n        const prefersHeaders = [];\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (!defaultToNull) {\r\n            prefersHeaders.push('missing=default');\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        if (Array.isArray(values)) {\r\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\r\n            if (columns.length > 0) {\r\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\r\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\r\n            }\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\r\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\r\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\r\n     * exist, or if it does exist, perform an alternative action depending on\r\n     * `ignoreDuplicates`.\r\n     *\r\n     * By default, upserted rows are not returned. To return it, chain the call\r\n     * with `.select()`.\r\n     *\r\n     * @param values - The values to upsert with. Pass an object to upsert a\r\n     * single row or an array to upsert multiple rows.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\r\n     * duplicate rows are determined. Two rows are duplicates if all the\r\n     * `onConflict` columns are equal.\r\n     *\r\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\r\n     * `false`, duplicate rows are merged with existing rows.\r\n     *\r\n     * @param options.count - Count algorithm to use to count upserted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     *\r\n     * @param options.defaultToNull - Make missing fields default to `null`.\r\n     * Otherwise, use the default value for the column. This only applies when\r\n     * inserting new rows, not when merging with existing rows under\r\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\r\n     */\r\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\r\n        const method = 'POST';\r\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\r\n        if (onConflict !== undefined)\r\n            this.url.searchParams.set('on_conflict', onConflict);\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (!defaultToNull) {\r\n            prefersHeaders.push('missing=default');\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        if (Array.isArray(values)) {\r\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\r\n            if (columns.length > 0) {\r\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\r\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\r\n            }\r\n        }\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an UPDATE on the table or view.\r\n     *\r\n     * By default, updated rows are not returned. To return it, chain the call\r\n     * with `.select()` after filters.\r\n     *\r\n     * @param values - The values to update with\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count updated rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    update(values, { count, } = {}) {\r\n        const method = 'PATCH';\r\n        const prefersHeaders = [];\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform a DELETE on the table or view.\r\n     *\r\n     * By default, deleted rows are not returned. To return it, chain the call\r\n     * with `.select()` after filters.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count deleted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    delete({ count, } = {}) {\r\n        const method = 'DELETE';\r\n        const prefersHeaders = [];\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.unshift(this.headers['Prefer']);\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        return new PostgrestFilterBuilder_1.default({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestQueryBuilder;\r\n//# sourceMappingURL=PostgrestQueryBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL1Bvc3RncmVzdFF1ZXJ5QnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlEQUFpRCxtQkFBTyxDQUFDLDhIQUEwQjtBQUNuRjtBQUNBLHVCQUF1QixZQUFZLGtCQUFrQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHVCQUF1QixJQUFJO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxNQUFNO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLCtCQUErQixJQUFJO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0YsT0FBTztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixxRUFBcUUsSUFBSTtBQUM5RjtBQUNBLDhDQUE4QyxzQ0FBc0M7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE1BQU07QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdGQUFnRixPQUFPO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsU0FBUyxJQUFJO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVMsSUFBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsTUFBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccG9zdGdyZXN0LWpzXFxkaXN0XFxjanNcXFBvc3RncmVzdFF1ZXJ5QnVpbGRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XHJcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0RmlsdGVyQnVpbGRlclwiKSk7XHJcbmNsYXNzIFBvc3RncmVzdFF1ZXJ5QnVpbGRlciB7XHJcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHsgaGVhZGVycyA9IHt9LCBzY2hlbWEsIGZldGNoLCB9KSB7XHJcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XHJcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcclxuICAgICAgICB0aGlzLnNjaGVtYSA9IHNjaGVtYTtcclxuICAgICAgICB0aGlzLmZldGNoID0gZmV0Y2g7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFBlcmZvcm0gYSBTRUxFQ1QgcXVlcnkgb24gdGhlIHRhYmxlIG9yIHZpZXcuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNvbHVtbnMgLSBUaGUgY29sdW1ucyB0byByZXRyaWV2ZSwgc2VwYXJhdGVkIGJ5IGNvbW1hcy4gQ29sdW1ucyBjYW4gYmUgcmVuYW1lZCB3aGVuIHJldHVybmVkIHdpdGggYGN1c3RvbU5hbWU6Y29sdW1uTmFtZWBcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE5hbWVkIHBhcmFtZXRlcnNcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5oZWFkIC0gV2hlbiBzZXQgdG8gYHRydWVgLCBgZGF0YWAgd2lsbCBub3QgYmUgcmV0dXJuZWQuXHJcbiAgICAgKiBVc2VmdWwgaWYgeW91IG9ubHkgbmVlZCB0aGUgY291bnQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMuY291bnQgLSBDb3VudCBhbGdvcml0aG0gdG8gdXNlIHRvIGNvdW50IHJvd3MgaW4gdGhlIHRhYmxlIG9yIHZpZXcuXHJcbiAgICAgKlxyXG4gICAgICogYFwiZXhhY3RcImA6IEV4YWN0IGJ1dCBzbG93IGNvdW50IGFsZ29yaXRobS4gUGVyZm9ybXMgYSBgQ09VTlQoKilgIHVuZGVyIHRoZVxyXG4gICAgICogaG9vZC5cclxuICAgICAqXHJcbiAgICAgKiBgXCJwbGFubmVkXCJgOiBBcHByb3hpbWF0ZWQgYnV0IGZhc3QgY291bnQgYWxnb3JpdGhtLiBVc2VzIHRoZSBQb3N0Z3Jlc1xyXG4gICAgICogc3RhdGlzdGljcyB1bmRlciB0aGUgaG9vZC5cclxuICAgICAqXHJcbiAgICAgKiBgXCJlc3RpbWF0ZWRcImA6IFVzZXMgZXhhY3QgY291bnQgZm9yIGxvdyBudW1iZXJzIGFuZCBwbGFubmVkIGNvdW50IGZvciBoaWdoXHJcbiAgICAgKiBudW1iZXJzLlxyXG4gICAgICovXHJcbiAgICBzZWxlY3QoY29sdW1ucywgeyBoZWFkID0gZmFsc2UsIGNvdW50LCB9ID0ge30pIHtcclxuICAgICAgICBjb25zdCBtZXRob2QgPSBoZWFkID8gJ0hFQUQnIDogJ0dFVCc7XHJcbiAgICAgICAgLy8gUmVtb3ZlIHdoaXRlc3BhY2VzIGV4Y2VwdCB3aGVuIHF1b3RlZFxyXG4gICAgICAgIGxldCBxdW90ZWQgPSBmYWxzZTtcclxuICAgICAgICBjb25zdCBjbGVhbmVkQ29sdW1ucyA9IChjb2x1bW5zICE9PSBudWxsICYmIGNvbHVtbnMgIT09IHZvaWQgMCA/IGNvbHVtbnMgOiAnKicpXHJcbiAgICAgICAgICAgIC5zcGxpdCgnJylcclxuICAgICAgICAgICAgLm1hcCgoYykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoL1xccy8udGVzdChjKSAmJiAhcXVvdGVkKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGMgPT09ICdcIicpIHtcclxuICAgICAgICAgICAgICAgIHF1b3RlZCA9ICFxdW90ZWQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGM7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLmpvaW4oJycpO1xyXG4gICAgICAgIHRoaXMudXJsLnNlYXJjaFBhcmFtcy5zZXQoJ3NlbGVjdCcsIGNsZWFuZWRDb2x1bW5zKTtcclxuICAgICAgICBpZiAoY291bnQpIHtcclxuICAgICAgICAgICAgdGhpcy5oZWFkZXJzWydQcmVmZXInXSA9IGBjb3VudD0ke2NvdW50fWA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcl8xLmRlZmF1bHQoe1xyXG4gICAgICAgICAgICBtZXRob2QsXHJcbiAgICAgICAgICAgIHVybDogdGhpcy51cmwsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSxcclxuICAgICAgICAgICAgZmV0Y2g6IHRoaXMuZmV0Y2gsXHJcbiAgICAgICAgICAgIGFsbG93RW1wdHk6IGZhbHNlLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtIGFuIElOU0VSVCBpbnRvIHRoZSB0YWJsZSBvciB2aWV3LlxyXG4gICAgICpcclxuICAgICAqIEJ5IGRlZmF1bHQsIGluc2VydGVkIHJvd3MgYXJlIG5vdCByZXR1cm5lZC4gVG8gcmV0dXJuIGl0LCBjaGFpbiB0aGUgY2FsbFxyXG4gICAgICogd2l0aCBgLnNlbGVjdCgpYC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWVzIC0gVGhlIHZhbHVlcyB0byBpbnNlcnQuIFBhc3MgYW4gb2JqZWN0IHRvIGluc2VydCBhIHNpbmdsZSByb3dcclxuICAgICAqIG9yIGFuIGFycmF5IHRvIGluc2VydCBtdWx0aXBsZSByb3dzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gTmFtZWQgcGFyYW1ldGVyc1xyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRpb25zLmNvdW50IC0gQ291bnQgYWxnb3JpdGhtIHRvIHVzZSB0byBjb3VudCBpbnNlcnRlZCByb3dzLlxyXG4gICAgICpcclxuICAgICAqIGBcImV4YWN0XCJgOiBFeGFjdCBidXQgc2xvdyBjb3VudCBhbGdvcml0aG0uIFBlcmZvcm1zIGEgYENPVU5UKCopYCB1bmRlciB0aGVcclxuICAgICAqIGhvb2QuXHJcbiAgICAgKlxyXG4gICAgICogYFwicGxhbm5lZFwiYDogQXBwcm94aW1hdGVkIGJ1dCBmYXN0IGNvdW50IGFsZ29yaXRobS4gVXNlcyB0aGUgUG9zdGdyZXNcclxuICAgICAqIHN0YXRpc3RpY3MgdW5kZXIgdGhlIGhvb2QuXHJcbiAgICAgKlxyXG4gICAgICogYFwiZXN0aW1hdGVkXCJgOiBVc2VzIGV4YWN0IGNvdW50IGZvciBsb3cgbnVtYmVycyBhbmQgcGxhbm5lZCBjb3VudCBmb3IgaGlnaFxyXG4gICAgICogbnVtYmVycy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5kZWZhdWx0VG9OdWxsIC0gTWFrZSBtaXNzaW5nIGZpZWxkcyBkZWZhdWx0IHRvIGBudWxsYC5cclxuICAgICAqIE90aGVyd2lzZSwgdXNlIHRoZSBkZWZhdWx0IHZhbHVlIGZvciB0aGUgY29sdW1uLiBPbmx5IGFwcGxpZXMgZm9yIGJ1bGtcclxuICAgICAqIGluc2VydHMuXHJcbiAgICAgKi9cclxuICAgIGluc2VydCh2YWx1ZXMsIHsgY291bnQsIGRlZmF1bHRUb051bGwgPSB0cnVlLCB9ID0ge30pIHtcclxuICAgICAgICBjb25zdCBtZXRob2QgPSAnUE9TVCc7XHJcbiAgICAgICAgY29uc3QgcHJlZmVyc0hlYWRlcnMgPSBbXTtcclxuICAgICAgICBpZiAodGhpcy5oZWFkZXJzWydQcmVmZXInXSkge1xyXG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY291bnQpIHtcclxuICAgICAgICAgICAgcHJlZmVyc0hlYWRlcnMucHVzaChgY291bnQ9JHtjb3VudH1gKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFkZWZhdWx0VG9OdWxsKSB7XHJcbiAgICAgICAgICAgIHByZWZlcnNIZWFkZXJzLnB1c2goJ21pc3Npbmc9ZGVmYXVsdCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmhlYWRlcnNbJ1ByZWZlciddID0gcHJlZmVyc0hlYWRlcnMuam9pbignLCcpO1xyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlcykpIHtcclxuICAgICAgICAgICAgY29uc3QgY29sdW1ucyA9IHZhbHVlcy5yZWR1Y2UoKGFjYywgeCkgPT4gYWNjLmNvbmNhdChPYmplY3Qua2V5cyh4KSksIFtdKTtcclxuICAgICAgICAgICAgaWYgKGNvbHVtbnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdW5pcXVlQ29sdW1ucyA9IFsuLi5uZXcgU2V0KGNvbHVtbnMpXS5tYXAoKGNvbHVtbikgPT4gYFwiJHtjb2x1bW59XCJgKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudXJsLnNlYXJjaFBhcmFtcy5zZXQoJ2NvbHVtbnMnLCB1bmlxdWVDb2x1bW5zLmpvaW4oJywnKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCh7XHJcbiAgICAgICAgICAgIG1ldGhvZCxcclxuICAgICAgICAgICAgdXJsOiB0aGlzLnVybCxcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICAgICAgICBzY2hlbWE6IHRoaXMuc2NoZW1hLFxyXG4gICAgICAgICAgICBib2R5OiB2YWx1ZXMsXHJcbiAgICAgICAgICAgIGZldGNoOiB0aGlzLmZldGNoLFxyXG4gICAgICAgICAgICBhbGxvd0VtcHR5OiBmYWxzZSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGVyZm9ybSBhbiBVUFNFUlQgb24gdGhlIHRhYmxlIG9yIHZpZXcuIERlcGVuZGluZyBvbiB0aGUgY29sdW1uKHMpIHBhc3NlZFxyXG4gICAgICogdG8gYG9uQ29uZmxpY3RgLCBgLnVwc2VydCgpYCBhbGxvd3MgeW91IHRvIHBlcmZvcm0gdGhlIGVxdWl2YWxlbnQgb2ZcclxuICAgICAqIGAuaW5zZXJ0KClgIGlmIGEgcm93IHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgYG9uQ29uZmxpY3RgIGNvbHVtbnMgZG9lc24ndFxyXG4gICAgICogZXhpc3QsIG9yIGlmIGl0IGRvZXMgZXhpc3QsIHBlcmZvcm0gYW4gYWx0ZXJuYXRpdmUgYWN0aW9uIGRlcGVuZGluZyBvblxyXG4gICAgICogYGlnbm9yZUR1cGxpY2F0ZXNgLlxyXG4gICAgICpcclxuICAgICAqIEJ5IGRlZmF1bHQsIHVwc2VydGVkIHJvd3MgYXJlIG5vdCByZXR1cm5lZC4gVG8gcmV0dXJuIGl0LCBjaGFpbiB0aGUgY2FsbFxyXG4gICAgICogd2l0aCBgLnNlbGVjdCgpYC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWVzIC0gVGhlIHZhbHVlcyB0byB1cHNlcnQgd2l0aC4gUGFzcyBhbiBvYmplY3QgdG8gdXBzZXJ0IGFcclxuICAgICAqIHNpbmdsZSByb3cgb3IgYW4gYXJyYXkgdG8gdXBzZXJ0IG11bHRpcGxlIHJvd3MuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBOYW1lZCBwYXJhbWV0ZXJzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMub25Db25mbGljdCAtIENvbW1hLXNlcGFyYXRlZCBVTklRVUUgY29sdW1uKHMpIHRvIHNwZWNpZnkgaG93XHJcbiAgICAgKiBkdXBsaWNhdGUgcm93cyBhcmUgZGV0ZXJtaW5lZC4gVHdvIHJvd3MgYXJlIGR1cGxpY2F0ZXMgaWYgYWxsIHRoZVxyXG4gICAgICogYG9uQ29uZmxpY3RgIGNvbHVtbnMgYXJlIGVxdWFsLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRpb25zLmlnbm9yZUR1cGxpY2F0ZXMgLSBJZiBgdHJ1ZWAsIGR1cGxpY2F0ZSByb3dzIGFyZSBpZ25vcmVkLiBJZlxyXG4gICAgICogYGZhbHNlYCwgZHVwbGljYXRlIHJvd3MgYXJlIG1lcmdlZCB3aXRoIGV4aXN0aW5nIHJvd3MuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMuY291bnQgLSBDb3VudCBhbGdvcml0aG0gdG8gdXNlIHRvIGNvdW50IHVwc2VydGVkIHJvd3MuXHJcbiAgICAgKlxyXG4gICAgICogYFwiZXhhY3RcImA6IEV4YWN0IGJ1dCBzbG93IGNvdW50IGFsZ29yaXRobS4gUGVyZm9ybXMgYSBgQ09VTlQoKilgIHVuZGVyIHRoZVxyXG4gICAgICogaG9vZC5cclxuICAgICAqXHJcbiAgICAgKiBgXCJwbGFubmVkXCJgOiBBcHByb3hpbWF0ZWQgYnV0IGZhc3QgY291bnQgYWxnb3JpdGhtLiBVc2VzIHRoZSBQb3N0Z3Jlc1xyXG4gICAgICogc3RhdGlzdGljcyB1bmRlciB0aGUgaG9vZC5cclxuICAgICAqXHJcbiAgICAgKiBgXCJlc3RpbWF0ZWRcImA6IFVzZXMgZXhhY3QgY291bnQgZm9yIGxvdyBudW1iZXJzIGFuZCBwbGFubmVkIGNvdW50IGZvciBoaWdoXHJcbiAgICAgKiBudW1iZXJzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRpb25zLmRlZmF1bHRUb051bGwgLSBNYWtlIG1pc3NpbmcgZmllbGRzIGRlZmF1bHQgdG8gYG51bGxgLlxyXG4gICAgICogT3RoZXJ3aXNlLCB1c2UgdGhlIGRlZmF1bHQgdmFsdWUgZm9yIHRoZSBjb2x1bW4uIFRoaXMgb25seSBhcHBsaWVzIHdoZW5cclxuICAgICAqIGluc2VydGluZyBuZXcgcm93cywgbm90IHdoZW4gbWVyZ2luZyB3aXRoIGV4aXN0aW5nIHJvd3MgdW5kZXJcclxuICAgICAqIGBpZ25vcmVEdXBsaWNhdGVzOiBmYWxzZWAuIFRoaXMgYWxzbyBvbmx5IGFwcGxpZXMgd2hlbiBkb2luZyBidWxrIHVwc2VydHMuXHJcbiAgICAgKi9cclxuICAgIHVwc2VydCh2YWx1ZXMsIHsgb25Db25mbGljdCwgaWdub3JlRHVwbGljYXRlcyA9IGZhbHNlLCBjb3VudCwgZGVmYXVsdFRvTnVsbCA9IHRydWUsIH0gPSB7fSkge1xyXG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdQT1NUJztcclxuICAgICAgICBjb25zdCBwcmVmZXJzSGVhZGVycyA9IFtgcmVzb2x1dGlvbj0ke2lnbm9yZUR1cGxpY2F0ZXMgPyAnaWdub3JlJyA6ICdtZXJnZSd9LWR1cGxpY2F0ZXNgXTtcclxuICAgICAgICBpZiAob25Db25mbGljdCAhPT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aGlzLnVybC5zZWFyY2hQYXJhbXMuc2V0KCdvbl9jb25mbGljdCcsIG9uQ29uZmxpY3QpO1xyXG4gICAgICAgIGlmICh0aGlzLmhlYWRlcnNbJ1ByZWZlciddKSB7XHJcbiAgICAgICAgICAgIHByZWZlcnNIZWFkZXJzLnB1c2godGhpcy5oZWFkZXJzWydQcmVmZXInXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjb3VudCkge1xyXG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKGBjb3VudD0ke2NvdW50fWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWRlZmF1bHRUb051bGwpIHtcclxuICAgICAgICAgICAgcHJlZmVyc0hlYWRlcnMucHVzaCgnbWlzc2luZz1kZWZhdWx0Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaGVhZGVyc1snUHJlZmVyJ10gPSBwcmVmZXJzSGVhZGVycy5qb2luKCcsJyk7XHJcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xyXG4gICAgICAgICAgICBjb25zdCBjb2x1bW5zID0gdmFsdWVzLnJlZHVjZSgoYWNjLCB4KSA9PiBhY2MuY29uY2F0KE9iamVjdC5rZXlzKHgpKSwgW10pO1xyXG4gICAgICAgICAgICBpZiAoY29sdW1ucy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB1bmlxdWVDb2x1bW5zID0gWy4uLm5ldyBTZXQoY29sdW1ucyldLm1hcCgoY29sdW1uKSA9PiBgXCIke2NvbHVtbn1cImApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy51cmwuc2VhcmNoUGFyYW1zLnNldCgnY29sdW1ucycsIHVuaXF1ZUNvbHVtbnMuam9pbignLCcpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbmV3IFBvc3RncmVzdEZpbHRlckJ1aWxkZXJfMS5kZWZhdWx0KHtcclxuICAgICAgICAgICAgbWV0aG9kLFxyXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgICAgIHNjaGVtYTogdGhpcy5zY2hlbWEsXHJcbiAgICAgICAgICAgIGJvZHk6IHZhbHVlcyxcclxuICAgICAgICAgICAgZmV0Y2g6IHRoaXMuZmV0Y2gsXHJcbiAgICAgICAgICAgIGFsbG93RW1wdHk6IGZhbHNlLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtIGFuIFVQREFURSBvbiB0aGUgdGFibGUgb3Igdmlldy5cclxuICAgICAqXHJcbiAgICAgKiBCeSBkZWZhdWx0LCB1cGRhdGVkIHJvd3MgYXJlIG5vdCByZXR1cm5lZC4gVG8gcmV0dXJuIGl0LCBjaGFpbiB0aGUgY2FsbFxyXG4gICAgICogd2l0aCBgLnNlbGVjdCgpYCBhZnRlciBmaWx0ZXJzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB2YWx1ZXMgLSBUaGUgdmFsdWVzIHRvIHVwZGF0ZSB3aXRoXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBOYW1lZCBwYXJhbWV0ZXJzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMuY291bnQgLSBDb3VudCBhbGdvcml0aG0gdG8gdXNlIHRvIGNvdW50IHVwZGF0ZWQgcm93cy5cclxuICAgICAqXHJcbiAgICAgKiBgXCJleGFjdFwiYDogRXhhY3QgYnV0IHNsb3cgY291bnQgYWxnb3JpdGhtLiBQZXJmb3JtcyBhIGBDT1VOVCgqKWAgdW5kZXIgdGhlXHJcbiAgICAgKiBob29kLlxyXG4gICAgICpcclxuICAgICAqIGBcInBsYW5uZWRcImA6IEFwcHJveGltYXRlZCBidXQgZmFzdCBjb3VudCBhbGdvcml0aG0uIFVzZXMgdGhlIFBvc3RncmVzXHJcbiAgICAgKiBzdGF0aXN0aWNzIHVuZGVyIHRoZSBob29kLlxyXG4gICAgICpcclxuICAgICAqIGBcImVzdGltYXRlZFwiYDogVXNlcyBleGFjdCBjb3VudCBmb3IgbG93IG51bWJlcnMgYW5kIHBsYW5uZWQgY291bnQgZm9yIGhpZ2hcclxuICAgICAqIG51bWJlcnMuXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZSh2YWx1ZXMsIHsgY291bnQsIH0gPSB7fSkge1xyXG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdQQVRDSCc7XHJcbiAgICAgICAgY29uc3QgcHJlZmVyc0hlYWRlcnMgPSBbXTtcclxuICAgICAgICBpZiAodGhpcy5oZWFkZXJzWydQcmVmZXInXSkge1xyXG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY291bnQpIHtcclxuICAgICAgICAgICAgcHJlZmVyc0hlYWRlcnMucHVzaChgY291bnQ9JHtjb3VudH1gKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5oZWFkZXJzWydQcmVmZXInXSA9IHByZWZlcnNIZWFkZXJzLmpvaW4oJywnKTtcclxuICAgICAgICByZXR1cm4gbmV3IFBvc3RncmVzdEZpbHRlckJ1aWxkZXJfMS5kZWZhdWx0KHtcclxuICAgICAgICAgICAgbWV0aG9kLFxyXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgICAgIHNjaGVtYTogdGhpcy5zY2hlbWEsXHJcbiAgICAgICAgICAgIGJvZHk6IHZhbHVlcyxcclxuICAgICAgICAgICAgZmV0Y2g6IHRoaXMuZmV0Y2gsXHJcbiAgICAgICAgICAgIGFsbG93RW1wdHk6IGZhbHNlLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtIGEgREVMRVRFIG9uIHRoZSB0YWJsZSBvciB2aWV3LlxyXG4gICAgICpcclxuICAgICAqIEJ5IGRlZmF1bHQsIGRlbGV0ZWQgcm93cyBhcmUgbm90IHJldHVybmVkLiBUbyByZXR1cm4gaXQsIGNoYWluIHRoZSBjYWxsXHJcbiAgICAgKiB3aXRoIGAuc2VsZWN0KClgIGFmdGVyIGZpbHRlcnMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBOYW1lZCBwYXJhbWV0ZXJzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMuY291bnQgLSBDb3VudCBhbGdvcml0aG0gdG8gdXNlIHRvIGNvdW50IGRlbGV0ZWQgcm93cy5cclxuICAgICAqXHJcbiAgICAgKiBgXCJleGFjdFwiYDogRXhhY3QgYnV0IHNsb3cgY291bnQgYWxnb3JpdGhtLiBQZXJmb3JtcyBhIGBDT1VOVCgqKWAgdW5kZXIgdGhlXHJcbiAgICAgKiBob29kLlxyXG4gICAgICpcclxuICAgICAqIGBcInBsYW5uZWRcImA6IEFwcHJveGltYXRlZCBidXQgZmFzdCBjb3VudCBhbGdvcml0aG0uIFVzZXMgdGhlIFBvc3RncmVzXHJcbiAgICAgKiBzdGF0aXN0aWNzIHVuZGVyIHRoZSBob29kLlxyXG4gICAgICpcclxuICAgICAqIGBcImVzdGltYXRlZFwiYDogVXNlcyBleGFjdCBjb3VudCBmb3IgbG93IG51bWJlcnMgYW5kIHBsYW5uZWQgY291bnQgZm9yIGhpZ2hcclxuICAgICAqIG51bWJlcnMuXHJcbiAgICAgKi9cclxuICAgIGRlbGV0ZSh7IGNvdW50LCB9ID0ge30pIHtcclxuICAgICAgICBjb25zdCBtZXRob2QgPSAnREVMRVRFJztcclxuICAgICAgICBjb25zdCBwcmVmZXJzSGVhZGVycyA9IFtdO1xyXG4gICAgICAgIGlmIChjb3VudCkge1xyXG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKGBjb3VudD0ke2NvdW50fWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5oZWFkZXJzWydQcmVmZXInXSkge1xyXG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy51bnNoaWZ0KHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmhlYWRlcnNbJ1ByZWZlciddID0gcHJlZmVyc0hlYWRlcnMuam9pbignLCcpO1xyXG4gICAgICAgIHJldHVybiBuZXcgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcl8xLmRlZmF1bHQoe1xyXG4gICAgICAgICAgICBtZXRob2QsXHJcbiAgICAgICAgICAgIHVybDogdGhpcy51cmwsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSxcclxuICAgICAgICAgICAgZmV0Y2g6IHRoaXMuZmV0Y2gsXHJcbiAgICAgICAgICAgIGFsbG93RW1wdHk6IGZhbHNlLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuZGVmYXVsdCA9IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcjtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UG9zdGdyZXN0UXVlcnlCdWlsZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\r\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\r\n    /**\r\n     * Perform a SELECT on the query result.\r\n     *\r\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\r\n     * return modified rows. By calling this method, modified rows are returned in\r\n     * `data`.\r\n     *\r\n     * @param columns - The columns to retrieve, separated by commas\r\n     */\r\n    select(columns) {\r\n        // Remove whitespaces except when quoted\r\n        let quoted = false;\r\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\r\n            .split('')\r\n            .map((c) => {\r\n            if (/\\s/.test(c) && !quoted) {\r\n                return '';\r\n            }\r\n            if (c === '\"') {\r\n                quoted = !quoted;\r\n            }\r\n            return c;\r\n        })\r\n            .join('');\r\n        this.url.searchParams.set('select', cleanedColumns);\r\n        if (this.headers['Prefer']) {\r\n            this.headers['Prefer'] += ',';\r\n        }\r\n        this.headers['Prefer'] += 'return=representation';\r\n        return this;\r\n    }\r\n    /**\r\n     * Order the query result by `column`.\r\n     *\r\n     * You can call this method multiple times to order by multiple columns.\r\n     *\r\n     * You can order referenced tables, but it only affects the ordering of the\r\n     * parent table if you use `!inner` in the query.\r\n     *\r\n     * @param column - The column to order by\r\n     * @param options - Named parameters\r\n     * @param options.ascending - If `true`, the result will be in ascending order\r\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\r\n     * `null`s appear last.\r\n     * @param options.referencedTable - Set this to order a referenced table by\r\n     * its columns\r\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\r\n     * instead\r\n     */\r\n    order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const key = referencedTable ? `${referencedTable}.order` : 'order';\r\n        const existingOrder = this.url.searchParams.get(key);\r\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Limit the query result by `count`.\r\n     *\r\n     * @param count - The maximum number of rows to return\r\n     * @param options - Named parameters\r\n     * @param options.referencedTable - Set this to limit rows of referenced\r\n     * tables instead of the parent table\r\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\r\n     * instead\r\n     */\r\n    limit(count, { foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\r\n        this.url.searchParams.set(key, `${count}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\r\n     * Only records within this range are returned.\r\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\r\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\r\n     * and fourth rows of the query.\r\n     *\r\n     * @param from - The starting index from which to limit the result\r\n     * @param to - The last index to which to limit the result\r\n     * @param options - Named parameters\r\n     * @param options.referencedTable - Set this to limit rows of referenced\r\n     * tables instead of the parent table\r\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\r\n     * instead\r\n     */\r\n    range(from, to, { foreignTable, referencedTable = foreignTable, } = {}) {\r\n        const keyOffset = typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`;\r\n        const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\r\n        this.url.searchParams.set(keyOffset, `${from}`);\r\n        // Range is inclusive, so add 1\r\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the AbortSignal for the fetch request.\r\n     *\r\n     * @param signal - The AbortSignal to use for the fetch request\r\n     */\r\n    abortSignal(signal) {\r\n        this.signal = signal;\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a single object instead of an array of objects.\r\n     *\r\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\r\n     * returns an error.\r\n     */\r\n    single() {\r\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a single object instead of an array of objects.\r\n     *\r\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\r\n     * this returns an error.\r\n     */\r\n    maybeSingle() {\r\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\r\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\r\n        if (this.method === 'GET') {\r\n            this.headers['Accept'] = 'application/json';\r\n        }\r\n        else {\r\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\r\n        }\r\n        this.isMaybeSingle = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a string in CSV format.\r\n     */\r\n    csv() {\r\n        this.headers['Accept'] = 'text/csv';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\r\n     */\r\n    geojson() {\r\n        this.headers['Accept'] = 'application/geo+json';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as the EXPLAIN plan for the query.\r\n     *\r\n     * You need to enable the\r\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\r\n     * setting before using this method.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.analyze - If `true`, the query will be executed and the\r\n     * actual run time will be returned\r\n     *\r\n     * @param options.verbose - If `true`, the query identifier will be returned\r\n     * and `data` will include the output columns of the query\r\n     *\r\n     * @param options.settings - If `true`, include information on configuration\r\n     * parameters that affect query planning\r\n     *\r\n     * @param options.buffers - If `true`, include information on buffer usage\r\n     *\r\n     * @param options.wal - If `true`, include information on WAL record generation\r\n     *\r\n     * @param options.format - The format of the output, can be `\"text\"` (default)\r\n     * or `\"json\"`\r\n     */\r\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\r\n        var _a;\r\n        const options = [\r\n            analyze ? 'analyze' : null,\r\n            verbose ? 'verbose' : null,\r\n            settings ? 'settings' : null,\r\n            buffers ? 'buffers' : null,\r\n            wal ? 'wal' : null,\r\n        ]\r\n            .filter(Boolean)\r\n            .join('|');\r\n        // An Accept header can carry multiple media types but postgrest-js always sends one\r\n        const forMediatype = (_a = this.headers['Accept']) !== null && _a !== void 0 ? _a : 'application/json';\r\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\r\n        if (format === 'json')\r\n            return this;\r\n        else\r\n            return this;\r\n    }\r\n    /**\r\n     * Rollback the query.\r\n     *\r\n     * `data` will still be returned, but the query is not committed.\r\n     */\r\n    rollback() {\r\n        var _a;\r\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\r\n            this.headers['Prefer'] += ',tx=rollback';\r\n        }\r\n        else {\r\n            this.headers['Prefer'] = 'tx=rollback';\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Override the type of the returned `data`.\r\n     *\r\n     * @typeParam NewResult - The new result type to override with\r\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\r\n     */\r\n    returns() {\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = PostgrestTransformBuilder;\r\n//# sourceMappingURL=PostgrestTransformBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/constants.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DEFAULT_HEADERS = void 0;\r\nconst version_1 = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js\");\r\nexports.DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version_1.version}` };\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsa0JBQWtCLG1CQUFPLENBQUMsZ0dBQVc7QUFDckMsdUJBQXVCLEtBQUssaUNBQWlDLGtCQUFrQjtBQUMvRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxwb3N0Z3Jlc3QtanNcXGRpc3RcXGNqc1xcY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuREVGQVVMVF9IRUFERVJTID0gdm9pZCAwO1xyXG5jb25zdCB2ZXJzaW9uXzEgPSByZXF1aXJlKFwiLi92ZXJzaW9uXCIpO1xyXG5leHBvcnRzLkRFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgcG9zdGdyZXN0LWpzLyR7dmVyc2lvbl8xLnZlcnNpb259YCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\r\n// Always update wrapper.mjs when updating this file.\r\nconst PostgrestClient_1 = __importDefault(__webpack_require__(/*! ./PostgrestClient */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\"));\r\nexports.PostgrestClient = PostgrestClient_1.default;\r\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\r\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\r\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\r\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\r\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\r\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\r\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\r\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\r\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\r\nexports.PostgrestError = PostgrestError_1.default;\r\nexports[\"default\"] = {\r\n    PostgrestClient: PostgrestClient_1.default,\r\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\r\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\r\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\r\n    PostgrestBuilder: PostgrestBuilder_1.default,\r\n    PostgrestError: PostgrestError_1.default,\r\n};\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsd0JBQXdCLEdBQUcsaUNBQWlDLEdBQUcsOEJBQThCLEdBQUcsNkJBQTZCLEdBQUcsdUJBQXVCO0FBQ2hMO0FBQ0EsMENBQTBDLG1CQUFPLENBQUMsZ0hBQW1CO0FBQ3JFLHVCQUF1QjtBQUN2QixnREFBZ0QsbUJBQU8sQ0FBQyw0SEFBeUI7QUFDakYsNkJBQTZCO0FBQzdCLGlEQUFpRCxtQkFBTyxDQUFDLDhIQUEwQjtBQUNuRiw4QkFBOEI7QUFDOUIsb0RBQW9ELG1CQUFPLENBQUMsb0lBQTZCO0FBQ3pGLGlDQUFpQztBQUNqQywyQ0FBMkMsbUJBQU8sQ0FBQyxrSEFBb0I7QUFDdkUsd0JBQXdCO0FBQ3hCLHlDQUF5QyxtQkFBTyxDQUFDLDhHQUFrQjtBQUNuRSxzQkFBc0I7QUFDdEIsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHBvc3RncmVzdC1qc1xcZGlzdFxcY2pzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XHJcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLlBvc3RncmVzdEVycm9yID0gZXhwb3J0cy5Qb3N0Z3Jlc3RCdWlsZGVyID0gZXhwb3J0cy5Qb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyID0gZXhwb3J0cy5Qb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyID0gZXhwb3J0cy5Qb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIgPSBleHBvcnRzLlBvc3RncmVzdENsaWVudCA9IHZvaWQgMDtcclxuLy8gQWx3YXlzIHVwZGF0ZSB3cmFwcGVyLm1qcyB3aGVuIHVwZGF0aW5nIHRoaXMgZmlsZS5cclxuY29uc3QgUG9zdGdyZXN0Q2xpZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0Q2xpZW50XCIpKTtcclxuZXhwb3J0cy5Qb3N0Z3Jlc3RDbGllbnQgPSBQb3N0Z3Jlc3RDbGllbnRfMS5kZWZhdWx0O1xyXG5jb25zdCBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Qb3N0Z3Jlc3RRdWVyeUJ1aWxkZXJcIikpO1xyXG5leHBvcnRzLlBvc3RncmVzdFF1ZXJ5QnVpbGRlciA9IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcl8xLmRlZmF1bHQ7XHJcbmNvbnN0IFBvc3RncmVzdEZpbHRlckJ1aWxkZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Qb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXCIpKTtcclxuZXhwb3J0cy5Qb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyID0gUG9zdGdyZXN0RmlsdGVyQnVpbGRlcl8xLmRlZmF1bHQ7XHJcbmNvbnN0IFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Qb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyXCIpKTtcclxuZXhwb3J0cy5Qb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyID0gUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlcl8xLmRlZmF1bHQ7XHJcbmNvbnN0IFBvc3RncmVzdEJ1aWxkZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Qb3N0Z3Jlc3RCdWlsZGVyXCIpKTtcclxuZXhwb3J0cy5Qb3N0Z3Jlc3RCdWlsZGVyID0gUG9zdGdyZXN0QnVpbGRlcl8xLmRlZmF1bHQ7XHJcbmNvbnN0IFBvc3RncmVzdEVycm9yXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0RXJyb3JcIikpO1xyXG5leHBvcnRzLlBvc3RncmVzdEVycm9yID0gUG9zdGdyZXN0RXJyb3JfMS5kZWZhdWx0O1xyXG5leHBvcnRzLmRlZmF1bHQgPSB7XHJcbiAgICBQb3N0Z3Jlc3RDbGllbnQ6IFBvc3RncmVzdENsaWVudF8xLmRlZmF1bHQsXHJcbiAgICBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXI6IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcl8xLmRlZmF1bHQsXHJcbiAgICBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyOiBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCxcclxuICAgIFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXI6IFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMS5kZWZhdWx0LFxyXG4gICAgUG9zdGdyZXN0QnVpbGRlcjogUG9zdGdyZXN0QnVpbGRlcl8xLmRlZmF1bHQsXHJcbiAgICBQb3N0Z3Jlc3RFcnJvcjogUG9zdGdyZXN0RXJyb3JfMS5kZWZhdWx0LFxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.version = void 0;\r\nexports.version = '0.0.0-automated';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxwb3N0Z3Jlc3QtanNcXGRpc3RcXGNqc1xcdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLnZlcnNpb24gPSB2b2lkIDA7XHJcbmV4cG9ydHMudmVyc2lvbiA9ICcwLjAuMC1hdXRvbWF0ZWQnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgrestBuilder: () => (/* binding */ PostgrestBuilder),\n/* harmony export */   PostgrestClient: () => (/* binding */ PostgrestClient),\n/* harmony export */   PostgrestError: () => (/* binding */ PostgrestError),\n/* harmony export */   PostgrestFilterBuilder: () => (/* binding */ PostgrestFilterBuilder),\n/* harmony export */   PostgrestQueryBuilder: () => (/* binding */ PostgrestQueryBuilder),\n/* harmony export */   PostgrestTransformBuilder: () => (/* binding */ PostgrestTransformBuilder),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cjs/index.js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js\");\n\r\nconst {\r\n  PostgrestClient,\r\n  PostgrestQueryBuilder,\r\n  PostgrestFilterBuilder,\r\n  PostgrestTransformBuilder,\r\n  PostgrestBuilder,\r\n  PostgrestError,\r\n} = _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__\r\n\r\n\r\n\r\n// compatibility with CJS output\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  PostgrestClient,\r\n  PostgrestQueryBuilder,\r\n  PostgrestFilterBuilder,\r\n  PostgrestTransformBuilder,\r\n  PostgrestBuilder,\r\n  PostgrestError,\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvZXNtL3dyYXBwZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLDBDQUFLO0FBQ1Q7QUFRQztBQUNEO0FBQ0E7QUFDQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccG9zdGdyZXN0LWpzXFxkaXN0XFxlc21cXHdyYXBwZXIubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbmRleCBmcm9tICcuLi9janMvaW5kZXguanMnXHJcbmNvbnN0IHtcclxuICBQb3N0Z3Jlc3RDbGllbnQsXHJcbiAgUG9zdGdyZXN0UXVlcnlCdWlsZGVyLFxyXG4gIFBvc3RncmVzdEZpbHRlckJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlcixcclxuICBQb3N0Z3Jlc3RCdWlsZGVyLFxyXG4gIFBvc3RncmVzdEVycm9yLFxyXG59ID0gaW5kZXhcclxuXHJcbmV4cG9ydCB7XHJcbiAgUG9zdGdyZXN0QnVpbGRlcixcclxuICBQb3N0Z3Jlc3RDbGllbnQsXHJcbiAgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcixcclxuICBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlcixcclxuICBQb3N0Z3Jlc3RFcnJvcixcclxufVxyXG5cclxuLy8gY29tcGF0aWJpbGl0eSB3aXRoIENKUyBvdXRwdXRcclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIFBvc3RncmVzdENsaWVudCxcclxuICBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcixcclxuICBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyLFxyXG4gIFBvc3RncmVzdEJ1aWxkZXIsXHJcbiAgUG9zdGdyZXN0RXJyb3IsXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: () => (/* binding */ REALTIME_CHANNEL_STATES),\n/* harmony export */   REALTIME_LISTEN_TYPES: () => (/* binding */ REALTIME_LISTEN_TYPES),\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: () => (/* binding */ REALTIME_POSTGRES_CHANGES_LISTEN_EVENT),\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: () => (/* binding */ REALTIME_SUBSCRIBE_STATES),\n/* harmony export */   \"default\": () => (/* binding */ RealtimeChannel)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_push__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/push */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/timer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RealtimePresence */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nvar REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\r\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\r\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\r\nvar REALTIME_LISTEN_TYPES;\r\n(function (REALTIME_LISTEN_TYPES) {\r\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\r\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\r\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\r\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\r\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\r\nvar REALTIME_SUBSCRIBE_STATES;\r\n(function (REALTIME_SUBSCRIBE_STATES) {\r\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\r\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\r\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\r\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\r\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\r\nconst REALTIME_CHANNEL_STATES = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES;\r\n/** A channel is the basic building block of Realtime\r\n * and narrows the scope of data flow to subscribed clients.\r\n * You can think of a channel as a chatroom where participants are able to see who's online\r\n * and send and receive messages.\r\n */\r\nclass RealtimeChannel {\r\n    constructor(\r\n    /** Topic name can be any string. */\r\n    topic, params = { config: {} }, socket) {\r\n        this.topic = topic;\r\n        this.params = params;\r\n        this.socket = socket;\r\n        this.bindings = {};\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n        this.joinedOnce = false;\r\n        this.pushBuffer = [];\r\n        this.subTopic = topic.replace(/^realtime:/i, '');\r\n        this.params.config = Object.assign({\r\n            broadcast: { ack: false, self: false },\r\n            presence: { key: '' },\r\n            private: false,\r\n        }, params.config);\r\n        this.timeout = this.socket.timeout;\r\n        this.joinPush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.join, this.params, this.timeout);\r\n        this.rejoinTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\r\n        this.joinPush.receive('ok', () => {\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\r\n            this.rejoinTimer.reset();\r\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\r\n            this.pushBuffer = [];\r\n        });\r\n        this._onClose(() => {\r\n            this.rejoinTimer.reset();\r\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n            this.socket._remove(this);\r\n        });\r\n        this._onError((reason) => {\r\n            if (this._isLeaving() || this._isClosed()) {\r\n                return;\r\n            }\r\n            this.socket.log('channel', `error ${this.topic}`, reason);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n            this.rejoinTimer.scheduleTimeout();\r\n        });\r\n        this.joinPush.receive('timeout', () => {\r\n            if (!this._isJoining()) {\r\n                return;\r\n            }\r\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n            this.rejoinTimer.scheduleTimeout();\r\n        });\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.reply, {}, (payload, ref) => {\r\n            this._trigger(this._replyEventName(ref), payload);\r\n        });\r\n        this.presence = new _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\r\n        this.broadcastEndpointURL =\r\n            (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_4__.httpEndpointURL)(this.socket.endPoint) + '/api/broadcast';\r\n        this.private = this.params.config.private || false;\r\n    }\r\n    /** Subscribe registers your client with the server */\r\n    subscribe(callback, timeout = this.timeout) {\r\n        var _a, _b;\r\n        if (!this.socket.isConnected()) {\r\n            this.socket.connect();\r\n        }\r\n        if (this.joinedOnce) {\r\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\r\n        }\r\n        else {\r\n            const { config: { broadcast, presence, private: isPrivate }, } = this.params;\r\n            this._onError((e) => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\r\n            this._onClose(() => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\r\n            const accessTokenPayload = {};\r\n            const config = {\r\n                broadcast,\r\n                presence,\r\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\r\n                private: isPrivate,\r\n            };\r\n            if (this.socket.accessTokenValue) {\r\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\r\n            }\r\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\r\n            this.joinedOnce = true;\r\n            this._rejoin(timeout);\r\n            this.joinPush\r\n                .receive('ok', async ({ postgres_changes }) => {\r\n                var _a;\r\n                this.socket.setAuth();\r\n                if (postgres_changes === undefined) {\r\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\r\n                    return;\r\n                }\r\n                else {\r\n                    const clientPostgresBindings = this.bindings.postgres_changes;\r\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\r\n                    const newPostgresBindings = [];\r\n                    for (let i = 0; i < bindingsLen; i++) {\r\n                        const clientPostgresBinding = clientPostgresBindings[i];\r\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\r\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\r\n                        if (serverPostgresFilter &&\r\n                            serverPostgresFilter.event === event &&\r\n                            serverPostgresFilter.schema === schema &&\r\n                            serverPostgresFilter.table === table &&\r\n                            serverPostgresFilter.filter === filter) {\r\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\r\n                        }\r\n                        else {\r\n                            this.unsubscribe();\r\n                            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error('mismatch between server and client bindings for postgres changes'));\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.bindings.postgres_changes = newPostgresBindings;\r\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\r\n                    return;\r\n                }\r\n            })\r\n                .receive('error', (error) => {\r\n                this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\r\n                return;\r\n            })\r\n                .receive('timeout', () => {\r\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\r\n                return;\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    presenceState() {\r\n        return this.presence.state;\r\n    }\r\n    async track(payload, opts = {}) {\r\n        return await this.send({\r\n            type: 'presence',\r\n            event: 'track',\r\n            payload,\r\n        }, opts.timeout || this.timeout);\r\n    }\r\n    async untrack(opts = {}) {\r\n        return await this.send({\r\n            type: 'presence',\r\n            event: 'untrack',\r\n        }, opts);\r\n    }\r\n    on(type, filter, callback) {\r\n        return this._on(type, filter, callback);\r\n    }\r\n    /**\r\n     * Sends a message into the channel.\r\n     *\r\n     * @param args Arguments to send to channel\r\n     * @param args.type The type of event to send\r\n     * @param args.event The name of the event being sent\r\n     * @param args.payload Payload to be sent\r\n     * @param opts Options to be used during the send process\r\n     */\r\n    async send(args, opts = {}) {\r\n        var _a, _b;\r\n        if (!this._canPush() && args.type === 'broadcast') {\r\n            const { event, payload: endpoint_payload } = args;\r\n            const authorization = this.socket.accessTokenValue\r\n                ? `Bearer ${this.socket.accessTokenValue}`\r\n                : '';\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: authorization,\r\n                    apikey: this.socket.apiKey ? this.socket.apiKey : '',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    messages: [\r\n                        {\r\n                            topic: this.subTopic,\r\n                            event,\r\n                            payload: endpoint_payload,\r\n                            private: this.private,\r\n                        },\r\n                    ],\r\n                }),\r\n            };\r\n            try {\r\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\r\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\r\n                return response.ok ? 'ok' : 'error';\r\n            }\r\n            catch (error) {\r\n                if (error.name === 'AbortError') {\r\n                    return 'timed out';\r\n                }\r\n                else {\r\n                    return 'error';\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return new Promise((resolve) => {\r\n                var _a, _b, _c;\r\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\r\n                if (args.type === 'broadcast' && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\r\n                    resolve('ok');\r\n                }\r\n                push.receive('ok', () => resolve('ok'));\r\n                push.receive('error', () => resolve('error'));\r\n                push.receive('timeout', () => resolve('timed out'));\r\n            });\r\n        }\r\n    }\r\n    updateJoinPayload(payload) {\r\n        this.joinPush.updatePayload(payload);\r\n    }\r\n    /**\r\n     * Leaves the channel.\r\n     *\r\n     * Unsubscribes from server events, and instructs channel to terminate on server.\r\n     * Triggers onClose() hooks.\r\n     *\r\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\r\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\r\n     */\r\n    unsubscribe(timeout = this.timeout) {\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\r\n        const onClose = () => {\r\n            this.socket.log('channel', `leave ${this.topic}`);\r\n            this._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, 'leave', this._joinRef());\r\n        };\r\n        this.joinPush.destroy();\r\n        return new Promise((resolve) => {\r\n            const leavePush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.leave, {}, timeout);\r\n            leavePush\r\n                .receive('ok', () => {\r\n                onClose();\r\n                resolve('ok');\r\n            })\r\n                .receive('timeout', () => {\r\n                onClose();\r\n                resolve('timed out');\r\n            })\r\n                .receive('error', () => {\r\n                resolve('error');\r\n            });\r\n            leavePush.send();\r\n            if (!this._canPush()) {\r\n                leavePush.trigger('ok', {});\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Teardown the channel.\r\n     *\r\n     * Destroys and stops related timers.\r\n     */\r\n    teardown() {\r\n        this.pushBuffer.forEach((push) => push.destroy());\r\n        this.rejoinTimer && clearTimeout(this.rejoinTimer.timer);\r\n        this.joinPush.destroy();\r\n    }\r\n    /** @internal */\r\n    async _fetchWithTimeout(url, options, timeout) {\r\n        const controller = new AbortController();\r\n        const id = setTimeout(() => controller.abort(), timeout);\r\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));\r\n        clearTimeout(id);\r\n        return response;\r\n    }\r\n    /** @internal */\r\n    _push(event, payload, timeout = this.timeout) {\r\n        if (!this.joinedOnce) {\r\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\r\n        }\r\n        let pushEvent = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, event, payload, timeout);\r\n        if (this._canPush()) {\r\n            pushEvent.send();\r\n        }\r\n        else {\r\n            pushEvent.startTimeout();\r\n            this.pushBuffer.push(pushEvent);\r\n        }\r\n        return pushEvent;\r\n    }\r\n    /**\r\n     * Overridable message hook\r\n     *\r\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\r\n     * Must return the payload, modified or unmodified.\r\n     *\r\n     * @internal\r\n     */\r\n    _onMessage(_event, payload, _ref) {\r\n        return payload;\r\n    }\r\n    /** @internal */\r\n    _isMember(topic) {\r\n        return this.topic === topic;\r\n    }\r\n    /** @internal */\r\n    _joinRef() {\r\n        return this.joinPush.ref;\r\n    }\r\n    /** @internal */\r\n    _trigger(type, payload, ref) {\r\n        var _a, _b;\r\n        const typeLower = type.toLocaleLowerCase();\r\n        const { close, error, leave, join } = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS;\r\n        const events = [close, error, leave, join];\r\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\r\n            return;\r\n        }\r\n        let handledPayload = this._onMessage(typeLower, payload, ref);\r\n        if (payload && !handledPayload) {\r\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\r\n        }\r\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\r\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\r\n                var _a, _b, _c;\r\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\r\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\r\n            }).map((bind) => bind.callback(handledPayload, ref));\r\n        }\r\n        else {\r\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\r\n                var _a, _b, _c, _d, _e, _f;\r\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\r\n                    if ('id' in bind) {\r\n                        const bindId = bind.id;\r\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\r\n                        return (bindId &&\r\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\r\n                            (bindEvent === '*' ||\r\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\r\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\r\n                    }\r\n                    else {\r\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\r\n                        return (bindEvent === '*' ||\r\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\r\n                    }\r\n                }\r\n                else {\r\n                    return bind.type.toLocaleLowerCase() === typeLower;\r\n                }\r\n            }).map((bind) => {\r\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\r\n                    const postgresChanges = handledPayload.data;\r\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\r\n                    const enrichedPayload = {\r\n                        schema: schema,\r\n                        table: table,\r\n                        commit_timestamp: commit_timestamp,\r\n                        eventType: type,\r\n                        new: {},\r\n                        old: {},\r\n                        errors: errors,\r\n                    };\r\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\r\n                }\r\n                bind.callback(handledPayload, ref);\r\n            });\r\n        }\r\n    }\r\n    /** @internal */\r\n    _isClosed() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n    }\r\n    /** @internal */\r\n    _isJoined() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\r\n    }\r\n    /** @internal */\r\n    _isJoining() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\r\n    }\r\n    /** @internal */\r\n    _isLeaving() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\r\n    }\r\n    /** @internal */\r\n    _replyEventName(ref) {\r\n        return `chan_reply_${ref}`;\r\n    }\r\n    /** @internal */\r\n    _on(type, filter, callback) {\r\n        const typeLower = type.toLocaleLowerCase();\r\n        const binding = {\r\n            type: typeLower,\r\n            filter: filter,\r\n            callback: callback,\r\n        };\r\n        if (this.bindings[typeLower]) {\r\n            this.bindings[typeLower].push(binding);\r\n        }\r\n        else {\r\n            this.bindings[typeLower] = [binding];\r\n        }\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    _off(type, filter) {\r\n        const typeLower = type.toLocaleLowerCase();\r\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\r\n            var _a;\r\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\r\n                RealtimeChannel.isEqual(bind.filter, filter));\r\n        });\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    static isEqual(obj1, obj2) {\r\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n            return false;\r\n        }\r\n        for (const k in obj1) {\r\n            if (obj1[k] !== obj2[k]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /** @internal */\r\n    _rejoinUntilConnected() {\r\n        this.rejoinTimer.scheduleTimeout();\r\n        if (this.socket.isConnected()) {\r\n            this._rejoin();\r\n        }\r\n    }\r\n    /**\r\n     * Registers a callback that will be executed when the channel closes.\r\n     *\r\n     * @internal\r\n     */\r\n    _onClose(callback) {\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, {}, callback);\r\n    }\r\n    /**\r\n     * Registers a callback that will be executed when the channel encounteres an error.\r\n     *\r\n     * @internal\r\n     */\r\n    _onError(callback) {\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\r\n    }\r\n    /**\r\n     * Returns `true` if the socket is connected and the channel has been joined.\r\n     *\r\n     * @internal\r\n     */\r\n    _canPush() {\r\n        return this.socket.isConnected() && this._isJoined();\r\n    }\r\n    /** @internal */\r\n    _rejoin(timeout = this.timeout) {\r\n        if (this._isLeaving()) {\r\n            return;\r\n        }\r\n        this.socket._leaveOpenTopic(this.topic);\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\r\n        this.joinPush.resend(timeout);\r\n    }\r\n    /** @internal */\r\n    _getPayloadRecords(payload) {\r\n        const records = {\r\n            new: {},\r\n            old: {},\r\n        };\r\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\r\n            records.new = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.record);\r\n        }\r\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\r\n            records.old = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.old_record);\r\n        }\r\n        return records;\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimeChannel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvUmVhbHRpbWVDaGFubmVsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBaUU7QUFDbkM7QUFDRTtBQUNrQjtBQUNDO0FBQ0U7QUFDOUM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3RkFBd0Y7QUFDbEY7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzREFBc0Q7QUFDaEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4REFBOEQ7QUFDeEQsZ0NBQWdDLDBEQUFjO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQSxzQkFBc0IsWUFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwREFBYztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix5QkFBeUI7QUFDbEQsd0JBQXdCLFNBQVM7QUFDakM7QUFDQSxTQUFTO0FBQ1Q7QUFDQSw0QkFBNEIsaURBQUksT0FBTywwREFBYztBQUNyRCwrQkFBK0Isa0RBQUs7QUFDcEM7QUFDQSx5QkFBeUIsMERBQWM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxnREFBZ0QsWUFBWSxFQUFFLGdCQUFnQjtBQUM5RSx5QkFBeUIsMERBQWM7QUFDdkM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsV0FBVztBQUMzRCx5QkFBeUIsMERBQWM7QUFDdkM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsV0FBVztBQUM3RCx5QkFBeUIsMERBQWM7QUFDdkM7QUFDQSxTQUFTO0FBQ1QsaUJBQWlCLDBEQUFjLFVBQVU7QUFDekM7QUFDQSxTQUFTO0FBQ1QsNEJBQTRCLHlEQUFnQjtBQUM1QztBQUNBLFlBQVksa0VBQWU7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFVBQVUseUNBQXlDLElBQUk7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELFFBQVE7QUFDM0Q7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGtCQUFrQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxpQkFBaUI7QUFDckQ7QUFDQSxnQ0FBZ0MsVUFBVSw4QkFBOEIsSUFBSTtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRkFBbUYsNEJBQTRCLDZCQUE2QjtBQUM1STtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsMERBQWM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLDZCQUE2QiwwREFBYztBQUMzQztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxvQkFBb0IsbUNBQW1DO0FBQ3ZEO0FBQ0EsNEJBQTRCLDZCQUE2QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMERBQWM7QUFDbkM7QUFDQSxnREFBZ0QsV0FBVztBQUMzRCwwQkFBMEIsMERBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGlEQUFJLE9BQU8sMERBQWMsVUFBVTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRixjQUFjLDJCQUEyQjtBQUM3SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsTUFBTSxRQUFRLFdBQVc7QUFDN0Q7QUFDQSw0QkFBNEIsaURBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw0QkFBNEIsRUFBRSwwREFBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSw0QkFBNEIsZ0RBQWdEO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxtRUFBbUU7QUFDbkU7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwwREFBYztBQUM1QztBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsMERBQWM7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBEQUFjO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwwREFBYztBQUM1QztBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsSUFBSTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDBEQUFjLFVBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsMERBQWMsVUFBVTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMERBQWM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLDBCQUEwQixnRUFBOEI7QUFDeEQ7QUFDQTtBQUNBLDBCQUEwQixnRUFBOEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxyZWFsdGltZS1qc1xcZGlzdFxcbW9kdWxlXFxSZWFsdGltZUNoYW5uZWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0hBTk5FTF9FVkVOVFMsIENIQU5ORUxfU1RBVEVTIH0gZnJvbSAnLi9saWIvY29uc3RhbnRzJztcclxuaW1wb3J0IFB1c2ggZnJvbSAnLi9saWIvcHVzaCc7XHJcbmltcG9ydCBUaW1lciBmcm9tICcuL2xpYi90aW1lcic7XHJcbmltcG9ydCBSZWFsdGltZVByZXNlbmNlIGZyb20gJy4vUmVhbHRpbWVQcmVzZW5jZSc7XHJcbmltcG9ydCAqIGFzIFRyYW5zZm9ybWVycyBmcm9tICcuL2xpYi90cmFuc2Zvcm1lcnMnO1xyXG5pbXBvcnQgeyBodHRwRW5kcG9pbnRVUkwgfSBmcm9tICcuL2xpYi90cmFuc2Zvcm1lcnMnO1xyXG5leHBvcnQgdmFyIFJFQUxUSU1FX1BPU1RHUkVTX0NIQU5HRVNfTElTVEVOX0VWRU5UO1xyXG4oZnVuY3Rpb24gKFJFQUxUSU1FX1BPU1RHUkVTX0NIQU5HRVNfTElTVEVOX0VWRU5UKSB7XHJcbiAgICBSRUFMVElNRV9QT1NUR1JFU19DSEFOR0VTX0xJU1RFTl9FVkVOVFtcIkFMTFwiXSA9IFwiKlwiO1xyXG4gICAgUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlRbXCJJTlNFUlRcIl0gPSBcIklOU0VSVFwiO1xyXG4gICAgUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlRbXCJVUERBVEVcIl0gPSBcIlVQREFURVwiO1xyXG4gICAgUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlRbXCJERUxFVEVcIl0gPSBcIkRFTEVURVwiO1xyXG59KShSRUFMVElNRV9QT1NUR1JFU19DSEFOR0VTX0xJU1RFTl9FVkVOVCB8fCAoUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlQgPSB7fSkpO1xyXG5leHBvcnQgdmFyIFJFQUxUSU1FX0xJU1RFTl9UWVBFUztcclxuKGZ1bmN0aW9uIChSRUFMVElNRV9MSVNURU5fVFlQRVMpIHtcclxuICAgIFJFQUxUSU1FX0xJU1RFTl9UWVBFU1tcIkJST0FEQ0FTVFwiXSA9IFwiYnJvYWRjYXN0XCI7XHJcbiAgICBSRUFMVElNRV9MSVNURU5fVFlQRVNbXCJQUkVTRU5DRVwiXSA9IFwicHJlc2VuY2VcIjtcclxuICAgIFJFQUxUSU1FX0xJU1RFTl9UWVBFU1tcIlBPU1RHUkVTX0NIQU5HRVNcIl0gPSBcInBvc3RncmVzX2NoYW5nZXNcIjtcclxuICAgIFJFQUxUSU1FX0xJU1RFTl9UWVBFU1tcIlNZU1RFTVwiXSA9IFwic3lzdGVtXCI7XHJcbn0pKFJFQUxUSU1FX0xJU1RFTl9UWVBFUyB8fCAoUkVBTFRJTUVfTElTVEVOX1RZUEVTID0ge30pKTtcclxuZXhwb3J0IHZhciBSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTO1xyXG4oZnVuY3Rpb24gKFJFQUxUSU1FX1NVQlNDUklCRV9TVEFURVMpIHtcclxuICAgIFJFQUxUSU1FX1NVQlNDUklCRV9TVEFURVNbXCJTVUJTQ1JJQkVEXCJdID0gXCJTVUJTQ1JJQkVEXCI7XHJcbiAgICBSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTW1wiVElNRURfT1VUXCJdID0gXCJUSU1FRF9PVVRcIjtcclxuICAgIFJFQUxUSU1FX1NVQlNDUklCRV9TVEFURVNbXCJDTE9TRURcIl0gPSBcIkNMT1NFRFwiO1xyXG4gICAgUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFU1tcIkNIQU5ORUxfRVJST1JcIl0gPSBcIkNIQU5ORUxfRVJST1JcIjtcclxufSkoUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUyB8fCAoUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUyA9IHt9KSk7XHJcbmV4cG9ydCBjb25zdCBSRUFMVElNRV9DSEFOTkVMX1NUQVRFUyA9IENIQU5ORUxfU1RBVEVTO1xyXG4vKiogQSBjaGFubmVsIGlzIHRoZSBiYXNpYyBidWlsZGluZyBibG9jayBvZiBSZWFsdGltZVxyXG4gKiBhbmQgbmFycm93cyB0aGUgc2NvcGUgb2YgZGF0YSBmbG93IHRvIHN1YnNjcmliZWQgY2xpZW50cy5cclxuICogWW91IGNhbiB0aGluayBvZiBhIGNoYW5uZWwgYXMgYSBjaGF0cm9vbSB3aGVyZSBwYXJ0aWNpcGFudHMgYXJlIGFibGUgdG8gc2VlIHdobydzIG9ubGluZVxyXG4gKiBhbmQgc2VuZCBhbmQgcmVjZWl2ZSBtZXNzYWdlcy5cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlYWx0aW1lQ2hhbm5lbCB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgIC8qKiBUb3BpYyBuYW1lIGNhbiBiZSBhbnkgc3RyaW5nLiAqL1xyXG4gICAgdG9waWMsIHBhcmFtcyA9IHsgY29uZmlnOiB7fSB9LCBzb2NrZXQpIHtcclxuICAgICAgICB0aGlzLnRvcGljID0gdG9waWM7XHJcbiAgICAgICAgdGhpcy5wYXJhbXMgPSBwYXJhbXM7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBzb2NrZXQ7XHJcbiAgICAgICAgdGhpcy5iaW5kaW5ncyA9IHt9O1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSBDSEFOTkVMX1NUQVRFUy5jbG9zZWQ7XHJcbiAgICAgICAgdGhpcy5qb2luZWRPbmNlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5wdXNoQnVmZmVyID0gW107XHJcbiAgICAgICAgdGhpcy5zdWJUb3BpYyA9IHRvcGljLnJlcGxhY2UoL15yZWFsdGltZTovaSwgJycpO1xyXG4gICAgICAgIHRoaXMucGFyYW1zLmNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe1xyXG4gICAgICAgICAgICBicm9hZGNhc3Q6IHsgYWNrOiBmYWxzZSwgc2VsZjogZmFsc2UgfSxcclxuICAgICAgICAgICAgcHJlc2VuY2U6IHsga2V5OiAnJyB9LFxyXG4gICAgICAgICAgICBwcml2YXRlOiBmYWxzZSxcclxuICAgICAgICB9LCBwYXJhbXMuY29uZmlnKTtcclxuICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aGlzLnNvY2tldC50aW1lb3V0O1xyXG4gICAgICAgIHRoaXMuam9pblB1c2ggPSBuZXcgUHVzaCh0aGlzLCBDSEFOTkVMX0VWRU5UUy5qb2luLCB0aGlzLnBhcmFtcywgdGhpcy50aW1lb3V0KTtcclxuICAgICAgICB0aGlzLnJlam9pblRpbWVyID0gbmV3IFRpbWVyKCgpID0+IHRoaXMuX3Jlam9pblVudGlsQ29ubmVjdGVkKCksIHRoaXMuc29ja2V0LnJlY29ubmVjdEFmdGVyTXMpO1xyXG4gICAgICAgIHRoaXMuam9pblB1c2gucmVjZWl2ZSgnb2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBDSEFOTkVMX1NUQVRFUy5qb2luZWQ7XHJcbiAgICAgICAgICAgIHRoaXMucmVqb2luVGltZXIucmVzZXQoKTtcclxuICAgICAgICAgICAgdGhpcy5wdXNoQnVmZmVyLmZvckVhY2goKHB1c2hFdmVudCkgPT4gcHVzaEV2ZW50LnNlbmQoKSk7XHJcbiAgICAgICAgICAgIHRoaXMucHVzaEJ1ZmZlciA9IFtdO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX29uQ2xvc2UoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnJlam9pblRpbWVyLnJlc2V0KCk7XHJcbiAgICAgICAgICAgIHRoaXMuc29ja2V0LmxvZygnY2hhbm5lbCcsIGBjbG9zZSAke3RoaXMudG9waWN9ICR7dGhpcy5fam9pblJlZigpfWApO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gQ0hBTk5FTF9TVEFURVMuY2xvc2VkO1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5fcmVtb3ZlKHRoaXMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX29uRXJyb3IoKHJlYXNvbikgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5faXNMZWF2aW5nKCkgfHwgdGhpcy5faXNDbG9zZWQoKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuc29ja2V0LmxvZygnY2hhbm5lbCcsIGBlcnJvciAke3RoaXMudG9waWN9YCwgcmVhc29uKTtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IENIQU5ORUxfU1RBVEVTLmVycm9yZWQ7XHJcbiAgICAgICAgICAgIHRoaXMucmVqb2luVGltZXIuc2NoZWR1bGVUaW1lb3V0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5qb2luUHVzaC5yZWNlaXZlKCd0aW1lb3V0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuX2lzSm9pbmluZygpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5zb2NrZXQubG9nKCdjaGFubmVsJywgYHRpbWVvdXQgJHt0aGlzLnRvcGljfWAsIHRoaXMuam9pblB1c2gudGltZW91dCk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBDSEFOTkVMX1NUQVRFUy5lcnJvcmVkO1xyXG4gICAgICAgICAgICB0aGlzLnJlam9pblRpbWVyLnNjaGVkdWxlVGltZW91dCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX29uKENIQU5ORUxfRVZFTlRTLnJlcGx5LCB7fSwgKHBheWxvYWQsIHJlZikgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl90cmlnZ2VyKHRoaXMuX3JlcGx5RXZlbnROYW1lKHJlZiksIHBheWxvYWQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMucHJlc2VuY2UgPSBuZXcgUmVhbHRpbWVQcmVzZW5jZSh0aGlzKTtcclxuICAgICAgICB0aGlzLmJyb2FkY2FzdEVuZHBvaW50VVJMID1cclxuICAgICAgICAgICAgaHR0cEVuZHBvaW50VVJMKHRoaXMuc29ja2V0LmVuZFBvaW50KSArICcvYXBpL2Jyb2FkY2FzdCc7XHJcbiAgICAgICAgdGhpcy5wcml2YXRlID0gdGhpcy5wYXJhbXMuY29uZmlnLnByaXZhdGUgfHwgZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvKiogU3Vic2NyaWJlIHJlZ2lzdGVycyB5b3VyIGNsaWVudCB3aXRoIHRoZSBzZXJ2ZXIgKi9cclxuICAgIHN1YnNjcmliZShjYWxsYmFjaywgdGltZW91dCA9IHRoaXMudGltZW91dCkge1xyXG4gICAgICAgIHZhciBfYSwgX2I7XHJcbiAgICAgICAgaWYgKCF0aGlzLnNvY2tldC5pc0Nvbm5lY3RlZCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc29ja2V0LmNvbm5lY3QoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuam9pbmVkT25jZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBgdHJpZWQgdG8gc3Vic2NyaWJlIG11bHRpcGxlIHRpbWVzLiAnc3Vic2NyaWJlJyBjYW4gb25seSBiZSBjYWxsZWQgYSBzaW5nbGUgdGltZSBwZXIgY2hhbm5lbCBpbnN0YW5jZWA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCB7IGNvbmZpZzogeyBicm9hZGNhc3QsIHByZXNlbmNlLCBwcml2YXRlOiBpc1ByaXZhdGUgfSwgfSA9IHRoaXMucGFyYW1zO1xyXG4gICAgICAgICAgICB0aGlzLl9vbkVycm9yKChlKSA9PiBjYWxsYmFjayA9PT0gbnVsbCB8fCBjYWxsYmFjayA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2FsbGJhY2soUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUy5DSEFOTkVMX0VSUk9SLCBlKSk7XHJcbiAgICAgICAgICAgIHRoaXMuX29uQ2xvc2UoKCkgPT4gY2FsbGJhY2sgPT09IG51bGwgfHwgY2FsbGJhY2sgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNhbGxiYWNrKFJFQUxUSU1FX1NVQlNDUklCRV9TVEFURVMuQ0xPU0VEKSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuUGF5bG9hZCA9IHt9O1xyXG4gICAgICAgICAgICBjb25zdCBjb25maWcgPSB7XHJcbiAgICAgICAgICAgICAgICBicm9hZGNhc3QsXHJcbiAgICAgICAgICAgICAgICBwcmVzZW5jZSxcclxuICAgICAgICAgICAgICAgIHBvc3RncmVzX2NoYW5nZXM6IChfYiA9IChfYSA9IHRoaXMuYmluZGluZ3MucG9zdGdyZXNfY2hhbmdlcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm1hcCgocikgPT4gci5maWx0ZXIpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXSxcclxuICAgICAgICAgICAgICAgIHByaXZhdGU6IGlzUHJpdmF0ZSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc29ja2V0LmFjY2Vzc1Rva2VuVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuUGF5bG9hZC5hY2Nlc3NfdG9rZW4gPSB0aGlzLnNvY2tldC5hY2Nlc3NUb2tlblZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlSm9pblBheWxvYWQoT2JqZWN0LmFzc2lnbih7IGNvbmZpZyB9LCBhY2Nlc3NUb2tlblBheWxvYWQpKTtcclxuICAgICAgICAgICAgdGhpcy5qb2luZWRPbmNlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5fcmVqb2luKHRpbWVvdXQpO1xyXG4gICAgICAgICAgICB0aGlzLmpvaW5QdXNoXHJcbiAgICAgICAgICAgICAgICAucmVjZWl2ZSgnb2snLCBhc3luYyAoeyBwb3N0Z3Jlc19jaGFuZ2VzIH0pID0+IHtcclxuICAgICAgICAgICAgICAgIHZhciBfYTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc29ja2V0LnNldEF1dGgoKTtcclxuICAgICAgICAgICAgICAgIGlmIChwb3N0Z3Jlc19jaGFuZ2VzID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayA9PT0gbnVsbCB8fCBjYWxsYmFjayA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2FsbGJhY2soUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUy5TVUJTQ1JJQkVEKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGllbnRQb3N0Z3Jlc0JpbmRpbmdzID0gdGhpcy5iaW5kaW5ncy5wb3N0Z3Jlc19jaGFuZ2VzO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJpbmRpbmdzTGVuID0gKF9hID0gY2xpZW50UG9zdGdyZXNCaW5kaW5ncyA9PT0gbnVsbCB8fCBjbGllbnRQb3N0Z3Jlc0JpbmRpbmdzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjbGllbnRQb3N0Z3Jlc0JpbmRpbmdzLmxlbmd0aCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogMDtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdQb3N0Z3Jlc0JpbmRpbmdzID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiaW5kaW5nc0xlbjsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWVudFBvc3RncmVzQmluZGluZyA9IGNsaWVudFBvc3RncmVzQmluZGluZ3NbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgZmlsdGVyOiB7IGV2ZW50LCBzY2hlbWEsIHRhYmxlLCBmaWx0ZXIgfSwgfSA9IGNsaWVudFBvc3RncmVzQmluZGluZztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VydmVyUG9zdGdyZXNGaWx0ZXIgPSBwb3N0Z3Jlc19jaGFuZ2VzICYmIHBvc3RncmVzX2NoYW5nZXNbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJQb3N0Z3Jlc0ZpbHRlciAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyUG9zdGdyZXNGaWx0ZXIuZXZlbnQgPT09IGV2ZW50ICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJQb3N0Z3Jlc0ZpbHRlci5zY2hlbWEgPT09IHNjaGVtYSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyUG9zdGdyZXNGaWx0ZXIudGFibGUgPT09IHRhYmxlICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJQb3N0Z3Jlc0ZpbHRlci5maWx0ZXIgPT09IGZpbHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UG9zdGdyZXNCaW5kaW5ncy5wdXNoKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgY2xpZW50UG9zdGdyZXNCaW5kaW5nKSwgeyBpZDogc2VydmVyUG9zdGdyZXNGaWx0ZXIuaWQgfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IENIQU5ORUxfU1RBVEVTLmVycm9yZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayA9PT0gbnVsbCB8fCBjYWxsYmFjayA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2FsbGJhY2soUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUy5DSEFOTkVMX0VSUk9SLCBuZXcgRXJyb3IoJ21pc21hdGNoIGJldHdlZW4gc2VydmVyIGFuZCBjbGllbnQgYmluZGluZ3MgZm9yIHBvc3RncmVzIGNoYW5nZXMnKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5iaW5kaW5ncy5wb3N0Z3Jlc19jaGFuZ2VzID0gbmV3UG9zdGdyZXNCaW5kaW5ncztcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTLlNVQlNDUklCRUQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5yZWNlaXZlKCdlcnJvcicsIChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IENIQU5ORUxfU1RBVEVTLmVycm9yZWQ7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayA9PT0gbnVsbCB8fCBjYWxsYmFjayA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2FsbGJhY2soUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUy5DSEFOTkVMX0VSUk9SLCBuZXcgRXJyb3IoSlNPTi5zdHJpbmdpZnkoT2JqZWN0LnZhbHVlcyhlcnJvcikuam9pbignLCAnKSB8fCAnZXJyb3InKSkpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnJlY2VpdmUoJ3RpbWVvdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayA9PT0gbnVsbCB8fCBjYWxsYmFjayA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2FsbGJhY2soUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUy5USU1FRF9PVVQpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBwcmVzZW5jZVN0YXRlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnByZXNlbmNlLnN0YXRlO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgdHJhY2socGF5bG9hZCwgb3B0cyA9IHt9KSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuc2VuZCh7XHJcbiAgICAgICAgICAgIHR5cGU6ICdwcmVzZW5jZScsXHJcbiAgICAgICAgICAgIGV2ZW50OiAndHJhY2snLFxyXG4gICAgICAgICAgICBwYXlsb2FkLFxyXG4gICAgICAgIH0sIG9wdHMudGltZW91dCB8fCB0aGlzLnRpbWVvdXQpO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgdW50cmFjayhvcHRzID0ge30pIHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5zZW5kKHtcclxuICAgICAgICAgICAgdHlwZTogJ3ByZXNlbmNlJyxcclxuICAgICAgICAgICAgZXZlbnQ6ICd1bnRyYWNrJyxcclxuICAgICAgICB9LCBvcHRzKTtcclxuICAgIH1cclxuICAgIG9uKHR5cGUsIGZpbHRlciwgY2FsbGJhY2spIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fb24odHlwZSwgZmlsdGVyLCBjYWxsYmFjayk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNlbmRzIGEgbWVzc2FnZSBpbnRvIHRoZSBjaGFubmVsLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBhcmdzIEFyZ3VtZW50cyB0byBzZW5kIHRvIGNoYW5uZWxcclxuICAgICAqIEBwYXJhbSBhcmdzLnR5cGUgVGhlIHR5cGUgb2YgZXZlbnQgdG8gc2VuZFxyXG4gICAgICogQHBhcmFtIGFyZ3MuZXZlbnQgVGhlIG5hbWUgb2YgdGhlIGV2ZW50IGJlaW5nIHNlbnRcclxuICAgICAqIEBwYXJhbSBhcmdzLnBheWxvYWQgUGF5bG9hZCB0byBiZSBzZW50XHJcbiAgICAgKiBAcGFyYW0gb3B0cyBPcHRpb25zIHRvIGJlIHVzZWQgZHVyaW5nIHRoZSBzZW5kIHByb2Nlc3NcclxuICAgICAqL1xyXG4gICAgYXN5bmMgc2VuZChhcmdzLCBvcHRzID0ge30pIHtcclxuICAgICAgICB2YXIgX2EsIF9iO1xyXG4gICAgICAgIGlmICghdGhpcy5fY2FuUHVzaCgpICYmIGFyZ3MudHlwZSA9PT0gJ2Jyb2FkY2FzdCcpIHtcclxuICAgICAgICAgICAgY29uc3QgeyBldmVudCwgcGF5bG9hZDogZW5kcG9pbnRfcGF5bG9hZCB9ID0gYXJncztcclxuICAgICAgICAgICAgY29uc3QgYXV0aG9yaXphdGlvbiA9IHRoaXMuc29ja2V0LmFjY2Vzc1Rva2VuVmFsdWVcclxuICAgICAgICAgICAgICAgID8gYEJlYXJlciAke3RoaXMuc29ja2V0LmFjY2Vzc1Rva2VuVmFsdWV9YFxyXG4gICAgICAgICAgICAgICAgOiAnJztcclxuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGF1dGhvcml6YXRpb24sXHJcbiAgICAgICAgICAgICAgICAgICAgYXBpa2V5OiB0aGlzLnNvY2tldC5hcGlLZXkgPyB0aGlzLnNvY2tldC5hcGlLZXkgOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3BpYzogdGhpcy5zdWJUb3BpYyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF5bG9hZDogZW5kcG9pbnRfcGF5bG9hZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaXZhdGU6IHRoaXMucHJpdmF0ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuX2ZldGNoV2l0aFRpbWVvdXQodGhpcy5icm9hZGNhc3RFbmRwb2ludFVSTCwgb3B0aW9ucywgKF9hID0gb3B0cy50aW1lb3V0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB0aGlzLnRpbWVvdXQpO1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgKChfYiA9IHJlc3BvbnNlLmJvZHkpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYW5jZWwoKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2Uub2sgPyAnb2snIDogJ2Vycm9yJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGlmIChlcnJvci5uYW1lID09PSAnQWJvcnRFcnJvcicpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3RpbWVkIG91dCc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2Vycm9yJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcclxuICAgICAgICAgICAgICAgIGNvbnN0IHB1c2ggPSB0aGlzLl9wdXNoKGFyZ3MudHlwZSwgYXJncywgb3B0cy50aW1lb3V0IHx8IHRoaXMudGltZW91dCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoYXJncy50eXBlID09PSAnYnJvYWRjYXN0JyAmJiAhKChfYyA9IChfYiA9IChfYSA9IHRoaXMucGFyYW1zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY29uZmlnKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuYnJvYWRjYXN0KSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuYWNrKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ29rJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwdXNoLnJlY2VpdmUoJ29rJywgKCkgPT4gcmVzb2x2ZSgnb2snKSk7XHJcbiAgICAgICAgICAgICAgICBwdXNoLnJlY2VpdmUoJ2Vycm9yJywgKCkgPT4gcmVzb2x2ZSgnZXJyb3InKSk7XHJcbiAgICAgICAgICAgICAgICBwdXNoLnJlY2VpdmUoJ3RpbWVvdXQnLCAoKSA9PiByZXNvbHZlKCd0aW1lZCBvdXQnKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHVwZGF0ZUpvaW5QYXlsb2FkKHBheWxvYWQpIHtcclxuICAgICAgICB0aGlzLmpvaW5QdXNoLnVwZGF0ZVBheWxvYWQocGF5bG9hZCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIExlYXZlcyB0aGUgY2hhbm5lbC5cclxuICAgICAqXHJcbiAgICAgKiBVbnN1YnNjcmliZXMgZnJvbSBzZXJ2ZXIgZXZlbnRzLCBhbmQgaW5zdHJ1Y3RzIGNoYW5uZWwgdG8gdGVybWluYXRlIG9uIHNlcnZlci5cclxuICAgICAqIFRyaWdnZXJzIG9uQ2xvc2UoKSBob29rcy5cclxuICAgICAqXHJcbiAgICAgKiBUbyByZWNlaXZlIGxlYXZlIGFja25vd2xlZGdlbWVudHMsIHVzZSB0aGUgYSBgcmVjZWl2ZWAgaG9vayB0byBiaW5kIHRvIHRoZSBzZXJ2ZXIgYWNrLCBpZTpcclxuICAgICAqIGNoYW5uZWwudW5zdWJzY3JpYmUoKS5yZWNlaXZlKFwib2tcIiwgKCkgPT4gYWxlcnQoXCJsZWZ0IVwiKSApXHJcbiAgICAgKi9cclxuICAgIHVuc3Vic2NyaWJlKHRpbWVvdXQgPSB0aGlzLnRpbWVvdXQpIHtcclxuICAgICAgICB0aGlzLnN0YXRlID0gQ0hBTk5FTF9TVEFURVMubGVhdmluZztcclxuICAgICAgICBjb25zdCBvbkNsb3NlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5sb2coJ2NoYW5uZWwnLCBgbGVhdmUgJHt0aGlzLnRvcGljfWApO1xyXG4gICAgICAgICAgICB0aGlzLl90cmlnZ2VyKENIQU5ORUxfRVZFTlRTLmNsb3NlLCAnbGVhdmUnLCB0aGlzLl9qb2luUmVmKCkpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5qb2luUHVzaC5kZXN0cm95KCk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGxlYXZlUHVzaCA9IG5ldyBQdXNoKHRoaXMsIENIQU5ORUxfRVZFTlRTLmxlYXZlLCB7fSwgdGltZW91dCk7XHJcbiAgICAgICAgICAgIGxlYXZlUHVzaFxyXG4gICAgICAgICAgICAgICAgLnJlY2VpdmUoJ29rJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgb25DbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgnb2snKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5yZWNlaXZlKCd0aW1lb3V0JywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgb25DbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgndGltZWQgb3V0Jyk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAucmVjZWl2ZSgnZXJyb3InLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKCdlcnJvcicpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgbGVhdmVQdXNoLnNlbmQoKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9jYW5QdXNoKCkpIHtcclxuICAgICAgICAgICAgICAgIGxlYXZlUHVzaC50cmlnZ2VyKCdvaycsIHt9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUZWFyZG93biB0aGUgY2hhbm5lbC5cclxuICAgICAqXHJcbiAgICAgKiBEZXN0cm95cyBhbmQgc3RvcHMgcmVsYXRlZCB0aW1lcnMuXHJcbiAgICAgKi9cclxuICAgIHRlYXJkb3duKCkge1xyXG4gICAgICAgIHRoaXMucHVzaEJ1ZmZlci5mb3JFYWNoKChwdXNoKSA9PiBwdXNoLmRlc3Ryb3koKSk7XHJcbiAgICAgICAgdGhpcy5yZWpvaW5UaW1lciAmJiBjbGVhclRpbWVvdXQodGhpcy5yZWpvaW5UaW1lci50aW1lcik7XHJcbiAgICAgICAgdGhpcy5qb2luUHVzaC5kZXN0cm95KCk7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBhc3luYyBfZmV0Y2hXaXRoVGltZW91dCh1cmwsIG9wdGlvbnMsIHRpbWVvdXQpIHtcclxuICAgICAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xyXG4gICAgICAgIGNvbnN0IGlkID0gc2V0VGltZW91dCgoKSA9PiBjb250cm9sbGVyLmFib3J0KCksIHRpbWVvdXQpO1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zb2NrZXQuZmV0Y2godXJsLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IHNpZ25hbDogY29udHJvbGxlci5zaWduYWwgfSkpO1xyXG4gICAgICAgIGNsZWFyVGltZW91dChpZCk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgX3B1c2goZXZlbnQsIHBheWxvYWQsIHRpbWVvdXQgPSB0aGlzLnRpbWVvdXQpIHtcclxuICAgICAgICBpZiAoIXRoaXMuam9pbmVkT25jZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBgdHJpZWQgdG8gcHVzaCAnJHtldmVudH0nIHRvICcke3RoaXMudG9waWN9JyBiZWZvcmUgam9pbmluZy4gVXNlIGNoYW5uZWwuc3Vic2NyaWJlKCkgYmVmb3JlIHB1c2hpbmcgZXZlbnRzYDtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHB1c2hFdmVudCA9IG5ldyBQdXNoKHRoaXMsIGV2ZW50LCBwYXlsb2FkLCB0aW1lb3V0KTtcclxuICAgICAgICBpZiAodGhpcy5fY2FuUHVzaCgpKSB7XHJcbiAgICAgICAgICAgIHB1c2hFdmVudC5zZW5kKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBwdXNoRXZlbnQuc3RhcnRUaW1lb3V0KCk7XHJcbiAgICAgICAgICAgIHRoaXMucHVzaEJ1ZmZlci5wdXNoKHB1c2hFdmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwdXNoRXZlbnQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIE92ZXJyaWRhYmxlIG1lc3NhZ2UgaG9va1xyXG4gICAgICpcclxuICAgICAqIFJlY2VpdmVzIGFsbCBldmVudHMgZm9yIHNwZWNpYWxpemVkIG1lc3NhZ2UgaGFuZGxpbmcgYmVmb3JlIGRpc3BhdGNoaW5nIHRvIHRoZSBjaGFubmVsIGNhbGxiYWNrcy5cclxuICAgICAqIE11c3QgcmV0dXJuIHRoZSBwYXlsb2FkLCBtb2RpZmllZCBvciB1bm1vZGlmaWVkLlxyXG4gICAgICpcclxuICAgICAqIEBpbnRlcm5hbFxyXG4gICAgICovXHJcbiAgICBfb25NZXNzYWdlKF9ldmVudCwgcGF5bG9hZCwgX3JlZikge1xyXG4gICAgICAgIHJldHVybiBwYXlsb2FkO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgX2lzTWVtYmVyKHRvcGljKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudG9waWMgPT09IHRvcGljO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgX2pvaW5SZWYoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuam9pblB1c2gucmVmO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgX3RyaWdnZXIodHlwZSwgcGF5bG9hZCwgcmVmKSB7XHJcbiAgICAgICAgdmFyIF9hLCBfYjtcclxuICAgICAgICBjb25zdCB0eXBlTG93ZXIgPSB0eXBlLnRvTG9jYWxlTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgY29uc3QgeyBjbG9zZSwgZXJyb3IsIGxlYXZlLCBqb2luIH0gPSBDSEFOTkVMX0VWRU5UUztcclxuICAgICAgICBjb25zdCBldmVudHMgPSBbY2xvc2UsIGVycm9yLCBsZWF2ZSwgam9pbl07XHJcbiAgICAgICAgaWYgKHJlZiAmJiBldmVudHMuaW5kZXhPZih0eXBlTG93ZXIpID49IDAgJiYgcmVmICE9PSB0aGlzLl9qb2luUmVmKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgaGFuZGxlZFBheWxvYWQgPSB0aGlzLl9vbk1lc3NhZ2UodHlwZUxvd2VyLCBwYXlsb2FkLCByZWYpO1xyXG4gICAgICAgIGlmIChwYXlsb2FkICYmICFoYW5kbGVkUGF5bG9hZCkge1xyXG4gICAgICAgICAgICB0aHJvdyAnY2hhbm5lbCBvbk1lc3NhZ2UgY2FsbGJhY2tzIG11c3QgcmV0dXJuIHRoZSBwYXlsb2FkLCBtb2RpZmllZCBvciB1bm1vZGlmaWVkJztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKFsnaW5zZXJ0JywgJ3VwZGF0ZScsICdkZWxldGUnXS5pbmNsdWRlcyh0eXBlTG93ZXIpKSB7XHJcbiAgICAgICAgICAgIChfYSA9IHRoaXMuYmluZGluZ3MucG9zdGdyZXNfY2hhbmdlcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZpbHRlcigoYmluZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2M7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgoX2EgPSBiaW5kLmZpbHRlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmV2ZW50KSA9PT0gJyonIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgKChfYyA9IChfYiA9IGJpbmQuZmlsdGVyKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXZlbnQpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy50b0xvY2FsZUxvd2VyQ2FzZSgpKSA9PT0gdHlwZUxvd2VyKTtcclxuICAgICAgICAgICAgfSkubWFwKChiaW5kKSA9PiBiaW5kLmNhbGxiYWNrKGhhbmRsZWRQYXlsb2FkLCByZWYpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIChfYiA9IHRoaXMuYmluZGluZ3NbdHlwZUxvd2VyXSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmZpbHRlcigoYmluZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2Y7XHJcbiAgICAgICAgICAgICAgICBpZiAoWydicm9hZGNhc3QnLCAncHJlc2VuY2UnLCAncG9zdGdyZXNfY2hhbmdlcyddLmluY2x1ZGVzKHR5cGVMb3dlcikpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJ2lkJyBpbiBiaW5kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJpbmRJZCA9IGJpbmQuaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJpbmRFdmVudCA9IChfYSA9IGJpbmQuZmlsdGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZXZlbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoYmluZElkICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoKF9iID0gcGF5bG9hZC5pZHMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5pbmNsdWRlcyhiaW5kSWQpKSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGJpbmRFdmVudCA9PT0gJyonIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGJpbmRFdmVudCA9PT0gbnVsbCB8fCBiaW5kRXZlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJpbmRFdmVudC50b0xvY2FsZUxvd2VyQ2FzZSgpKSA9PT1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChfYyA9IHBheWxvYWQuZGF0YSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnR5cGUudG9Mb2NhbGVMb3dlckNhc2UoKSkpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJpbmRFdmVudCA9IChfZSA9IChfZCA9IGJpbmQgPT09IG51bGwgfHwgYmluZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYmluZC5maWx0ZXIpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5ldmVudCkgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLnRvTG9jYWxlTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoYmluZEV2ZW50ID09PSAnKicgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJpbmRFdmVudCA9PT0gKChfZiA9IHBheWxvYWQgPT09IG51bGwgfHwgcGF5bG9hZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGF5bG9hZC5ldmVudCkgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLnRvTG9jYWxlTG93ZXJDYXNlKCkpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYmluZC50eXBlLnRvTG9jYWxlTG93ZXJDYXNlKCkgPT09IHR5cGVMb3dlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSkubWFwKChiaW5kKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGhhbmRsZWRQYXlsb2FkID09PSAnb2JqZWN0JyAmJiAnaWRzJyBpbiBoYW5kbGVkUGF5bG9hZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBvc3RncmVzQ2hhbmdlcyA9IGhhbmRsZWRQYXlsb2FkLmRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBzY2hlbWEsIHRhYmxlLCBjb21taXRfdGltZXN0YW1wLCB0eXBlLCBlcnJvcnMgfSA9IHBvc3RncmVzQ2hhbmdlcztcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnJpY2hlZFBheWxvYWQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYTogc2NoZW1hLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZTogdGFibGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1pdF90aW1lc3RhbXA6IGNvbW1pdF90aW1lc3RhbXAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50VHlwZTogdHlwZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3OiB7fSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgb2xkOiB7fSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JzOiBlcnJvcnMsXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICBoYW5kbGVkUGF5bG9hZCA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZW5yaWNoZWRQYXlsb2FkKSwgdGhpcy5fZ2V0UGF5bG9hZFJlY29yZHMocG9zdGdyZXNDaGFuZ2VzKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBiaW5kLmNhbGxiYWNrKGhhbmRsZWRQYXlsb2FkLCByZWYpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfaXNDbG9zZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUgPT09IENIQU5ORUxfU1RBVEVTLmNsb3NlZDtcclxuICAgIH1cclxuICAgIC8qKiBAaW50ZXJuYWwgKi9cclxuICAgIF9pc0pvaW5lZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZSA9PT0gQ0hBTk5FTF9TVEFURVMuam9pbmVkO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgX2lzSm9pbmluZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZSA9PT0gQ0hBTk5FTF9TVEFURVMuam9pbmluZztcclxuICAgIH1cclxuICAgIC8qKiBAaW50ZXJuYWwgKi9cclxuICAgIF9pc0xlYXZpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUgPT09IENIQU5ORUxfU1RBVEVTLmxlYXZpbmc7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfcmVwbHlFdmVudE5hbWUocmVmKSB7XHJcbiAgICAgICAgcmV0dXJuIGBjaGFuX3JlcGx5XyR7cmVmfWA7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfb24odHlwZSwgZmlsdGVyLCBjYWxsYmFjaykge1xyXG4gICAgICAgIGNvbnN0IHR5cGVMb3dlciA9IHR5cGUudG9Mb2NhbGVMb3dlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBiaW5kaW5nID0ge1xyXG4gICAgICAgICAgICB0eXBlOiB0eXBlTG93ZXIsXHJcbiAgICAgICAgICAgIGZpbHRlcjogZmlsdGVyLFxyXG4gICAgICAgICAgICBjYWxsYmFjazogY2FsbGJhY2ssXHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAodGhpcy5iaW5kaW5nc1t0eXBlTG93ZXJdKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmluZGluZ3NbdHlwZUxvd2VyXS5wdXNoKGJpbmRpbmcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5iaW5kaW5nc1t0eXBlTG93ZXJdID0gW2JpbmRpbmddO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuICAgIC8qKiBAaW50ZXJuYWwgKi9cclxuICAgIF9vZmYodHlwZSwgZmlsdGVyKSB7XHJcbiAgICAgICAgY29uc3QgdHlwZUxvd2VyID0gdHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xyXG4gICAgICAgIHRoaXMuYmluZGluZ3NbdHlwZUxvd2VyXSA9IHRoaXMuYmluZGluZ3NbdHlwZUxvd2VyXS5maWx0ZXIoKGJpbmQpID0+IHtcclxuICAgICAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgICAgICByZXR1cm4gISgoKF9hID0gYmluZC50eXBlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudG9Mb2NhbGVMb3dlckNhc2UoKSkgPT09IHR5cGVMb3dlciAmJlxyXG4gICAgICAgICAgICAgICAgUmVhbHRpbWVDaGFubmVsLmlzRXF1YWwoYmluZC5maWx0ZXIsIGZpbHRlcikpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgc3RhdGljIGlzRXF1YWwob2JqMSwgb2JqMikge1xyXG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhvYmoxKS5sZW5ndGggIT09IE9iamVjdC5rZXlzKG9iajIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAoY29uc3QgayBpbiBvYmoxKSB7XHJcbiAgICAgICAgICAgIGlmIChvYmoxW2tdICE9PSBvYmoyW2tdKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBfcmVqb2luVW50aWxDb25uZWN0ZWQoKSB7XHJcbiAgICAgICAgdGhpcy5yZWpvaW5UaW1lci5zY2hlZHVsZVRpbWVvdXQoKTtcclxuICAgICAgICBpZiAodGhpcy5zb2NrZXQuaXNDb25uZWN0ZWQoKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9yZWpvaW4oKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlZ2lzdGVycyBhIGNhbGxiYWNrIHRoYXQgd2lsbCBiZSBleGVjdXRlZCB3aGVuIHRoZSBjaGFubmVsIGNsb3Nlcy5cclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgX29uQ2xvc2UoY2FsbGJhY2spIHtcclxuICAgICAgICB0aGlzLl9vbihDSEFOTkVMX0VWRU5UUy5jbG9zZSwge30sIGNhbGxiYWNrKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVnaXN0ZXJzIGEgY2FsbGJhY2sgdGhhdCB3aWxsIGJlIGV4ZWN1dGVkIHdoZW4gdGhlIGNoYW5uZWwgZW5jb3VudGVyZXMgYW4gZXJyb3IuXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIF9vbkVycm9yKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdGhpcy5fb24oQ0hBTk5FTF9FVkVOVFMuZXJyb3IsIHt9LCAocmVhc29uKSA9PiBjYWxsYmFjayhyZWFzb24pKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHNvY2tldCBpcyBjb25uZWN0ZWQgYW5kIHRoZSBjaGFubmVsIGhhcyBiZWVuIGpvaW5lZC5cclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgX2NhblB1c2goKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc29ja2V0LmlzQ29ubmVjdGVkKCkgJiYgdGhpcy5faXNKb2luZWQoKTtcclxuICAgIH1cclxuICAgIC8qKiBAaW50ZXJuYWwgKi9cclxuICAgIF9yZWpvaW4odGltZW91dCA9IHRoaXMudGltZW91dCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9pc0xlYXZpbmcoKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc29ja2V0Ll9sZWF2ZU9wZW5Ub3BpYyh0aGlzLnRvcGljKTtcclxuICAgICAgICB0aGlzLnN0YXRlID0gQ0hBTk5FTF9TVEFURVMuam9pbmluZztcclxuICAgICAgICB0aGlzLmpvaW5QdXNoLnJlc2VuZCh0aW1lb3V0KTtcclxuICAgIH1cclxuICAgIC8qKiBAaW50ZXJuYWwgKi9cclxuICAgIF9nZXRQYXlsb2FkUmVjb3JkcyhwYXlsb2FkKSB7XHJcbiAgICAgICAgY29uc3QgcmVjb3JkcyA9IHtcclxuICAgICAgICAgICAgbmV3OiB7fSxcclxuICAgICAgICAgICAgb2xkOiB7fSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChwYXlsb2FkLnR5cGUgPT09ICdJTlNFUlQnIHx8IHBheWxvYWQudHlwZSA9PT0gJ1VQREFURScpIHtcclxuICAgICAgICAgICAgcmVjb3Jkcy5uZXcgPSBUcmFuc2Zvcm1lcnMuY29udmVydENoYW5nZURhdGEocGF5bG9hZC5jb2x1bW5zLCBwYXlsb2FkLnJlY29yZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwYXlsb2FkLnR5cGUgPT09ICdVUERBVEUnIHx8IHBheWxvYWQudHlwZSA9PT0gJ0RFTEVURScpIHtcclxuICAgICAgICAgICAgcmVjb3Jkcy5vbGQgPSBUcmFuc2Zvcm1lcnMuY29udmVydENoYW5nZURhdGEocGF5bG9hZC5jb2x1bW5zLCBwYXlsb2FkLm9sZF9yZWNvcmQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVjb3JkcztcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWFsdGltZUNoYW5uZWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RealtimeClient)\n/* harmony export */ });\n/* harmony import */ var _WebSocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebSocket */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/WebSocket.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/serializer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/timer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RealtimeChannel */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst noop = () => { };\r\nconst WORKER_SCRIPT = `\r\n  addEventListener(\"message\", (e) => {\r\n    if (e.data.event === \"start\") {\r\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\r\n    }\r\n  });`;\r\nclass RealtimeClient {\r\n    /**\r\n     * Initializes the Socket.\r\n     *\r\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\r\n     * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\r\n     * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation\r\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\r\n     * @param options.params The optional params to pass when connecting.\r\n     * @param options.headers The optional headers to pass when connecting.\r\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\r\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\r\n     * @param options.logLevel Sets the log level for Realtime\r\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\r\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\r\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\r\n     * @param options.worker Use Web Worker to set a side flow. Defaults to false.\r\n     * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\r\n     */\r\n    constructor(endPoint, options) {\r\n        var _a;\r\n        this.accessTokenValue = null;\r\n        this.apiKey = null;\r\n        this.channels = new Array();\r\n        this.endPoint = '';\r\n        this.httpEndpoint = '';\r\n        this.headers = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS;\r\n        this.params = {};\r\n        this.timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_TIMEOUT;\r\n        this.heartbeatIntervalMs = 25000;\r\n        this.heartbeatTimer = undefined;\r\n        this.pendingHeartbeatRef = null;\r\n        this.heartbeatCallback = noop;\r\n        this.ref = 0;\r\n        this.logger = noop;\r\n        this.conn = null;\r\n        this.sendBuffer = [];\r\n        this.serializer = new _lib_serializer__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        this.stateChangeCallbacks = {\r\n            open: [],\r\n            close: [],\r\n            error: [],\r\n            message: [],\r\n        };\r\n        this.accessToken = null;\r\n        /**\r\n         * Use either custom fetch, if provided, or default fetch to make HTTP requests\r\n         *\r\n         * @internal\r\n         */\r\n        this._resolveFetch = (customFetch) => {\r\n            let _fetch;\r\n            if (customFetch) {\r\n                _fetch = customFetch;\r\n            }\r\n            else if (typeof fetch === 'undefined') {\r\n                _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n            }\r\n            else {\r\n                _fetch = fetch;\r\n            }\r\n            return (...args) => _fetch(...args);\r\n        };\r\n        this.endPoint = `${endPoint}/${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.TRANSPORTS.websocket}`;\r\n        this.httpEndpoint = (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_4__.httpEndpointURL)(endPoint);\r\n        if (options === null || options === void 0 ? void 0 : options.transport) {\r\n            this.transport = options.transport;\r\n        }\r\n        else {\r\n            this.transport = null;\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.params)\r\n            this.params = options.params;\r\n        if (options === null || options === void 0 ? void 0 : options.headers)\r\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\r\n        if (options === null || options === void 0 ? void 0 : options.timeout)\r\n            this.timeout = options.timeout;\r\n        if (options === null || options === void 0 ? void 0 : options.logger)\r\n            this.logger = options.logger;\r\n        if ((options === null || options === void 0 ? void 0 : options.logLevel) || (options === null || options === void 0 ? void 0 : options.log_level)) {\r\n            this.logLevel = options.logLevel || options.log_level;\r\n            this.params = Object.assign(Object.assign({}, this.params), { log_level: this.logLevel });\r\n        }\r\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\r\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\r\n        const accessTokenValue = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey;\r\n        if (accessTokenValue) {\r\n            this.accessTokenValue = accessTokenValue;\r\n            this.apiKey = accessTokenValue;\r\n        }\r\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\r\n            ? options.reconnectAfterMs\r\n            : (tries) => {\r\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\r\n            };\r\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\r\n            ? options.encode\r\n            : (payload, callback) => {\r\n                return callback(JSON.stringify(payload));\r\n            };\r\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\r\n            ? options.decode\r\n            : this.serializer.decode.bind(this.serializer);\r\n        this.reconnectTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](async () => {\r\n            this.disconnect();\r\n            this.connect();\r\n        }, this.reconnectAfterMs);\r\n        this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);\r\n        if (options === null || options === void 0 ? void 0 : options.worker) {\r\n            if (typeof window !== 'undefined' && !window.Worker) {\r\n                throw new Error('Web Worker is not supported');\r\n            }\r\n            this.worker = (options === null || options === void 0 ? void 0 : options.worker) || false;\r\n            this.workerUrl = options === null || options === void 0 ? void 0 : options.workerUrl;\r\n        }\r\n        this.accessToken = (options === null || options === void 0 ? void 0 : options.accessToken) || null;\r\n    }\r\n    /**\r\n     * Connects the socket, unless already connected.\r\n     */\r\n    connect() {\r\n        if (this.conn) {\r\n            return;\r\n        }\r\n        if (!this.transport) {\r\n            this.transport = _WebSocket__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n        }\r\n        if (this.transport) {\r\n            // Detect if using the native browser WebSocket\r\n            const isBrowser = typeof window !== 'undefined' && this.transport === window.WebSocket;\r\n            if (isBrowser) {\r\n                this.conn = new this.transport(this.endpointURL());\r\n            }\r\n            else {\r\n                this.conn = new this.transport(this.endpointURL(), undefined, {\r\n                    headers: this.headers,\r\n                });\r\n            }\r\n            this.setupConnection();\r\n            return;\r\n        }\r\n        this.conn = new WSWebSocketDummy(this.endpointURL(), undefined, {\r\n            close: () => {\r\n                this.conn = null;\r\n            },\r\n        });\r\n    }\r\n    /**\r\n     * Returns the URL of the websocket.\r\n     * @returns string The URL of the websocket.\r\n     */\r\n    endpointURL() {\r\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.VSN }));\r\n    }\r\n    /**\r\n     * Disconnects the socket.\r\n     *\r\n     * @param code A numeric status code to send on disconnect.\r\n     * @param reason A custom reason for the disconnect.\r\n     */\r\n    disconnect(code, reason) {\r\n        if (this.conn) {\r\n            this.conn.onclose = function () { }; // noop\r\n            if (code) {\r\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\r\n            }\r\n            else {\r\n                this.conn.close();\r\n            }\r\n            this.conn = null;\r\n            // remove open handles\r\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n            this.reconnectTimer.reset();\r\n            this.channels.forEach((channel) => channel.teardown());\r\n        }\r\n    }\r\n    /**\r\n     * Returns all created channels\r\n     */\r\n    getChannels() {\r\n        return this.channels;\r\n    }\r\n    /**\r\n     * Unsubscribes and removes a single channel\r\n     * @param channel A RealtimeChannel instance\r\n     */\r\n    async removeChannel(channel) {\r\n        const status = await channel.unsubscribe();\r\n        this.channels = this.channels.filter((c) => c._joinRef !== channel._joinRef);\r\n        if (this.channels.length === 0) {\r\n            this.disconnect();\r\n        }\r\n        return status;\r\n    }\r\n    /**\r\n     * Unsubscribes and removes all channels\r\n     */\r\n    async removeAllChannels() {\r\n        const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()));\r\n        this.channels = [];\r\n        this.disconnect();\r\n        return values_1;\r\n    }\r\n    /**\r\n     * Logs the message.\r\n     *\r\n     * For customized logging, `this.logger` can be overridden.\r\n     */\r\n    log(kind, msg, data) {\r\n        this.logger(kind, msg, data);\r\n    }\r\n    /**\r\n     * Returns the current state of the socket.\r\n     */\r\n    connectionState() {\r\n        switch (this.conn && this.conn.readyState) {\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.connecting:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Connecting;\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.open:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.closing:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closing;\r\n            default:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closed;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` is the connection is open.\r\n     */\r\n    isConnected() {\r\n        return this.connectionState() === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\r\n    }\r\n    channel(topic, params = { config: {} }) {\r\n        const realtimeTopic = `realtime:${topic}`;\r\n        const exists = this.getChannels().find((c) => c.topic === realtimeTopic);\r\n        if (!exists) {\r\n            const chan = new _RealtimeChannel__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`realtime:${topic}`, params, this);\r\n            this.channels.push(chan);\r\n            return chan;\r\n        }\r\n        else {\r\n            return exists;\r\n        }\r\n    }\r\n    /**\r\n     * Push out a message if the socket is connected.\r\n     *\r\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\r\n     */\r\n    push(data) {\r\n        const { topic, event, payload, ref } = data;\r\n        const callback = () => {\r\n            this.encode(data, (result) => {\r\n                var _a;\r\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\r\n            });\r\n        };\r\n        this.log('push', `${topic} ${event} (${ref})`, payload);\r\n        if (this.isConnected()) {\r\n            callback();\r\n        }\r\n        else {\r\n            this.sendBuffer.push(callback);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\r\n     *\r\n     * If param is null it will use the `accessToken` callback function or the token set on the client.\r\n     *\r\n     * On callback used, it will set the value of the token internal to the client.\r\n     *\r\n     * @param token A JWT string to override the token set on the client.\r\n     */\r\n    async setAuth(token = null) {\r\n        let tokenToSend = token ||\r\n            (this.accessToken && (await this.accessToken())) ||\r\n            this.accessTokenValue;\r\n        if (this.accessTokenValue != tokenToSend) {\r\n            this.accessTokenValue = tokenToSend;\r\n            this.channels.forEach((channel) => {\r\n                tokenToSend &&\r\n                    channel.updateJoinPayload({\r\n                        access_token: tokenToSend,\r\n                        version: this.headers && this.headers['X-Client-Info'],\r\n                    });\r\n                if (channel.joinedOnce && channel._isJoined()) {\r\n                    channel._push(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.access_token, {\r\n                        access_token: tokenToSend,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sends a heartbeat message if the socket is connected.\r\n     */\r\n    async sendHeartbeat() {\r\n        var _a;\r\n        if (!this.isConnected()) {\r\n            this.heartbeatCallback('disconnected');\r\n            return;\r\n        }\r\n        if (this.pendingHeartbeatRef) {\r\n            this.pendingHeartbeatRef = null;\r\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\r\n            this.heartbeatCallback('timeout');\r\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.WS_CLOSE_NORMAL, 'hearbeat timeout');\r\n            return;\r\n        }\r\n        this.pendingHeartbeatRef = this._makeRef();\r\n        this.push({\r\n            topic: 'phoenix',\r\n            event: 'heartbeat',\r\n            payload: {},\r\n            ref: this.pendingHeartbeatRef,\r\n        });\r\n        this.heartbeatCallback('sent');\r\n        await this.setAuth();\r\n    }\r\n    onHeartbeat(callback) {\r\n        this.heartbeatCallback = callback;\r\n    }\r\n    /**\r\n     * Flushes send buffer\r\n     */\r\n    flushSendBuffer() {\r\n        if (this.isConnected() && this.sendBuffer.length > 0) {\r\n            this.sendBuffer.forEach((callback) => callback());\r\n            this.sendBuffer = [];\r\n        }\r\n    }\r\n    /**\r\n     * Return the next message ref, accounting for overflows\r\n     *\r\n     * @internal\r\n     */\r\n    _makeRef() {\r\n        let newRef = this.ref + 1;\r\n        if (newRef === this.ref) {\r\n            this.ref = 0;\r\n        }\r\n        else {\r\n            this.ref = newRef;\r\n        }\r\n        return this.ref.toString();\r\n    }\r\n    /**\r\n     * Unsubscribe from channels with the specified topic.\r\n     *\r\n     * @internal\r\n     */\r\n    _leaveOpenTopic(topic) {\r\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\r\n        if (dupChannel) {\r\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\r\n            dupChannel.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * Removes a subscription from the socket.\r\n     *\r\n     * @param channel An open subscription.\r\n     *\r\n     * @internal\r\n     */\r\n    _remove(channel) {\r\n        this.channels = this.channels.filter((c) => c.topic !== channel.topic);\r\n    }\r\n    /**\r\n     * Sets up connection handlers.\r\n     *\r\n     * @internal\r\n     */\r\n    setupConnection() {\r\n        if (this.conn) {\r\n            this.conn.binaryType = 'arraybuffer';\r\n            this.conn.onopen = () => this._onConnOpen();\r\n            this.conn.onerror = (error) => this._onConnError(error);\r\n            this.conn.onmessage = (event) => this._onConnMessage(event);\r\n            this.conn.onclose = (event) => this._onConnClose(event);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _onConnMessage(rawMessage) {\r\n        this.decode(rawMessage.data, (msg) => {\r\n            let { topic, event, payload, ref } = msg;\r\n            if (topic === 'phoenix' && event === 'phx_reply') {\r\n                this.heartbeatCallback(msg.payload.status == 'ok' ? 'ok' : 'error');\r\n            }\r\n            if (ref && ref === this.pendingHeartbeatRef) {\r\n                this.pendingHeartbeatRef = null;\r\n            }\r\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\r\n            Array.from(this.channels)\r\n                .filter((channel) => channel._isMember(topic))\r\n                .forEach((channel) => channel._trigger(event, payload, ref));\r\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\r\n        });\r\n    }\r\n    /** @internal */\r\n    _onConnOpen() {\r\n        this.log('transport', `connected to ${this.endpointURL()}`);\r\n        this.flushSendBuffer();\r\n        this.reconnectTimer.reset();\r\n        if (!this.worker) {\r\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n            this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\r\n        }\r\n        else {\r\n            if (this.workerUrl) {\r\n                this.log('worker', `starting worker for from ${this.workerUrl}`);\r\n            }\r\n            else {\r\n                this.log('worker', `starting default worker`);\r\n            }\r\n            const objectUrl = this._workerObjectUrl(this.workerUrl);\r\n            this.workerRef = new Worker(objectUrl);\r\n            this.workerRef.onerror = (error) => {\r\n                this.log('worker', 'worker error', error.message);\r\n                this.workerRef.terminate();\r\n            };\r\n            this.workerRef.onmessage = (event) => {\r\n                if (event.data.event === 'keepAlive') {\r\n                    this.sendHeartbeat();\r\n                }\r\n            };\r\n            this.workerRef.postMessage({\r\n                event: 'start',\r\n                interval: this.heartbeatIntervalMs,\r\n            });\r\n        }\r\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\r\n    }\r\n    /** @internal */\r\n    _onConnClose(event) {\r\n        this.log('transport', 'close', event);\r\n        this._triggerChanError();\r\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n        this.reconnectTimer.scheduleTimeout();\r\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\r\n    }\r\n    /** @internal */\r\n    _onConnError(error) {\r\n        this.log('transport', error.message);\r\n        this._triggerChanError();\r\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\r\n    }\r\n    /** @internal */\r\n    _triggerChanError() {\r\n        this.channels.forEach((channel) => channel._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.error));\r\n    }\r\n    /** @internal */\r\n    _appendParams(url, params) {\r\n        if (Object.keys(params).length === 0) {\r\n            return url;\r\n        }\r\n        const prefix = url.match(/\\?/) ? '&' : '?';\r\n        const query = new URLSearchParams(params);\r\n        return `${url}${prefix}${query}`;\r\n    }\r\n    _workerObjectUrl(url) {\r\n        let result_url;\r\n        if (url) {\r\n            result_url = url;\r\n        }\r\n        else {\r\n            const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' });\r\n            result_url = URL.createObjectURL(blob);\r\n        }\r\n        return result_url;\r\n    }\r\n}\r\nclass WSWebSocketDummy {\r\n    constructor(address, _protocols, options) {\r\n        this.binaryType = 'arraybuffer';\r\n        this.onclose = () => { };\r\n        this.onerror = () => { };\r\n        this.onmessage = () => { };\r\n        this.onopen = () => { };\r\n        this.readyState = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.connecting;\r\n        this.send = () => { };\r\n        this.url = null;\r\n        this.url = address;\r\n        this.close = options.close;\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimeClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: () => (/* binding */ REALTIME_PRESENCE_LISTEN_EVENTS),\n/* harmony export */   \"default\": () => (/* binding */ RealtimePresence)\n/* harmony export */ });\n/*\r\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\r\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\r\n*/\r\nvar REALTIME_PRESENCE_LISTEN_EVENTS;\r\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\r\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\r\nclass RealtimePresence {\r\n    /**\r\n     * Initializes the Presence.\r\n     *\r\n     * @param channel - The RealtimeChannel\r\n     * @param opts - The options,\r\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\r\n     */\r\n    constructor(channel, opts) {\r\n        this.channel = channel;\r\n        this.state = {};\r\n        this.pendingDiffs = [];\r\n        this.joinRef = null;\r\n        this.caller = {\r\n            onJoin: () => { },\r\n            onLeave: () => { },\r\n            onSync: () => { },\r\n        };\r\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\r\n            state: 'presence_state',\r\n            diff: 'presence_diff',\r\n        };\r\n        this.channel._on(events.state, {}, (newState) => {\r\n            const { onJoin, onLeave, onSync } = this.caller;\r\n            this.joinRef = this.channel._joinRef();\r\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\r\n            this.pendingDiffs.forEach((diff) => {\r\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\r\n            });\r\n            this.pendingDiffs = [];\r\n            onSync();\r\n        });\r\n        this.channel._on(events.diff, {}, (diff) => {\r\n            const { onJoin, onLeave, onSync } = this.caller;\r\n            if (this.inPendingSyncState()) {\r\n                this.pendingDiffs.push(diff);\r\n            }\r\n            else {\r\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\r\n                onSync();\r\n            }\r\n        });\r\n        this.onJoin((key, currentPresences, newPresences) => {\r\n            this.channel._trigger('presence', {\r\n                event: 'join',\r\n                key,\r\n                currentPresences,\r\n                newPresences,\r\n            });\r\n        });\r\n        this.onLeave((key, currentPresences, leftPresences) => {\r\n            this.channel._trigger('presence', {\r\n                event: 'leave',\r\n                key,\r\n                currentPresences,\r\n                leftPresences,\r\n            });\r\n        });\r\n        this.onSync(() => {\r\n            this.channel._trigger('presence', { event: 'sync' });\r\n        });\r\n    }\r\n    /**\r\n     * Used to sync the list of presences on the server with the\r\n     * client's state.\r\n     *\r\n     * An optional `onJoin` and `onLeave` callback can be provided to\r\n     * react to changes in the client's local presences across\r\n     * disconnects and reconnects with the server.\r\n     *\r\n     * @internal\r\n     */\r\n    static syncState(currentState, newState, onJoin, onLeave) {\r\n        const state = this.cloneDeep(currentState);\r\n        const transformedState = this.transformState(newState);\r\n        const joins = {};\r\n        const leaves = {};\r\n        this.map(state, (key, presences) => {\r\n            if (!transformedState[key]) {\r\n                leaves[key] = presences;\r\n            }\r\n        });\r\n        this.map(transformedState, (key, newPresences) => {\r\n            const currentPresences = state[key];\r\n            if (currentPresences) {\r\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\r\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\r\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                if (joinedPresences.length > 0) {\r\n                    joins[key] = joinedPresences;\r\n                }\r\n                if (leftPresences.length > 0) {\r\n                    leaves[key] = leftPresences;\r\n                }\r\n            }\r\n            else {\r\n                joins[key] = newPresences;\r\n            }\r\n        });\r\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\r\n    }\r\n    /**\r\n     * Used to sync a diff of presence join and leave events from the\r\n     * server, as they happen.\r\n     *\r\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\r\n     * `onLeave` callbacks to react to a user joining or leaving from a\r\n     * device.\r\n     *\r\n     * @internal\r\n     */\r\n    static syncDiff(state, diff, onJoin, onLeave) {\r\n        const { joins, leaves } = {\r\n            joins: this.transformState(diff.joins),\r\n            leaves: this.transformState(diff.leaves),\r\n        };\r\n        if (!onJoin) {\r\n            onJoin = () => { };\r\n        }\r\n        if (!onLeave) {\r\n            onLeave = () => { };\r\n        }\r\n        this.map(joins, (key, newPresences) => {\r\n            var _a;\r\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\r\n            state[key] = this.cloneDeep(newPresences);\r\n            if (currentPresences.length > 0) {\r\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\r\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                state[key].unshift(...curPresences);\r\n            }\r\n            onJoin(key, currentPresences, newPresences);\r\n        });\r\n        this.map(leaves, (key, leftPresences) => {\r\n            let currentPresences = state[key];\r\n            if (!currentPresences)\r\n                return;\r\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\r\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\r\n            state[key] = currentPresences;\r\n            onLeave(key, currentPresences, leftPresences);\r\n            if (currentPresences.length === 0)\r\n                delete state[key];\r\n        });\r\n        return state;\r\n    }\r\n    /** @internal */\r\n    static map(obj, func) {\r\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\r\n    }\r\n    /**\r\n     * Remove 'metas' key\r\n     * Change 'phx_ref' to 'presence_ref'\r\n     * Remove 'phx_ref' and 'phx_ref_prev'\r\n     *\r\n     * @example\r\n     * // returns {\r\n     *  abc123: [\r\n     *    { presence_ref: '2', user_id: 1 },\r\n     *    { presence_ref: '3', user_id: 2 }\r\n     *  ]\r\n     * }\r\n     * RealtimePresence.transformState({\r\n     *  abc123: {\r\n     *    metas: [\r\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\r\n     *      { phx_ref: '3', user_id: 2 }\r\n     *    ]\r\n     *  }\r\n     * })\r\n     *\r\n     * @internal\r\n     */\r\n    static transformState(state) {\r\n        state = this.cloneDeep(state);\r\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\r\n            const presences = state[key];\r\n            if ('metas' in presences) {\r\n                newState[key] = presences.metas.map((presence) => {\r\n                    presence['presence_ref'] = presence['phx_ref'];\r\n                    delete presence['phx_ref'];\r\n                    delete presence['phx_ref_prev'];\r\n                    return presence;\r\n                });\r\n            }\r\n            else {\r\n                newState[key] = presences;\r\n            }\r\n            return newState;\r\n        }, {});\r\n    }\r\n    /** @internal */\r\n    static cloneDeep(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n    /** @internal */\r\n    onJoin(callback) {\r\n        this.caller.onJoin = callback;\r\n    }\r\n    /** @internal */\r\n    onLeave(callback) {\r\n        this.caller.onLeave = callback;\r\n    }\r\n    /** @internal */\r\n    onSync(callback) {\r\n        this.caller.onSync = callback;\r\n    }\r\n    /** @internal */\r\n    inPendingSyncState() {\r\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimePresence.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvUmVhbHRpbWVQcmVzZW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEVBQTBFO0FBQzVEO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixTQUFTLDhCQUE4QjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3Qiw4QkFBOEI7QUFDOUIsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekMsb0JBQW9CLDBCQUEwQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNULHdDQUF3QztBQUN4QyxvQkFBb0IsMEJBQTBCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLGdEQUFnRCxlQUFlO0FBQy9ELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsc0NBQXNDLGVBQWU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrQkFBK0I7QUFDM0MsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDRDQUE0QztBQUMxRCxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxyZWFsdGltZS1qc1xcZGlzdFxcbW9kdWxlXFxSZWFsdGltZVByZXNlbmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAgVGhpcyBmaWxlIGRyYXdzIGhlYXZpbHkgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGhvZW5peGZyYW1ld29yay9waG9lbml4L2Jsb2IvZDM0NGVjMGE3MzJhYjRlZTIwNDIxNWIzMWRlNjljZjRiZTcyZTNiZi9hc3NldHMvanMvcGhvZW5peC9wcmVzZW5jZS5qc1xyXG4gIExpY2Vuc2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9waG9lbml4ZnJhbWV3b3JrL3Bob2VuaXgvYmxvYi9kMzQ0ZWMwYTczMmFiNGVlMjA0MjE1YjMxZGU2OWNmNGJlNzJlM2JmL0xJQ0VOU0UubWRcclxuKi9cclxuZXhwb3J0IHZhciBSRUFMVElNRV9QUkVTRU5DRV9MSVNURU5fRVZFTlRTO1xyXG4oZnVuY3Rpb24gKFJFQUxUSU1FX1BSRVNFTkNFX0xJU1RFTl9FVkVOVFMpIHtcclxuICAgIFJFQUxUSU1FX1BSRVNFTkNFX0xJU1RFTl9FVkVOVFNbXCJTWU5DXCJdID0gXCJzeW5jXCI7XHJcbiAgICBSRUFMVElNRV9QUkVTRU5DRV9MSVNURU5fRVZFTlRTW1wiSk9JTlwiXSA9IFwiam9pblwiO1xyXG4gICAgUkVBTFRJTUVfUFJFU0VOQ0VfTElTVEVOX0VWRU5UU1tcIkxFQVZFXCJdID0gXCJsZWF2ZVwiO1xyXG59KShSRUFMVElNRV9QUkVTRU5DRV9MSVNURU5fRVZFTlRTIHx8IChSRUFMVElNRV9QUkVTRU5DRV9MSVNURU5fRVZFTlRTID0ge30pKTtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVhbHRpbWVQcmVzZW5jZSB7XHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpemVzIHRoZSBQcmVzZW5jZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gY2hhbm5lbCAtIFRoZSBSZWFsdGltZUNoYW5uZWxcclxuICAgICAqIEBwYXJhbSBvcHRzIC0gVGhlIG9wdGlvbnMsXHJcbiAgICAgKiAgICAgICAgZm9yIGV4YW1wbGUgYHtldmVudHM6IHtzdGF0ZTogJ3N0YXRlJywgZGlmZjogJ2RpZmYnfX1gXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGNoYW5uZWwsIG9wdHMpIHtcclxuICAgICAgICB0aGlzLmNoYW5uZWwgPSBjaGFubmVsO1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7fTtcclxuICAgICAgICB0aGlzLnBlbmRpbmdEaWZmcyA9IFtdO1xyXG4gICAgICAgIHRoaXMuam9pblJlZiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jYWxsZXIgPSB7XHJcbiAgICAgICAgICAgIG9uSm9pbjogKCkgPT4geyB9LFxyXG4gICAgICAgICAgICBvbkxlYXZlOiAoKSA9PiB7IH0sXHJcbiAgICAgICAgICAgIG9uU3luYzogKCkgPT4geyB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgZXZlbnRzID0gKG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5ldmVudHMpIHx8IHtcclxuICAgICAgICAgICAgc3RhdGU6ICdwcmVzZW5jZV9zdGF0ZScsXHJcbiAgICAgICAgICAgIGRpZmY6ICdwcmVzZW5jZV9kaWZmJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuY2hhbm5lbC5fb24oZXZlbnRzLnN0YXRlLCB7fSwgKG5ld1N0YXRlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgb25Kb2luLCBvbkxlYXZlLCBvblN5bmMgfSA9IHRoaXMuY2FsbGVyO1xyXG4gICAgICAgICAgICB0aGlzLmpvaW5SZWYgPSB0aGlzLmNoYW5uZWwuX2pvaW5SZWYoKTtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFJlYWx0aW1lUHJlc2VuY2Uuc3luY1N0YXRlKHRoaXMuc3RhdGUsIG5ld1N0YXRlLCBvbkpvaW4sIG9uTGVhdmUpO1xyXG4gICAgICAgICAgICB0aGlzLnBlbmRpbmdEaWZmcy5mb3JFYWNoKChkaWZmKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlID0gUmVhbHRpbWVQcmVzZW5jZS5zeW5jRGlmZih0aGlzLnN0YXRlLCBkaWZmLCBvbkpvaW4sIG9uTGVhdmUpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5wZW5kaW5nRGlmZnMgPSBbXTtcclxuICAgICAgICAgICAgb25TeW5jKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5jaGFubmVsLl9vbihldmVudHMuZGlmZiwge30sIChkaWZmKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgb25Kb2luLCBvbkxlYXZlLCBvblN5bmMgfSA9IHRoaXMuY2FsbGVyO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pblBlbmRpbmdTeW5jU3RhdGUoKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wZW5kaW5nRGlmZnMucHVzaChkaWZmKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBSZWFsdGltZVByZXNlbmNlLnN5bmNEaWZmKHRoaXMuc3RhdGUsIGRpZmYsIG9uSm9pbiwgb25MZWF2ZSk7XHJcbiAgICAgICAgICAgICAgICBvblN5bmMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMub25Kb2luKChrZXksIGN1cnJlbnRQcmVzZW5jZXMsIG5ld1ByZXNlbmNlcykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmNoYW5uZWwuX3RyaWdnZXIoJ3ByZXNlbmNlJywge1xyXG4gICAgICAgICAgICAgICAgZXZlbnQ6ICdqb2luJyxcclxuICAgICAgICAgICAgICAgIGtleSxcclxuICAgICAgICAgICAgICAgIGN1cnJlbnRQcmVzZW5jZXMsXHJcbiAgICAgICAgICAgICAgICBuZXdQcmVzZW5jZXMsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMub25MZWF2ZSgoa2V5LCBjdXJyZW50UHJlc2VuY2VzLCBsZWZ0UHJlc2VuY2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbC5fdHJpZ2dlcigncHJlc2VuY2UnLCB7XHJcbiAgICAgICAgICAgICAgICBldmVudDogJ2xlYXZlJyxcclxuICAgICAgICAgICAgICAgIGtleSxcclxuICAgICAgICAgICAgICAgIGN1cnJlbnRQcmVzZW5jZXMsXHJcbiAgICAgICAgICAgICAgICBsZWZ0UHJlc2VuY2VzLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLm9uU3luYygoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbC5fdHJpZ2dlcigncHJlc2VuY2UnLCB7IGV2ZW50OiAnc3luYycgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFVzZWQgdG8gc3luYyB0aGUgbGlzdCBvZiBwcmVzZW5jZXMgb24gdGhlIHNlcnZlciB3aXRoIHRoZVxyXG4gICAgICogY2xpZW50J3Mgc3RhdGUuXHJcbiAgICAgKlxyXG4gICAgICogQW4gb3B0aW9uYWwgYG9uSm9pbmAgYW5kIGBvbkxlYXZlYCBjYWxsYmFjayBjYW4gYmUgcHJvdmlkZWQgdG9cclxuICAgICAqIHJlYWN0IHRvIGNoYW5nZXMgaW4gdGhlIGNsaWVudCdzIGxvY2FsIHByZXNlbmNlcyBhY3Jvc3NcclxuICAgICAqIGRpc2Nvbm5lY3RzIGFuZCByZWNvbm5lY3RzIHdpdGggdGhlIHNlcnZlci5cclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgc3RhdGljIHN5bmNTdGF0ZShjdXJyZW50U3RhdGUsIG5ld1N0YXRlLCBvbkpvaW4sIG9uTGVhdmUpIHtcclxuICAgICAgICBjb25zdCBzdGF0ZSA9IHRoaXMuY2xvbmVEZWVwKGN1cnJlbnRTdGF0ZSk7XHJcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtZWRTdGF0ZSA9IHRoaXMudHJhbnNmb3JtU3RhdGUobmV3U3RhdGUpO1xyXG4gICAgICAgIGNvbnN0IGpvaW5zID0ge307XHJcbiAgICAgICAgY29uc3QgbGVhdmVzID0ge307XHJcbiAgICAgICAgdGhpcy5tYXAoc3RhdGUsIChrZXksIHByZXNlbmNlcykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXRyYW5zZm9ybWVkU3RhdGVba2V5XSkge1xyXG4gICAgICAgICAgICAgICAgbGVhdmVzW2tleV0gPSBwcmVzZW5jZXM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLm1hcCh0cmFuc2Zvcm1lZFN0YXRlLCAoa2V5LCBuZXdQcmVzZW5jZXMpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgY3VycmVudFByZXNlbmNlcyA9IHN0YXRlW2tleV07XHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50UHJlc2VuY2VzKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdQcmVzZW5jZVJlZnMgPSBuZXdQcmVzZW5jZXMubWFwKChtKSA9PiBtLnByZXNlbmNlX3JlZik7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJQcmVzZW5jZVJlZnMgPSBjdXJyZW50UHJlc2VuY2VzLm1hcCgobSkgPT4gbS5wcmVzZW5jZV9yZWYpO1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgam9pbmVkUHJlc2VuY2VzID0gbmV3UHJlc2VuY2VzLmZpbHRlcigobSkgPT4gY3VyUHJlc2VuY2VSZWZzLmluZGV4T2YobS5wcmVzZW5jZV9yZWYpIDwgMCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBsZWZ0UHJlc2VuY2VzID0gY3VycmVudFByZXNlbmNlcy5maWx0ZXIoKG0pID0+IG5ld1ByZXNlbmNlUmVmcy5pbmRleE9mKG0ucHJlc2VuY2VfcmVmKSA8IDApO1xyXG4gICAgICAgICAgICAgICAgaWYgKGpvaW5lZFByZXNlbmNlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgam9pbnNba2V5XSA9IGpvaW5lZFByZXNlbmNlcztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChsZWZ0UHJlc2VuY2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBsZWF2ZXNba2V5XSA9IGxlZnRQcmVzZW5jZXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBqb2luc1trZXldID0gbmV3UHJlc2VuY2VzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3luY0RpZmYoc3RhdGUsIHsgam9pbnMsIGxlYXZlcyB9LCBvbkpvaW4sIG9uTGVhdmUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVc2VkIHRvIHN5bmMgYSBkaWZmIG9mIHByZXNlbmNlIGpvaW4gYW5kIGxlYXZlIGV2ZW50cyBmcm9tIHRoZVxyXG4gICAgICogc2VydmVyLCBhcyB0aGV5IGhhcHBlbi5cclxuICAgICAqXHJcbiAgICAgKiBMaWtlIGBzeW5jU3RhdGVgLCBgc3luY0RpZmZgIGFjY2VwdHMgb3B0aW9uYWwgYG9uSm9pbmAgYW5kXHJcbiAgICAgKiBgb25MZWF2ZWAgY2FsbGJhY2tzIHRvIHJlYWN0IHRvIGEgdXNlciBqb2luaW5nIG9yIGxlYXZpbmcgZnJvbSBhXHJcbiAgICAgKiBkZXZpY2UuXHJcbiAgICAgKlxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBzeW5jRGlmZihzdGF0ZSwgZGlmZiwgb25Kb2luLCBvbkxlYXZlKSB7XHJcbiAgICAgICAgY29uc3QgeyBqb2lucywgbGVhdmVzIH0gPSB7XHJcbiAgICAgICAgICAgIGpvaW5zOiB0aGlzLnRyYW5zZm9ybVN0YXRlKGRpZmYuam9pbnMpLFxyXG4gICAgICAgICAgICBsZWF2ZXM6IHRoaXMudHJhbnNmb3JtU3RhdGUoZGlmZi5sZWF2ZXMpLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKCFvbkpvaW4pIHtcclxuICAgICAgICAgICAgb25Kb2luID0gKCkgPT4geyB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIW9uTGVhdmUpIHtcclxuICAgICAgICAgICAgb25MZWF2ZSA9ICgpID0+IHsgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5tYXAoam9pbnMsIChrZXksIG5ld1ByZXNlbmNlcykgPT4ge1xyXG4gICAgICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRQcmVzZW5jZXMgPSAoX2EgPSBzdGF0ZVtrZXldKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcclxuICAgICAgICAgICAgc3RhdGVba2V5XSA9IHRoaXMuY2xvbmVEZWVwKG5ld1ByZXNlbmNlcyk7XHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50UHJlc2VuY2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGpvaW5lZFByZXNlbmNlUmVmcyA9IHN0YXRlW2tleV0ubWFwKChtKSA9PiBtLnByZXNlbmNlX3JlZik7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJQcmVzZW5jZXMgPSBjdXJyZW50UHJlc2VuY2VzLmZpbHRlcigobSkgPT4gam9pbmVkUHJlc2VuY2VSZWZzLmluZGV4T2YobS5wcmVzZW5jZV9yZWYpIDwgMCk7XHJcbiAgICAgICAgICAgICAgICBzdGF0ZVtrZXldLnVuc2hpZnQoLi4uY3VyUHJlc2VuY2VzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvbkpvaW4oa2V5LCBjdXJyZW50UHJlc2VuY2VzLCBuZXdQcmVzZW5jZXMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMubWFwKGxlYXZlcywgKGtleSwgbGVmdFByZXNlbmNlcykgPT4ge1xyXG4gICAgICAgICAgICBsZXQgY3VycmVudFByZXNlbmNlcyA9IHN0YXRlW2tleV07XHJcbiAgICAgICAgICAgIGlmICghY3VycmVudFByZXNlbmNlcylcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgY29uc3QgcHJlc2VuY2VSZWZzVG9SZW1vdmUgPSBsZWZ0UHJlc2VuY2VzLm1hcCgobSkgPT4gbS5wcmVzZW5jZV9yZWYpO1xyXG4gICAgICAgICAgICBjdXJyZW50UHJlc2VuY2VzID0gY3VycmVudFByZXNlbmNlcy5maWx0ZXIoKG0pID0+IHByZXNlbmNlUmVmc1RvUmVtb3ZlLmluZGV4T2YobS5wcmVzZW5jZV9yZWYpIDwgMCk7XHJcbiAgICAgICAgICAgIHN0YXRlW2tleV0gPSBjdXJyZW50UHJlc2VuY2VzO1xyXG4gICAgICAgICAgICBvbkxlYXZlKGtleSwgY3VycmVudFByZXNlbmNlcywgbGVmdFByZXNlbmNlcyk7XHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50UHJlc2VuY2VzLmxlbmd0aCA9PT0gMClcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSBzdGF0ZVtrZXldO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgIH1cclxuICAgIC8qKiBAaW50ZXJuYWwgKi9cclxuICAgIHN0YXRpYyBtYXAob2JqLCBmdW5jKSB7XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikubWFwKChrZXkpID0+IGZ1bmMoa2V5LCBvYmpba2V5XSkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmUgJ21ldGFzJyBrZXlcclxuICAgICAqIENoYW5nZSAncGh4X3JlZicgdG8gJ3ByZXNlbmNlX3JlZidcclxuICAgICAqIFJlbW92ZSAncGh4X3JlZicgYW5kICdwaHhfcmVmX3ByZXYnXHJcbiAgICAgKlxyXG4gICAgICogQGV4YW1wbGVcclxuICAgICAqIC8vIHJldHVybnMge1xyXG4gICAgICogIGFiYzEyMzogW1xyXG4gICAgICogICAgeyBwcmVzZW5jZV9yZWY6ICcyJywgdXNlcl9pZDogMSB9LFxyXG4gICAgICogICAgeyBwcmVzZW5jZV9yZWY6ICczJywgdXNlcl9pZDogMiB9XHJcbiAgICAgKiAgXVxyXG4gICAgICogfVxyXG4gICAgICogUmVhbHRpbWVQcmVzZW5jZS50cmFuc2Zvcm1TdGF0ZSh7XHJcbiAgICAgKiAgYWJjMTIzOiB7XHJcbiAgICAgKiAgICBtZXRhczogW1xyXG4gICAgICogICAgICB7IHBoeF9yZWY6ICcyJywgcGh4X3JlZl9wcmV2OiAnMScgdXNlcl9pZDogMSB9LFxyXG4gICAgICogICAgICB7IHBoeF9yZWY6ICczJywgdXNlcl9pZDogMiB9XHJcbiAgICAgKiAgICBdXHJcbiAgICAgKiAgfVxyXG4gICAgICogfSlcclxuICAgICAqXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgc3RhdGljIHRyYW5zZm9ybVN0YXRlKHN0YXRlKSB7XHJcbiAgICAgICAgc3RhdGUgPSB0aGlzLmNsb25lRGVlcChzdGF0ZSk7XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHN0YXRlKS5yZWR1Y2UoKG5ld1N0YXRlLCBrZXkpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcHJlc2VuY2VzID0gc3RhdGVba2V5XTtcclxuICAgICAgICAgICAgaWYgKCdtZXRhcycgaW4gcHJlc2VuY2VzKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdTdGF0ZVtrZXldID0gcHJlc2VuY2VzLm1ldGFzLm1hcCgocHJlc2VuY2UpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZVsncHJlc2VuY2VfcmVmJ10gPSBwcmVzZW5jZVsncGh4X3JlZiddO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZVsncGh4X3JlZiddO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZVsncGh4X3JlZl9wcmV2J107XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByZXNlbmNlO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBuZXdTdGF0ZVtrZXldID0gcHJlc2VuY2VzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBuZXdTdGF0ZTtcclxuICAgICAgICB9LCB7fSk7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBzdGF0aWMgY2xvbmVEZWVwKG9iaikge1xyXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9iaikpO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgb25Kb2luKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdGhpcy5jYWxsZXIub25Kb2luID0gY2FsbGJhY2s7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBvbkxlYXZlKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdGhpcy5jYWxsZXIub25MZWF2ZSA9IGNhbGxiYWNrO1xyXG4gICAgfVxyXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gICAgb25TeW5jKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdGhpcy5jYWxsZXIub25TeW5jID0gY2FsbGJhY2s7XHJcbiAgICB9XHJcbiAgICAvKiogQGludGVybmFsICovXHJcbiAgICBpblBlbmRpbmdTeW5jU3RhdGUoKSB7XHJcbiAgICAgICAgcmV0dXJuICF0aGlzLmpvaW5SZWYgfHwgdGhpcy5qb2luUmVmICE9PSB0aGlzLmNoYW5uZWwuX2pvaW5SZWYoKTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWFsdGltZVByZXNlbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/WebSocket.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/WebSocket.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Node.js WebSocket entry point\r\nlet WebSocketImpl;\r\nif (typeof window === 'undefined') {\r\n    // Node.js environment\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    WebSocketImpl = __webpack_require__(/*! ws */ \"(app-pages-browser)/./node_modules/ws/browser.js\");\r\n}\r\nelse {\r\n    // Browser environment\r\n    WebSocketImpl = window.WebSocket;\r\n}\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WebSocketImpl);\r\n//# sourceMappingURL=WebSocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvV2ViU29ja2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFPLENBQUMsNERBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGFBQWEsRUFBQztBQUM3QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxyZWFsdGltZS1qc1xcZGlzdFxcbW9kdWxlXFxXZWJTb2NrZXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm9kZS5qcyBXZWJTb2NrZXQgZW50cnkgcG9pbnRcclxubGV0IFdlYlNvY2tldEltcGw7XHJcbmlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgLy8gTm9kZS5qcyBlbnZpcm9ubWVudFxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby12YXItcmVxdWlyZXNcclxuICAgIFdlYlNvY2tldEltcGwgPSByZXF1aXJlKCd3cycpO1xyXG59XHJcbmVsc2Uge1xyXG4gICAgLy8gQnJvd3NlciBlbnZpcm9ubWVudFxyXG4gICAgV2ViU29ja2V0SW1wbCA9IHdpbmRvdy5XZWJTb2NrZXQ7XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgV2ViU29ja2V0SW1wbDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2ViU29ja2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/WebSocket.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_CHANNEL_STATES),\n/* harmony export */   REALTIME_LISTEN_TYPES: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_LISTEN_TYPES),\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT),\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: () => (/* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__.REALTIME_PRESENCE_LISTEN_EVENTS),\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_SUBSCRIBE_STATES),\n/* harmony export */   RealtimeChannel: () => (/* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   RealtimeClient: () => (/* reexport safe */ _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   RealtimePresence: () => (/* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RealtimeClient */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealtimeChannel */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealtimePresence */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDMEg7QUFDaEY7QUFDMEg7QUFDbE4iLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccmVhbHRpbWUtanNcXGRpc3RcXG1vZHVsZVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWx0aW1lQ2xpZW50IGZyb20gJy4vUmVhbHRpbWVDbGllbnQnO1xyXG5pbXBvcnQgUmVhbHRpbWVDaGFubmVsLCB7IFJFQUxUSU1FX0xJU1RFTl9UWVBFUywgUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlQsIFJFQUxUSU1FX1NVQlNDUklCRV9TVEFURVMsIFJFQUxUSU1FX0NIQU5ORUxfU1RBVEVTLCB9IGZyb20gJy4vUmVhbHRpbWVDaGFubmVsJztcclxuaW1wb3J0IFJlYWx0aW1lUHJlc2VuY2UsIHsgUkVBTFRJTUVfUFJFU0VOQ0VfTElTVEVOX0VWRU5UUywgfSBmcm9tICcuL1JlYWx0aW1lUHJlc2VuY2UnO1xyXG5leHBvcnQgeyBSZWFsdGltZVByZXNlbmNlLCBSZWFsdGltZUNoYW5uZWwsIFJlYWx0aW1lQ2xpZW50LCBSRUFMVElNRV9MSVNURU5fVFlQRVMsIFJFQUxUSU1FX1BPU1RHUkVTX0NIQU5HRVNfTElTVEVOX0VWRU5ULCBSRUFMVElNRV9QUkVTRU5DRV9MSVNURU5fRVZFTlRTLCBSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTLCBSRUFMVElNRV9DSEFOTkVMX1NUQVRFUywgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHANNEL_EVENTS: () => (/* binding */ CHANNEL_EVENTS),\n/* harmony export */   CHANNEL_STATES: () => (/* binding */ CHANNEL_STATES),\n/* harmony export */   CONNECTION_STATE: () => (/* binding */ CONNECTION_STATE),\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS),\n/* harmony export */   DEFAULT_TIMEOUT: () => (/* binding */ DEFAULT_TIMEOUT),\n/* harmony export */   SOCKET_STATES: () => (/* binding */ SOCKET_STATES),\n/* harmony export */   TRANSPORTS: () => (/* binding */ TRANSPORTS),\n/* harmony export */   VERSION: () => (/* binding */ VERSION),\n/* harmony export */   VSN: () => (/* binding */ VSN),\n/* harmony export */   WS_CLOSE_NORMAL: () => (/* binding */ WS_CLOSE_NORMAL)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js\");\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst VSN = '1.0.0';\r\nconst VERSION = _version__WEBPACK_IMPORTED_MODULE_0__.version;\r\nconst DEFAULT_TIMEOUT = 10000;\r\nconst WS_CLOSE_NORMAL = 1000;\r\nvar SOCKET_STATES;\r\n(function (SOCKET_STATES) {\r\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\r\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\r\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\r\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\r\n})(SOCKET_STATES || (SOCKET_STATES = {}));\r\nvar CHANNEL_STATES;\r\n(function (CHANNEL_STATES) {\r\n    CHANNEL_STATES[\"closed\"] = \"closed\";\r\n    CHANNEL_STATES[\"errored\"] = \"errored\";\r\n    CHANNEL_STATES[\"joined\"] = \"joined\";\r\n    CHANNEL_STATES[\"joining\"] = \"joining\";\r\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\r\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\r\nvar CHANNEL_EVENTS;\r\n(function (CHANNEL_EVENTS) {\r\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\r\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\r\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\r\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\r\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\r\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\r\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\r\nvar TRANSPORTS;\r\n(function (TRANSPORTS) {\r\n    TRANSPORTS[\"websocket\"] = \"websocket\";\r\n})(TRANSPORTS || (TRANSPORTS = {}));\r\nvar CONNECTION_STATE;\r\n(function (CONNECTION_STATE) {\r\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\r\n    CONNECTION_STATE[\"Open\"] = \"open\";\r\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\r\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\r\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QiwwQkFBMEIsZ0NBQWdDLDZDQUFPLENBQUM7QUFDbEU7QUFDQSxnQkFBZ0IsNkNBQU87QUFDdkI7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0NBQXNDO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDO0FBQ2xDO0FBQ1A7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQzFCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHJlYWx0aW1lLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nO1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9IRUFERVJTID0geyAnWC1DbGllbnQtSW5mbyc6IGByZWFsdGltZS1qcy8ke3ZlcnNpb259YCB9O1xyXG5leHBvcnQgY29uc3QgVlNOID0gJzEuMC4wJztcclxuZXhwb3J0IGNvbnN0IFZFUlNJT04gPSB2ZXJzaW9uO1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9USU1FT1VUID0gMTAwMDA7XHJcbmV4cG9ydCBjb25zdCBXU19DTE9TRV9OT1JNQUwgPSAxMDAwO1xyXG5leHBvcnQgdmFyIFNPQ0tFVF9TVEFURVM7XHJcbihmdW5jdGlvbiAoU09DS0VUX1NUQVRFUykge1xyXG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wiY29ubmVjdGluZ1wiXSA9IDBdID0gXCJjb25uZWN0aW5nXCI7XHJcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJvcGVuXCJdID0gMV0gPSBcIm9wZW5cIjtcclxuICAgIFNPQ0tFVF9TVEFURVNbU09DS0VUX1NUQVRFU1tcImNsb3NpbmdcIl0gPSAyXSA9IFwiY2xvc2luZ1wiO1xyXG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wiY2xvc2VkXCJdID0gM10gPSBcImNsb3NlZFwiO1xyXG59KShTT0NLRVRfU1RBVEVTIHx8IChTT0NLRVRfU1RBVEVTID0ge30pKTtcclxuZXhwb3J0IHZhciBDSEFOTkVMX1NUQVRFUztcclxuKGZ1bmN0aW9uIChDSEFOTkVMX1NUQVRFUykge1xyXG4gICAgQ0hBTk5FTF9TVEFURVNbXCJjbG9zZWRcIl0gPSBcImNsb3NlZFwiO1xyXG4gICAgQ0hBTk5FTF9TVEFURVNbXCJlcnJvcmVkXCJdID0gXCJlcnJvcmVkXCI7XHJcbiAgICBDSEFOTkVMX1NUQVRFU1tcImpvaW5lZFwiXSA9IFwiam9pbmVkXCI7XHJcbiAgICBDSEFOTkVMX1NUQVRFU1tcImpvaW5pbmdcIl0gPSBcImpvaW5pbmdcIjtcclxuICAgIENIQU5ORUxfU1RBVEVTW1wibGVhdmluZ1wiXSA9IFwibGVhdmluZ1wiO1xyXG59KShDSEFOTkVMX1NUQVRFUyB8fCAoQ0hBTk5FTF9TVEFURVMgPSB7fSkpO1xyXG5leHBvcnQgdmFyIENIQU5ORUxfRVZFTlRTO1xyXG4oZnVuY3Rpb24gKENIQU5ORUxfRVZFTlRTKSB7XHJcbiAgICBDSEFOTkVMX0VWRU5UU1tcImNsb3NlXCJdID0gXCJwaHhfY2xvc2VcIjtcclxuICAgIENIQU5ORUxfRVZFTlRTW1wiZXJyb3JcIl0gPSBcInBoeF9lcnJvclwiO1xyXG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJqb2luXCJdID0gXCJwaHhfam9pblwiO1xyXG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJyZXBseVwiXSA9IFwicGh4X3JlcGx5XCI7XHJcbiAgICBDSEFOTkVMX0VWRU5UU1tcImxlYXZlXCJdID0gXCJwaHhfbGVhdmVcIjtcclxuICAgIENIQU5ORUxfRVZFTlRTW1wiYWNjZXNzX3Rva2VuXCJdID0gXCJhY2Nlc3NfdG9rZW5cIjtcclxufSkoQ0hBTk5FTF9FVkVOVFMgfHwgKENIQU5ORUxfRVZFTlRTID0ge30pKTtcclxuZXhwb3J0IHZhciBUUkFOU1BPUlRTO1xyXG4oZnVuY3Rpb24gKFRSQU5TUE9SVFMpIHtcclxuICAgIFRSQU5TUE9SVFNbXCJ3ZWJzb2NrZXRcIl0gPSBcIndlYnNvY2tldFwiO1xyXG59KShUUkFOU1BPUlRTIHx8IChUUkFOU1BPUlRTID0ge30pKTtcclxuZXhwb3J0IHZhciBDT05ORUNUSU9OX1NUQVRFO1xyXG4oZnVuY3Rpb24gKENPTk5FQ1RJT05fU1RBVEUpIHtcclxuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDb25uZWN0aW5nXCJdID0gXCJjb25uZWN0aW5nXCI7XHJcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiT3BlblwiXSA9IFwib3BlblwiO1xyXG4gICAgQ09OTkVDVElPTl9TVEFURVtcIkNsb3NpbmdcIl0gPSBcImNsb3NpbmdcIjtcclxuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDbG9zZWRcIl0gPSBcImNsb3NlZFwiO1xyXG59KShDT05ORUNUSU9OX1NUQVRFIHx8IChDT05ORUNUSU9OX1NUQVRFID0ge30pKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/push.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Push)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n\r\nclass Push {\r\n    /**\r\n     * Initializes the Push\r\n     *\r\n     * @param channel The Channel\r\n     * @param event The event, for example `\"phx_join\"`\r\n     * @param payload The payload, for example `{user_id: 123}`\r\n     * @param timeout The push timeout in milliseconds\r\n     */\r\n    constructor(channel, event, payload = {}, timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT) {\r\n        this.channel = channel;\r\n        this.event = event;\r\n        this.payload = payload;\r\n        this.timeout = timeout;\r\n        this.sent = false;\r\n        this.timeoutTimer = undefined;\r\n        this.ref = '';\r\n        this.receivedResp = null;\r\n        this.recHooks = [];\r\n        this.refEvent = null;\r\n    }\r\n    resend(timeout) {\r\n        this.timeout = timeout;\r\n        this._cancelRefEvent();\r\n        this.ref = '';\r\n        this.refEvent = null;\r\n        this.receivedResp = null;\r\n        this.sent = false;\r\n        this.send();\r\n    }\r\n    send() {\r\n        if (this._hasReceived('timeout')) {\r\n            return;\r\n        }\r\n        this.startTimeout();\r\n        this.sent = true;\r\n        this.channel.socket.push({\r\n            topic: this.channel.topic,\r\n            event: this.event,\r\n            payload: this.payload,\r\n            ref: this.ref,\r\n            join_ref: this.channel._joinRef(),\r\n        });\r\n    }\r\n    updatePayload(payload) {\r\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\r\n    }\r\n    receive(status, callback) {\r\n        var _a;\r\n        if (this._hasReceived(status)) {\r\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\r\n        }\r\n        this.recHooks.push({ status, callback });\r\n        return this;\r\n    }\r\n    startTimeout() {\r\n        if (this.timeoutTimer) {\r\n            return;\r\n        }\r\n        this.ref = this.channel.socket._makeRef();\r\n        this.refEvent = this.channel._replyEventName(this.ref);\r\n        const callback = (payload) => {\r\n            this._cancelRefEvent();\r\n            this._cancelTimeout();\r\n            this.receivedResp = payload;\r\n            this._matchReceive(payload);\r\n        };\r\n        this.channel._on(this.refEvent, {}, callback);\r\n        this.timeoutTimer = setTimeout(() => {\r\n            this.trigger('timeout', {});\r\n        }, this.timeout);\r\n    }\r\n    trigger(status, response) {\r\n        if (this.refEvent)\r\n            this.channel._trigger(this.refEvent, { status, response });\r\n    }\r\n    destroy() {\r\n        this._cancelRefEvent();\r\n        this._cancelTimeout();\r\n    }\r\n    _cancelRefEvent() {\r\n        if (!this.refEvent) {\r\n            return;\r\n        }\r\n        this.channel._off(this.refEvent, {});\r\n    }\r\n    _cancelTimeout() {\r\n        clearTimeout(this.timeoutTimer);\r\n        this.timeoutTimer = undefined;\r\n    }\r\n    _matchReceive({ status, response, }) {\r\n        this.recHooks\r\n            .filter((h) => h.status === status)\r\n            .forEach((h) => h.callback(response));\r\n    }\r\n    _hasReceived(status) {\r\n        return this.receivedResp && this.receivedResp.status === status;\r\n    }\r\n}\r\n//# sourceMappingURL=push.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3B1c2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDcEM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGFBQWE7QUFDOUQ7QUFDQTtBQUNBLDRDQUE0QyxZQUFZLDJEQUFlO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0JBQWtCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSxzQ0FBc0M7QUFDdEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxrQkFBa0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxyZWFsdGltZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXHB1c2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVGQVVMVF9USU1FT1VUIH0gZnJvbSAnLi4vbGliL2NvbnN0YW50cyc7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFB1c2gge1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgUHVzaFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjaGFubmVsIFRoZSBDaGFubmVsXHJcbiAgICAgKiBAcGFyYW0gZXZlbnQgVGhlIGV2ZW50LCBmb3IgZXhhbXBsZSBgXCJwaHhfam9pblwiYFxyXG4gICAgICogQHBhcmFtIHBheWxvYWQgVGhlIHBheWxvYWQsIGZvciBleGFtcGxlIGB7dXNlcl9pZDogMTIzfWBcclxuICAgICAqIEBwYXJhbSB0aW1lb3V0IFRoZSBwdXNoIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGNoYW5uZWwsIGV2ZW50LCBwYXlsb2FkID0ge30sIHRpbWVvdXQgPSBERUZBVUxUX1RJTUVPVVQpIHtcclxuICAgICAgICB0aGlzLmNoYW5uZWwgPSBjaGFubmVsO1xyXG4gICAgICAgIHRoaXMuZXZlbnQgPSBldmVudDtcclxuICAgICAgICB0aGlzLnBheWxvYWQgPSBwYXlsb2FkO1xyXG4gICAgICAgIHRoaXMudGltZW91dCA9IHRpbWVvdXQ7XHJcbiAgICAgICAgdGhpcy5zZW50ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lb3V0VGltZXIgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5yZWYgPSAnJztcclxuICAgICAgICB0aGlzLnJlY2VpdmVkUmVzcCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZWNIb29rcyA9IFtdO1xyXG4gICAgICAgIHRoaXMucmVmRXZlbnQgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgcmVzZW5kKHRpbWVvdXQpIHtcclxuICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aW1lb3V0O1xyXG4gICAgICAgIHRoaXMuX2NhbmNlbFJlZkV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5yZWYgPSAnJztcclxuICAgICAgICB0aGlzLnJlZkV2ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLnJlY2VpdmVkUmVzcCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zZW50ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zZW5kKCk7XHJcbiAgICB9XHJcbiAgICBzZW5kKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9oYXNSZWNlaXZlZCgndGltZW91dCcpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zdGFydFRpbWVvdXQoKTtcclxuICAgICAgICB0aGlzLnNlbnQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuY2hhbm5lbC5zb2NrZXQucHVzaCh7XHJcbiAgICAgICAgICAgIHRvcGljOiB0aGlzLmNoYW5uZWwudG9waWMsXHJcbiAgICAgICAgICAgIGV2ZW50OiB0aGlzLmV2ZW50LFxyXG4gICAgICAgICAgICBwYXlsb2FkOiB0aGlzLnBheWxvYWQsXHJcbiAgICAgICAgICAgIHJlZjogdGhpcy5yZWYsXHJcbiAgICAgICAgICAgIGpvaW5fcmVmOiB0aGlzLmNoYW5uZWwuX2pvaW5SZWYoKSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHVwZGF0ZVBheWxvYWQocGF5bG9hZCkge1xyXG4gICAgICAgIHRoaXMucGF5bG9hZCA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wYXlsb2FkKSwgcGF5bG9hZCk7XHJcbiAgICB9XHJcbiAgICByZWNlaXZlKHN0YXR1cywgY2FsbGJhY2spIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgaWYgKHRoaXMuX2hhc1JlY2VpdmVkKHN0YXR1cykpIHtcclxuICAgICAgICAgICAgY2FsbGJhY2soKF9hID0gdGhpcy5yZWNlaXZlZFJlc3ApID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5yZXNwb25zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVjSG9va3MucHVzaCh7IHN0YXR1cywgY2FsbGJhY2sgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBzdGFydFRpbWVvdXQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZW91dFRpbWVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5yZWYgPSB0aGlzLmNoYW5uZWwuc29ja2V0Ll9tYWtlUmVmKCk7XHJcbiAgICAgICAgdGhpcy5yZWZFdmVudCA9IHRoaXMuY2hhbm5lbC5fcmVwbHlFdmVudE5hbWUodGhpcy5yZWYpO1xyXG4gICAgICAgIGNvbnN0IGNhbGxiYWNrID0gKHBheWxvYWQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fY2FuY2VsUmVmRXZlbnQoKTtcclxuICAgICAgICAgICAgdGhpcy5fY2FuY2VsVGltZW91dCgpO1xyXG4gICAgICAgICAgICB0aGlzLnJlY2VpdmVkUmVzcCA9IHBheWxvYWQ7XHJcbiAgICAgICAgICAgIHRoaXMuX21hdGNoUmVjZWl2ZShwYXlsb2FkKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuY2hhbm5lbC5fb24odGhpcy5yZWZFdmVudCwge30sIGNhbGxiYWNrKTtcclxuICAgICAgICB0aGlzLnRpbWVvdXRUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ3RpbWVvdXQnLCB7fSk7XHJcbiAgICAgICAgfSwgdGhpcy50aW1lb3V0KTtcclxuICAgIH1cclxuICAgIHRyaWdnZXIoc3RhdHVzLCByZXNwb25zZSkge1xyXG4gICAgICAgIGlmICh0aGlzLnJlZkV2ZW50KVxyXG4gICAgICAgICAgICB0aGlzLmNoYW5uZWwuX3RyaWdnZXIodGhpcy5yZWZFdmVudCwgeyBzdGF0dXMsIHJlc3BvbnNlIH0pO1xyXG4gICAgfVxyXG4gICAgZGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLl9jYW5jZWxSZWZFdmVudCgpO1xyXG4gICAgICAgIHRoaXMuX2NhbmNlbFRpbWVvdXQoKTtcclxuICAgIH1cclxuICAgIF9jYW5jZWxSZWZFdmVudCgpIHtcclxuICAgICAgICBpZiAoIXRoaXMucmVmRXZlbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNoYW5uZWwuX29mZih0aGlzLnJlZkV2ZW50LCB7fSk7XHJcbiAgICB9XHJcbiAgICBfY2FuY2VsVGltZW91dCgpIHtcclxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0VGltZXIpO1xyXG4gICAgICAgIHRoaXMudGltZW91dFRpbWVyID0gdW5kZWZpbmVkO1xyXG4gICAgfVxyXG4gICAgX21hdGNoUmVjZWl2ZSh7IHN0YXR1cywgcmVzcG9uc2UsIH0pIHtcclxuICAgICAgICB0aGlzLnJlY0hvb2tzXHJcbiAgICAgICAgICAgIC5maWx0ZXIoKGgpID0+IGguc3RhdHVzID09PSBzdGF0dXMpXHJcbiAgICAgICAgICAgIC5mb3JFYWNoKChoKSA9PiBoLmNhbGxiYWNrKHJlc3BvbnNlKSk7XHJcbiAgICB9XHJcbiAgICBfaGFzUmVjZWl2ZWQoc3RhdHVzKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVjZWl2ZWRSZXNwICYmIHRoaXMucmVjZWl2ZWRSZXNwLnN0YXR1cyA9PT0gc3RhdHVzO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXB1c2guanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Serializer)\n/* harmony export */ });\n// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\r\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\r\nclass Serializer {\r\n    constructor() {\r\n        this.HEADER_LENGTH = 1;\r\n    }\r\n    decode(rawPayload, callback) {\r\n        if (rawPayload.constructor === ArrayBuffer) {\r\n            return callback(this._binaryDecode(rawPayload));\r\n        }\r\n        if (typeof rawPayload === 'string') {\r\n            return callback(JSON.parse(rawPayload));\r\n        }\r\n        return callback({});\r\n    }\r\n    _binaryDecode(buffer) {\r\n        const view = new DataView(buffer);\r\n        const decoder = new TextDecoder();\r\n        return this._decodeBroadcast(buffer, view, decoder);\r\n    }\r\n    _decodeBroadcast(buffer, view, decoder) {\r\n        const topicSize = view.getUint8(1);\r\n        const eventSize = view.getUint8(2);\r\n        let offset = this.HEADER_LENGTH + 2;\r\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\r\n        offset = offset + topicSize;\r\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\r\n        offset = offset + eventSize;\r\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\r\n        return { ref: null, topic: topic, event: event, payload: data };\r\n    }\r\n}\r\n//# sourceMappingURL=serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3NlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccmVhbHRpbWUtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxzZXJpYWxpemVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSBkcmF3cyBoZWF2aWx5IGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3Bob2VuaXhmcmFtZXdvcmsvcGhvZW5peC9jb21taXQvY2YwOThlOWNmN2E0NGVlNjQ3OWQzMWQ5MTFhOTdkM2M3NDMwYzZmZVxyXG4vLyBMaWNlbnNlOiBodHRwczovL2dpdGh1Yi5jb20vcGhvZW5peGZyYW1ld29yay9waG9lbml4L2Jsb2IvbWFzdGVyL0xJQ0VOU0UubWRcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VyaWFsaXplciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLkhFQURFUl9MRU5HVEggPSAxO1xyXG4gICAgfVxyXG4gICAgZGVjb2RlKHJhd1BheWxvYWQsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgaWYgKHJhd1BheWxvYWQuY29uc3RydWN0b3IgPT09IEFycmF5QnVmZmVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayh0aGlzLl9iaW5hcnlEZWNvZGUocmF3UGF5bG9hZCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodHlwZW9mIHJhd1BheWxvYWQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhKU09OLnBhcnNlKHJhd1BheWxvYWQpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHt9KTtcclxuICAgIH1cclxuICAgIF9iaW5hcnlEZWNvZGUoYnVmZmVyKSB7XHJcbiAgICAgICAgY29uc3QgdmlldyA9IG5ldyBEYXRhVmlldyhidWZmZXIpO1xyXG4gICAgICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGVjb2RlQnJvYWRjYXN0KGJ1ZmZlciwgdmlldywgZGVjb2Rlcik7XHJcbiAgICB9XHJcbiAgICBfZGVjb2RlQnJvYWRjYXN0KGJ1ZmZlciwgdmlldywgZGVjb2Rlcikge1xyXG4gICAgICAgIGNvbnN0IHRvcGljU2l6ZSA9IHZpZXcuZ2V0VWludDgoMSk7XHJcbiAgICAgICAgY29uc3QgZXZlbnRTaXplID0gdmlldy5nZXRVaW50OCgyKTtcclxuICAgICAgICBsZXQgb2Zmc2V0ID0gdGhpcy5IRUFERVJfTEVOR1RIICsgMjtcclxuICAgICAgICBjb25zdCB0b3BpYyA9IGRlY29kZXIuZGVjb2RlKGJ1ZmZlci5zbGljZShvZmZzZXQsIG9mZnNldCArIHRvcGljU2l6ZSkpO1xyXG4gICAgICAgIG9mZnNldCA9IG9mZnNldCArIHRvcGljU2l6ZTtcclxuICAgICAgICBjb25zdCBldmVudCA9IGRlY29kZXIuZGVjb2RlKGJ1ZmZlci5zbGljZShvZmZzZXQsIG9mZnNldCArIGV2ZW50U2l6ZSkpO1xyXG4gICAgICAgIG9mZnNldCA9IG9mZnNldCArIGV2ZW50U2l6ZTtcclxuICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShkZWNvZGVyLmRlY29kZShidWZmZXIuc2xpY2Uob2Zmc2V0LCBidWZmZXIuYnl0ZUxlbmd0aCkpKTtcclxuICAgICAgICByZXR1cm4geyByZWY6IG51bGwsIHRvcGljOiB0b3BpYywgZXZlbnQ6IGV2ZW50LCBwYXlsb2FkOiBkYXRhIH07XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/timer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Timer)\n/* harmony export */ });\n/**\r\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\r\n *\r\n * @example\r\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n *      return [1000, 5000, 10000][tries - 1] || 10000\r\n *    })\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n *    reconnectTimer.scheduleTimeout() // fires after 5000\r\n *    reconnectTimer.reset()\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n */\r\nclass Timer {\r\n    constructor(callback, timerCalc) {\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n        this.timer = undefined;\r\n        this.tries = 0;\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n    }\r\n    reset() {\r\n        this.tries = 0;\r\n        clearTimeout(this.timer);\r\n    }\r\n    // Cancels any previous scheduleTimeout and schedules callback\r\n    scheduleTimeout() {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            this.tries = this.tries + 1;\r\n            this.callback();\r\n        }, this.timerCalc(this.tries + 1));\r\n    }\r\n}\r\n//# sourceMappingURL=timer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3RpbWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxyZWFsdGltZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXHRpbWVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVzIGEgdGltZXIgdGhhdCBhY2NlcHRzIGEgYHRpbWVyQ2FsY2AgZnVuY3Rpb24gdG8gcGVyZm9ybSBjYWxjdWxhdGVkIHRpbWVvdXQgcmV0cmllcywgc3VjaCBhcyBleHBvbmVudGlhbCBiYWNrb2ZmLlxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKiAgICBsZXQgcmVjb25uZWN0VGltZXIgPSBuZXcgVGltZXIoKCkgPT4gdGhpcy5jb25uZWN0KCksIGZ1bmN0aW9uKHRyaWVzKXtcclxuICogICAgICByZXR1cm4gWzEwMDAsIDUwMDAsIDEwMDAwXVt0cmllcyAtIDFdIHx8IDEwMDAwXHJcbiAqICAgIH0pXHJcbiAqICAgIHJlY29ubmVjdFRpbWVyLnNjaGVkdWxlVGltZW91dCgpIC8vIGZpcmVzIGFmdGVyIDEwMDBcclxuICogICAgcmVjb25uZWN0VGltZXIuc2NoZWR1bGVUaW1lb3V0KCkgLy8gZmlyZXMgYWZ0ZXIgNTAwMFxyXG4gKiAgICByZWNvbm5lY3RUaW1lci5yZXNldCgpXHJcbiAqICAgIHJlY29ubmVjdFRpbWVyLnNjaGVkdWxlVGltZW91dCgpIC8vIGZpcmVzIGFmdGVyIDEwMDBcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGNhbGxiYWNrLCB0aW1lckNhbGMpIHtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XHJcbiAgICAgICAgdGhpcy50aW1lckNhbGMgPSB0aW1lckNhbGM7XHJcbiAgICAgICAgdGhpcy50aW1lciA9IHVuZGVmaW5lZDtcclxuICAgICAgICB0aGlzLnRyaWVzID0gMDtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XHJcbiAgICAgICAgdGhpcy50aW1lckNhbGMgPSB0aW1lckNhbGM7XHJcbiAgICB9XHJcbiAgICByZXNldCgpIHtcclxuICAgICAgICB0aGlzLnRyaWVzID0gMDtcclxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XHJcbiAgICB9XHJcbiAgICAvLyBDYW5jZWxzIGFueSBwcmV2aW91cyBzY2hlZHVsZVRpbWVvdXQgYW5kIHNjaGVkdWxlcyBjYWxsYmFja1xyXG4gICAgc2NoZWR1bGVUaW1lb3V0KCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcclxuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudHJpZXMgPSB0aGlzLnRyaWVzICsgMTtcclxuICAgICAgICAgICAgdGhpcy5jYWxsYmFjaygpO1xyXG4gICAgICAgIH0sIHRoaXMudGltZXJDYWxjKHRoaXMudHJpZXMgKyAxKSk7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGltZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgresTypes: () => (/* binding */ PostgresTypes),\n/* harmony export */   convertCell: () => (/* binding */ convertCell),\n/* harmony export */   convertChangeData: () => (/* binding */ convertChangeData),\n/* harmony export */   convertColumn: () => (/* binding */ convertColumn),\n/* harmony export */   httpEndpointURL: () => (/* binding */ httpEndpointURL),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   toBoolean: () => (/* binding */ toBoolean),\n/* harmony export */   toJson: () => (/* binding */ toJson),\n/* harmony export */   toNumber: () => (/* binding */ toNumber),\n/* harmony export */   toTimestampString: () => (/* binding */ toTimestampString)\n/* harmony export */ });\n/**\r\n * Helpers to convert the change Payload into native JS types.\r\n */\r\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\r\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\r\nvar PostgresTypes;\r\n(function (PostgresTypes) {\r\n    PostgresTypes[\"abstime\"] = \"abstime\";\r\n    PostgresTypes[\"bool\"] = \"bool\";\r\n    PostgresTypes[\"date\"] = \"date\";\r\n    PostgresTypes[\"daterange\"] = \"daterange\";\r\n    PostgresTypes[\"float4\"] = \"float4\";\r\n    PostgresTypes[\"float8\"] = \"float8\";\r\n    PostgresTypes[\"int2\"] = \"int2\";\r\n    PostgresTypes[\"int4\"] = \"int4\";\r\n    PostgresTypes[\"int4range\"] = \"int4range\";\r\n    PostgresTypes[\"int8\"] = \"int8\";\r\n    PostgresTypes[\"int8range\"] = \"int8range\";\r\n    PostgresTypes[\"json\"] = \"json\";\r\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\r\n    PostgresTypes[\"money\"] = \"money\";\r\n    PostgresTypes[\"numeric\"] = \"numeric\";\r\n    PostgresTypes[\"oid\"] = \"oid\";\r\n    PostgresTypes[\"reltime\"] = \"reltime\";\r\n    PostgresTypes[\"text\"] = \"text\";\r\n    PostgresTypes[\"time\"] = \"time\";\r\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\r\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\r\n    PostgresTypes[\"timetz\"] = \"timetz\";\r\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\r\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\r\n})(PostgresTypes || (PostgresTypes = {}));\r\n/**\r\n * Takes an array of columns and an object of string values then converts each string value\r\n * to its mapped type.\r\n *\r\n * @param {{name: String, type: String}[]} columns\r\n * @param {Object} record\r\n * @param {Object} options The map of various options that can be applied to the mapper\r\n * @param {Array} options.skipTypes The array of types that should not be converted\r\n *\r\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\r\n * //=>{ first_name: 'Paul', age: 33 }\r\n */\r\nconst convertChangeData = (columns, record, options = {}) => {\r\n    var _a;\r\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\r\n    return Object.keys(record).reduce((acc, rec_key) => {\r\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\r\n        return acc;\r\n    }, {});\r\n};\r\n/**\r\n * Converts the value of an individual column.\r\n *\r\n * @param {String} columnName The column that you want to convert\r\n * @param {{name: String, type: String}[]} columns All of the columns\r\n * @param {Object} record The map of string values\r\n * @param {Array} skipTypes An array of types that should not be converted\r\n * @return {object} Useless information\r\n *\r\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\r\n * //=> 33\r\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\r\n * //=> \"33\"\r\n */\r\nconst convertColumn = (columnName, columns, record, skipTypes) => {\r\n    const column = columns.find((x) => x.name === columnName);\r\n    const colType = column === null || column === void 0 ? void 0 : column.type;\r\n    const value = record[columnName];\r\n    if (colType && !skipTypes.includes(colType)) {\r\n        return convertCell(colType, value);\r\n    }\r\n    return noop(value);\r\n};\r\n/**\r\n * If the value of the cell is `null`, returns null.\r\n * Otherwise converts the string value to the correct type.\r\n * @param {String} type A postgres column type\r\n * @param {String} value The cell value\r\n *\r\n * @example convertCell('bool', 't')\r\n * //=> true\r\n * @example convertCell('int8', '10')\r\n * //=> 10\r\n * @example convertCell('_int4', '{1,2,3,4}')\r\n * //=> [1,2,3,4]\r\n */\r\nconst convertCell = (type, value) => {\r\n    // if data type is an array\r\n    if (type.charAt(0) === '_') {\r\n        const dataType = type.slice(1, type.length);\r\n        return toArray(value, dataType);\r\n    }\r\n    // If not null, convert to correct type.\r\n    switch (type) {\r\n        case PostgresTypes.bool:\r\n            return toBoolean(value);\r\n        case PostgresTypes.float4:\r\n        case PostgresTypes.float8:\r\n        case PostgresTypes.int2:\r\n        case PostgresTypes.int4:\r\n        case PostgresTypes.int8:\r\n        case PostgresTypes.numeric:\r\n        case PostgresTypes.oid:\r\n            return toNumber(value);\r\n        case PostgresTypes.json:\r\n        case PostgresTypes.jsonb:\r\n            return toJson(value);\r\n        case PostgresTypes.timestamp:\r\n            return toTimestampString(value); // Format to be consistent with PostgREST\r\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.daterange:\r\n        case PostgresTypes.int4range:\r\n        case PostgresTypes.int8range:\r\n        case PostgresTypes.money:\r\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.text:\r\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.tsrange:\r\n        case PostgresTypes.tstzrange:\r\n            return noop(value);\r\n        default:\r\n            // Return the value for remaining types\r\n            return noop(value);\r\n    }\r\n};\r\nconst noop = (value) => {\r\n    return value;\r\n};\r\nconst toBoolean = (value) => {\r\n    switch (value) {\r\n        case 't':\r\n            return true;\r\n        case 'f':\r\n            return false;\r\n        default:\r\n            return value;\r\n    }\r\n};\r\nconst toNumber = (value) => {\r\n    if (typeof value === 'string') {\r\n        const parsedValue = parseFloat(value);\r\n        if (!Number.isNaN(parsedValue)) {\r\n            return parsedValue;\r\n        }\r\n    }\r\n    return value;\r\n};\r\nconst toJson = (value) => {\r\n    if (typeof value === 'string') {\r\n        try {\r\n            return JSON.parse(value);\r\n        }\r\n        catch (error) {\r\n            console.log(`JSON parse error: ${error}`);\r\n            return value;\r\n        }\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * Converts a Postgres Array into a native JS array\r\n *\r\n * @example toArray('{}', 'int4')\r\n * //=> []\r\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\r\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\r\n * @example toArray([1,2,3,4], 'int4')\r\n * //=> [1,2,3,4]\r\n */\r\nconst toArray = (value, type) => {\r\n    if (typeof value !== 'string') {\r\n        return value;\r\n    }\r\n    const lastIdx = value.length - 1;\r\n    const closeBrace = value[lastIdx];\r\n    const openBrace = value[0];\r\n    // Confirm value is a Postgres array by checking curly brackets\r\n    if (openBrace === '{' && closeBrace === '}') {\r\n        let arr;\r\n        const valTrim = value.slice(1, lastIdx);\r\n        // TODO: find a better solution to separate Postgres array data\r\n        try {\r\n            arr = JSON.parse('[' + valTrim + ']');\r\n        }\r\n        catch (_) {\r\n            // WARNING: splitting on comma does not cover all edge cases\r\n            arr = valTrim ? valTrim.split(',') : [];\r\n        }\r\n        return arr.map((val) => convertCell(type, val));\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\r\n * See https://github.com/supabase/supabase/issues/18\r\n *\r\n * @example toTimestampString('2019-09-10 00:00:00')\r\n * //=> '2019-09-10T00:00:00'\r\n */\r\nconst toTimestampString = (value) => {\r\n    if (typeof value === 'string') {\r\n        return value.replace(' ', 'T');\r\n    }\r\n    return value;\r\n};\r\nconst httpEndpointURL = (socketUrl) => {\r\n    let url = socketUrl;\r\n    url = url.replace(/^ws/i, 'http');\r\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '');\r\n    return url.replace(/\\/+$/, '');\r\n};\r\n//# sourceMappingURL=transformers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = '2.11.10';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxccmVhbHRpbWUtanNcXGRpc3RcXG1vZHVsZVxcbGliXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuMTEuMTAnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/StorageClient.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageClient: () => (/* binding */ StorageClient)\n/* harmony export */ });\n/* harmony import */ var _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packages/StorageFileApi */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\");\n/* harmony import */ var _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packages/StorageBucketApi */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\");\n\r\n\r\nclass StorageClient extends _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(url, headers = {}, fetch) {\r\n        super(url, headers, fetch);\r\n    }\r\n    /**\r\n     * Perform file operation in a bucket.\r\n     *\r\n     * @param id The bucket id to operate on.\r\n     */\r\n    from(id) {\r\n        return new _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.url, this.headers, id, this.fetch);\r\n    }\r\n}\r\n//# sourceMappingURL=StorageClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9TdG9yYWdlQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUNJO0FBQ3BELDRCQUE0QixrRUFBZ0I7QUFDbkQsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQWM7QUFDakM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHN0b3JhZ2UtanNcXGRpc3RcXG1vZHVsZVxcU3RvcmFnZUNsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RvcmFnZUZpbGVBcGkgZnJvbSAnLi9wYWNrYWdlcy9TdG9yYWdlRmlsZUFwaSc7XHJcbmltcG9ydCBTdG9yYWdlQnVja2V0QXBpIGZyb20gJy4vcGFja2FnZXMvU3RvcmFnZUJ1Y2tldEFwaSc7XHJcbmV4cG9ydCBjbGFzcyBTdG9yYWdlQ2xpZW50IGV4dGVuZHMgU3RvcmFnZUJ1Y2tldEFwaSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIGhlYWRlcnMgPSB7fSwgZmV0Y2gpIHtcclxuICAgICAgICBzdXBlcih1cmwsIGhlYWRlcnMsIGZldGNoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGVyZm9ybSBmaWxlIG9wZXJhdGlvbiBpbiBhIGJ1Y2tldC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gaWQgVGhlIGJ1Y2tldCBpZCB0byBvcGVyYXRlIG9uLlxyXG4gICAgICovXHJcbiAgICBmcm9tKGlkKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBTdG9yYWdlRmlsZUFwaSh0aGlzLnVybCwgdGhpcy5oZWFkZXJzLCBpZCwgdGhpcy5mZXRjaCk7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RvcmFnZUNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/constants.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js\");\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLDBCQUEwQiwrQkFBK0IsNkNBQU8sQ0FBQztBQUN4RSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdG9yYWdlLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nO1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9IRUFERVJTID0geyAnWC1DbGllbnQtSW5mbyc6IGBzdG9yYWdlLWpzLyR7dmVyc2lvbn1gIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/errors.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageApiError: () => (/* binding */ StorageApiError),\n/* harmony export */   StorageError: () => (/* binding */ StorageError),\n/* harmony export */   StorageUnknownError: () => (/* binding */ StorageUnknownError),\n/* harmony export */   isStorageError: () => (/* binding */ isStorageError)\n/* harmony export */ });\nclass StorageError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.__isStorageError = true;\r\n        this.name = 'StorageError';\r\n    }\r\n}\r\nfunction isStorageError(error) {\r\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\r\n}\r\nclass StorageApiError extends StorageError {\r\n    constructor(message, status) {\r\n        super(message);\r\n        this.name = 'StorageApiError';\r\n        this.status = status;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n        };\r\n    }\r\n}\r\nclass StorageUnknownError extends StorageError {\r\n    constructor(message, originalError) {\r\n        super(message);\r\n        this.name = 'StorageUnknownError';\r\n        this.originalError = originalError;\r\n    }\r\n}\r\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHN0b3JhZ2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxlcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFN0b3JhZ2VFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlKTtcclxuICAgICAgICB0aGlzLl9faXNTdG9yYWdlRXJyb3IgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdTdG9yYWdlRXJyb3InO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc1N0b3JhZ2VFcnJvcihlcnJvcikge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBlcnJvciA9PT0gJ29iamVjdCcgJiYgZXJyb3IgIT09IG51bGwgJiYgJ19faXNTdG9yYWdlRXJyb3InIGluIGVycm9yO1xyXG59XHJcbmV4cG9ydCBjbGFzcyBTdG9yYWdlQXBpRXJyb3IgZXh0ZW5kcyBTdG9yYWdlRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJ1N0b3JhZ2VBcGlFcnJvcic7XHJcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XHJcbiAgICB9XHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgU3RvcmFnZVVua25vd25FcnJvciBleHRlbmRzIFN0b3JhZ2VFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBvcmlnaW5hbEVycm9yKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJ1N0b3JhZ2VVbmtub3duRXJyb3InO1xyXG4gICAgICAgIHRoaXMub3JpZ2luYWxFcnJvciA9IG9yaWdpbmFsRXJyb3I7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/fetch.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   head: () => (/* binding */ head),\n/* harmony export */   post: () => (/* binding */ post),\n/* harmony export */   put: () => (/* binding */ put),\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\r\nconst handleError = (error, reject, options) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const Res = yield (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveResponse)();\r\n    if (error instanceof Res && !(options === null || options === void 0 ? void 0 : options.noResolveJson)) {\r\n        error\r\n            .json()\r\n            .then((err) => {\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageApiError(_getErrorMessage(err), error.status || 500));\r\n        })\r\n            .catch((err) => {\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(err), err));\r\n        });\r\n    }\r\n    else {\r\n        reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(error), error));\r\n    }\r\n});\r\nconst _getRequestParams = (method, options, parameters, body) => {\r\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\r\n    if (method === 'GET') {\r\n        return params;\r\n    }\r\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\r\n    if (body) {\r\n        params.body = JSON.stringify(body);\r\n    }\r\n    return Object.assign(Object.assign({}, params), parameters);\r\n};\r\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((resolve, reject) => {\r\n            fetcher(url, _getRequestParams(method, options, parameters, body))\r\n                .then((result) => {\r\n                if (!result.ok)\r\n                    throw result;\r\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\r\n                    return result;\r\n                return result.json();\r\n            })\r\n                .then((data) => resolve(data))\r\n                .catch((error) => handleError(error, reject, options));\r\n        });\r\n    });\r\n}\r\nfunction get(fetcher, url, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\r\n    });\r\n}\r\nfunction post(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\r\n    });\r\n}\r\nfunction put(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\r\n    });\r\n}\r\nfunction head(fetcher, url, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'HEAD', url, Object.assign(Object.assign({}, options), { noResolveJson: true }), parameters);\r\n    });\r\n}\r\nfunction remove(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\r\n    });\r\n}\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNnRTtBQUNwQjtBQUM1QztBQUNBO0FBQ0Esc0JBQXNCLHlEQUFlO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9EQUFlO0FBQ3RDLFNBQVM7QUFDVDtBQUNBLHVCQUF1Qix3REFBbUI7QUFDMUMsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsd0RBQW1CO0FBQ3RDO0FBQ0EsQ0FBQztBQUNEO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxvQ0FBb0M7QUFDekU7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0Esa0ZBQWtGLGNBQWMscUJBQXFCO0FBQ3JILEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHN0b3JhZ2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxmZXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmltcG9ydCB7IFN0b3JhZ2VBcGlFcnJvciwgU3RvcmFnZVVua25vd25FcnJvciB9IGZyb20gJy4vZXJyb3JzJztcclxuaW1wb3J0IHsgcmVzb2x2ZVJlc3BvbnNlIH0gZnJvbSAnLi9oZWxwZXJzJztcclxuY29uc3QgX2dldEVycm9yTWVzc2FnZSA9IChlcnIpID0+IGVyci5tc2cgfHwgZXJyLm1lc3NhZ2UgfHwgZXJyLmVycm9yX2Rlc2NyaXB0aW9uIHx8IGVyci5lcnJvciB8fCBKU09OLnN0cmluZ2lmeShlcnIpO1xyXG5jb25zdCBoYW5kbGVFcnJvciA9IChlcnJvciwgcmVqZWN0LCBvcHRpb25zKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgIGNvbnN0IFJlcyA9IHlpZWxkIHJlc29sdmVSZXNwb25zZSgpO1xyXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgUmVzICYmICEob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm5vUmVzb2x2ZUpzb24pKSB7XHJcbiAgICAgICAgZXJyb3JcclxuICAgICAgICAgICAgLmpzb24oKVxyXG4gICAgICAgICAgICAudGhlbigoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHJlamVjdChuZXcgU3RvcmFnZUFwaUVycm9yKF9nZXRFcnJvck1lc3NhZ2UoZXJyKSwgZXJyb3Iuc3RhdHVzIHx8IDUwMCkpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHJlamVjdChuZXcgU3RvcmFnZVVua25vd25FcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVyciksIGVycikpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmVqZWN0KG5ldyBTdG9yYWdlVW5rbm93bkVycm9yKF9nZXRFcnJvck1lc3NhZ2UoZXJyb3IpLCBlcnJvcikpO1xyXG4gICAgfVxyXG59KTtcclxuY29uc3QgX2dldFJlcXVlc3RQYXJhbXMgPSAobWV0aG9kLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KSA9PiB7XHJcbiAgICBjb25zdCBwYXJhbXMgPSB7IG1ldGhvZCwgaGVhZGVyczogKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5oZWFkZXJzKSB8fCB7fSB9O1xyXG4gICAgaWYgKG1ldGhvZCA9PT0gJ0dFVCcpIHtcclxuICAgICAgICByZXR1cm4gcGFyYW1zO1xyXG4gICAgfVxyXG4gICAgcGFyYW1zLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaGVhZGVycyk7XHJcbiAgICBpZiAoYm9keSkge1xyXG4gICAgICAgIHBhcmFtcy5ib2R5ID0gSlNPTi5zdHJpbmdpZnkoYm9keSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwYXJhbXMpLCBwYXJhbWV0ZXJzKTtcclxufTtcclxuZnVuY3Rpb24gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgbWV0aG9kLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgZmV0Y2hlcih1cmwsIF9nZXRSZXF1ZXN0UGFyYW1zKG1ldGhvZCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSkpXHJcbiAgICAgICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdC5vaylcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm5vUmVzb2x2ZUpzb24pXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuanNvbigpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHJlc29sdmUoZGF0YSkpXHJcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiBoYW5kbGVFcnJvcihlcnJvciwgcmVqZWN0LCBvcHRpb25zKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0KGZldGNoZXIsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycykge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ0dFVCcsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycyk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gcG9zdChmZXRjaGVyLCB1cmwsIGJvZHksIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdQT1NUJywgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KTtcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBwdXQoZmV0Y2hlciwgdXJsLCBib2R5LCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHJldHVybiBfaGFuZGxlUmVxdWVzdChmZXRjaGVyLCAnUFVUJywgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KTtcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBoZWFkKGZldGNoZXIsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycykge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ0hFQUQnLCB1cmwsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgbm9SZXNvbHZlSnNvbjogdHJ1ZSB9KSwgcGFyYW1ldGVycyk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlKGZldGNoZXIsIHVybCwgYm9keSwgb3B0aW9ucywgcGFyYW1ldGVycykge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ0RFTEVURScsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XHJcbiAgICB9KTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/helpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   recursiveToCamel: () => (/* binding */ recursiveToCamel),\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch),\n/* harmony export */   resolveResponse: () => (/* binding */ resolveResponse)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    if (typeof Response === 'undefined') {\r\n        // @ts-ignore\r\n        return (yield Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\"))).Response;\r\n    }\r\n    return Response;\r\n});\r\nconst recursiveToCamel = (item) => {\r\n    if (Array.isArray(item)) {\r\n        return item.map((el) => recursiveToCamel(el));\r\n    }\r\n    else if (typeof item === 'function' || item !== Object(item)) {\r\n        return item;\r\n    }\r\n    const result = {};\r\n    Object.entries(item).forEach(([key, value]) => {\r\n        const newKey = key.replace(/([-_][a-z])/gi, (c) => c.toUpperCase().replace(/[-_]/g, ''));\r\n        result[newKey] = recursiveToCamel(value);\r\n    });\r\n    return result;\r\n};\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0xBQThCLFNBQVMsZ0JBQWdCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQixzTEFBOEI7QUFDcEQ7QUFDQTtBQUNBLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdG9yYWdlLWpzXFxkaXN0XFxtb2R1bGVcXGxpYlxcaGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcclxuICAgIGxldCBfZmV0Y2g7XHJcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcclxuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBfZmV0Y2ggPSAoLi4uYXJncykgPT4gaW1wb3J0KCdAc3VwYWJhc2Uvbm9kZS1mZXRjaCcpLnRoZW4oKHsgZGVmYXVsdDogZmV0Y2ggfSkgPT4gZmV0Y2goLi4uYXJncykpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgX2ZldGNoID0gZmV0Y2g7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IF9mZXRjaCguLi5hcmdzKTtcclxufTtcclxuZXhwb3J0IGNvbnN0IHJlc29sdmVSZXNwb25zZSA9ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgaWYgKHR5cGVvZiBSZXNwb25zZSA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0BzdXBhYmFzZS9ub2RlLWZldGNoJykpLlJlc3BvbnNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFJlc3BvbnNlO1xyXG59KTtcclxuZXhwb3J0IGNvbnN0IHJlY3Vyc2l2ZVRvQ2FtZWwgPSAoaXRlbSkgPT4ge1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcclxuICAgICAgICByZXR1cm4gaXRlbS5tYXAoKGVsKSA9PiByZWN1cnNpdmVUb0NhbWVsKGVsKSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0eXBlb2YgaXRlbSA9PT0gJ2Z1bmN0aW9uJyB8fCBpdGVtICE9PSBPYmplY3QoaXRlbSkpIHtcclxuICAgICAgICByZXR1cm4gaXRlbTtcclxuICAgIH1cclxuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xyXG4gICAgT2JqZWN0LmVudHJpZXMoaXRlbSkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbmV3S2V5ID0ga2V5LnJlcGxhY2UoLyhbLV9dW2Etel0pL2dpLCAoYykgPT4gYy50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoL1stX10vZywgJycpKTtcclxuICAgICAgICByZXN1bHRbbmV3S2V5XSA9IHJlY3Vyc2l2ZVRvQ2FtZWwodmFsdWUpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/version.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n// generated by genversion\r\nconst version = '2.7.1';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDTztBQUNQIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAc3VwYWJhc2VcXHN0b3JhZ2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGdlbmVyYXRlZCBieSBnZW52ZXJzaW9uXHJcbmV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuNy4xJztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StorageBucketApi)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nclass StorageBucketApi {\r\n    constructor(url, headers = {}, fetch) {\r\n        this.url = url;\r\n        this.headers = Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_HEADERS), headers);\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\r\n    }\r\n    /**\r\n     * Retrieves the details of all Storage buckets within an existing project.\r\n     */\r\n    listBuckets() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket`, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Retrieves the details of an existing Storage bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to retrieve.\r\n     */\r\n    getBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a new Storage bucket\r\n     *\r\n     * @param id A unique identifier for the bucket you are creating.\r\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\r\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\r\n     * The global file size limit takes precedence over this value.\r\n     * The default value is null, which doesn't set a per bucket file size limit.\r\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\r\n     * The default value is null, which allows files with all mime types to be uploaded.\r\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\r\n     * @returns newly created bucket id\r\n     */\r\n    createBucket(id, options = {\r\n        public: false,\r\n    }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket`, {\r\n                    id,\r\n                    name: id,\r\n                    public: options.public,\r\n                    file_size_limit: options.fileSizeLimit,\r\n                    allowed_mime_types: options.allowedMimeTypes,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Updates a Storage bucket\r\n     *\r\n     * @param id A unique identifier for the bucket you are updating.\r\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\r\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\r\n     * The global file size limit takes precedence over this value.\r\n     * The default value is null, which doesn't set a per bucket file size limit.\r\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\r\n     * The default value is null, which allows files with all mime types to be uploaded.\r\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\r\n     */\r\n    updateBucket(id, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.put)(this.fetch, `${this.url}/bucket/${id}`, {\r\n                    id,\r\n                    name: id,\r\n                    public: options.public,\r\n                    file_size_limit: options.fileSizeLimit,\r\n                    allowed_mime_types: options.allowedMimeTypes,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all objects inside a single bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to empty.\r\n     */\r\n    emptyBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\r\n     * You must first `empty()` the bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to delete.\r\n     */\r\n    deleteBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=StorageBucketApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StorageFileApi)\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\nconst DEFAULT_SEARCH_OPTIONS = {\r\n    limit: 100,\r\n    offset: 0,\r\n    sortBy: {\r\n        column: 'name',\r\n        order: 'asc',\r\n    },\r\n};\r\nconst DEFAULT_FILE_OPTIONS = {\r\n    cacheControl: '3600',\r\n    contentType: 'text/plain;charset=UTF-8',\r\n    upsert: false,\r\n};\r\nclass StorageFileApi {\r\n    constructor(url, headers = {}, bucketId, fetch) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.bucketId = bucketId;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveFetch)(fetch);\r\n    }\r\n    /**\r\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\r\n     *\r\n     * @param method HTTP method.\r\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let body;\r\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\r\n                let headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\r\n                const metadata = options.metadata;\r\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\r\n                    body = new FormData();\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    if (metadata) {\r\n                        body.append('metadata', this.encodeMetadata(metadata));\r\n                    }\r\n                    body.append('', fileBody);\r\n                }\r\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\r\n                    body = fileBody;\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    if (metadata) {\r\n                        body.append('metadata', this.encodeMetadata(metadata));\r\n                    }\r\n                }\r\n                else {\r\n                    body = fileBody;\r\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\r\n                    headers['content-type'] = options.contentType;\r\n                    if (metadata) {\r\n                        headers['x-metadata'] = this.toBase64(this.encodeMetadata(metadata));\r\n                    }\r\n                }\r\n                if (fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.headers) {\r\n                    headers = Object.assign(Object.assign({}, headers), fileOptions.headers);\r\n                }\r\n                const cleanPath = this._removeEmptyFolders(path);\r\n                const _path = this._getFinalPath(cleanPath);\r\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\r\n                const data = yield res.json();\r\n                if (res.ok) {\r\n                    return {\r\n                        data: { path: cleanPath, id: data.Id, fullPath: data.Key },\r\n                        error: null,\r\n                    };\r\n                }\r\n                else {\r\n                    const error = data;\r\n                    return { data: null, error };\r\n                }\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Uploads a file to an existing bucket.\r\n     *\r\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    upload(path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\r\n        });\r\n    }\r\n    /**\r\n     * Upload a file with a token generated from `createSignedUploadUrl`.\r\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param token The token generated from `createSignedUploadUrl`\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const cleanPath = this._removeEmptyFolders(path);\r\n            const _path = this._getFinalPath(cleanPath);\r\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\r\n            url.searchParams.set('token', token);\r\n            try {\r\n                let body;\r\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\r\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\r\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\r\n                    body = new FormData();\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    body.append('', fileBody);\r\n                }\r\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\r\n                    body = fileBody;\r\n                    body.append('cacheControl', options.cacheControl);\r\n                }\r\n                else {\r\n                    body = fileBody;\r\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\r\n                    headers['content-type'] = options.contentType;\r\n                }\r\n                const res = yield this.fetch(url.toString(), {\r\n                    method: 'PUT',\r\n                    body: body,\r\n                    headers,\r\n                });\r\n                const data = yield res.json();\r\n                if (res.ok) {\r\n                    return {\r\n                        data: { path: cleanPath, fullPath: data.Key },\r\n                        error: null,\r\n                    };\r\n                }\r\n                else {\r\n                    const error = data;\r\n                    return { data: null, error };\r\n                }\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a signed upload URL.\r\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\r\n     * They are valid for 2 hours.\r\n     * @param path The file path, including the current file name. For example `folder/image.png`.\r\n     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\r\n     */\r\n    createSignedUploadUrl(path, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let _path = this._getFinalPath(path);\r\n                const headers = Object.assign({}, this.headers);\r\n                if (options === null || options === void 0 ? void 0 : options.upsert) {\r\n                    headers['x-upsert'] = 'true';\r\n                }\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers });\r\n                const url = new URL(this.url + data.url);\r\n                const token = url.searchParams.get('token');\r\n                if (!token) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_1__.StorageError('No token returned by API');\r\n                }\r\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Replaces an existing file at the specified path with a new one.\r\n     *\r\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    update(path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\r\n        });\r\n    }\r\n    /**\r\n     * Moves an existing file to a new path in the same bucket.\r\n     *\r\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\r\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\r\n     * @param options The destination options.\r\n     */\r\n    move(fromPath, toPath, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/move`, {\r\n                    bucketId: this.bucketId,\r\n                    sourceKey: fromPath,\r\n                    destinationKey: toPath,\r\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Copies an existing file to a new path in the same bucket.\r\n     *\r\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\r\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\r\n     * @param options The destination options.\r\n     */\r\n    copy(fromPath, toPath, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/copy`, {\r\n                    bucketId: this.bucketId,\r\n                    sourceKey: fromPath,\r\n                    destinationKey: toPath,\r\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\r\n                }, { headers: this.headers });\r\n                return { data: { path: data.Key }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\r\n     *\r\n     * @param path The file path, including the current file name. For example `folder/image.png`.\r\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\r\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    createSignedUrl(path, expiresIn, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let _path = this._getFinalPath(path);\r\n                let data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\r\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n                    ? `&download=${options.download === true ? '' : options.download}`\r\n                    : '';\r\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\r\n                data = { signedUrl };\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\r\n     *\r\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\r\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\r\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     */\r\n    createSignedUrls(paths, expiresIn, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\r\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n                    ? `&download=${options.download === true ? '' : options.download}`\r\n                    : '';\r\n                return {\r\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\r\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\r\n                            : null }))),\r\n                    error: null,\r\n                };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\r\n     *\r\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    download(path, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\r\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\r\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\r\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\r\n            try {\r\n                const _path = this._getFinalPath(path);\r\n                const res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\r\n                    headers: this.headers,\r\n                    noResolveJson: true,\r\n                });\r\n                const data = yield res.blob();\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Retrieves the details of an existing file.\r\n     * @param path\r\n     */\r\n    info(path) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const _path = this._getFinalPath(path);\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/object/info/${_path}`, {\r\n                    headers: this.headers,\r\n                });\r\n                return { data: (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.recursiveToCamel)(data), error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks the existence of a file.\r\n     * @param path\r\n     */\r\n    exists(path) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const _path = this._getFinalPath(path);\r\n            try {\r\n                yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.head)(this.fetch, `${this.url}/object/${_path}`, {\r\n                    headers: this.headers,\r\n                });\r\n                return { data: true, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error) && error instanceof _lib_errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError) {\r\n                    const originalError = error.originalError;\r\n                    if ([400, 404].includes(originalError === null || originalError === void 0 ? void 0 : originalError.status)) {\r\n                        return { data: false, error };\r\n                    }\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\r\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\r\n     *\r\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\r\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    getPublicUrl(path, options) {\r\n        const _path = this._getFinalPath(path);\r\n        const _queryString = [];\r\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n            ? `download=${options.download === true ? '' : options.download}`\r\n            : '';\r\n        if (downloadQueryParam !== '') {\r\n            _queryString.push(downloadQueryParam);\r\n        }\r\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\r\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\r\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\r\n        if (transformationQuery !== '') {\r\n            _queryString.push(transformationQuery);\r\n        }\r\n        let queryString = _queryString.join('&');\r\n        if (queryString !== '') {\r\n            queryString = `?${queryString}`;\r\n        }\r\n        return {\r\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\r\n        };\r\n    }\r\n    /**\r\n     * Deletes files within the same bucket\r\n     *\r\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\r\n     */\r\n    remove(paths) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.remove)(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Get file metadata\r\n     * @param id the file id to retrieve metadata\r\n     */\r\n    // async getMetadata(\r\n    //   id: string\r\n    // ): Promise<\r\n    //   | {\r\n    //       data: Metadata\r\n    //       error: null\r\n    //     }\r\n    //   | {\r\n    //       data: null\r\n    //       error: StorageError\r\n    //     }\r\n    // > {\r\n    //   try {\r\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\r\n    //     return { data, error: null }\r\n    //   } catch (error) {\r\n    //     if (isStorageError(error)) {\r\n    //       return { data: null, error }\r\n    //     }\r\n    //     throw error\r\n    //   }\r\n    // }\r\n    /**\r\n     * Update file metadata\r\n     * @param id the file id to update metadata\r\n     * @param meta the new file metadata\r\n     */\r\n    // async updateMetadata(\r\n    //   id: string,\r\n    //   meta: Metadata\r\n    // ): Promise<\r\n    //   | {\r\n    //       data: Metadata\r\n    //       error: null\r\n    //     }\r\n    //   | {\r\n    //       data: null\r\n    //       error: StorageError\r\n    //     }\r\n    // > {\r\n    //   try {\r\n    //     const data = await post(\r\n    //       this.fetch,\r\n    //       `${this.url}/metadata/${id}`,\r\n    //       { ...meta },\r\n    //       { headers: this.headers }\r\n    //     )\r\n    //     return { data, error: null }\r\n    //   } catch (error) {\r\n    //     if (isStorageError(error)) {\r\n    //       return { data: null, error }\r\n    //     }\r\n    //     throw error\r\n    //   }\r\n    // }\r\n    /**\r\n     * Lists all the files within a bucket.\r\n     * @param path The folder path.\r\n     */\r\n    list(path, options, parameters) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    encodeMetadata(metadata) {\r\n        return JSON.stringify(metadata);\r\n    }\r\n    toBase64(data) {\r\n        if (typeof Buffer !== 'undefined') {\r\n            return Buffer.from(data).toString('base64');\r\n        }\r\n        return btoa(data);\r\n    }\r\n    _getFinalPath(path) {\r\n        return `${this.bucketId}/${path}`;\r\n    }\r\n    _removeEmptyFolders(path) {\r\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\r\n    }\r\n    transformOptsToQueryString(transform) {\r\n        const params = [];\r\n        if (transform.width) {\r\n            params.push(`width=${transform.width}`);\r\n        }\r\n        if (transform.height) {\r\n            params.push(`height=${transform.height}`);\r\n        }\r\n        if (transform.resize) {\r\n            params.push(`resize=${transform.resize}`);\r\n        }\r\n        if (transform.format) {\r\n            params.push(`format=${transform.format}`);\r\n        }\r\n        if (transform.quality) {\r\n            params.push(`quality=${transform.quality}`);\r\n        }\r\n        return params.join('&');\r\n    }\r\n}\r\n//# sourceMappingURL=StorageFileApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9wYWNrYWdlcy9TdG9yYWdlRmlsZUFwaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNrRjtBQUMzQjtBQUNTO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNlO0FBQ2YsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwREFBWTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQsNERBQTRELHlDQUF5QyxvQ0FBb0M7QUFDekk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELHFCQUFxQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELFNBQVMsVUFBVSxNQUFNLG1CQUFtQiw2QkFBNkIsMEVBQTBFLHlCQUF5QixJQUFJO0FBQ2hPO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxrREFBa0Q7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkRBQWM7QUFDbEMsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLE1BQU07QUFDeEU7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELHFDQUFxQztBQUNyRiw4REFBOEQsbUJBQW1CLG9DQUFvQztBQUNySDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELHFCQUFxQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHFDQUFxQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwyREFBYztBQUNsQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0RBQUksZ0JBQWdCLFNBQVMsc0JBQXNCLE1BQU0sS0FBSyxJQUFJLFNBQVM7QUFDOUc7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHFEQUFZO0FBQzFDO0FBQ0EseUJBQXlCLFFBQVEsd0NBQXdDO0FBQ3pFO0FBQ0E7QUFDQSxvQkFBb0IsMkRBQWM7QUFDbEMsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdEQUFJLGdCQUFnQixTQUFTO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLElBQUksdUJBQXVCO0FBQzVDLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0Esb0JBQW9CLDJEQUFjO0FBQ2xDLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnREFBSSxnQkFBZ0IsU0FBUztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixJQUFJLHVCQUF1QjtBQUM1Qyx5QkFBeUIsUUFBUSxnQkFBZ0I7QUFDakQ7QUFDQTtBQUNBLG9CQUFvQiwyREFBYztBQUNsQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGdEQUFJLGdCQUFnQixTQUFTLGVBQWUsTUFBTSxtQkFBbUIsV0FBVyw2RUFBNkUsK0JBQStCLElBQUksTUFBTSx1QkFBdUI7QUFDOVA7QUFDQSxtQ0FBbUMsa0RBQWtEO0FBQ3JGO0FBQ0EsK0NBQStDLFNBQVMsRUFBRSxlQUFlLEVBQUUsbUJBQW1CO0FBQzlGLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekI7QUFDQTtBQUNBLG9CQUFvQiwyREFBYztBQUNsQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0RBQUksZ0JBQWdCLFNBQVMsZUFBZSxjQUFjLEtBQUssa0JBQWtCLElBQUksdUJBQXVCO0FBQy9JO0FBQ0EsbUNBQW1DLGtEQUFrRDtBQUNyRjtBQUNBO0FBQ0EsNkVBQTZFLFlBQVk7QUFDekYsMkNBQTJDLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUI7QUFDM0Ysb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDJEQUFjO0FBQ2xDLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1KQUFtSjtBQUNuSiwwREFBMEQsb0JBQW9CO0FBQzlFO0FBQ0E7QUFDQSxrQ0FBa0MsK0NBQUcsZ0JBQWdCLFNBQVMsR0FBRyxXQUFXLEdBQUcsTUFBTSxFQUFFLFlBQVk7QUFDbkc7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0Esb0JBQW9CLDJEQUFjO0FBQ2xDLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLCtDQUFHLGdCQUFnQixTQUFTLGVBQWUsTUFBTTtBQUNwRjtBQUNBLGlCQUFpQjtBQUNqQix5QkFBeUIsTUFBTSw4REFBZ0I7QUFDL0M7QUFDQTtBQUNBLG9CQUFvQiwyREFBYztBQUNsQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnREFBSSxnQkFBZ0IsU0FBUyxVQUFVLE1BQU07QUFDbkU7QUFDQSxpQkFBaUI7QUFDakIseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsMkRBQWMsNEJBQTRCLDREQUFtQjtBQUNqRjtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtEQUFrRDtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrSUFBK0k7QUFDL0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixZQUFZO0FBQzFDO0FBQ0E7QUFDQSxvQkFBb0Isd0JBQXdCLFNBQVMsR0FBRyxXQUFXLFVBQVUsTUFBTSxFQUFFLFlBQVksSUFBSTtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBTSxnQkFBZ0IsU0FBUyxVQUFVLGNBQWMsS0FBSyxpQkFBaUIsSUFBSSx1QkFBdUI7QUFDM0kseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsMkRBQWM7QUFDbEMsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsU0FBUyxZQUFZLEdBQUcsS0FBSyx1QkFBdUI7QUFDckcsb0JBQW9CO0FBQ3BCLFdBQVc7QUFDWDtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTLFlBQVksR0FBRztBQUN4QyxlQUFlLFNBQVM7QUFDeEIsZUFBZTtBQUNmO0FBQ0Esb0JBQW9CO0FBQ3BCLFdBQVc7QUFDWDtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLHVDQUF1QyxvQkFBb0I7QUFDcEksbUNBQW1DLGdEQUFJLGdCQUFnQixTQUFTLGVBQWUsY0FBYyxXQUFXLHVCQUF1QjtBQUMvSCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLG9CQUFvQiwyREFBYztBQUNsQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTTtBQUN6QixtQkFBbUIsTUFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixjQUFjLEdBQUcsS0FBSztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxnQkFBZ0I7QUFDakQ7QUFDQTtBQUNBLGtDQUFrQyxpQkFBaUI7QUFDbkQ7QUFDQTtBQUNBLGtDQUFrQyxpQkFBaUI7QUFDbkQ7QUFDQTtBQUNBLGtDQUFrQyxpQkFBaUI7QUFDbkQ7QUFDQTtBQUNBLG1DQUFtQyxrQkFBa0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdG9yYWdlLWpzXFxkaXN0XFxtb2R1bGVcXHBhY2thZ2VzXFxTdG9yYWdlRmlsZUFwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmltcG9ydCB7IGlzU3RvcmFnZUVycm9yLCBTdG9yYWdlRXJyb3IsIFN0b3JhZ2VVbmtub3duRXJyb3IgfSBmcm9tICcuLi9saWIvZXJyb3JzJztcclxuaW1wb3J0IHsgZ2V0LCBoZWFkLCBwb3N0LCByZW1vdmUgfSBmcm9tICcuLi9saWIvZmV0Y2gnO1xyXG5pbXBvcnQgeyByZWN1cnNpdmVUb0NhbWVsLCByZXNvbHZlRmV0Y2ggfSBmcm9tICcuLi9saWIvaGVscGVycyc7XHJcbmNvbnN0IERFRkFVTFRfU0VBUkNIX09QVElPTlMgPSB7XHJcbiAgICBsaW1pdDogMTAwLFxyXG4gICAgb2Zmc2V0OiAwLFxyXG4gICAgc29ydEJ5OiB7XHJcbiAgICAgICAgY29sdW1uOiAnbmFtZScsXHJcbiAgICAgICAgb3JkZXI6ICdhc2MnLFxyXG4gICAgfSxcclxufTtcclxuY29uc3QgREVGQVVMVF9GSUxFX09QVElPTlMgPSB7XHJcbiAgICBjYWNoZUNvbnRyb2w6ICczNjAwJyxcclxuICAgIGNvbnRlbnRUeXBlOiAndGV4dC9wbGFpbjtjaGFyc2V0PVVURi04JyxcclxuICAgIHVwc2VydDogZmFsc2UsXHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0b3JhZ2VGaWxlQXBpIHtcclxuICAgIGNvbnN0cnVjdG9yKHVybCwgaGVhZGVycyA9IHt9LCBidWNrZXRJZCwgZmV0Y2gpIHtcclxuICAgICAgICB0aGlzLnVybCA9IHVybDtcclxuICAgICAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xyXG4gICAgICAgIHRoaXMuYnVja2V0SWQgPSBidWNrZXRJZDtcclxuICAgICAgICB0aGlzLmZldGNoID0gcmVzb2x2ZUZldGNoKGZldGNoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXBsb2FkcyBhIGZpbGUgdG8gYW4gZXhpc3RpbmcgYnVja2V0IG9yIHJlcGxhY2VzIGFuIGV4aXN0aW5nIGZpbGUgYXQgdGhlIHNwZWNpZmllZCBwYXRoIHdpdGggYSBuZXcgb25lLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBtZXRob2QgSFRUUCBtZXRob2QuXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBUaGUgcmVsYXRpdmUgZmlsZSBwYXRoLiBTaG91bGQgYmUgb2YgdGhlIGZvcm1hdCBgZm9sZGVyL3N1YmZvbGRlci9maWxlbmFtZS5wbmdgLiBUaGUgYnVja2V0IG11c3QgYWxyZWFkeSBleGlzdCBiZWZvcmUgYXR0ZW1wdGluZyB0byB1cGxvYWQuXHJcbiAgICAgKiBAcGFyYW0gZmlsZUJvZHkgVGhlIGJvZHkgb2YgdGhlIGZpbGUgdG8gYmUgc3RvcmVkIGluIHRoZSBidWNrZXQuXHJcbiAgICAgKi9cclxuICAgIHVwbG9hZE9yVXBkYXRlKG1ldGhvZCwgcGF0aCwgZmlsZUJvZHksIGZpbGVPcHRpb25zKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGxldCBib2R5O1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9GSUxFX09QVElPTlMpLCBmaWxlT3B0aW9ucyk7XHJcbiAgICAgICAgICAgICAgICBsZXQgaGVhZGVycyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5oZWFkZXJzKSwgKG1ldGhvZCA9PT0gJ1BPU1QnICYmIHsgJ3gtdXBzZXJ0JzogU3RyaW5nKG9wdGlvbnMudXBzZXJ0KSB9KSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtZXRhZGF0YSA9IG9wdGlvbnMubWV0YWRhdGE7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEJsb2IgIT09ICd1bmRlZmluZWQnICYmIGZpbGVCb2R5IGluc3RhbmNlb2YgQmxvYikge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICAgICAgICAgICAgICBib2R5LmFwcGVuZCgnY2FjaGVDb250cm9sJywgb3B0aW9ucy5jYWNoZUNvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtZXRhZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5LmFwcGVuZCgnbWV0YWRhdGEnLCB0aGlzLmVuY29kZU1ldGFkYXRhKG1ldGFkYXRhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkuYXBwZW5kKCcnLCBmaWxlQm9keSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgRm9ybURhdGEgIT09ICd1bmRlZmluZWQnICYmIGZpbGVCb2R5IGluc3RhbmNlb2YgRm9ybURhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBib2R5ID0gZmlsZUJvZHk7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9keS5hcHBlbmQoJ2NhY2hlQ29udHJvbCcsIG9wdGlvbnMuY2FjaGVDb250cm9sKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobWV0YWRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm9keS5hcHBlbmQoJ21ldGFkYXRhJywgdGhpcy5lbmNvZGVNZXRhZGF0YShtZXRhZGF0YSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBmaWxlQm9keTtcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzWydjYWNoZS1jb250cm9sJ10gPSBgbWF4LWFnZT0ke29wdGlvbnMuY2FjaGVDb250cm9sfWA7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snY29udGVudC10eXBlJ10gPSBvcHRpb25zLmNvbnRlbnRUeXBlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtZXRhZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzWyd4LW1ldGFkYXRhJ10gPSB0aGlzLnRvQmFzZTY0KHRoaXMuZW5jb2RlTWV0YWRhdGEobWV0YWRhdGEpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoZmlsZU9wdGlvbnMgPT09IG51bGwgfHwgZmlsZU9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGZpbGVPcHRpb25zLmhlYWRlcnMpIHtcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBoZWFkZXJzKSwgZmlsZU9wdGlvbnMuaGVhZGVycyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjbGVhblBhdGggPSB0aGlzLl9yZW1vdmVFbXB0eUZvbGRlcnMocGF0aCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBfcGF0aCA9IHRoaXMuX2dldEZpbmFsUGF0aChjbGVhblBhdGgpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0geWllbGQgdGhpcy5mZXRjaChgJHt0aGlzLnVybH0vb2JqZWN0LyR7X3BhdGh9YCwgT2JqZWN0LmFzc2lnbih7IG1ldGhvZCwgYm9keTogYm9keSwgaGVhZGVycyB9LCAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kdXBsZXgpID8geyBkdXBsZXg6IG9wdGlvbnMuZHVwbGV4IH0gOiB7fSkpKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCByZXMuanNvbigpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgcGF0aDogY2xlYW5QYXRoLCBpZDogZGF0YS5JZCwgZnVsbFBhdGg6IGRhdGEuS2V5IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXBsb2FkcyBhIGZpbGUgdG8gYW4gZXhpc3RpbmcgYnVja2V0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSBmaWxlIHBhdGgsIGluY2x1ZGluZyB0aGUgZmlsZSBuYW1lLiBTaG91bGQgYmUgb2YgdGhlIGZvcm1hdCBgZm9sZGVyL3N1YmZvbGRlci9maWxlbmFtZS5wbmdgLiBUaGUgYnVja2V0IG11c3QgYWxyZWFkeSBleGlzdCBiZWZvcmUgYXR0ZW1wdGluZyB0byB1cGxvYWQuXHJcbiAgICAgKiBAcGFyYW0gZmlsZUJvZHkgVGhlIGJvZHkgb2YgdGhlIGZpbGUgdG8gYmUgc3RvcmVkIGluIHRoZSBidWNrZXQuXHJcbiAgICAgKi9cclxuICAgIHVwbG9hZChwYXRoLCBmaWxlQm9keSwgZmlsZU9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy51cGxvYWRPclVwZGF0ZSgnUE9TVCcsIHBhdGgsIGZpbGVCb2R5LCBmaWxlT3B0aW9ucyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFVwbG9hZCBhIGZpbGUgd2l0aCBhIHRva2VuIGdlbmVyYXRlZCBmcm9tIGBjcmVhdGVTaWduZWRVcGxvYWRVcmxgLlxyXG4gICAgICogQHBhcmFtIHBhdGggVGhlIGZpbGUgcGF0aCwgaW5jbHVkaW5nIHRoZSBmaWxlIG5hbWUuIFNob3VsZCBiZSBvZiB0aGUgZm9ybWF0IGBmb2xkZXIvc3ViZm9sZGVyL2ZpbGVuYW1lLnBuZ2AuIFRoZSBidWNrZXQgbXVzdCBhbHJlYWR5IGV4aXN0IGJlZm9yZSBhdHRlbXB0aW5nIHRvIHVwbG9hZC5cclxuICAgICAqIEBwYXJhbSB0b2tlbiBUaGUgdG9rZW4gZ2VuZXJhdGVkIGZyb20gYGNyZWF0ZVNpZ25lZFVwbG9hZFVybGBcclxuICAgICAqIEBwYXJhbSBmaWxlQm9keSBUaGUgYm9keSBvZiB0aGUgZmlsZSB0byBiZSBzdG9yZWQgaW4gdGhlIGJ1Y2tldC5cclxuICAgICAqL1xyXG4gICAgdXBsb2FkVG9TaWduZWRVcmwocGF0aCwgdG9rZW4sIGZpbGVCb2R5LCBmaWxlT3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNsZWFuUGF0aCA9IHRoaXMuX3JlbW92ZUVtcHR5Rm9sZGVycyhwYXRoKTtcclxuICAgICAgICAgICAgY29uc3QgX3BhdGggPSB0aGlzLl9nZXRGaW5hbFBhdGgoY2xlYW5QYXRoKTtcclxuICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh0aGlzLnVybCArIGAvb2JqZWN0L3VwbG9hZC9zaWduLyR7X3BhdGh9YCk7XHJcbiAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KCd0b2tlbicsIHRva2VuKTtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGxldCBib2R5O1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oeyB1cHNlcnQ6IERFRkFVTFRfRklMRV9PUFRJT05TLnVwc2VydCB9LCBmaWxlT3B0aW9ucyk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLmhlYWRlcnMpLCB7ICd4LXVwc2VydCc6IFN0cmluZyhvcHRpb25zLnVwc2VydCkgfSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEJsb2IgIT09ICd1bmRlZmluZWQnICYmIGZpbGVCb2R5IGluc3RhbmNlb2YgQmxvYikge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICAgICAgICAgICAgICBib2R5LmFwcGVuZCgnY2FjaGVDb250cm9sJywgb3B0aW9ucy5jYWNoZUNvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkuYXBwZW5kKCcnLCBmaWxlQm9keSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgRm9ybURhdGEgIT09ICd1bmRlZmluZWQnICYmIGZpbGVCb2R5IGluc3RhbmNlb2YgRm9ybURhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBib2R5ID0gZmlsZUJvZHk7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9keS5hcHBlbmQoJ2NhY2hlQ29udHJvbCcsIG9wdGlvbnMuY2FjaGVDb250cm9sKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBmaWxlQm9keTtcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzWydjYWNoZS1jb250cm9sJ10gPSBgbWF4LWFnZT0ke29wdGlvbnMuY2FjaGVDb250cm9sfWA7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snY29udGVudC10eXBlJ10gPSBvcHRpb25zLmNvbnRlbnRUeXBlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0geWllbGQgdGhpcy5mZXRjaCh1cmwudG9TdHJpbmcoKSwge1xyXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgICAgICAgICAgICAgYm9keTogYm9keSxcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0geWllbGQgcmVzLmpzb24oKTtcclxuICAgICAgICAgICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IHBhdGg6IGNsZWFuUGF0aCwgZnVsbFBhdGg6IGRhdGEuS2V5IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIHNpZ25lZCB1cGxvYWQgVVJMLlxyXG4gICAgICogU2lnbmVkIHVwbG9hZCBVUkxzIGNhbiBiZSB1c2VkIHRvIHVwbG9hZCBmaWxlcyB0byB0aGUgYnVja2V0IHdpdGhvdXQgZnVydGhlciBhdXRoZW50aWNhdGlvbi5cclxuICAgICAqIFRoZXkgYXJlIHZhbGlkIGZvciAyIGhvdXJzLlxyXG4gICAgICogQHBhcmFtIHBhdGggVGhlIGZpbGUgcGF0aCwgaW5jbHVkaW5nIHRoZSBjdXJyZW50IGZpbGUgbmFtZS4gRm9yIGV4YW1wbGUgYGZvbGRlci9pbWFnZS5wbmdgLlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMudXBzZXJ0IElmIHNldCB0byB0cnVlLCBhbGxvd3MgdGhlIGZpbGUgdG8gYmUgb3ZlcndyaXR0ZW4gaWYgaXQgYWxyZWFkeSBleGlzdHMuXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZVNpZ25lZFVwbG9hZFVybChwYXRoLCBvcHRpb25zKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGxldCBfcGF0aCA9IHRoaXMuX2dldEZpbmFsUGF0aChwYXRoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmhlYWRlcnMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy51cHNlcnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzWyd4LXVwc2VydCddID0gJ3RydWUnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHBvc3QodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC91cGxvYWQvc2lnbi8ke19wYXRofWAsIHt9LCB7IGhlYWRlcnMgfSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHRoaXMudXJsICsgZGF0YS51cmwpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdG9rZW4gPSB1cmwuc2VhcmNoUGFyYW1zLmdldCgndG9rZW4nKTtcclxuICAgICAgICAgICAgICAgIGlmICghdG9rZW4pIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3RvcmFnZUVycm9yKCdObyB0b2tlbiByZXR1cm5lZCBieSBBUEknKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IHsgc2lnbmVkVXJsOiB1cmwudG9TdHJpbmcoKSwgcGF0aCwgdG9rZW4gfSwgZXJyb3I6IG51bGwgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVwbGFjZXMgYW4gZXhpc3RpbmcgZmlsZSBhdCB0aGUgc3BlY2lmaWVkIHBhdGggd2l0aCBhIG5ldyBvbmUuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHBhdGggVGhlIHJlbGF0aXZlIGZpbGUgcGF0aC4gU2hvdWxkIGJlIG9mIHRoZSBmb3JtYXQgYGZvbGRlci9zdWJmb2xkZXIvZmlsZW5hbWUucG5nYC4gVGhlIGJ1Y2tldCBtdXN0IGFscmVhZHkgZXhpc3QgYmVmb3JlIGF0dGVtcHRpbmcgdG8gdXBkYXRlLlxyXG4gICAgICogQHBhcmFtIGZpbGVCb2R5IFRoZSBib2R5IG9mIHRoZSBmaWxlIHRvIGJlIHN0b3JlZCBpbiB0aGUgYnVja2V0LlxyXG4gICAgICovXHJcbiAgICB1cGRhdGUocGF0aCwgZmlsZUJvZHksIGZpbGVPcHRpb25zKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudXBsb2FkT3JVcGRhdGUoJ1BVVCcsIHBhdGgsIGZpbGVCb2R5LCBmaWxlT3B0aW9ucyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIE1vdmVzIGFuIGV4aXN0aW5nIGZpbGUgdG8gYSBuZXcgcGF0aCBpbiB0aGUgc2FtZSBidWNrZXQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGZyb21QYXRoIFRoZSBvcmlnaW5hbCBmaWxlIHBhdGgsIGluY2x1ZGluZyB0aGUgY3VycmVudCBmaWxlIG5hbWUuIEZvciBleGFtcGxlIGBmb2xkZXIvaW1hZ2UucG5nYC5cclxuICAgICAqIEBwYXJhbSB0b1BhdGggVGhlIG5ldyBmaWxlIHBhdGgsIGluY2x1ZGluZyB0aGUgbmV3IGZpbGUgbmFtZS4gRm9yIGV4YW1wbGUgYGZvbGRlci9pbWFnZS1uZXcucG5nYC5cclxuICAgICAqIEBwYXJhbSBvcHRpb25zIFRoZSBkZXN0aW5hdGlvbiBvcHRpb25zLlxyXG4gICAgICovXHJcbiAgICBtb3ZlKGZyb21QYXRoLCB0b1BhdGgsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHBvc3QodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC9tb3ZlYCwge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1Y2tldElkOiB0aGlzLmJ1Y2tldElkLFxyXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZUtleTogZnJvbVBhdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25LZXk6IHRvUGF0aCxcclxuICAgICAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbkJ1Y2tldDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmRlc3RpbmF0aW9uQnVja2V0LFxyXG4gICAgICAgICAgICAgICAgfSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhLCBlcnJvcjogbnVsbCB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3BpZXMgYW4gZXhpc3RpbmcgZmlsZSB0byBhIG5ldyBwYXRoIGluIHRoZSBzYW1lIGJ1Y2tldC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZnJvbVBhdGggVGhlIG9yaWdpbmFsIGZpbGUgcGF0aCwgaW5jbHVkaW5nIHRoZSBjdXJyZW50IGZpbGUgbmFtZS4gRm9yIGV4YW1wbGUgYGZvbGRlci9pbWFnZS5wbmdgLlxyXG4gICAgICogQHBhcmFtIHRvUGF0aCBUaGUgbmV3IGZpbGUgcGF0aCwgaW5jbHVkaW5nIHRoZSBuZXcgZmlsZSBuYW1lLiBGb3IgZXhhbXBsZSBgZm9sZGVyL2ltYWdlLWNvcHkucG5nYC5cclxuICAgICAqIEBwYXJhbSBvcHRpb25zIFRoZSBkZXN0aW5hdGlvbiBvcHRpb25zLlxyXG4gICAgICovXHJcbiAgICBjb3B5KGZyb21QYXRoLCB0b1BhdGgsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHBvc3QodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC9jb3B5YCwge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1Y2tldElkOiB0aGlzLmJ1Y2tldElkLFxyXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZUtleTogZnJvbVBhdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25LZXk6IHRvUGF0aCxcclxuICAgICAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbkJ1Y2tldDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmRlc3RpbmF0aW9uQnVja2V0LFxyXG4gICAgICAgICAgICAgICAgfSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiB7IHBhdGg6IGRhdGEuS2V5IH0sIGVycm9yOiBudWxsIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNTdG9yYWdlRXJyb3IoZXJyb3IpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYSBzaWduZWQgVVJMLiBVc2UgYSBzaWduZWQgVVJMIHRvIHNoYXJlIGEgZmlsZSBmb3IgYSBmaXhlZCBhbW91bnQgb2YgdGltZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBUaGUgZmlsZSBwYXRoLCBpbmNsdWRpbmcgdGhlIGN1cnJlbnQgZmlsZSBuYW1lLiBGb3IgZXhhbXBsZSBgZm9sZGVyL2ltYWdlLnBuZ2AuXHJcbiAgICAgKiBAcGFyYW0gZXhwaXJlc0luIFRoZSBudW1iZXIgb2Ygc2Vjb25kcyB1bnRpbCB0aGUgc2lnbmVkIFVSTCBleHBpcmVzLiBGb3IgZXhhbXBsZSwgYDYwYCBmb3IgYSBVUkwgd2hpY2ggaXMgdmFsaWQgZm9yIG9uZSBtaW51dGUuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5kb3dubG9hZCB0cmlnZ2VycyB0aGUgZmlsZSBhcyBhIGRvd25sb2FkIGlmIHNldCB0byB0cnVlLiBTZXQgdGhpcyBwYXJhbWV0ZXIgYXMgdGhlIG5hbWUgb2YgdGhlIGZpbGUgaWYgeW91IHdhbnQgdG8gdHJpZ2dlciB0aGUgZG93bmxvYWQgd2l0aCBhIGRpZmZlcmVudCBmaWxlbmFtZS5cclxuICAgICAqIEBwYXJhbSBvcHRpb25zLnRyYW5zZm9ybSBUcmFuc2Zvcm0gdGhlIGFzc2V0IGJlZm9yZSBzZXJ2aW5nIGl0IHRvIHRoZSBjbGllbnQuXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZVNpZ25lZFVybChwYXRoLCBleHBpcmVzSW4sIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgbGV0IF9wYXRoID0gdGhpcy5fZ2V0RmluYWxQYXRoKHBhdGgpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGRhdGEgPSB5aWVsZCBwb3N0KHRoaXMuZmV0Y2gsIGAke3RoaXMudXJsfS9vYmplY3Qvc2lnbi8ke19wYXRofWAsIE9iamVjdC5hc3NpZ24oeyBleHBpcmVzSW4gfSwgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudHJhbnNmb3JtKSA/IHsgdHJhbnNmb3JtOiBvcHRpb25zLnRyYW5zZm9ybSB9IDoge30pKSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkb3dubG9hZFF1ZXJ5UGFyYW0gPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmRvd25sb2FkKVxyXG4gICAgICAgICAgICAgICAgICAgID8gYCZkb3dubG9hZD0ke29wdGlvbnMuZG93bmxvYWQgPT09IHRydWUgPyAnJyA6IG9wdGlvbnMuZG93bmxvYWR9YFxyXG4gICAgICAgICAgICAgICAgICAgIDogJyc7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduZWRVcmwgPSBlbmNvZGVVUkkoYCR7dGhpcy51cmx9JHtkYXRhLnNpZ25lZFVSTH0ke2Rvd25sb2FkUXVlcnlQYXJhbX1gKTtcclxuICAgICAgICAgICAgICAgIGRhdGEgPSB7IHNpZ25lZFVybCB9O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBtdWx0aXBsZSBzaWduZWQgVVJMcy4gVXNlIGEgc2lnbmVkIFVSTCB0byBzaGFyZSBhIGZpbGUgZm9yIGEgZml4ZWQgYW1vdW50IG9mIHRpbWUuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHBhdGhzIFRoZSBmaWxlIHBhdGhzIHRvIGJlIGRvd25sb2FkZWQsIGluY2x1ZGluZyB0aGUgY3VycmVudCBmaWxlIG5hbWVzLiBGb3IgZXhhbXBsZSBgWydmb2xkZXIvaW1hZ2UucG5nJywgJ2ZvbGRlcjIvaW1hZ2UyLnBuZyddYC5cclxuICAgICAqIEBwYXJhbSBleHBpcmVzSW4gVGhlIG51bWJlciBvZiBzZWNvbmRzIHVudGlsIHRoZSBzaWduZWQgVVJMcyBleHBpcmUuIEZvciBleGFtcGxlLCBgNjBgIGZvciBVUkxzIHdoaWNoIGFyZSB2YWxpZCBmb3Igb25lIG1pbnV0ZS5cclxuICAgICAqIEBwYXJhbSBvcHRpb25zLmRvd25sb2FkIHRyaWdnZXJzIHRoZSBmaWxlIGFzIGEgZG93bmxvYWQgaWYgc2V0IHRvIHRydWUuIFNldCB0aGlzIHBhcmFtZXRlciBhcyB0aGUgbmFtZSBvZiB0aGUgZmlsZSBpZiB5b3Ugd2FudCB0byB0cmlnZ2VyIHRoZSBkb3dubG9hZCB3aXRoIGEgZGlmZmVyZW50IGZpbGVuYW1lLlxyXG4gICAgICovXHJcbiAgICBjcmVhdGVTaWduZWRVcmxzKHBhdGhzLCBleHBpcmVzSW4sIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHBvc3QodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC9zaWduLyR7dGhpcy5idWNrZXRJZH1gLCB7IGV4cGlyZXNJbiwgcGF0aHMgfSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkb3dubG9hZFF1ZXJ5UGFyYW0gPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmRvd25sb2FkKVxyXG4gICAgICAgICAgICAgICAgICAgID8gYCZkb3dubG9hZD0ke29wdGlvbnMuZG93bmxvYWQgPT09IHRydWUgPyAnJyA6IG9wdGlvbnMuZG93bmxvYWR9YFxyXG4gICAgICAgICAgICAgICAgICAgIDogJyc7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEubWFwKChkYXR1bSkgPT4gKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGF0dW0pLCB7IHNpZ25lZFVybDogZGF0dW0uc2lnbmVkVVJMXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGVuY29kZVVSSShgJHt0aGlzLnVybH0ke2RhdHVtLnNpZ25lZFVSTH0ke2Rvd25sb2FkUXVlcnlQYXJhbX1gKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsIH0pKSksXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG51bGwsXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBEb3dubG9hZHMgYSBmaWxlIGZyb20gYSBwcml2YXRlIGJ1Y2tldC4gRm9yIHB1YmxpYyBidWNrZXRzLCBtYWtlIGEgcmVxdWVzdCB0byB0aGUgVVJMIHJldHVybmVkIGZyb20gYGdldFB1YmxpY1VybGAgaW5zdGVhZC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBUaGUgZnVsbCBwYXRoIGFuZCBmaWxlIG5hbWUgb2YgdGhlIGZpbGUgdG8gYmUgZG93bmxvYWRlZC4gRm9yIGV4YW1wbGUgYGZvbGRlci9pbWFnZS5wbmdgLlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMudHJhbnNmb3JtIFRyYW5zZm9ybSB0aGUgYXNzZXQgYmVmb3JlIHNlcnZpbmcgaXQgdG8gdGhlIGNsaWVudC5cclxuICAgICAqL1xyXG4gICAgZG93bmxvYWQocGF0aCwgb3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHdhbnRzVHJhbnNmb3JtYXRpb24gPSB0eXBlb2YgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc2Zvcm0pICE9PSAndW5kZWZpbmVkJztcclxuICAgICAgICAgICAgY29uc3QgcmVuZGVyUGF0aCA9IHdhbnRzVHJhbnNmb3JtYXRpb24gPyAncmVuZGVyL2ltYWdlL2F1dGhlbnRpY2F0ZWQnIDogJ29iamVjdCc7XHJcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybWF0aW9uUXVlcnkgPSB0aGlzLnRyYW5zZm9ybU9wdHNUb1F1ZXJ5U3RyaW5nKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudHJhbnNmb3JtKSB8fCB7fSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gdHJhbnNmb3JtYXRpb25RdWVyeSA/IGA/JHt0cmFuc2Zvcm1hdGlvblF1ZXJ5fWAgOiAnJztcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IF9wYXRoID0gdGhpcy5fZ2V0RmluYWxQYXRoKHBhdGgpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0geWllbGQgZ2V0KHRoaXMuZmV0Y2gsIGAke3RoaXMudXJsfS8ke3JlbmRlclBhdGh9LyR7X3BhdGh9JHtxdWVyeVN0cmluZ31gLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vUmVzb2x2ZUpzb246IHRydWUsXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCByZXMuYmxvYigpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0cmlldmVzIHRoZSBkZXRhaWxzIG9mIGFuIGV4aXN0aW5nIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0gcGF0aFxyXG4gICAgICovXHJcbiAgICBpbmZvKHBhdGgpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICBjb25zdCBfcGF0aCA9IHRoaXMuX2dldEZpbmFsUGF0aChwYXRoKTtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCBnZXQodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC9pbmZvLyR7X3BhdGh9YCwge1xyXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogcmVjdXJzaXZlVG9DYW1lbChkYXRhKSwgZXJyb3I6IG51bGwgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIHRoZSBleGlzdGVuY2Ugb2YgYSBmaWxlLlxyXG4gICAgICogQHBhcmFtIHBhdGhcclxuICAgICAqL1xyXG4gICAgZXhpc3RzKHBhdGgpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICBjb25zdCBfcGF0aCA9IHRoaXMuX2dldEZpbmFsUGF0aChwYXRoKTtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHlpZWxkIGhlYWQodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC8ke19wYXRofWAsIHtcclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IHRydWUsIGVycm9yOiBudWxsIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNTdG9yYWdlRXJyb3IoZXJyb3IpICYmIGVycm9yIGluc3RhbmNlb2YgU3RvcmFnZVVua25vd25FcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsRXJyb3IgPSBlcnJvci5vcmlnaW5hbEVycm9yO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChbNDAwLCA0MDRdLmluY2x1ZGVzKG9yaWdpbmFsRXJyb3IgPT09IG51bGwgfHwgb3JpZ2luYWxFcnJvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3JpZ2luYWxFcnJvci5zdGF0dXMpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IGZhbHNlLCBlcnJvciB9O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEEgc2ltcGxlIGNvbnZlbmllbmNlIGZ1bmN0aW9uIHRvIGdldCB0aGUgVVJMIGZvciBhbiBhc3NldCBpbiBhIHB1YmxpYyBidWNrZXQuIElmIHlvdSBkbyBub3Qgd2FudCB0byB1c2UgdGhpcyBmdW5jdGlvbiwgeW91IGNhbiBjb25zdHJ1Y3QgdGhlIHB1YmxpYyBVUkwgYnkgY29uY2F0ZW5hdGluZyB0aGUgYnVja2V0IFVSTCB3aXRoIHRoZSBwYXRoIHRvIHRoZSBhc3NldC5cclxuICAgICAqIFRoaXMgZnVuY3Rpb24gZG9lcyBub3QgdmVyaWZ5IGlmIHRoZSBidWNrZXQgaXMgcHVibGljLiBJZiBhIHB1YmxpYyBVUkwgaXMgY3JlYXRlZCBmb3IgYSBidWNrZXQgd2hpY2ggaXMgbm90IHB1YmxpYywgeW91IHdpbGwgbm90IGJlIGFibGUgdG8gZG93bmxvYWQgdGhlIGFzc2V0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSBwYXRoIGFuZCBuYW1lIG9mIHRoZSBmaWxlIHRvIGdlbmVyYXRlIHRoZSBwdWJsaWMgVVJMIGZvci4gRm9yIGV4YW1wbGUgYGZvbGRlci9pbWFnZS5wbmdgLlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMuZG93bmxvYWQgVHJpZ2dlcnMgdGhlIGZpbGUgYXMgYSBkb3dubG9hZCBpZiBzZXQgdG8gdHJ1ZS4gU2V0IHRoaXMgcGFyYW1ldGVyIGFzIHRoZSBuYW1lIG9mIHRoZSBmaWxlIGlmIHlvdSB3YW50IHRvIHRyaWdnZXIgdGhlIGRvd25sb2FkIHdpdGggYSBkaWZmZXJlbnQgZmlsZW5hbWUuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy50cmFuc2Zvcm0gVHJhbnNmb3JtIHRoZSBhc3NldCBiZWZvcmUgc2VydmluZyBpdCB0byB0aGUgY2xpZW50LlxyXG4gICAgICovXHJcbiAgICBnZXRQdWJsaWNVcmwocGF0aCwgb3B0aW9ucykge1xyXG4gICAgICAgIGNvbnN0IF9wYXRoID0gdGhpcy5fZ2V0RmluYWxQYXRoKHBhdGgpO1xyXG4gICAgICAgIGNvbnN0IF9xdWVyeVN0cmluZyA9IFtdO1xyXG4gICAgICAgIGNvbnN0IGRvd25sb2FkUXVlcnlQYXJhbSA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZG93bmxvYWQpXHJcbiAgICAgICAgICAgID8gYGRvd25sb2FkPSR7b3B0aW9ucy5kb3dubG9hZCA9PT0gdHJ1ZSA/ICcnIDogb3B0aW9ucy5kb3dubG9hZH1gXHJcbiAgICAgICAgICAgIDogJyc7XHJcbiAgICAgICAgaWYgKGRvd25sb2FkUXVlcnlQYXJhbSAhPT0gJycpIHtcclxuICAgICAgICAgICAgX3F1ZXJ5U3RyaW5nLnB1c2goZG93bmxvYWRRdWVyeVBhcmFtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgd2FudHNUcmFuc2Zvcm1hdGlvbiA9IHR5cGVvZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRyYW5zZm9ybSkgIT09ICd1bmRlZmluZWQnO1xyXG4gICAgICAgIGNvbnN0IHJlbmRlclBhdGggPSB3YW50c1RyYW5zZm9ybWF0aW9uID8gJ3JlbmRlci9pbWFnZScgOiAnb2JqZWN0JztcclxuICAgICAgICBjb25zdCB0cmFuc2Zvcm1hdGlvblF1ZXJ5ID0gdGhpcy50cmFuc2Zvcm1PcHRzVG9RdWVyeVN0cmluZygob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRyYW5zZm9ybSkgfHwge30pO1xyXG4gICAgICAgIGlmICh0cmFuc2Zvcm1hdGlvblF1ZXJ5ICE9PSAnJykge1xyXG4gICAgICAgICAgICBfcXVlcnlTdHJpbmcucHVzaCh0cmFuc2Zvcm1hdGlvblF1ZXJ5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHF1ZXJ5U3RyaW5nID0gX3F1ZXJ5U3RyaW5nLmpvaW4oJyYnKTtcclxuICAgICAgICBpZiAocXVlcnlTdHJpbmcgIT09ICcnKSB7XHJcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nID0gYD8ke3F1ZXJ5U3RyaW5nfWA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGRhdGE6IHsgcHVibGljVXJsOiBlbmNvZGVVUkkoYCR7dGhpcy51cmx9LyR7cmVuZGVyUGF0aH0vcHVibGljLyR7X3BhdGh9JHtxdWVyeVN0cmluZ31gKSB9LFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIERlbGV0ZXMgZmlsZXMgd2l0aGluIHRoZSBzYW1lIGJ1Y2tldFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwYXRocyBBbiBhcnJheSBvZiBmaWxlcyB0byBkZWxldGUsIGluY2x1ZGluZyB0aGUgcGF0aCBhbmQgZmlsZSBuYW1lLiBGb3IgZXhhbXBsZSBbYCdmb2xkZXIvaW1hZ2UucG5nJ2BdLlxyXG4gICAgICovXHJcbiAgICByZW1vdmUocGF0aHMpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHJlbW92ZSh0aGlzLmZldGNoLCBgJHt0aGlzLnVybH0vb2JqZWN0LyR7dGhpcy5idWNrZXRJZH1gLCB7IHByZWZpeGVzOiBwYXRocyB9LCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGEsIGVycm9yOiBudWxsIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNTdG9yYWdlRXJyb3IoZXJyb3IpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldCBmaWxlIG1ldGFkYXRhXHJcbiAgICAgKiBAcGFyYW0gaWQgdGhlIGZpbGUgaWQgdG8gcmV0cmlldmUgbWV0YWRhdGFcclxuICAgICAqL1xyXG4gICAgLy8gYXN5bmMgZ2V0TWV0YWRhdGEoXHJcbiAgICAvLyAgIGlkOiBzdHJpbmdcclxuICAgIC8vICk6IFByb21pc2U8XHJcbiAgICAvLyAgIHwge1xyXG4gICAgLy8gICAgICAgZGF0YTogTWV0YWRhdGFcclxuICAgIC8vICAgICAgIGVycm9yOiBudWxsXHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICB8IHtcclxuICAgIC8vICAgICAgIGRhdGE6IG51bGxcclxuICAgIC8vICAgICAgIGVycm9yOiBTdG9yYWdlRXJyb3JcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyA+IHtcclxuICAgIC8vICAgdHJ5IHtcclxuICAgIC8vICAgICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0KHRoaXMuZmV0Y2gsIGAke3RoaXMudXJsfS9tZXRhZGF0YS8ke2lkfWAsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pXHJcbiAgICAvLyAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfVxyXG4gICAgLy8gICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgIC8vICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH1cclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgdGhyb3cgZXJyb3JcclxuICAgIC8vICAgfVxyXG4gICAgLy8gfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGUgZmlsZSBtZXRhZGF0YVxyXG4gICAgICogQHBhcmFtIGlkIHRoZSBmaWxlIGlkIHRvIHVwZGF0ZSBtZXRhZGF0YVxyXG4gICAgICogQHBhcmFtIG1ldGEgdGhlIG5ldyBmaWxlIG1ldGFkYXRhXHJcbiAgICAgKi9cclxuICAgIC8vIGFzeW5jIHVwZGF0ZU1ldGFkYXRhKFxyXG4gICAgLy8gICBpZDogc3RyaW5nLFxyXG4gICAgLy8gICBtZXRhOiBNZXRhZGF0YVxyXG4gICAgLy8gKTogUHJvbWlzZTxcclxuICAgIC8vICAgfCB7XHJcbiAgICAvLyAgICAgICBkYXRhOiBNZXRhZGF0YVxyXG4gICAgLy8gICAgICAgZXJyb3I6IG51bGxcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgIHwge1xyXG4gICAgLy8gICAgICAgZGF0YTogbnVsbFxyXG4gICAgLy8gICAgICAgZXJyb3I6IFN0b3JhZ2VFcnJvclxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vID4ge1xyXG4gICAgLy8gICB0cnkge1xyXG4gICAgLy8gICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBwb3N0KFxyXG4gICAgLy8gICAgICAgdGhpcy5mZXRjaCxcclxuICAgIC8vICAgICAgIGAke3RoaXMudXJsfS9tZXRhZGF0YS8ke2lkfWAsXHJcbiAgICAvLyAgICAgICB7IC4uLm1ldGEgfSxcclxuICAgIC8vICAgICAgIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH1cclxuICAgIC8vICAgICApXHJcbiAgICAvLyAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfVxyXG4gICAgLy8gICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcclxuICAgIC8vICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH1cclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgdGhyb3cgZXJyb3JcclxuICAgIC8vICAgfVxyXG4gICAgLy8gfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMaXN0cyBhbGwgdGhlIGZpbGVzIHdpdGhpbiBhIGJ1Y2tldC5cclxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSBmb2xkZXIgcGF0aC5cclxuICAgICAqL1xyXG4gICAgbGlzdChwYXRoLCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHkgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9TRUFSQ0hfT1BUSU9OUyksIG9wdGlvbnMpLCB7IHByZWZpeDogcGF0aCB8fCAnJyB9KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCBwb3N0KHRoaXMuZmV0Y2gsIGAke3RoaXMudXJsfS9vYmplY3QvbGlzdC8ke3RoaXMuYnVja2V0SWR9YCwgYm9keSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSwgcGFyYW1ldGVycyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhLCBlcnJvcjogbnVsbCB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZW5jb2RlTWV0YWRhdGEobWV0YWRhdGEpIHtcclxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkobWV0YWRhdGEpO1xyXG4gICAgfVxyXG4gICAgdG9CYXNlNjQoZGF0YSkge1xyXG4gICAgICAgIGlmICh0eXBlb2YgQnVmZmVyICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oZGF0YSkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYnRvYShkYXRhKTtcclxuICAgIH1cclxuICAgIF9nZXRGaW5hbFBhdGgocGF0aCkge1xyXG4gICAgICAgIHJldHVybiBgJHt0aGlzLmJ1Y2tldElkfS8ke3BhdGh9YDtcclxuICAgIH1cclxuICAgIF9yZW1vdmVFbXB0eUZvbGRlcnMocGF0aCkge1xyXG4gICAgICAgIHJldHVybiBwYXRoLnJlcGxhY2UoL15cXC98XFwvJC9nLCAnJykucmVwbGFjZSgvXFwvKy9nLCAnLycpO1xyXG4gICAgfVxyXG4gICAgdHJhbnNmb3JtT3B0c1RvUXVlcnlTdHJpbmcodHJhbnNmb3JtKSB7XHJcbiAgICAgICAgY29uc3QgcGFyYW1zID0gW107XHJcbiAgICAgICAgaWYgKHRyYW5zZm9ybS53aWR0aCkge1xyXG4gICAgICAgICAgICBwYXJhbXMucHVzaChgd2lkdGg9JHt0cmFuc2Zvcm0ud2lkdGh9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0cmFuc2Zvcm0uaGVpZ2h0KSB7XHJcbiAgICAgICAgICAgIHBhcmFtcy5wdXNoKGBoZWlnaHQ9JHt0cmFuc2Zvcm0uaGVpZ2h0fWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodHJhbnNmb3JtLnJlc2l6ZSkge1xyXG4gICAgICAgICAgICBwYXJhbXMucHVzaChgcmVzaXplPSR7dHJhbnNmb3JtLnJlc2l6ZX1gKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRyYW5zZm9ybS5mb3JtYXQpIHtcclxuICAgICAgICAgICAgcGFyYW1zLnB1c2goYGZvcm1hdD0ke3RyYW5zZm9ybS5mb3JtYXR9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0cmFuc2Zvcm0ucXVhbGl0eSkge1xyXG4gICAgICAgICAgICBwYXJhbXMucHVzaChgcXVhbGl0eT0ke3RyYW5zZm9ybS5xdWFsaXR5fWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGFyYW1zLmpvaW4oJyYnKTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdG9yYWdlRmlsZUFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SupabaseClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @supabase/functions-js */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/postgrest-js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/realtime-js */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\");\n/* harmony import */ var _supabase_storage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @supabase/storage-js */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/SupabaseAuthClient */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Supabase Client.\r\n *\r\n * An isomorphic Javascript client for interacting with Postgres.\r\n */\r\nclass SupabaseClient {\r\n    /**\r\n     * Create a new client for use in the browser.\r\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\r\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\r\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\r\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\r\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\r\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\r\n     * @param options.realtime Options passed along to realtime-js constructor.\r\n     * @param options.global.fetch A custom fetch implementation.\r\n     * @param options.global.headers Any additional headers to send with each network request.\r\n     */\r\n    constructor(supabaseUrl, supabaseKey, options) {\r\n        var _a, _b, _c;\r\n        this.supabaseUrl = supabaseUrl;\r\n        this.supabaseKey = supabaseKey;\r\n        if (!supabaseUrl)\r\n            throw new Error('supabaseUrl is required.');\r\n        if (!supabaseKey)\r\n            throw new Error('supabaseKey is required.');\r\n        const _supabaseUrl = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.ensureTrailingSlash)(supabaseUrl);\r\n        const baseUrl = new URL(_supabaseUrl);\r\n        this.realtimeUrl = new URL('realtime/v1', baseUrl);\r\n        this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\r\n        this.authUrl = new URL('auth/v1', baseUrl);\r\n        this.storageUrl = new URL('storage/v1', baseUrl);\r\n        this.functionsUrl = new URL('functions/v1', baseUrl);\r\n        // default storage key uses the supabase project ref as a namespace\r\n        const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\r\n        const DEFAULTS = {\r\n            db: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_DB_OPTIONS,\r\n            realtime: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_REALTIME_OPTIONS,\r\n            auth: Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\r\n            global: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_GLOBAL_OPTIONS,\r\n        };\r\n        const settings = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\r\n        this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\r\n        this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\r\n        if (!settings.accessToken) {\r\n            this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\r\n        }\r\n        else {\r\n            this.accessToken = settings.accessToken;\r\n            this.auth = new Proxy({}, {\r\n                get: (_, prop) => {\r\n                    throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\r\n                },\r\n            });\r\n        }\r\n        this.fetch = (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_4__.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\r\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers, accessToken: this._getAccessToken.bind(this) }, settings.realtime));\r\n        this.rest = new _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__.PostgrestClient(new URL('rest/v1', baseUrl).href, {\r\n            headers: this.headers,\r\n            schema: settings.db.schema,\r\n            fetch: this.fetch,\r\n        });\r\n        if (!settings.accessToken) {\r\n            this._listenForAuthEvents();\r\n        }\r\n    }\r\n    /**\r\n     * Supabase Functions allows you to deploy and invoke edge functions.\r\n     */\r\n    get functions() {\r\n        return new _supabase_functions_js__WEBPACK_IMPORTED_MODULE_5__.FunctionsClient(this.functionsUrl.href, {\r\n            headers: this.headers,\r\n            customFetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\r\n     */\r\n    get storage() {\r\n        return new _supabase_storage_js__WEBPACK_IMPORTED_MODULE_6__.StorageClient(this.storageUrl.href, this.headers, this.fetch);\r\n    }\r\n    /**\r\n     * Perform a query on a table or a view.\r\n     *\r\n     * @param relation - The table or view name to query\r\n     */\r\n    from(relation) {\r\n        return this.rest.from(relation);\r\n    }\r\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\r\n    /**\r\n     * Select a schema to query or perform an function (rpc) call.\r\n     *\r\n     * The schema needs to be on the list of exposed schemas inside Supabase.\r\n     *\r\n     * @param schema - The schema to query\r\n     */\r\n    schema(schema) {\r\n        return this.rest.schema(schema);\r\n    }\r\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\r\n    /**\r\n     * Perform a function call.\r\n     *\r\n     * @param fn - The function name to call\r\n     * @param args - The arguments to pass to the function call\r\n     * @param options - Named parameters\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     * @param options.get - When set to `true`, the function will be called with\r\n     * read-only access mode.\r\n     * @param options.count - Count algorithm to use to count rows returned by the\r\n     * function. Only applicable for [set-returning\r\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    rpc(fn, args = {}, options = {}) {\r\n        return this.rest.rpc(fn, args, options);\r\n    }\r\n    /**\r\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\r\n     *\r\n     * @param {string} name - The name of the Realtime channel.\r\n     * @param {Object} opts - The options to pass to the Realtime channel.\r\n     *\r\n     */\r\n    channel(name, opts = { config: {} }) {\r\n        return this.realtime.channel(name, opts);\r\n    }\r\n    /**\r\n     * Returns all Realtime channels.\r\n     */\r\n    getChannels() {\r\n        return this.realtime.getChannels();\r\n    }\r\n    /**\r\n     * Unsubscribes and removes Realtime channel from Realtime client.\r\n     *\r\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\r\n     *\r\n     */\r\n    removeChannel(channel) {\r\n        return this.realtime.removeChannel(channel);\r\n    }\r\n    /**\r\n     * Unsubscribes and removes all Realtime channels from Realtime client.\r\n     */\r\n    removeAllChannels() {\r\n        return this.realtime.removeAllChannels();\r\n    }\r\n    _getAccessToken() {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.accessToken) {\r\n                return yield this.accessToken();\r\n            }\r\n            const { data } = yield this.auth.getSession();\r\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\r\n        });\r\n    }\r\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, lock, debug, }, headers, fetch) {\r\n        const authHeaders = {\r\n            Authorization: `Bearer ${this.supabaseKey}`,\r\n            apikey: `${this.supabaseKey}`,\r\n        };\r\n        return new _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__.SupabaseAuthClient({\r\n            url: this.authUrl.href,\r\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\r\n            storageKey: storageKey,\r\n            autoRefreshToken,\r\n            persistSession,\r\n            detectSessionInUrl,\r\n            storage,\r\n            flowType,\r\n            lock,\r\n            debug,\r\n            fetch,\r\n            // auth checks if there is a custom authorizaiton header using this flag\r\n            // so it knows whether to return an error when getUser is called with no session\r\n            hasCustomAuthorizationHeader: 'Authorization' in this.headers,\r\n        });\r\n    }\r\n    _initRealtimeClient(options) {\r\n        return new _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\r\n    }\r\n    _listenForAuthEvents() {\r\n        let data = this.auth.onAuthStateChange((event, session) => {\r\n            this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\r\n        });\r\n        return data;\r\n    }\r\n    _handleTokenChanged(event, source, token) {\r\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\r\n            this.changedAccessToken !== token) {\r\n            this.changedAccessToken = token;\r\n        }\r\n        else if (event === 'SIGNED_OUT') {\r\n            this.realtime.setAuth();\r\n            if (source == 'STORAGE')\r\n                this.auth.signOut();\r\n            this.changedAccessToken = undefined;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=SupabaseClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthAdminApi: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthAdminApi),\n/* harmony export */   AuthApiError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthApiError),\n/* harmony export */   AuthClient: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthClient),\n/* harmony export */   AuthError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthError),\n/* harmony export */   AuthImplicitGrantRedirectError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthImplicitGrantRedirectError),\n/* harmony export */   AuthInvalidCredentialsError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidCredentialsError),\n/* harmony export */   AuthInvalidJwtError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidJwtError),\n/* harmony export */   AuthInvalidTokenResponseError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidTokenResponseError),\n/* harmony export */   AuthPKCEGrantCodeExchangeError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthPKCEGrantCodeExchangeError),\n/* harmony export */   AuthRetryableFetchError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthRetryableFetchError),\n/* harmony export */   AuthSessionMissingError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthSessionMissingError),\n/* harmony export */   AuthUnknownError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthUnknownError),\n/* harmony export */   AuthWeakPasswordError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthWeakPasswordError),\n/* harmony export */   CustomAuthError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.CustomAuthError),\n/* harmony export */   FunctionRegion: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionRegion),\n/* harmony export */   FunctionsError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsError),\n/* harmony export */   FunctionsFetchError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsFetchError),\n/* harmony export */   FunctionsHttpError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsHttpError),\n/* harmony export */   FunctionsRelayError: () => (/* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsRelayError),\n/* harmony export */   GoTrueAdminApi: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.GoTrueAdminApi),\n/* harmony export */   GoTrueClient: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.GoTrueClient),\n/* harmony export */   NavigatorLockAcquireTimeoutError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.NavigatorLockAcquireTimeoutError),\n/* harmony export */   PostgrestError: () => (/* reexport safe */ _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__.PostgrestError),\n/* harmony export */   REALTIME_CHANNEL_STATES: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_CHANNEL_STATES),\n/* harmony export */   REALTIME_LISTEN_TYPES: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_LISTEN_TYPES),\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT),\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_PRESENCE_LISTEN_EVENTS),\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_SUBSCRIBE_STATES),\n/* harmony export */   RealtimeChannel: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimeChannel),\n/* harmony export */   RealtimeClient: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimeClient),\n/* harmony export */   RealtimePresence: () => (/* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimePresence),\n/* harmony export */   SIGN_OUT_SCOPES: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.SIGN_OUT_SCOPES),\n/* harmony export */   SupabaseClient: () => (/* reexport safe */ _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   isAuthApiError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthApiError),\n/* harmony export */   isAuthError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthError),\n/* harmony export */   isAuthImplicitGrantRedirectError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthImplicitGrantRedirectError),\n/* harmony export */   isAuthRetryableFetchError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthRetryableFetchError),\n/* harmony export */   isAuthSessionMissingError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthSessionMissingError),\n/* harmony export */   isAuthWeakPasswordError: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthWeakPasswordError),\n/* harmony export */   lockInternals: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.lockInternals),\n/* harmony export */   navigatorLock: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.navigatorLock),\n/* harmony export */   processLock: () => (/* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.processLock)\n/* harmony export */ });\n/* harmony import */ var _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SupabaseClient */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\");\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/postgrest-js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/functions-js */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/realtime-js */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a new Supabase Client.\r\n */\r\nconst createClient = (supabaseUrl, supabaseKey, options) => {\r\n    return new _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"](supabaseUrl, supabaseKey, options);\r\n};\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ1o7QUFDdUI7QUFDOEU7QUFDakc7QUFDdUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ087QUFDUCxlQUFlLHVEQUFjO0FBQzdCO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3VwYWJhc2UtanNcXGRpc3RcXG1vZHVsZVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN1cGFiYXNlQ2xpZW50IGZyb20gJy4vU3VwYWJhc2VDbGllbnQnO1xyXG5leHBvcnQgKiBmcm9tICdAc3VwYWJhc2UvYXV0aC1qcyc7XHJcbmV4cG9ydCB7IFBvc3RncmVzdEVycm9yLCB9IGZyb20gJ0BzdXBhYmFzZS9wb3N0Z3Jlc3QtanMnO1xyXG5leHBvcnQgeyBGdW5jdGlvbnNIdHRwRXJyb3IsIEZ1bmN0aW9uc0ZldGNoRXJyb3IsIEZ1bmN0aW9uc1JlbGF5RXJyb3IsIEZ1bmN0aW9uc0Vycm9yLCBGdW5jdGlvblJlZ2lvbiwgfSBmcm9tICdAc3VwYWJhc2UvZnVuY3Rpb25zLWpzJztcclxuZXhwb3J0ICogZnJvbSAnQHN1cGFiYXNlL3JlYWx0aW1lLWpzJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBTdXBhYmFzZUNsaWVudCB9IGZyb20gJy4vU3VwYWJhc2VDbGllbnQnO1xyXG4vKipcclxuICogQ3JlYXRlcyBhIG5ldyBTdXBhYmFzZSBDbGllbnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY3JlYXRlQ2xpZW50ID0gKHN1cGFiYXNlVXJsLCBzdXBhYmFzZUtleSwgb3B0aW9ucykgPT4ge1xyXG4gICAgcmV0dXJuIG5ldyBTdXBhYmFzZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXksIG9wdGlvbnMpO1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseAuthClient: () => (/* binding */ SupabaseAuthClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\");\n\r\nclass SupabaseAuthClient extends _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthClient {\r\n    constructor(options) {\r\n        super(options);\r\n    }\r\n}\r\n//# sourceMappingURL=SupabaseAuthClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL1N1cGFiYXNlQXV0aENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUN4QyxpQ0FBaUMseURBQVU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdXBhYmFzZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXFN1cGFiYXNlQXV0aENsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdXRoQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL2F1dGgtanMnO1xyXG5leHBvcnQgY2xhc3MgU3VwYWJhc2VBdXRoQ2xpZW50IGV4dGVuZHMgQXV0aENsaWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VwYWJhc2VBdXRoQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_AUTH_OPTIONS: () => (/* binding */ DEFAULT_AUTH_OPTIONS),\n/* harmony export */   DEFAULT_DB_OPTIONS: () => (/* binding */ DEFAULT_DB_OPTIONS),\n/* harmony export */   DEFAULT_GLOBAL_OPTIONS: () => (/* binding */ DEFAULT_GLOBAL_OPTIONS),\n/* harmony export */   DEFAULT_HEADERS: () => (/* binding */ DEFAULT_HEADERS),\n/* harmony export */   DEFAULT_REALTIME_OPTIONS: () => (/* binding */ DEFAULT_REALTIME_OPTIONS)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js\");\n\r\nlet JS_ENV = '';\r\n// @ts-ignore\r\nif (typeof Deno !== 'undefined') {\r\n    JS_ENV = 'deno';\r\n}\r\nelse if (typeof document !== 'undefined') {\r\n    JS_ENV = 'web';\r\n}\r\nelse if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\r\n    JS_ENV = 'react-native';\r\n}\r\nelse {\r\n    JS_ENV = 'node';\r\n}\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst DEFAULT_GLOBAL_OPTIONS = {\r\n    headers: DEFAULT_HEADERS,\r\n};\r\nconst DEFAULT_DB_OPTIONS = {\r\n    schema: 'public',\r\n};\r\nconst DEFAULT_AUTH_OPTIONS = {\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: true,\r\n    flowType: 'implicit',\r\n};\r\nconst DEFAULT_REALTIME_OPTIONS = {};\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQixnQ0FBZ0MsT0FBTyxHQUFHLDZDQUFPLENBQUM7QUFDNUU7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdXBhYmFzZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcclxubGV0IEpTX0VOViA9ICcnO1xyXG4vLyBAdHMtaWdub3JlXHJcbmlmICh0eXBlb2YgRGVubyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIEpTX0VOViA9ICdkZW5vJztcclxufVxyXG5lbHNlIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBKU19FTlYgPSAnd2ViJztcclxufVxyXG5lbHNlIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xyXG4gICAgSlNfRU5WID0gJ3JlYWN0LW5hdGl2ZSc7XHJcbn1cclxuZWxzZSB7XHJcbiAgICBKU19FTlYgPSAnbm9kZSc7XHJcbn1cclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgc3VwYWJhc2UtanMtJHtKU19FTlZ9LyR7dmVyc2lvbn1gIH07XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0dMT0JBTF9PUFRJT05TID0ge1xyXG4gICAgaGVhZGVyczogREVGQVVMVF9IRUFERVJTLFxyXG59O1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9EQl9PUFRJT05TID0ge1xyXG4gICAgc2NoZW1hOiAncHVibGljJyxcclxufTtcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQVVUSF9PUFRJT05TID0ge1xyXG4gICAgYXV0b1JlZnJlc2hUb2tlbjogdHJ1ZSxcclxuICAgIHBlcnNpc3RTZXNzaW9uOiB0cnVlLFxyXG4gICAgZGV0ZWN0U2Vzc2lvbkluVXJsOiB0cnVlLFxyXG4gICAgZmxvd1R5cGU6ICdpbXBsaWNpdCcsXHJcbn07XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFQUxUSU1FX09QVElPTlMgPSB7fTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchWithAuth: () => (/* binding */ fetchWithAuth),\n/* harmony export */   resolveFetch: () => (/* binding */ resolveFetch),\n/* harmony export */   resolveHeadersConstructor: () => (/* binding */ resolveHeadersConstructor)\n/* harmony export */ });\n/* harmony import */ var _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n// @ts-ignore\r\n\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst resolveHeadersConstructor = () => {\r\n    if (typeof Headers === 'undefined') {\r\n        return _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers;\r\n    }\r\n    return Headers;\r\n};\r\nconst fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\r\n    const fetch = resolveFetch(customFetch);\r\n    const HeadersConstructor = resolveHeadersConstructor();\r\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\r\n        var _a;\r\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\r\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\r\n        if (!headers.has('apikey')) {\r\n            headers.set('apikey', supabaseKey);\r\n        }\r\n        if (!headers.has('Authorization')) {\r\n            headers.set('Authorization', `Bearer ${accessToken}`);\r\n        }\r\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\r\n    });\r\n};\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUM4RTtBQUN2RTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNERBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGVBQWUseURBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsWUFBWTtBQUMvRDtBQUNBLDBEQUEwRCxXQUFXLFNBQVM7QUFDOUUsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3VwYWJhc2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFxmZXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbi8vIEB0cy1pZ25vcmVcclxuaW1wb3J0IG5vZGVGZXRjaCwgeyBIZWFkZXJzIGFzIE5vZGVGZXRjaEhlYWRlcnMgfSBmcm9tICdAc3VwYWJhc2Uvbm9kZS1mZXRjaCc7XHJcbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcclxuICAgIGxldCBfZmV0Y2g7XHJcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcclxuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBfZmV0Y2ggPSBub2RlRmV0Y2g7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBfZmV0Y2ggPSBmZXRjaDtcclxuICAgIH1cclxuICAgIHJldHVybiAoLi4uYXJncykgPT4gX2ZldGNoKC4uLmFyZ3MpO1xyXG59O1xyXG5leHBvcnQgY29uc3QgcmVzb2x2ZUhlYWRlcnNDb25zdHJ1Y3RvciA9ICgpID0+IHtcclxuICAgIGlmICh0eXBlb2YgSGVhZGVycyA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICByZXR1cm4gTm9kZUZldGNoSGVhZGVycztcclxuICAgIH1cclxuICAgIHJldHVybiBIZWFkZXJzO1xyXG59O1xyXG5leHBvcnQgY29uc3QgZmV0Y2hXaXRoQXV0aCA9IChzdXBhYmFzZUtleSwgZ2V0QWNjZXNzVG9rZW4sIGN1c3RvbUZldGNoKSA9PiB7XHJcbiAgICBjb25zdCBmZXRjaCA9IHJlc29sdmVGZXRjaChjdXN0b21GZXRjaCk7XHJcbiAgICBjb25zdCBIZWFkZXJzQ29uc3RydWN0b3IgPSByZXNvbHZlSGVhZGVyc0NvbnN0cnVjdG9yKCk7XHJcbiAgICByZXR1cm4gKGlucHV0LCBpbml0KSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgY29uc3QgYWNjZXNzVG9rZW4gPSAoX2EgPSAoeWllbGQgZ2V0QWNjZXNzVG9rZW4oKSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHN1cGFiYXNlS2V5O1xyXG4gICAgICAgIGxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnNDb25zdHJ1Y3Rvcihpbml0ID09PSBudWxsIHx8IGluaXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGluaXQuaGVhZGVycyk7XHJcbiAgICAgICAgaWYgKCFoZWFkZXJzLmhhcygnYXBpa2V5JykpIHtcclxuICAgICAgICAgICAgaGVhZGVycy5zZXQoJ2FwaWtleScsIHN1cGFiYXNlS2V5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFoZWFkZXJzLmhhcygnQXV0aG9yaXphdGlvbicpKSB7XHJcbiAgICAgICAgICAgIGhlYWRlcnMuc2V0KCdBdXRob3JpemF0aW9uJywgYEJlYXJlciAke2FjY2Vzc1Rva2VufWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmV0Y2goaW5wdXQsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgaW5pdCksIHsgaGVhZGVycyB9KSk7XHJcbiAgICB9KTtcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySettingDefaults: () => (/* binding */ applySettingDefaults),\n/* harmony export */   ensureTrailingSlash: () => (/* binding */ ensureTrailingSlash),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   uuid: () => (/* binding */ uuid)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nfunction uuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\nfunction ensureTrailingSlash(url) {\r\n    return url.endsWith('/') ? url : url + '/';\r\n}\r\nconst isBrowser = () => typeof window !== 'undefined';\r\nfunction applySettingDefaults(options, defaults) {\r\n    var _a, _b;\r\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\r\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\r\n    const result = {\r\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\r\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\r\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\r\n        global: Object.assign(Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions), { headers: Object.assign(Object.assign({}, ((_a = DEFAULT_GLOBAL_OPTIONS === null || DEFAULT_GLOBAL_OPTIONS === void 0 ? void 0 : DEFAULT_GLOBAL_OPTIONS.headers) !== null && _a !== void 0 ? _a : {})), ((_b = globalOptions === null || globalOptions === void 0 ? void 0 : globalOptions.headers) !== null && _b !== void 0 ? _b : {})) }),\r\n        accessToken: () => __awaiter(this, void 0, void 0, function* () { return ''; }),\r\n    };\r\n    if (options.accessToken) {\r\n        result.accessToken = options.accessToken;\r\n    }\r\n    else {\r\n        // hack around Required<>\r\n        delete result.accessToken;\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0EsWUFBWSxzRkFBc0Y7QUFDbEcsWUFBWSwwSEFBMEg7QUFDdEk7QUFDQSwwQ0FBMEM7QUFDMUMsNENBQTRDO0FBQzVDLGdEQUFnRDtBQUNoRCw0REFBNEQsNkNBQTZDLHVDQUF1Qyw0SkFBNEosbUlBQW1JLElBQUk7QUFDbmIsMEVBQTBFLFlBQVk7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHN1cGFiYXNlXFxzdXBhYmFzZS1qc1xcZGlzdFxcbW9kdWxlXFxsaWJcXGhlbHBlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG5leHBvcnQgZnVuY3Rpb24gdXVpZCgpIHtcclxuICAgIHJldHVybiAneHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4Jy5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uIChjKSB7XHJcbiAgICAgICAgdmFyIHIgPSAoTWF0aC5yYW5kb20oKSAqIDE2KSB8IDAsIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MykgfCAweDg7XHJcbiAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGVuc3VyZVRyYWlsaW5nU2xhc2godXJsKSB7XHJcbiAgICByZXR1cm4gdXJsLmVuZHNXaXRoKCcvJykgPyB1cmwgOiB1cmwgKyAnLyc7XHJcbn1cclxuZXhwb3J0IGNvbnN0IGlzQnJvd3NlciA9ICgpID0+IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnO1xyXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlTZXR0aW5nRGVmYXVsdHMob3B0aW9ucywgZGVmYXVsdHMpIHtcclxuICAgIHZhciBfYSwgX2I7XHJcbiAgICBjb25zdCB7IGRiOiBkYk9wdGlvbnMsIGF1dGg6IGF1dGhPcHRpb25zLCByZWFsdGltZTogcmVhbHRpbWVPcHRpb25zLCBnbG9iYWw6IGdsb2JhbE9wdGlvbnMsIH0gPSBvcHRpb25zO1xyXG4gICAgY29uc3QgeyBkYjogREVGQVVMVF9EQl9PUFRJT05TLCBhdXRoOiBERUZBVUxUX0FVVEhfT1BUSU9OUywgcmVhbHRpbWU6IERFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUywgZ2xvYmFsOiBERUZBVUxUX0dMT0JBTF9PUFRJT05TLCB9ID0gZGVmYXVsdHM7XHJcbiAgICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICAgICAgZGI6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9EQl9PUFRJT05TKSwgZGJPcHRpb25zKSxcclxuICAgICAgICBhdXRoOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfQVVUSF9PUFRJT05TKSwgYXV0aE9wdGlvbnMpLFxyXG4gICAgICAgIHJlYWx0aW1lOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUyksIHJlYWx0aW1lT3B0aW9ucyksXHJcbiAgICAgICAgZ2xvYmFsOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9HTE9CQUxfT1BUSU9OUyksIGdsb2JhbE9wdGlvbnMpLCB7IGhlYWRlcnM6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgKChfYSA9IERFRkFVTFRfR0xPQkFMX09QVElPTlMgPT09IG51bGwgfHwgREVGQVVMVF9HTE9CQUxfT1BUSU9OUyA9PT0gdm9pZCAwID8gdm9pZCAwIDogREVGQVVMVF9HTE9CQUxfT1BUSU9OUy5oZWFkZXJzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7fSkpLCAoKF9iID0gZ2xvYmFsT3B0aW9ucyA9PT0gbnVsbCB8fCBnbG9iYWxPcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWxPcHRpb25zLmhlYWRlcnMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHt9KSkgfSksXHJcbiAgICAgICAgYWNjZXNzVG9rZW46ICgpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICcnOyB9KSxcclxuICAgIH07XHJcbiAgICBpZiAob3B0aW9ucy5hY2Nlc3NUb2tlbikge1xyXG4gICAgICAgIHJlc3VsdC5hY2Nlc3NUb2tlbiA9IG9wdGlvbnMuYWNjZXNzVG9rZW47XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICAvLyBoYWNrIGFyb3VuZCBSZXF1aXJlZDw+XHJcbiAgICAgICAgZGVsZXRlIHJlc3VsdC5hY2Nlc3NUb2tlbjtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = '2.50.0';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEBzdXBhYmFzZVxcc3VwYWJhc2UtanNcXGRpc3RcXG1vZHVsZVxcbGliXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuNTAuMCc7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/focusManager.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/focusManager.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: () => (/* binding */ FocusManager),\n/* harmony export */   focusManager: () => (/* binding */ focusManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/focusManager.ts\r\n\r\n\r\nvar FocusManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\r\n  #focused;\r\n  #cleanup;\r\n  #setup;\r\n  constructor() {\r\n    super();\r\n    this.#setup = (onFocus) => {\r\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\r\n        const listener = () => onFocus();\r\n        window.addEventListener(\"visibilitychange\", listener, false);\r\n        return () => {\r\n          window.removeEventListener(\"visibilitychange\", listener);\r\n        };\r\n      }\r\n      return;\r\n    };\r\n  }\r\n  onSubscribe() {\r\n    if (!this.#cleanup) {\r\n      this.setEventListener(this.#setup);\r\n    }\r\n  }\r\n  onUnsubscribe() {\r\n    if (!this.hasListeners()) {\r\n      this.#cleanup?.();\r\n      this.#cleanup = void 0;\r\n    }\r\n  }\r\n  setEventListener(setup) {\r\n    this.#setup = setup;\r\n    this.#cleanup?.();\r\n    this.#cleanup = setup((focused) => {\r\n      if (typeof focused === \"boolean\") {\r\n        this.setFocused(focused);\r\n      } else {\r\n        this.onFocus();\r\n      }\r\n    });\r\n  }\r\n  setFocused(focused) {\r\n    const changed = this.#focused !== focused;\r\n    if (changed) {\r\n      this.#focused = focused;\r\n      this.onFocus();\r\n    }\r\n  }\r\n  onFocus() {\r\n    const isFocused = this.isFocused();\r\n    this.listeners.forEach((listener) => {\r\n      listener(isFocused);\r\n    });\r\n  }\r\n  isFocused() {\r\n    if (typeof this.#focused === \"boolean\") {\r\n      return this.#focused;\r\n    }\r\n    return globalThis.document?.visibilityState !== \"hidden\";\r\n  }\r\n};\r\nvar focusManager = new FocusManager();\r\n\r\n//# sourceMappingURL=focusManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vZm9jdXNNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNYO0FBQ3RDLGlDQUFpQywwREFBWTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLCtDQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHRhbnN0YWNrXFxxdWVyeS1jb3JlXFxidWlsZFxcbW9kZXJuXFxmb2N1c01hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2ZvY3VzTWFuYWdlci50c1xyXG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUuanNcIjtcclxuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xyXG52YXIgRm9jdXNNYW5hZ2VyID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xyXG4gICNmb2N1c2VkO1xyXG4gICNjbGVhbnVwO1xyXG4gICNzZXR1cDtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLiNzZXR1cCA9IChvbkZvY3VzKSA9PiB7XHJcbiAgICAgIGlmICghaXNTZXJ2ZXIgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcclxuICAgICAgICBjb25zdCBsaXN0ZW5lciA9ICgpID0+IG9uRm9jdXMoKTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgbGlzdGVuZXIsIGZhbHNlKTtcclxuICAgICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIGxpc3RlbmVyKTtcclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybjtcclxuICAgIH07XHJcbiAgfVxyXG4gIG9uU3Vic2NyaWJlKCkge1xyXG4gICAgaWYgKCF0aGlzLiNjbGVhbnVwKSB7XHJcbiAgICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcih0aGlzLiNzZXR1cCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIG9uVW5zdWJzY3JpYmUoKSB7XHJcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcclxuICAgICAgdGhpcy4jY2xlYW51cD8uKCk7XHJcbiAgICAgIHRoaXMuI2NsZWFudXAgPSB2b2lkIDA7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHNldEV2ZW50TGlzdGVuZXIoc2V0dXApIHtcclxuICAgIHRoaXMuI3NldHVwID0gc2V0dXA7XHJcbiAgICB0aGlzLiNjbGVhbnVwPy4oKTtcclxuICAgIHRoaXMuI2NsZWFudXAgPSBzZXR1cCgoZm9jdXNlZCkgPT4ge1xyXG4gICAgICBpZiAodHlwZW9mIGZvY3VzZWQgPT09IFwiYm9vbGVhblwiKSB7XHJcbiAgICAgICAgdGhpcy5zZXRGb2N1c2VkKGZvY3VzZWQpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMub25Gb2N1cygpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgc2V0Rm9jdXNlZChmb2N1c2VkKSB7XHJcbiAgICBjb25zdCBjaGFuZ2VkID0gdGhpcy4jZm9jdXNlZCAhPT0gZm9jdXNlZDtcclxuICAgIGlmIChjaGFuZ2VkKSB7XHJcbiAgICAgIHRoaXMuI2ZvY3VzZWQgPSBmb2N1c2VkO1xyXG4gICAgICB0aGlzLm9uRm9jdXMoKTtcclxuICAgIH1cclxuICB9XHJcbiAgb25Gb2N1cygpIHtcclxuICAgIGNvbnN0IGlzRm9jdXNlZCA9IHRoaXMuaXNGb2N1c2VkKCk7XHJcbiAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xyXG4gICAgICBsaXN0ZW5lcihpc0ZvY3VzZWQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGlzRm9jdXNlZCgpIHtcclxuICAgIGlmICh0eXBlb2YgdGhpcy4jZm9jdXNlZCA9PT0gXCJib29sZWFuXCIpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuI2ZvY3VzZWQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZ2xvYmFsVGhpcy5kb2N1bWVudD8udmlzaWJpbGl0eVN0YXRlICE9PSBcImhpZGRlblwiO1xyXG4gIH1cclxufTtcclxudmFyIGZvY3VzTWFuYWdlciA9IG5ldyBGb2N1c01hbmFnZXIoKTtcclxuZXhwb3J0IHtcclxuICBGb2N1c01hbmFnZXIsXHJcbiAgZm9jdXNNYW5hZ2VyXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvY3VzTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNextPage: () => (/* binding */ hasNextPage),\n/* harmony export */   hasPreviousPage: () => (/* binding */ hasPreviousPage),\n/* harmony export */   infiniteQueryBehavior: () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/infiniteQueryBehavior.ts\r\n\r\nfunction infiniteQueryBehavior(pages) {\r\n  return {\r\n    onFetch: (context, query) => {\r\n      const options = context.options;\r\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\r\n      const oldPages = context.state.data?.pages || [];\r\n      const oldPageParams = context.state.data?.pageParams || [];\r\n      let result = { pages: [], pageParams: [] };\r\n      let currentPage = 0;\r\n      const fetchFn = async () => {\r\n        let cancelled = false;\r\n        const addSignalProperty = (object) => {\r\n          Object.defineProperty(object, \"signal\", {\r\n            enumerable: true,\r\n            get: () => {\r\n              if (context.signal.aborted) {\r\n                cancelled = true;\r\n              } else {\r\n                context.signal.addEventListener(\"abort\", () => {\r\n                  cancelled = true;\r\n                });\r\n              }\r\n              return context.signal;\r\n            }\r\n          });\r\n        };\r\n        const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureQueryFn)(context.options, context.fetchOptions);\r\n        const fetchPage = async (data, param, previous) => {\r\n          if (cancelled) {\r\n            return Promise.reject();\r\n          }\r\n          if (param == null && data.pages.length) {\r\n            return Promise.resolve(data);\r\n          }\r\n          const createQueryFnContext = () => {\r\n            const queryFnContext2 = {\r\n              client: context.client,\r\n              queryKey: context.queryKey,\r\n              pageParam: param,\r\n              direction: previous ? \"backward\" : \"forward\",\r\n              meta: context.options.meta\r\n            };\r\n            addSignalProperty(queryFnContext2);\r\n            return queryFnContext2;\r\n          };\r\n          const queryFnContext = createQueryFnContext();\r\n          const page = await queryFn(queryFnContext);\r\n          const { maxPages } = context.options;\r\n          const addTo = previous ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToStart : _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToEnd;\r\n          return {\r\n            pages: addTo(data.pages, page, maxPages),\r\n            pageParams: addTo(data.pageParams, param, maxPages)\r\n          };\r\n        };\r\n        if (direction && oldPages.length) {\r\n          const previous = direction === \"backward\";\r\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\r\n          const oldData = {\r\n            pages: oldPages,\r\n            pageParams: oldPageParams\r\n          };\r\n          const param = pageParamFn(options, oldData);\r\n          result = await fetchPage(oldData, param, previous);\r\n        } else {\r\n          const remainingPages = pages ?? oldPages.length;\r\n          do {\r\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\r\n            if (currentPage > 0 && param == null) {\r\n              break;\r\n            }\r\n            result = await fetchPage(result, param);\r\n            currentPage++;\r\n          } while (currentPage < remainingPages);\r\n        }\r\n        return result;\r\n      };\r\n      if (context.options.persister) {\r\n        context.fetchFn = () => {\r\n          return context.options.persister?.(\r\n            fetchFn,\r\n            {\r\n              client: context.client,\r\n              queryKey: context.queryKey,\r\n              meta: context.options.meta,\r\n              signal: context.signal\r\n            },\r\n            query\r\n          );\r\n        };\r\n      } else {\r\n        context.fetchFn = fetchFn;\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction getNextPageParam(options, { pages, pageParams }) {\r\n  const lastIndex = pages.length - 1;\r\n  return pages.length > 0 ? options.getNextPageParam(\r\n    pages[lastIndex],\r\n    pages,\r\n    pageParams[lastIndex],\r\n    pageParams\r\n  ) : void 0;\r\n}\r\nfunction getPreviousPageParam(options, { pages, pageParams }) {\r\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\r\n}\r\nfunction hasNextPage(options, data) {\r\n  if (!data) return false;\r\n  return getNextPageParam(options, data) != null;\r\n}\r\nfunction hasPreviousPage(options, data) {\r\n  if (!data || !options.getPreviousPageParam) return false;\r\n  return getPreviousPageParam(options, data) != null;\r\n}\r\n\r\n//# sourceMappingURL=infiniteQueryBehavior.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vaW5maW5pdGVRdWVyeUJlaGF2aW9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNpRTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSx3QkFBd0Isd0RBQWE7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixXQUFXO0FBQzdCLG1DQUFtQyxpREFBVSxHQUFHLCtDQUFRO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsbUJBQW1CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsbUJBQW1CO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHRhbnN0YWNrXFxxdWVyeS1jb3JlXFxidWlsZFxcbW9kZXJuXFxpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZmluaXRlUXVlcnlCZWhhdmlvci50c1xyXG5pbXBvcnQgeyBhZGRUb0VuZCwgYWRkVG9TdGFydCwgZW5zdXJlUXVlcnlGbiB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XHJcbmZ1bmN0aW9uIGluZmluaXRlUXVlcnlCZWhhdmlvcihwYWdlcykge1xyXG4gIHJldHVybiB7XHJcbiAgICBvbkZldGNoOiAoY29udGV4dCwgcXVlcnkpID0+IHtcclxuICAgICAgY29uc3Qgb3B0aW9ucyA9IGNvbnRleHQub3B0aW9ucztcclxuICAgICAgY29uc3QgZGlyZWN0aW9uID0gY29udGV4dC5mZXRjaE9wdGlvbnM/Lm1ldGE/LmZldGNoTW9yZT8uZGlyZWN0aW9uO1xyXG4gICAgICBjb25zdCBvbGRQYWdlcyA9IGNvbnRleHQuc3RhdGUuZGF0YT8ucGFnZXMgfHwgW107XHJcbiAgICAgIGNvbnN0IG9sZFBhZ2VQYXJhbXMgPSBjb250ZXh0LnN0YXRlLmRhdGE/LnBhZ2VQYXJhbXMgfHwgW107XHJcbiAgICAgIGxldCByZXN1bHQgPSB7IHBhZ2VzOiBbXSwgcGFnZVBhcmFtczogW10gfTtcclxuICAgICAgbGV0IGN1cnJlbnRQYWdlID0gMDtcclxuICAgICAgY29uc3QgZmV0Y2hGbiA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XHJcbiAgICAgICAgY29uc3QgYWRkU2lnbmFsUHJvcGVydHkgPSAob2JqZWN0KSA9PiB7XHJcbiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBcInNpZ25hbFwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChjb250ZXh0LnNpZ25hbC5hYm9ydGVkKSB7XHJcbiAgICAgICAgICAgICAgICBjYW5jZWxsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZXh0LnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICBjYW5jZWxsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHJldHVybiBjb250ZXh0LnNpZ25hbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBxdWVyeUZuID0gZW5zdXJlUXVlcnlGbihjb250ZXh0Lm9wdGlvbnMsIGNvbnRleHQuZmV0Y2hPcHRpb25zKTtcclxuICAgICAgICBjb25zdCBmZXRjaFBhZ2UgPSBhc3luYyAoZGF0YSwgcGFyYW0sIHByZXZpb3VzKSA9PiB7XHJcbiAgICAgICAgICBpZiAoY2FuY2VsbGVkKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaWYgKHBhcmFtID09IG51bGwgJiYgZGF0YS5wYWdlcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNvbnN0IGNyZWF0ZVF1ZXJ5Rm5Db250ZXh0ID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBxdWVyeUZuQ29udGV4dDIgPSB7XHJcbiAgICAgICAgICAgICAgY2xpZW50OiBjb250ZXh0LmNsaWVudCxcclxuICAgICAgICAgICAgICBxdWVyeUtleTogY29udGV4dC5xdWVyeUtleSxcclxuICAgICAgICAgICAgICBwYWdlUGFyYW06IHBhcmFtLFxyXG4gICAgICAgICAgICAgIGRpcmVjdGlvbjogcHJldmlvdXMgPyBcImJhY2t3YXJkXCIgOiBcImZvcndhcmRcIixcclxuICAgICAgICAgICAgICBtZXRhOiBjb250ZXh0Lm9wdGlvbnMubWV0YVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBhZGRTaWduYWxQcm9wZXJ0eShxdWVyeUZuQ29udGV4dDIpO1xyXG4gICAgICAgICAgICByZXR1cm4gcXVlcnlGbkNvbnRleHQyO1xyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIGNvbnN0IHF1ZXJ5Rm5Db250ZXh0ID0gY3JlYXRlUXVlcnlGbkNvbnRleHQoKTtcclxuICAgICAgICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBxdWVyeUZuKHF1ZXJ5Rm5Db250ZXh0KTtcclxuICAgICAgICAgIGNvbnN0IHsgbWF4UGFnZXMgfSA9IGNvbnRleHQub3B0aW9ucztcclxuICAgICAgICAgIGNvbnN0IGFkZFRvID0gcHJldmlvdXMgPyBhZGRUb1N0YXJ0IDogYWRkVG9FbmQ7XHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwYWdlczogYWRkVG8oZGF0YS5wYWdlcywgcGFnZSwgbWF4UGFnZXMpLFxyXG4gICAgICAgICAgICBwYWdlUGFyYW1zOiBhZGRUbyhkYXRhLnBhZ2VQYXJhbXMsIHBhcmFtLCBtYXhQYWdlcylcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAoZGlyZWN0aW9uICYmIG9sZFBhZ2VzLmxlbmd0aCkge1xyXG4gICAgICAgICAgY29uc3QgcHJldmlvdXMgPSBkaXJlY3Rpb24gPT09IFwiYmFja3dhcmRcIjtcclxuICAgICAgICAgIGNvbnN0IHBhZ2VQYXJhbUZuID0gcHJldmlvdXMgPyBnZXRQcmV2aW91c1BhZ2VQYXJhbSA6IGdldE5leHRQYWdlUGFyYW07XHJcbiAgICAgICAgICBjb25zdCBvbGREYXRhID0ge1xyXG4gICAgICAgICAgICBwYWdlczogb2xkUGFnZXMsXHJcbiAgICAgICAgICAgIHBhZ2VQYXJhbXM6IG9sZFBhZ2VQYXJhbXNcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICBjb25zdCBwYXJhbSA9IHBhZ2VQYXJhbUZuKG9wdGlvbnMsIG9sZERhdGEpO1xyXG4gICAgICAgICAgcmVzdWx0ID0gYXdhaXQgZmV0Y2hQYWdlKG9sZERhdGEsIHBhcmFtLCBwcmV2aW91cyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnN0IHJlbWFpbmluZ1BhZ2VzID0gcGFnZXMgPz8gb2xkUGFnZXMubGVuZ3RoO1xyXG4gICAgICAgICAgZG8ge1xyXG4gICAgICAgICAgICBjb25zdCBwYXJhbSA9IGN1cnJlbnRQYWdlID09PSAwID8gb2xkUGFnZVBhcmFtc1swXSA/PyBvcHRpb25zLmluaXRpYWxQYWdlUGFyYW0gOiBnZXROZXh0UGFnZVBhcmFtKG9wdGlvbnMsIHJlc3VsdCk7XHJcbiAgICAgICAgICAgIGlmIChjdXJyZW50UGFnZSA+IDAgJiYgcGFyYW0gPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGF3YWl0IGZldGNoUGFnZShyZXN1bHQsIHBhcmFtKTtcclxuICAgICAgICAgICAgY3VycmVudFBhZ2UrKztcclxuICAgICAgICAgIH0gd2hpbGUgKGN1cnJlbnRQYWdlIDwgcmVtYWluaW5nUGFnZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICB9O1xyXG4gICAgICBpZiAoY29udGV4dC5vcHRpb25zLnBlcnNpc3Rlcikge1xyXG4gICAgICAgIGNvbnRleHQuZmV0Y2hGbiA9ICgpID0+IHtcclxuICAgICAgICAgIHJldHVybiBjb250ZXh0Lm9wdGlvbnMucGVyc2lzdGVyPy4oXHJcbiAgICAgICAgICAgIGZldGNoRm4sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBjbGllbnQ6IGNvbnRleHQuY2xpZW50LFxyXG4gICAgICAgICAgICAgIHF1ZXJ5S2V5OiBjb250ZXh0LnF1ZXJ5S2V5LFxyXG4gICAgICAgICAgICAgIG1ldGE6IGNvbnRleHQub3B0aW9ucy5tZXRhLFxyXG4gICAgICAgICAgICAgIHNpZ25hbDogY29udGV4dC5zaWduYWxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcXVlcnlcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb250ZXh0LmZldGNoRm4gPSBmZXRjaEZuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG5mdW5jdGlvbiBnZXROZXh0UGFnZVBhcmFtKG9wdGlvbnMsIHsgcGFnZXMsIHBhZ2VQYXJhbXMgfSkge1xyXG4gIGNvbnN0IGxhc3RJbmRleCA9IHBhZ2VzLmxlbmd0aCAtIDE7XHJcbiAgcmV0dXJuIHBhZ2VzLmxlbmd0aCA+IDAgPyBvcHRpb25zLmdldE5leHRQYWdlUGFyYW0oXHJcbiAgICBwYWdlc1tsYXN0SW5kZXhdLFxyXG4gICAgcGFnZXMsXHJcbiAgICBwYWdlUGFyYW1zW2xhc3RJbmRleF0sXHJcbiAgICBwYWdlUGFyYW1zXHJcbiAgKSA6IHZvaWQgMDtcclxufVxyXG5mdW5jdGlvbiBnZXRQcmV2aW91c1BhZ2VQYXJhbShvcHRpb25zLCB7IHBhZ2VzLCBwYWdlUGFyYW1zIH0pIHtcclxuICByZXR1cm4gcGFnZXMubGVuZ3RoID4gMCA/IG9wdGlvbnMuZ2V0UHJldmlvdXNQYWdlUGFyYW0/LihwYWdlc1swXSwgcGFnZXMsIHBhZ2VQYXJhbXNbMF0sIHBhZ2VQYXJhbXMpIDogdm9pZCAwO1xyXG59XHJcbmZ1bmN0aW9uIGhhc05leHRQYWdlKG9wdGlvbnMsIGRhdGEpIHtcclxuICBpZiAoIWRhdGEpIHJldHVybiBmYWxzZTtcclxuICByZXR1cm4gZ2V0TmV4dFBhZ2VQYXJhbShvcHRpb25zLCBkYXRhKSAhPSBudWxsO1xyXG59XHJcbmZ1bmN0aW9uIGhhc1ByZXZpb3VzUGFnZShvcHRpb25zLCBkYXRhKSB7XHJcbiAgaWYgKCFkYXRhIHx8ICFvcHRpb25zLmdldFByZXZpb3VzUGFnZVBhcmFtKSByZXR1cm4gZmFsc2U7XHJcbiAgcmV0dXJuIGdldFByZXZpb3VzUGFnZVBhcmFtKG9wdGlvbnMsIGRhdGEpICE9IG51bGw7XHJcbn1cclxuZXhwb3J0IHtcclxuICBoYXNOZXh0UGFnZSxcclxuICBoYXNQcmV2aW91c1BhZ2UsXHJcbiAgaW5maW5pdGVRdWVyeUJlaGF2aW9yXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZmluaXRlUXVlcnlCZWhhdmlvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/mutation.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   getDefaultState: () => (/* binding */ getDefaultState)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\n// src/mutation.ts\r\n\r\n\r\n\r\nvar Mutation = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\r\n  #observers;\r\n  #mutationCache;\r\n  #retryer;\r\n  constructor(config) {\r\n    super();\r\n    this.mutationId = config.mutationId;\r\n    this.#mutationCache = config.mutationCache;\r\n    this.#observers = [];\r\n    this.state = config.state || getDefaultState();\r\n    this.setOptions(config.options);\r\n    this.scheduleGc();\r\n  }\r\n  setOptions(options) {\r\n    this.options = options;\r\n    this.updateGcTime(this.options.gcTime);\r\n  }\r\n  get meta() {\r\n    return this.options.meta;\r\n  }\r\n  addObserver(observer) {\r\n    if (!this.#observers.includes(observer)) {\r\n      this.#observers.push(observer);\r\n      this.clearGcTimeout();\r\n      this.#mutationCache.notify({\r\n        type: \"observerAdded\",\r\n        mutation: this,\r\n        observer\r\n      });\r\n    }\r\n  }\r\n  removeObserver(observer) {\r\n    this.#observers = this.#observers.filter((x) => x !== observer);\r\n    this.scheduleGc();\r\n    this.#mutationCache.notify({\r\n      type: \"observerRemoved\",\r\n      mutation: this,\r\n      observer\r\n    });\r\n  }\r\n  optionalRemove() {\r\n    if (!this.#observers.length) {\r\n      if (this.state.status === \"pending\") {\r\n        this.scheduleGc();\r\n      } else {\r\n        this.#mutationCache.remove(this);\r\n      }\r\n    }\r\n  }\r\n  continue() {\r\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\r\n    this.execute(this.state.variables);\r\n  }\r\n  async execute(variables) {\r\n    const onContinue = () => {\r\n      this.#dispatch({ type: \"continue\" });\r\n    };\r\n    this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.createRetryer)({\r\n      fn: () => {\r\n        if (!this.options.mutationFn) {\r\n          return Promise.reject(new Error(\"No mutationFn found\"));\r\n        }\r\n        return this.options.mutationFn(variables);\r\n      },\r\n      onFail: (failureCount, error) => {\r\n        this.#dispatch({ type: \"failed\", failureCount, error });\r\n      },\r\n      onPause: () => {\r\n        this.#dispatch({ type: \"pause\" });\r\n      },\r\n      onContinue,\r\n      retry: this.options.retry ?? 0,\r\n      retryDelay: this.options.retryDelay,\r\n      networkMode: this.options.networkMode,\r\n      canRun: () => this.#mutationCache.canRun(this)\r\n    });\r\n    const restored = this.state.status === \"pending\";\r\n    const isPaused = !this.#retryer.canStart();\r\n    try {\r\n      if (restored) {\r\n        onContinue();\r\n      } else {\r\n        this.#dispatch({ type: \"pending\", variables, isPaused });\r\n        await this.#mutationCache.config.onMutate?.(\r\n          variables,\r\n          this\r\n        );\r\n        const context = await this.options.onMutate?.(variables);\r\n        if (context !== this.state.context) {\r\n          this.#dispatch({\r\n            type: \"pending\",\r\n            context,\r\n            variables,\r\n            isPaused\r\n          });\r\n        }\r\n      }\r\n      const data = await this.#retryer.start();\r\n      await this.#mutationCache.config.onSuccess?.(\r\n        data,\r\n        variables,\r\n        this.state.context,\r\n        this\r\n      );\r\n      await this.options.onSuccess?.(data, variables, this.state.context);\r\n      await this.#mutationCache.config.onSettled?.(\r\n        data,\r\n        null,\r\n        this.state.variables,\r\n        this.state.context,\r\n        this\r\n      );\r\n      await this.options.onSettled?.(data, null, variables, this.state.context);\r\n      this.#dispatch({ type: \"success\", data });\r\n      return data;\r\n    } catch (error) {\r\n      try {\r\n        await this.#mutationCache.config.onError?.(\r\n          error,\r\n          variables,\r\n          this.state.context,\r\n          this\r\n        );\r\n        await this.options.onError?.(\r\n          error,\r\n          variables,\r\n          this.state.context\r\n        );\r\n        await this.#mutationCache.config.onSettled?.(\r\n          void 0,\r\n          error,\r\n          this.state.variables,\r\n          this.state.context,\r\n          this\r\n        );\r\n        await this.options.onSettled?.(\r\n          void 0,\r\n          error,\r\n          variables,\r\n          this.state.context\r\n        );\r\n        throw error;\r\n      } finally {\r\n        this.#dispatch({ type: \"error\", error });\r\n      }\r\n    } finally {\r\n      this.#mutationCache.runNext(this);\r\n    }\r\n  }\r\n  #dispatch(action) {\r\n    const reducer = (state) => {\r\n      switch (action.type) {\r\n        case \"failed\":\r\n          return {\r\n            ...state,\r\n            failureCount: action.failureCount,\r\n            failureReason: action.error\r\n          };\r\n        case \"pause\":\r\n          return {\r\n            ...state,\r\n            isPaused: true\r\n          };\r\n        case \"continue\":\r\n          return {\r\n            ...state,\r\n            isPaused: false\r\n          };\r\n        case \"pending\":\r\n          return {\r\n            ...state,\r\n            context: action.context,\r\n            data: void 0,\r\n            failureCount: 0,\r\n            failureReason: null,\r\n            error: null,\r\n            isPaused: action.isPaused,\r\n            status: \"pending\",\r\n            variables: action.variables,\r\n            submittedAt: Date.now()\r\n          };\r\n        case \"success\":\r\n          return {\r\n            ...state,\r\n            data: action.data,\r\n            failureCount: 0,\r\n            failureReason: null,\r\n            error: null,\r\n            status: \"success\",\r\n            isPaused: false\r\n          };\r\n        case \"error\":\r\n          return {\r\n            ...state,\r\n            data: void 0,\r\n            error: action.error,\r\n            failureCount: state.failureCount + 1,\r\n            failureReason: action.error,\r\n            isPaused: false,\r\n            status: \"error\"\r\n          };\r\n      }\r\n    };\r\n    this.state = reducer(this.state);\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\r\n      this.#observers.forEach((observer) => {\r\n        observer.onMutationUpdate(action);\r\n      });\r\n      this.#mutationCache.notify({\r\n        mutation: this,\r\n        type: \"updated\",\r\n        action\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction getDefaultState() {\r\n  return {\r\n    context: void 0,\r\n    data: void 0,\r\n    error: null,\r\n    failureCount: 0,\r\n    failureReason: null,\r\n    isPaused: false,\r\n    status: \"idle\",\r\n    variables: void 0,\r\n    submittedAt: 0\r\n  };\r\n}\r\n\r\n//# sourceMappingURL=mutation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/mutation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutationCache.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/mutation.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/mutationCache.ts\r\n\r\n\r\n\r\n\r\nvar MutationCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\r\n  constructor(config = {}) {\r\n    super();\r\n    this.config = config;\r\n    this.#mutations = /* @__PURE__ */ new Set();\r\n    this.#scopes = /* @__PURE__ */ new Map();\r\n    this.#mutationId = 0;\r\n  }\r\n  #mutations;\r\n  #scopes;\r\n  #mutationId;\r\n  build(client, options, state) {\r\n    const mutation = new _mutation_js__WEBPACK_IMPORTED_MODULE_1__.Mutation({\r\n      mutationCache: this,\r\n      mutationId: ++this.#mutationId,\r\n      options: client.defaultMutationOptions(options),\r\n      state\r\n    });\r\n    this.add(mutation);\r\n    return mutation;\r\n  }\r\n  add(mutation) {\r\n    this.#mutations.add(mutation);\r\n    const scope = scopeFor(mutation);\r\n    if (typeof scope === \"string\") {\r\n      const scopedMutations = this.#scopes.get(scope);\r\n      if (scopedMutations) {\r\n        scopedMutations.push(mutation);\r\n      } else {\r\n        this.#scopes.set(scope, [mutation]);\r\n      }\r\n    }\r\n    this.notify({ type: \"added\", mutation });\r\n  }\r\n  remove(mutation) {\r\n    if (this.#mutations.delete(mutation)) {\r\n      const scope = scopeFor(mutation);\r\n      if (typeof scope === \"string\") {\r\n        const scopedMutations = this.#scopes.get(scope);\r\n        if (scopedMutations) {\r\n          if (scopedMutations.length > 1) {\r\n            const index = scopedMutations.indexOf(mutation);\r\n            if (index !== -1) {\r\n              scopedMutations.splice(index, 1);\r\n            }\r\n          } else if (scopedMutations[0] === mutation) {\r\n            this.#scopes.delete(scope);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.notify({ type: \"removed\", mutation });\r\n  }\r\n  canRun(mutation) {\r\n    const scope = scopeFor(mutation);\r\n    if (typeof scope === \"string\") {\r\n      const mutationsWithSameScope = this.#scopes.get(scope);\r\n      const firstPendingMutation = mutationsWithSameScope?.find(\r\n        (m) => m.state.status === \"pending\"\r\n      );\r\n      return !firstPendingMutation || firstPendingMutation === mutation;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  runNext(mutation) {\r\n    const scope = scopeFor(mutation);\r\n    if (typeof scope === \"string\") {\r\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\r\n      return foundMutation?.continue() ?? Promise.resolve();\r\n    } else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n  clear() {\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\r\n      this.#mutations.forEach((mutation) => {\r\n        this.notify({ type: \"removed\", mutation });\r\n      });\r\n      this.#mutations.clear();\r\n      this.#scopes.clear();\r\n    });\r\n  }\r\n  getAll() {\r\n    return Array.from(this.#mutations);\r\n  }\r\n  find(filters) {\r\n    const defaultedFilters = { exact: true, ...filters };\r\n    return this.getAll().find(\r\n      (mutation) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(defaultedFilters, mutation)\r\n    );\r\n  }\r\n  findAll(filters = {}) {\r\n    return this.getAll().filter((mutation) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\r\n  }\r\n  notify(event) {\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\r\n      this.listeners.forEach((listener) => {\r\n        listener(event);\r\n      });\r\n    });\r\n  }\r\n  resumePausedMutations() {\r\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\r\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(\r\n      () => Promise.all(\r\n        pausedMutations.map((mutation) => mutation.continue().catch(_utils_js__WEBPACK_IMPORTED_MODULE_3__.noop))\r\n      )\r\n    );\r\n  }\r\n};\r\nfunction scopeFor(mutation) {\r\n  return mutation.options.scope?.id;\r\n}\r\n\r\n//# sourceMappingURL=mutationCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vbXV0YXRpb25DYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ21EO0FBQ1Y7QUFDUTtBQUNBO0FBQ2pELGtDQUFrQywwREFBWTtBQUM5Qyx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsa0RBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyQkFBMkI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDREQUFhO0FBQ2pCO0FBQ0Esc0JBQXNCLDJCQUEyQjtBQUNqRCxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0Esb0JBQW9CLHdEQUFhO0FBQ2pDO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsOENBQThDLHdEQUFhO0FBQzNEO0FBQ0E7QUFDQSxJQUFJLDREQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNERBQWE7QUFDeEI7QUFDQSxvRUFBb0UsMkNBQUk7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAdGFuc3RhY2tcXHF1ZXJ5LWNvcmVcXGJ1aWxkXFxtb2Rlcm5cXG11dGF0aW9uQ2FjaGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL211dGF0aW9uQ2FjaGUudHNcclxuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gXCIuL25vdGlmeU1hbmFnZXIuanNcIjtcclxuaW1wb3J0IHsgTXV0YXRpb24gfSBmcm9tIFwiLi9tdXRhdGlvbi5qc1wiO1xyXG5pbXBvcnQgeyBtYXRjaE11dGF0aW9uLCBub29wIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcclxuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlLmpzXCI7XHJcbnZhciBNdXRhdGlvbkNhY2hlID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XHJcbiAgICB0aGlzLiNtdXRhdGlvbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xyXG4gICAgdGhpcy4jc2NvcGVzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcclxuICAgIHRoaXMuI211dGF0aW9uSWQgPSAwO1xyXG4gIH1cclxuICAjbXV0YXRpb25zO1xyXG4gICNzY29wZXM7XHJcbiAgI211dGF0aW9uSWQ7XHJcbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xyXG4gICAgY29uc3QgbXV0YXRpb24gPSBuZXcgTXV0YXRpb24oe1xyXG4gICAgICBtdXRhdGlvbkNhY2hlOiB0aGlzLFxyXG4gICAgICBtdXRhdGlvbklkOiArK3RoaXMuI211dGF0aW9uSWQsXHJcbiAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0TXV0YXRpb25PcHRpb25zKG9wdGlvbnMpLFxyXG4gICAgICBzdGF0ZVxyXG4gICAgfSk7XHJcbiAgICB0aGlzLmFkZChtdXRhdGlvbik7XHJcbiAgICByZXR1cm4gbXV0YXRpb247XHJcbiAgfVxyXG4gIGFkZChtdXRhdGlvbikge1xyXG4gICAgdGhpcy4jbXV0YXRpb25zLmFkZChtdXRhdGlvbik7XHJcbiAgICBjb25zdCBzY29wZSA9IHNjb3BlRm9yKG11dGF0aW9uKTtcclxuICAgIGlmICh0eXBlb2Ygc2NvcGUgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgY29uc3Qgc2NvcGVkTXV0YXRpb25zID0gdGhpcy4jc2NvcGVzLmdldChzY29wZSk7XHJcbiAgICAgIGlmIChzY29wZWRNdXRhdGlvbnMpIHtcclxuICAgICAgICBzY29wZWRNdXRhdGlvbnMucHVzaChtdXRhdGlvbik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy4jc2NvcGVzLnNldChzY29wZSwgW211dGF0aW9uXSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMubm90aWZ5KHsgdHlwZTogXCJhZGRlZFwiLCBtdXRhdGlvbiB9KTtcclxuICB9XHJcbiAgcmVtb3ZlKG11dGF0aW9uKSB7XHJcbiAgICBpZiAodGhpcy4jbXV0YXRpb25zLmRlbGV0ZShtdXRhdGlvbikpIHtcclxuICAgICAgY29uc3Qgc2NvcGUgPSBzY29wZUZvcihtdXRhdGlvbik7XHJcbiAgICAgIGlmICh0eXBlb2Ygc2NvcGUgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICBjb25zdCBzY29wZWRNdXRhdGlvbnMgPSB0aGlzLiNzY29wZXMuZ2V0KHNjb3BlKTtcclxuICAgICAgICBpZiAoc2NvcGVkTXV0YXRpb25zKSB7XHJcbiAgICAgICAgICBpZiAoc2NvcGVkTXV0YXRpb25zLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBzY29wZWRNdXRhdGlvbnMuaW5kZXhPZihtdXRhdGlvbik7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICBzY29wZWRNdXRhdGlvbnMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSBlbHNlIGlmIChzY29wZWRNdXRhdGlvbnNbMF0gPT09IG11dGF0aW9uKSB7XHJcbiAgICAgICAgICAgIHRoaXMuI3Njb3Blcy5kZWxldGUoc2NvcGUpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgdGhpcy5ub3RpZnkoeyB0eXBlOiBcInJlbW92ZWRcIiwgbXV0YXRpb24gfSk7XHJcbiAgfVxyXG4gIGNhblJ1bihtdXRhdGlvbikge1xyXG4gICAgY29uc3Qgc2NvcGUgPSBzY29wZUZvcihtdXRhdGlvbik7XHJcbiAgICBpZiAodHlwZW9mIHNjb3BlID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgIGNvbnN0IG11dGF0aW9uc1dpdGhTYW1lU2NvcGUgPSB0aGlzLiNzY29wZXMuZ2V0KHNjb3BlKTtcclxuICAgICAgY29uc3QgZmlyc3RQZW5kaW5nTXV0YXRpb24gPSBtdXRhdGlvbnNXaXRoU2FtZVNjb3BlPy5maW5kKFxyXG4gICAgICAgIChtKSA9PiBtLnN0YXRlLnN0YXR1cyA9PT0gXCJwZW5kaW5nXCJcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuICFmaXJzdFBlbmRpbmdNdXRhdGlvbiB8fCBmaXJzdFBlbmRpbmdNdXRhdGlvbiA9PT0gbXV0YXRpb247XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcbiAgcnVuTmV4dChtdXRhdGlvbikge1xyXG4gICAgY29uc3Qgc2NvcGUgPSBzY29wZUZvcihtdXRhdGlvbik7XHJcbiAgICBpZiAodHlwZW9mIHNjb3BlID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgIGNvbnN0IGZvdW5kTXV0YXRpb24gPSB0aGlzLiNzY29wZXMuZ2V0KHNjb3BlKT8uZmluZCgobSkgPT4gbSAhPT0gbXV0YXRpb24gJiYgbS5zdGF0ZS5pc1BhdXNlZCk7XHJcbiAgICAgIHJldHVybiBmb3VuZE11dGF0aW9uPy5jb250aW51ZSgpID8/IFByb21pc2UucmVzb2x2ZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuICBjbGVhcigpIHtcclxuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xyXG4gICAgICB0aGlzLiNtdXRhdGlvbnMuZm9yRWFjaCgobXV0YXRpb24pID0+IHtcclxuICAgICAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwicmVtb3ZlZFwiLCBtdXRhdGlvbiB9KTtcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuI211dGF0aW9ucy5jbGVhcigpO1xyXG4gICAgICB0aGlzLiNzY29wZXMuY2xlYXIoKTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBnZXRBbGwoKSB7XHJcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLiNtdXRhdGlvbnMpO1xyXG4gIH1cclxuICBmaW5kKGZpbHRlcnMpIHtcclxuICAgIGNvbnN0IGRlZmF1bHRlZEZpbHRlcnMgPSB7IGV4YWN0OiB0cnVlLCAuLi5maWx0ZXJzIH07XHJcbiAgICByZXR1cm4gdGhpcy5nZXRBbGwoKS5maW5kKFxyXG4gICAgICAobXV0YXRpb24pID0+IG1hdGNoTXV0YXRpb24oZGVmYXVsdGVkRmlsdGVycywgbXV0YXRpb24pXHJcbiAgICApO1xyXG4gIH1cclxuICBmaW5kQWxsKGZpbHRlcnMgPSB7fSkge1xyXG4gICAgcmV0dXJuIHRoaXMuZ2V0QWxsKCkuZmlsdGVyKChtdXRhdGlvbikgPT4gbWF0Y2hNdXRhdGlvbihmaWx0ZXJzLCBtdXRhdGlvbikpO1xyXG4gIH1cclxuICBub3RpZnkoZXZlbnQpIHtcclxuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xyXG4gICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xyXG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmVzdW1lUGF1c2VkTXV0YXRpb25zKCkge1xyXG4gICAgY29uc3QgcGF1c2VkTXV0YXRpb25zID0gdGhpcy5nZXRBbGwoKS5maWx0ZXIoKHgpID0+IHguc3RhdGUuaXNQYXVzZWQpO1xyXG4gICAgcmV0dXJuIG5vdGlmeU1hbmFnZXIuYmF0Y2goXHJcbiAgICAgICgpID0+IFByb21pc2UuYWxsKFxyXG4gICAgICAgIHBhdXNlZE11dGF0aW9ucy5tYXAoKG11dGF0aW9uKSA9PiBtdXRhdGlvbi5jb250aW51ZSgpLmNhdGNoKG5vb3ApKVxyXG4gICAgICApXHJcbiAgICApO1xyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gc2NvcGVGb3IobXV0YXRpb24pIHtcclxuICByZXR1cm4gbXV0YXRpb24ub3B0aW9ucy5zY29wZT8uaWQ7XHJcbn1cclxuZXhwb3J0IHtcclxuICBNdXRhdGlvbkNhY2hlXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11dGF0aW9uQ2FjaGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/notifyManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: () => (/* binding */ createNotifyManager),\n/* harmony export */   defaultScheduler: () => (/* binding */ defaultScheduler),\n/* harmony export */   notifyManager: () => (/* binding */ notifyManager)\n/* harmony export */ });\n// src/notifyManager.ts\r\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\r\nfunction createNotifyManager() {\r\n  let queue = [];\r\n  let transactions = 0;\r\n  let notifyFn = (callback) => {\r\n    callback();\r\n  };\r\n  let batchNotifyFn = (callback) => {\r\n    callback();\r\n  };\r\n  let scheduleFn = defaultScheduler;\r\n  const schedule = (callback) => {\r\n    if (transactions) {\r\n      queue.push(callback);\r\n    } else {\r\n      scheduleFn(() => {\r\n        notifyFn(callback);\r\n      });\r\n    }\r\n  };\r\n  const flush = () => {\r\n    const originalQueue = queue;\r\n    queue = [];\r\n    if (originalQueue.length) {\r\n      scheduleFn(() => {\r\n        batchNotifyFn(() => {\r\n          originalQueue.forEach((callback) => {\r\n            notifyFn(callback);\r\n          });\r\n        });\r\n      });\r\n    }\r\n  };\r\n  return {\r\n    batch: (callback) => {\r\n      let result;\r\n      transactions++;\r\n      try {\r\n        result = callback();\r\n      } finally {\r\n        transactions--;\r\n        if (!transactions) {\r\n          flush();\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    /**\r\n     * All calls to the wrapped function will be batched.\r\n     */\r\n    batchCalls: (callback) => {\r\n      return (...args) => {\r\n        schedule(() => {\r\n          callback(...args);\r\n        });\r\n      };\r\n    },\r\n    schedule,\r\n    /**\r\n     * Use this method to set a custom notify function.\r\n     * This can be used to for example wrap notifications with `React.act` while running tests.\r\n     */\r\n    setNotifyFunction: (fn) => {\r\n      notifyFn = fn;\r\n    },\r\n    /**\r\n     * Use this method to set a custom function to batch notifications together into a single tick.\r\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\r\n     */\r\n    setBatchNotifyFunction: (fn) => {\r\n      batchNotifyFn = fn;\r\n    },\r\n    setScheduler: (fn) => {\r\n      scheduleFn = fn;\r\n    }\r\n  };\r\n}\r\nvar notifyManager = createNotifyManager();\r\n\r\n//# sourceMappingURL=notifyManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vbm90aWZ5TWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAdGFuc3RhY2tcXHF1ZXJ5LWNvcmVcXGJ1aWxkXFxtb2Rlcm5cXG5vdGlmeU1hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL25vdGlmeU1hbmFnZXIudHNcclxudmFyIGRlZmF1bHRTY2hlZHVsZXIgPSAoY2IpID0+IHNldFRpbWVvdXQoY2IsIDApO1xyXG5mdW5jdGlvbiBjcmVhdGVOb3RpZnlNYW5hZ2VyKCkge1xyXG4gIGxldCBxdWV1ZSA9IFtdO1xyXG4gIGxldCB0cmFuc2FjdGlvbnMgPSAwO1xyXG4gIGxldCBub3RpZnlGbiA9IChjYWxsYmFjaykgPT4ge1xyXG4gICAgY2FsbGJhY2soKTtcclxuICB9O1xyXG4gIGxldCBiYXRjaE5vdGlmeUZuID0gKGNhbGxiYWNrKSA9PiB7XHJcbiAgICBjYWxsYmFjaygpO1xyXG4gIH07XHJcbiAgbGV0IHNjaGVkdWxlRm4gPSBkZWZhdWx0U2NoZWR1bGVyO1xyXG4gIGNvbnN0IHNjaGVkdWxlID0gKGNhbGxiYWNrKSA9PiB7XHJcbiAgICBpZiAodHJhbnNhY3Rpb25zKSB7XHJcbiAgICAgIHF1ZXVlLnB1c2goY2FsbGJhY2spO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgc2NoZWR1bGVGbigoKSA9PiB7XHJcbiAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG4gIGNvbnN0IGZsdXNoID0gKCkgPT4ge1xyXG4gICAgY29uc3Qgb3JpZ2luYWxRdWV1ZSA9IHF1ZXVlO1xyXG4gICAgcXVldWUgPSBbXTtcclxuICAgIGlmIChvcmlnaW5hbFF1ZXVlLmxlbmd0aCkge1xyXG4gICAgICBzY2hlZHVsZUZuKCgpID0+IHtcclxuICAgICAgICBiYXRjaE5vdGlmeUZuKCgpID0+IHtcclxuICAgICAgICAgIG9yaWdpbmFsUXVldWUuZm9yRWFjaCgoY2FsbGJhY2spID0+IHtcclxuICAgICAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgcmV0dXJuIHtcclxuICAgIGJhdGNoOiAoY2FsbGJhY2spID0+IHtcclxuICAgICAgbGV0IHJlc3VsdDtcclxuICAgICAgdHJhbnNhY3Rpb25zKys7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmVzdWx0ID0gY2FsbGJhY2soKTtcclxuICAgICAgfSBmaW5hbGx5IHtcclxuICAgICAgICB0cmFuc2FjdGlvbnMtLTtcclxuICAgICAgICBpZiAoIXRyYW5zYWN0aW9ucykge1xyXG4gICAgICAgICAgZmx1c2goKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIEFsbCBjYWxscyB0byB0aGUgd3JhcHBlZCBmdW5jdGlvbiB3aWxsIGJlIGJhdGNoZWQuXHJcbiAgICAgKi9cclxuICAgIGJhdGNoQ2FsbHM6IChjYWxsYmFjaykgPT4ge1xyXG4gICAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcclxuICAgICAgICBzY2hlZHVsZSgoKSA9PiB7XHJcbiAgICAgICAgICBjYWxsYmFjayguLi5hcmdzKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuICAgIH0sXHJcbiAgICBzY2hlZHVsZSxcclxuICAgIC8qKlxyXG4gICAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBub3RpZnkgZnVuY3Rpb24uXHJcbiAgICAgKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGZvciBleGFtcGxlIHdyYXAgbm90aWZpY2F0aW9ucyB3aXRoIGBSZWFjdC5hY3RgIHdoaWxlIHJ1bm5pbmcgdGVzdHMuXHJcbiAgICAgKi9cclxuICAgIHNldE5vdGlmeUZ1bmN0aW9uOiAoZm4pID0+IHtcclxuICAgICAgbm90aWZ5Rm4gPSBmbjtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gZnVuY3Rpb24gdG8gYmF0Y2ggbm90aWZpY2F0aW9ucyB0b2dldGhlciBpbnRvIGEgc2luZ2xlIHRpY2suXHJcbiAgICAgKiBCeSBkZWZhdWx0IFJlYWN0IFF1ZXJ5IHdpbGwgdXNlIHRoZSBiYXRjaCBmdW5jdGlvbiBwcm92aWRlZCBieSBSZWFjdERPTSBvciBSZWFjdCBOYXRpdmUuXHJcbiAgICAgKi9cclxuICAgIHNldEJhdGNoTm90aWZ5RnVuY3Rpb246IChmbikgPT4ge1xyXG4gICAgICBiYXRjaE5vdGlmeUZuID0gZm47XHJcbiAgICB9LFxyXG4gICAgc2V0U2NoZWR1bGVyOiAoZm4pID0+IHtcclxuICAgICAgc2NoZWR1bGVGbiA9IGZuO1xyXG4gICAgfVxyXG4gIH07XHJcbn1cclxudmFyIG5vdGlmeU1hbmFnZXIgPSBjcmVhdGVOb3RpZnlNYW5hZ2VyKCk7XHJcbmV4cG9ydCB7XHJcbiAgY3JlYXRlTm90aWZ5TWFuYWdlcixcclxuICBkZWZhdWx0U2NoZWR1bGVyLFxyXG4gIG5vdGlmeU1hbmFnZXJcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm90aWZ5TWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/onlineManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: () => (/* binding */ OnlineManager),\n/* harmony export */   onlineManager: () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/onlineManager.ts\r\n\r\n\r\nvar OnlineManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\r\n  #online = true;\r\n  #cleanup;\r\n  #setup;\r\n  constructor() {\r\n    super();\r\n    this.#setup = (onOnline) => {\r\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\r\n        const onlineListener = () => onOnline(true);\r\n        const offlineListener = () => onOnline(false);\r\n        window.addEventListener(\"online\", onlineListener, false);\r\n        window.addEventListener(\"offline\", offlineListener, false);\r\n        return () => {\r\n          window.removeEventListener(\"online\", onlineListener);\r\n          window.removeEventListener(\"offline\", offlineListener);\r\n        };\r\n      }\r\n      return;\r\n    };\r\n  }\r\n  onSubscribe() {\r\n    if (!this.#cleanup) {\r\n      this.setEventListener(this.#setup);\r\n    }\r\n  }\r\n  onUnsubscribe() {\r\n    if (!this.hasListeners()) {\r\n      this.#cleanup?.();\r\n      this.#cleanup = void 0;\r\n    }\r\n  }\r\n  setEventListener(setup) {\r\n    this.#setup = setup;\r\n    this.#cleanup?.();\r\n    this.#cleanup = setup(this.setOnline.bind(this));\r\n  }\r\n  setOnline(online) {\r\n    const changed = this.#online !== online;\r\n    if (changed) {\r\n      this.#online = online;\r\n      this.listeners.forEach((listener) => {\r\n        listener(online);\r\n      });\r\n    }\r\n  }\r\n  isOnline() {\r\n    return this.#online;\r\n  }\r\n};\r\nvar onlineManager = new OnlineManager();\r\n\r\n//# sourceMappingURL=onlineManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vb25saW5lTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDaUQ7QUFDWDtBQUN0QyxrQ0FBa0MsMERBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQ0FBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEB0YW5zdGFja1xccXVlcnktY29yZVxcYnVpbGRcXG1vZGVyblxcb25saW5lTWFuYWdlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvb25saW5lTWFuYWdlci50c1xyXG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUuanNcIjtcclxuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xyXG52YXIgT25saW5lTWFuYWdlciA9IGNsYXNzIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcclxuICAjb25saW5lID0gdHJ1ZTtcclxuICAjY2xlYW51cDtcclxuICAjc2V0dXA7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy4jc2V0dXAgPSAob25PbmxpbmUpID0+IHtcclxuICAgICAgaWYgKCFpc1NlcnZlciAmJiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikge1xyXG4gICAgICAgIGNvbnN0IG9ubGluZUxpc3RlbmVyID0gKCkgPT4gb25PbmxpbmUodHJ1ZSk7XHJcbiAgICAgICAgY29uc3Qgb2ZmbGluZUxpc3RlbmVyID0gKCkgPT4gb25PbmxpbmUoZmFsc2UpO1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9ubGluZUxpc3RlbmVyLCBmYWxzZSk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9mZmxpbmVMaXN0ZW5lciwgZmFsc2UpO1xyXG4gICAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBvbmxpbmVMaXN0ZW5lcik7XHJcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgb2ZmbGluZUxpc3RlbmVyKTtcclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybjtcclxuICAgIH07XHJcbiAgfVxyXG4gIG9uU3Vic2NyaWJlKCkge1xyXG4gICAgaWYgKCF0aGlzLiNjbGVhbnVwKSB7XHJcbiAgICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcih0aGlzLiNzZXR1cCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIG9uVW5zdWJzY3JpYmUoKSB7XHJcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcclxuICAgICAgdGhpcy4jY2xlYW51cD8uKCk7XHJcbiAgICAgIHRoaXMuI2NsZWFudXAgPSB2b2lkIDA7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHNldEV2ZW50TGlzdGVuZXIoc2V0dXApIHtcclxuICAgIHRoaXMuI3NldHVwID0gc2V0dXA7XHJcbiAgICB0aGlzLiNjbGVhbnVwPy4oKTtcclxuICAgIHRoaXMuI2NsZWFudXAgPSBzZXR1cCh0aGlzLnNldE9ubGluZS5iaW5kKHRoaXMpKTtcclxuICB9XHJcbiAgc2V0T25saW5lKG9ubGluZSkge1xyXG4gICAgY29uc3QgY2hhbmdlZCA9IHRoaXMuI29ubGluZSAhPT0gb25saW5lO1xyXG4gICAgaWYgKGNoYW5nZWQpIHtcclxuICAgICAgdGhpcy4jb25saW5lID0gb25saW5lO1xyXG4gICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xyXG4gICAgICAgIGxpc3RlbmVyKG9ubGluZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuICBpc09ubGluZSgpIHtcclxuICAgIHJldHVybiB0aGlzLiNvbmxpbmU7XHJcbiAgfVxyXG59O1xyXG52YXIgb25saW5lTWFuYWdlciA9IG5ldyBPbmxpbmVNYW5hZ2VyKCk7XHJcbmV4cG9ydCB7XHJcbiAgT25saW5lTWFuYWdlcixcclxuICBvbmxpbmVNYW5hZ2VyXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ubGluZU1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/query.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/query.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query),\n/* harmony export */   fetchState: () => (/* binding */ fetchState)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\n// src/query.ts\r\n\r\n\r\n\r\n\r\nvar Query = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\r\n  #initialState;\r\n  #revertState;\r\n  #cache;\r\n  #client;\r\n  #retryer;\r\n  #defaultOptions;\r\n  #abortSignalConsumed;\r\n  constructor(config) {\r\n    super();\r\n    this.#abortSignalConsumed = false;\r\n    this.#defaultOptions = config.defaultOptions;\r\n    this.setOptions(config.options);\r\n    this.observers = [];\r\n    this.#client = config.client;\r\n    this.#cache = this.#client.getQueryCache();\r\n    this.queryKey = config.queryKey;\r\n    this.queryHash = config.queryHash;\r\n    this.#initialState = getDefaultState(this.options);\r\n    this.state = config.state ?? this.#initialState;\r\n    this.scheduleGc();\r\n  }\r\n  get meta() {\r\n    return this.options.meta;\r\n  }\r\n  get promise() {\r\n    return this.#retryer?.promise;\r\n  }\r\n  setOptions(options) {\r\n    this.options = { ...this.#defaultOptions, ...options };\r\n    this.updateGcTime(this.options.gcTime);\r\n  }\r\n  optionalRemove() {\r\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\r\n      this.#cache.remove(this);\r\n    }\r\n  }\r\n  setData(newData, options) {\r\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(this.state.data, newData, this.options);\r\n    this.#dispatch({\r\n      data,\r\n      type: \"success\",\r\n      dataUpdatedAt: options?.updatedAt,\r\n      manual: options?.manual\r\n    });\r\n    return data;\r\n  }\r\n  setState(state, setStateOptions) {\r\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\r\n  }\r\n  cancel(options) {\r\n    const promise = this.#retryer?.promise;\r\n    this.#retryer?.cancel(options);\r\n    return promise ? promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.cancel({ silent: true });\r\n  }\r\n  reset() {\r\n    this.destroy();\r\n    this.setState(this.#initialState);\r\n  }\r\n  isActive() {\r\n    return this.observers.some(\r\n      (observer) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveEnabled)(observer.options.enabled, this) !== false\r\n    );\r\n  }\r\n  isDisabled() {\r\n    if (this.getObserversCount() > 0) {\r\n      return !this.isActive();\r\n    }\r\n    return this.options.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_1__.skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\r\n  }\r\n  isStatic() {\r\n    if (this.getObserversCount() > 0) {\r\n      return this.observers.some(\r\n        (observer) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveStaleTime)(observer.options.staleTime, this) === \"static\"\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n  isStale() {\r\n    if (this.getObserversCount() > 0) {\r\n      return this.observers.some(\r\n        (observer) => observer.getCurrentResult().isStale\r\n      );\r\n    }\r\n    return this.state.data === void 0 || this.state.isInvalidated;\r\n  }\r\n  isStaleByTime(staleTime = 0) {\r\n    if (this.state.data === void 0) {\r\n      return true;\r\n    }\r\n    if (staleTime === \"static\") {\r\n      return false;\r\n    }\r\n    if (this.state.isInvalidated) {\r\n      return true;\r\n    }\r\n    return !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\r\n  }\r\n  onFocus() {\r\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\r\n    observer?.refetch({ cancelRefetch: false });\r\n    this.#retryer?.continue();\r\n  }\r\n  onOnline() {\r\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\r\n    observer?.refetch({ cancelRefetch: false });\r\n    this.#retryer?.continue();\r\n  }\r\n  addObserver(observer) {\r\n    if (!this.observers.includes(observer)) {\r\n      this.observers.push(observer);\r\n      this.clearGcTimeout();\r\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\r\n    }\r\n  }\r\n  removeObserver(observer) {\r\n    if (this.observers.includes(observer)) {\r\n      this.observers = this.observers.filter((x) => x !== observer);\r\n      if (!this.observers.length) {\r\n        if (this.#retryer) {\r\n          if (this.#abortSignalConsumed) {\r\n            this.#retryer.cancel({ revert: true });\r\n          } else {\r\n            this.#retryer.cancelRetry();\r\n          }\r\n        }\r\n        this.scheduleGc();\r\n      }\r\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\r\n    }\r\n  }\r\n  getObserversCount() {\r\n    return this.observers.length;\r\n  }\r\n  invalidate() {\r\n    if (!this.state.isInvalidated) {\r\n      this.#dispatch({ type: \"invalidate\" });\r\n    }\r\n  }\r\n  fetch(options, fetchOptions) {\r\n    if (this.state.fetchStatus !== \"idle\") {\r\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\r\n        this.cancel({ silent: true });\r\n      } else if (this.#retryer) {\r\n        this.#retryer.continueRetry();\r\n        return this.#retryer.promise;\r\n      }\r\n    }\r\n    if (options) {\r\n      this.setOptions(options);\r\n    }\r\n    if (!this.options.queryFn) {\r\n      const observer = this.observers.find((x) => x.options.queryFn);\r\n      if (observer) {\r\n        this.setOptions(observer.options);\r\n      }\r\n    }\r\n    if (true) {\r\n      if (!Array.isArray(this.options.queryKey)) {\r\n        console.error(\r\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\r\n        );\r\n      }\r\n    }\r\n    const abortController = new AbortController();\r\n    const addSignalProperty = (object) => {\r\n      Object.defineProperty(object, \"signal\", {\r\n        enumerable: true,\r\n        get: () => {\r\n          this.#abortSignalConsumed = true;\r\n          return abortController.signal;\r\n        }\r\n      });\r\n    };\r\n    const fetchFn = () => {\r\n      const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureQueryFn)(this.options, fetchOptions);\r\n      const createQueryFnContext = () => {\r\n        const queryFnContext2 = {\r\n          client: this.#client,\r\n          queryKey: this.queryKey,\r\n          meta: this.meta\r\n        };\r\n        addSignalProperty(queryFnContext2);\r\n        return queryFnContext2;\r\n      };\r\n      const queryFnContext = createQueryFnContext();\r\n      this.#abortSignalConsumed = false;\r\n      if (this.options.persister) {\r\n        return this.options.persister(\r\n          queryFn,\r\n          queryFnContext,\r\n          this\r\n        );\r\n      }\r\n      return queryFn(queryFnContext);\r\n    };\r\n    const createFetchContext = () => {\r\n      const context2 = {\r\n        fetchOptions,\r\n        options: this.options,\r\n        queryKey: this.queryKey,\r\n        client: this.#client,\r\n        state: this.state,\r\n        fetchFn\r\n      };\r\n      addSignalProperty(context2);\r\n      return context2;\r\n    };\r\n    const context = createFetchContext();\r\n    this.options.behavior?.onFetch(context, this);\r\n    this.#revertState = this.state;\r\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\r\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\r\n    }\r\n    const onError = (error) => {\r\n      if (!((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.silent)) {\r\n        this.#dispatch({\r\n          type: \"error\",\r\n          error\r\n        });\r\n      }\r\n      if (!(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error)) {\r\n        this.#cache.config.onError?.(\r\n          error,\r\n          this\r\n        );\r\n        this.#cache.config.onSettled?.(\r\n          this.state.data,\r\n          error,\r\n          this\r\n        );\r\n      }\r\n      this.scheduleGc();\r\n    };\r\n    this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\r\n      initialPromise: fetchOptions?.initialPromise,\r\n      fn: context.fetchFn,\r\n      abort: abortController.abort.bind(abortController),\r\n      onSuccess: (data) => {\r\n        if (data === void 0) {\r\n          if (true) {\r\n            console.error(\r\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\r\n            );\r\n          }\r\n          onError(new Error(`${this.queryHash} data is undefined`));\r\n          return;\r\n        }\r\n        try {\r\n          this.setData(data);\r\n        } catch (error) {\r\n          onError(error);\r\n          return;\r\n        }\r\n        this.#cache.config.onSuccess?.(data, this);\r\n        this.#cache.config.onSettled?.(\r\n          data,\r\n          this.state.error,\r\n          this\r\n        );\r\n        this.scheduleGc();\r\n      },\r\n      onError,\r\n      onFail: (failureCount, error) => {\r\n        this.#dispatch({ type: \"failed\", failureCount, error });\r\n      },\r\n      onPause: () => {\r\n        this.#dispatch({ type: \"pause\" });\r\n      },\r\n      onContinue: () => {\r\n        this.#dispatch({ type: \"continue\" });\r\n      },\r\n      retry: context.options.retry,\r\n      retryDelay: context.options.retryDelay,\r\n      networkMode: context.options.networkMode,\r\n      canRun: () => true\r\n    });\r\n    return this.#retryer.start();\r\n  }\r\n  #dispatch(action) {\r\n    const reducer = (state) => {\r\n      switch (action.type) {\r\n        case \"failed\":\r\n          return {\r\n            ...state,\r\n            fetchFailureCount: action.failureCount,\r\n            fetchFailureReason: action.error\r\n          };\r\n        case \"pause\":\r\n          return {\r\n            ...state,\r\n            fetchStatus: \"paused\"\r\n          };\r\n        case \"continue\":\r\n          return {\r\n            ...state,\r\n            fetchStatus: \"fetching\"\r\n          };\r\n        case \"fetch\":\r\n          return {\r\n            ...state,\r\n            ...fetchState(state.data, this.options),\r\n            fetchMeta: action.meta ?? null\r\n          };\r\n        case \"success\":\r\n          return {\r\n            ...state,\r\n            data: action.data,\r\n            dataUpdateCount: state.dataUpdateCount + 1,\r\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\r\n            error: null,\r\n            isInvalidated: false,\r\n            status: \"success\",\r\n            ...!action.manual && {\r\n              fetchStatus: \"idle\",\r\n              fetchFailureCount: 0,\r\n              fetchFailureReason: null\r\n            }\r\n          };\r\n        case \"error\":\r\n          const error = action.error;\r\n          if ((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.revert && this.#revertState) {\r\n            return { ...this.#revertState, fetchStatus: \"idle\" };\r\n          }\r\n          return {\r\n            ...state,\r\n            error,\r\n            errorUpdateCount: state.errorUpdateCount + 1,\r\n            errorUpdatedAt: Date.now(),\r\n            fetchFailureCount: state.fetchFailureCount + 1,\r\n            fetchFailureReason: error,\r\n            fetchStatus: \"idle\",\r\n            status: \"error\"\r\n          };\r\n        case \"invalidate\":\r\n          return {\r\n            ...state,\r\n            isInvalidated: true\r\n          };\r\n        case \"setState\":\r\n          return {\r\n            ...state,\r\n            ...action.state\r\n          };\r\n      }\r\n    };\r\n    this.state = reducer(this.state);\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\r\n      this.observers.forEach((observer) => {\r\n        observer.onQueryUpdate();\r\n      });\r\n      this.#cache.notify({ query: this, type: \"updated\", action });\r\n    });\r\n  }\r\n};\r\nfunction fetchState(data, options) {\r\n  return {\r\n    fetchFailureCount: 0,\r\n    fetchFailureReason: null,\r\n    fetchStatus: (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.canFetch)(options.networkMode) ? \"fetching\" : \"paused\",\r\n    ...data === void 0 && {\r\n      error: null,\r\n      status: \"pending\"\r\n    }\r\n  };\r\n}\r\nfunction getDefaultState(options) {\r\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\r\n  const hasData = data !== void 0;\r\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\r\n  return {\r\n    data,\r\n    dataUpdateCount: 0,\r\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\r\n    error: null,\r\n    errorUpdateCount: 0,\r\n    errorUpdatedAt: 0,\r\n    fetchFailureCount: 0,\r\n    fetchFailureReason: null,\r\n    fetchMeta: null,\r\n    isInvalidated: false,\r\n    status: hasData ? \"success\" : \"pending\",\r\n    fetchStatus: \"idle\"\r\n  };\r\n}\r\n\r\n//# sourceMappingURL=query.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/query.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryCache.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryCache.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/queryCache.ts\r\n\r\n\r\n\r\n\r\nvar QueryCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\r\n  constructor(config = {}) {\r\n    super();\r\n    this.config = config;\r\n    this.#queries = /* @__PURE__ */ new Map();\r\n  }\r\n  #queries;\r\n  build(client, options, state) {\r\n    const queryKey = options.queryKey;\r\n    const queryHash = options.queryHash ?? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\r\n    let query = this.get(queryHash);\r\n    if (!query) {\r\n      query = new _query_js__WEBPACK_IMPORTED_MODULE_2__.Query({\r\n        client,\r\n        queryKey,\r\n        queryHash,\r\n        options: client.defaultQueryOptions(options),\r\n        state,\r\n        defaultOptions: client.getQueryDefaults(queryKey)\r\n      });\r\n      this.add(query);\r\n    }\r\n    return query;\r\n  }\r\n  add(query) {\r\n    if (!this.#queries.has(query.queryHash)) {\r\n      this.#queries.set(query.queryHash, query);\r\n      this.notify({\r\n        type: \"added\",\r\n        query\r\n      });\r\n    }\r\n  }\r\n  remove(query) {\r\n    const queryInMap = this.#queries.get(query.queryHash);\r\n    if (queryInMap) {\r\n      query.destroy();\r\n      if (queryInMap === query) {\r\n        this.#queries.delete(query.queryHash);\r\n      }\r\n      this.notify({ type: \"removed\", query });\r\n    }\r\n  }\r\n  clear() {\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\r\n      this.getAll().forEach((query) => {\r\n        this.remove(query);\r\n      });\r\n    });\r\n  }\r\n  get(queryHash) {\r\n    return this.#queries.get(queryHash);\r\n  }\r\n  getAll() {\r\n    return [...this.#queries.values()];\r\n  }\r\n  find(filters) {\r\n    const defaultedFilters = { exact: true, ...filters };\r\n    return this.getAll().find(\r\n      (query) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(defaultedFilters, query)\r\n    );\r\n  }\r\n  findAll(filters = {}) {\r\n    const queries = this.getAll();\r\n    return Object.keys(filters).length > 0 ? queries.filter((query) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : queries;\r\n  }\r\n  notify(event) {\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\r\n      this.listeners.forEach((listener) => {\r\n        listener(event);\r\n      });\r\n    });\r\n  }\r\n  onFocus() {\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\r\n      this.getAll().forEach((query) => {\r\n        query.onFocus();\r\n      });\r\n    });\r\n  }\r\n  onOnline() {\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\r\n      this.getAll().forEach((query) => {\r\n        query.onOnline();\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n//# sourceMappingURL=queryCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQytEO0FBQzVCO0FBQ2dCO0FBQ0Y7QUFDakQsK0JBQStCLDBEQUFZO0FBQzNDLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxnRUFBcUI7QUFDaEU7QUFDQTtBQUNBLGtCQUFrQiw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdCQUF3QjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxJQUFJLDREQUFhO0FBQ2pCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSxpQkFBaUIscURBQVU7QUFDM0I7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBLHVFQUF1RSxxREFBVTtBQUNqRjtBQUNBO0FBQ0EsSUFBSSw0REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSSw0REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSSw0REFBYTtBQUNqQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHRhbnN0YWNrXFxxdWVyeS1jb3JlXFxidWlsZFxcbW9kZXJuXFxxdWVyeUNhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9xdWVyeUNhY2hlLnRzXHJcbmltcG9ydCB7IGhhc2hRdWVyeUtleUJ5T3B0aW9ucywgbWF0Y2hRdWVyeSB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XHJcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSBcIi4vcXVlcnkuanNcIjtcclxuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gXCIuL25vdGlmeU1hbmFnZXIuanNcIjtcclxuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlLmpzXCI7XHJcbnZhciBRdWVyeUNhY2hlID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XHJcbiAgICB0aGlzLiNxdWVyaWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcclxuICB9XHJcbiAgI3F1ZXJpZXM7XHJcbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xyXG4gICAgY29uc3QgcXVlcnlLZXkgPSBvcHRpb25zLnF1ZXJ5S2V5O1xyXG4gICAgY29uc3QgcXVlcnlIYXNoID0gb3B0aW9ucy5xdWVyeUhhc2ggPz8gaGFzaFF1ZXJ5S2V5QnlPcHRpb25zKHF1ZXJ5S2V5LCBvcHRpb25zKTtcclxuICAgIGxldCBxdWVyeSA9IHRoaXMuZ2V0KHF1ZXJ5SGFzaCk7XHJcbiAgICBpZiAoIXF1ZXJ5KSB7XHJcbiAgICAgIHF1ZXJ5ID0gbmV3IFF1ZXJ5KHtcclxuICAgICAgICBjbGllbnQsXHJcbiAgICAgICAgcXVlcnlLZXksXHJcbiAgICAgICAgcXVlcnlIYXNoLFxyXG4gICAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpLFxyXG4gICAgICAgIHN0YXRlLFxyXG4gICAgICAgIGRlZmF1bHRPcHRpb25zOiBjbGllbnQuZ2V0UXVlcnlEZWZhdWx0cyhxdWVyeUtleSlcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuYWRkKHF1ZXJ5KTtcclxuICAgIH1cclxuICAgIHJldHVybiBxdWVyeTtcclxuICB9XHJcbiAgYWRkKHF1ZXJ5KSB7XHJcbiAgICBpZiAoIXRoaXMuI3F1ZXJpZXMuaGFzKHF1ZXJ5LnF1ZXJ5SGFzaCkpIHtcclxuICAgICAgdGhpcy4jcXVlcmllcy5zZXQocXVlcnkucXVlcnlIYXNoLCBxdWVyeSk7XHJcbiAgICAgIHRoaXMubm90aWZ5KHtcclxuICAgICAgICB0eXBlOiBcImFkZGVkXCIsXHJcbiAgICAgICAgcXVlcnlcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJlbW92ZShxdWVyeSkge1xyXG4gICAgY29uc3QgcXVlcnlJbk1hcCA9IHRoaXMuI3F1ZXJpZXMuZ2V0KHF1ZXJ5LnF1ZXJ5SGFzaCk7XHJcbiAgICBpZiAocXVlcnlJbk1hcCkge1xyXG4gICAgICBxdWVyeS5kZXN0cm95KCk7XHJcbiAgICAgIGlmIChxdWVyeUluTWFwID09PSBxdWVyeSkge1xyXG4gICAgICAgIHRoaXMuI3F1ZXJpZXMuZGVsZXRlKHF1ZXJ5LnF1ZXJ5SGFzaCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5ub3RpZnkoeyB0eXBlOiBcInJlbW92ZWRcIiwgcXVlcnkgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGNsZWFyKCkge1xyXG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XHJcbiAgICAgIHRoaXMuZ2V0QWxsKCkuZm9yRWFjaCgocXVlcnkpID0+IHtcclxuICAgICAgICB0aGlzLnJlbW92ZShxdWVyeSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGdldChxdWVyeUhhc2gpIHtcclxuICAgIHJldHVybiB0aGlzLiNxdWVyaWVzLmdldChxdWVyeUhhc2gpO1xyXG4gIH1cclxuICBnZXRBbGwoKSB7XHJcbiAgICByZXR1cm4gWy4uLnRoaXMuI3F1ZXJpZXMudmFsdWVzKCldO1xyXG4gIH1cclxuICBmaW5kKGZpbHRlcnMpIHtcclxuICAgIGNvbnN0IGRlZmF1bHRlZEZpbHRlcnMgPSB7IGV4YWN0OiB0cnVlLCAuLi5maWx0ZXJzIH07XHJcbiAgICByZXR1cm4gdGhpcy5nZXRBbGwoKS5maW5kKFxyXG4gICAgICAocXVlcnkpID0+IG1hdGNoUXVlcnkoZGVmYXVsdGVkRmlsdGVycywgcXVlcnkpXHJcbiAgICApO1xyXG4gIH1cclxuICBmaW5kQWxsKGZpbHRlcnMgPSB7fSkge1xyXG4gICAgY29uc3QgcXVlcmllcyA9IHRoaXMuZ2V0QWxsKCk7XHJcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoZmlsdGVycykubGVuZ3RoID4gMCA/IHF1ZXJpZXMuZmlsdGVyKChxdWVyeSkgPT4gbWF0Y2hRdWVyeShmaWx0ZXJzLCBxdWVyeSkpIDogcXVlcmllcztcclxuICB9XHJcbiAgbm90aWZ5KGV2ZW50KSB7XHJcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcclxuICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcclxuICAgICAgICBsaXN0ZW5lcihldmVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIG9uRm9jdXMoKSB7XHJcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcclxuICAgICAgdGhpcy5nZXRBbGwoKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xyXG4gICAgICAgIHF1ZXJ5Lm9uRm9jdXMoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgb25PbmxpbmUoKSB7XHJcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcclxuICAgICAgdGhpcy5nZXRBbGwoKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xyXG4gICAgICAgIHF1ZXJ5Lm9uT25saW5lKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG5leHBvcnQge1xyXG4gIFF1ZXJ5Q2FjaGVcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlDYWNoZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryClient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _queryCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\");\n// src/queryClient.ts\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar QueryClient = class {\r\n  #queryCache;\r\n  #mutationCache;\r\n  #defaultOptions;\r\n  #queryDefaults;\r\n  #mutationDefaults;\r\n  #mountCount;\r\n  #unsubscribeFocus;\r\n  #unsubscribeOnline;\r\n  constructor(config = {}) {\r\n    this.#queryCache = config.queryCache || new _queryCache_js__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\r\n    this.#mutationCache = config.mutationCache || new _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\r\n    this.#defaultOptions = config.defaultOptions || {};\r\n    this.#queryDefaults = /* @__PURE__ */ new Map();\r\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\r\n    this.#mountCount = 0;\r\n  }\r\n  mount() {\r\n    this.#mountCount++;\r\n    if (this.#mountCount !== 1) return;\r\n    this.#unsubscribeFocus = _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(async (focused) => {\r\n      if (focused) {\r\n        await this.resumePausedMutations();\r\n        this.#queryCache.onFocus();\r\n      }\r\n    });\r\n    this.#unsubscribeOnline = _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(async (online) => {\r\n      if (online) {\r\n        await this.resumePausedMutations();\r\n        this.#queryCache.onOnline();\r\n      }\r\n    });\r\n  }\r\n  unmount() {\r\n    this.#mountCount--;\r\n    if (this.#mountCount !== 0) return;\r\n    this.#unsubscribeFocus?.();\r\n    this.#unsubscribeFocus = void 0;\r\n    this.#unsubscribeOnline?.();\r\n    this.#unsubscribeOnline = void 0;\r\n  }\r\n  isFetching(filters) {\r\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\r\n  }\r\n  isMutating(filters) {\r\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\r\n  }\r\n  /**\r\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\r\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\r\n   *\r\n   * Hint: Do not use this function inside a component, because it won't receive updates.\r\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\r\n   */\r\n  getQueryData(queryKey) {\r\n    const options = this.defaultQueryOptions({ queryKey });\r\n    return this.#queryCache.get(options.queryHash)?.state.data;\r\n  }\r\n  ensureQueryData(options) {\r\n    const defaultedOptions = this.defaultQueryOptions(options);\r\n    const query = this.#queryCache.build(this, defaultedOptions);\r\n    const cachedData = query.state.data;\r\n    if (cachedData === void 0) {\r\n      return this.fetchQuery(options);\r\n    }\r\n    if (options.revalidateIfStale && query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query))) {\r\n      void this.prefetchQuery(defaultedOptions);\r\n    }\r\n    return Promise.resolve(cachedData);\r\n  }\r\n  getQueriesData(filters) {\r\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\r\n      const data = state.data;\r\n      return [queryKey, data];\r\n    });\r\n  }\r\n  setQueryData(queryKey, updater, options) {\r\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\r\n    const query = this.#queryCache.get(\r\n      defaultedOptions.queryHash\r\n    );\r\n    const prevData = query?.state.data;\r\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.functionalUpdate)(updater, prevData);\r\n    if (data === void 0) {\r\n      return void 0;\r\n    }\r\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\r\n  }\r\n  setQueriesData(filters, updater, options) {\r\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(\r\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\r\n        queryKey,\r\n        this.setQueryData(queryKey, updater, options)\r\n      ])\r\n    );\r\n  }\r\n  getQueryState(queryKey) {\r\n    const options = this.defaultQueryOptions({ queryKey });\r\n    return this.#queryCache.get(\r\n      options.queryHash\r\n    )?.state;\r\n  }\r\n  removeQueries(filters) {\r\n    const queryCache = this.#queryCache;\r\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\r\n      queryCache.findAll(filters).forEach((query) => {\r\n        queryCache.remove(query);\r\n      });\r\n    });\r\n  }\r\n  resetQueries(filters, options) {\r\n    const queryCache = this.#queryCache;\r\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\r\n      queryCache.findAll(filters).forEach((query) => {\r\n        query.reset();\r\n      });\r\n      return this.refetchQueries(\r\n        {\r\n          type: \"active\",\r\n          ...filters\r\n        },\r\n        options\r\n      );\r\n    });\r\n  }\r\n  cancelQueries(filters, cancelOptions = {}) {\r\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\r\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(\r\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\r\n    );\r\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\r\n  }\r\n  invalidateQueries(filters, options = {}) {\r\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\r\n      this.#queryCache.findAll(filters).forEach((query) => {\r\n        query.invalidate();\r\n      });\r\n      if (filters?.refetchType === \"none\") {\r\n        return Promise.resolve();\r\n      }\r\n      return this.refetchQueries(\r\n        {\r\n          ...filters,\r\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\r\n        },\r\n        options\r\n      );\r\n    });\r\n  }\r\n  refetchQueries(filters, options = {}) {\r\n    const fetchOptions = {\r\n      ...options,\r\n      cancelRefetch: options.cancelRefetch ?? true\r\n    };\r\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(\r\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\r\n        let promise = query.fetch(void 0, fetchOptions);\r\n        if (!fetchOptions.throwOnError) {\r\n          promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\r\n        }\r\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\r\n      })\r\n    );\r\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\r\n  }\r\n  fetchQuery(options) {\r\n    const defaultedOptions = this.defaultQueryOptions(options);\r\n    if (defaultedOptions.retry === void 0) {\r\n      defaultedOptions.retry = false;\r\n    }\r\n    const query = this.#queryCache.build(this, defaultedOptions);\r\n    return query.isStaleByTime(\r\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query)\r\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\r\n  }\r\n  prefetchQuery(options) {\r\n    return this.fetchQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\r\n  }\r\n  fetchInfiniteQuery(options) {\r\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\r\n    return this.fetchQuery(options);\r\n  }\r\n  prefetchInfiniteQuery(options) {\r\n    return this.fetchInfiniteQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\r\n  }\r\n  ensureInfiniteQueryData(options) {\r\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\r\n    return this.ensureQueryData(options);\r\n  }\r\n  resumePausedMutations() {\r\n    if (_onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\r\n      return this.#mutationCache.resumePausedMutations();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  getQueryCache() {\r\n    return this.#queryCache;\r\n  }\r\n  getMutationCache() {\r\n    return this.#mutationCache;\r\n  }\r\n  getDefaultOptions() {\r\n    return this.#defaultOptions;\r\n  }\r\n  setDefaultOptions(options) {\r\n    this.#defaultOptions = options;\r\n  }\r\n  setQueryDefaults(queryKey, options) {\r\n    this.#queryDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(queryKey), {\r\n      queryKey,\r\n      defaultOptions: options\r\n    });\r\n  }\r\n  getQueryDefaults(queryKey) {\r\n    const defaults = [...this.#queryDefaults.values()];\r\n    const result = {};\r\n    defaults.forEach((queryDefault) => {\r\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, queryDefault.queryKey)) {\r\n        Object.assign(result, queryDefault.defaultOptions);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  setMutationDefaults(mutationKey, options) {\r\n    this.#mutationDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(mutationKey), {\r\n      mutationKey,\r\n      defaultOptions: options\r\n    });\r\n  }\r\n  getMutationDefaults(mutationKey) {\r\n    const defaults = [...this.#mutationDefaults.values()];\r\n    const result = {};\r\n    defaults.forEach((queryDefault) => {\r\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, queryDefault.mutationKey)) {\r\n        Object.assign(result, queryDefault.defaultOptions);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  defaultQueryOptions(options) {\r\n    if (options._defaulted) {\r\n      return options;\r\n    }\r\n    const defaultedOptions = {\r\n      ...this.#defaultOptions.queries,\r\n      ...this.getQueryDefaults(options.queryKey),\r\n      ...options,\r\n      _defaulted: true\r\n    };\r\n    if (!defaultedOptions.queryHash) {\r\n      defaultedOptions.queryHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(\r\n        defaultedOptions.queryKey,\r\n        defaultedOptions\r\n      );\r\n    }\r\n    if (defaultedOptions.refetchOnReconnect === void 0) {\r\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\r\n    }\r\n    if (defaultedOptions.throwOnError === void 0) {\r\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\r\n    }\r\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\r\n      defaultedOptions.networkMode = \"offlineFirst\";\r\n    }\r\n    if (defaultedOptions.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_4__.skipToken) {\r\n      defaultedOptions.enabled = false;\r\n    }\r\n    return defaultedOptions;\r\n  }\r\n  defaultMutationOptions(options) {\r\n    if (options?._defaulted) {\r\n      return options;\r\n    }\r\n    return {\r\n      ...this.#defaultOptions.mutations,\r\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\r\n      ...options,\r\n      _defaulted: true\r\n    };\r\n  }\r\n  clear() {\r\n    this.#queryCache.clear();\r\n    this.#mutationCache.clear();\r\n  }\r\n};\r\n\r\n//# sourceMappingURL=queryClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQVNvQjtBQUN5QjtBQUNNO0FBQ0Y7QUFDRTtBQUNBO0FBQ2dCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixnREFBZ0Qsc0RBQVU7QUFDMUQsc0RBQXNELDREQUFhO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsMERBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsOEJBQThCLDREQUFhO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHFDQUFxQztBQUMzRTtBQUNBO0FBQ0EseUNBQXlDLCtCQUErQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsVUFBVTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsMkRBQWdCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsaUJBQWlCO0FBQ3JFO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHdEQUF3RCxVQUFVO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDJEQUFnQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsMEJBQTBCO0FBQ3BHO0FBQ0E7QUFDQSxXQUFXLDREQUFhO0FBQ3hCLHFEQUFxRCxVQUFVO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxVQUFVO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNERBQWE7QUFDakI7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0REFBYTtBQUN4QjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwyQ0FBMkM7QUFDM0MscUNBQXFDO0FBQ3JDLHFCQUFxQiw0REFBYTtBQUNsQztBQUNBO0FBQ0Esc0NBQXNDLDJDQUFJLFFBQVEsMkNBQUk7QUFDdEQ7QUFDQSx5Q0FBeUM7QUFDekMsV0FBVyw0REFBYTtBQUN4QjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNERBQWE7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDJDQUFJO0FBQ3RDO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxzQ0FBc0MsMkNBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sMkRBQWdCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywyQ0FBSSxRQUFRLDJDQUFJO0FBQ3pEO0FBQ0E7QUFDQSx1QkFBdUIsZ0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCwyQ0FBSSxRQUFRLDJDQUFJO0FBQ2pFO0FBQ0E7QUFDQSx1QkFBdUIsZ0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQWE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrREFBTztBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDBEQUFlO0FBQ3pCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGtEQUFPO0FBQ3RDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMERBQWU7QUFDekI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnRUFBcUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsZ0RBQVM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEB0YW5zdGFja1xccXVlcnktY29yZVxcYnVpbGRcXG1vZGVyblxccXVlcnlDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3F1ZXJ5Q2xpZW50LnRzXHJcbmltcG9ydCB7XHJcbiAgZnVuY3Rpb25hbFVwZGF0ZSxcclxuICBoYXNoS2V5LFxyXG4gIGhhc2hRdWVyeUtleUJ5T3B0aW9ucyxcclxuICBub29wLFxyXG4gIHBhcnRpYWxNYXRjaEtleSxcclxuICByZXNvbHZlU3RhbGVUaW1lLFxyXG4gIHNraXBUb2tlblxyXG59IGZyb20gXCIuL3V0aWxzLmpzXCI7XHJcbmltcG9ydCB7IFF1ZXJ5Q2FjaGUgfSBmcm9tIFwiLi9xdWVyeUNhY2hlLmpzXCI7XHJcbmltcG9ydCB7IE11dGF0aW9uQ2FjaGUgfSBmcm9tIFwiLi9tdXRhdGlvbkNhY2hlLmpzXCI7XHJcbmltcG9ydCB7IGZvY3VzTWFuYWdlciB9IGZyb20gXCIuL2ZvY3VzTWFuYWdlci5qc1wiO1xyXG5pbXBvcnQgeyBvbmxpbmVNYW5hZ2VyIH0gZnJvbSBcIi4vb25saW5lTWFuYWdlci5qc1wiO1xyXG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSBcIi4vbm90aWZ5TWFuYWdlci5qc1wiO1xyXG5pbXBvcnQgeyBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IgfSBmcm9tIFwiLi9pbmZpbml0ZVF1ZXJ5QmVoYXZpb3IuanNcIjtcclxudmFyIFF1ZXJ5Q2xpZW50ID0gY2xhc3Mge1xyXG4gICNxdWVyeUNhY2hlO1xyXG4gICNtdXRhdGlvbkNhY2hlO1xyXG4gICNkZWZhdWx0T3B0aW9ucztcclxuICAjcXVlcnlEZWZhdWx0cztcclxuICAjbXV0YXRpb25EZWZhdWx0cztcclxuICAjbW91bnRDb3VudDtcclxuICAjdW5zdWJzY3JpYmVGb2N1cztcclxuICAjdW5zdWJzY3JpYmVPbmxpbmU7XHJcbiAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcclxuICAgIHRoaXMuI3F1ZXJ5Q2FjaGUgPSBjb25maWcucXVlcnlDYWNoZSB8fCBuZXcgUXVlcnlDYWNoZSgpO1xyXG4gICAgdGhpcy4jbXV0YXRpb25DYWNoZSA9IGNvbmZpZy5tdXRhdGlvbkNhY2hlIHx8IG5ldyBNdXRhdGlvbkNhY2hlKCk7XHJcbiAgICB0aGlzLiNkZWZhdWx0T3B0aW9ucyA9IGNvbmZpZy5kZWZhdWx0T3B0aW9ucyB8fCB7fTtcclxuICAgIHRoaXMuI3F1ZXJ5RGVmYXVsdHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xyXG4gICAgdGhpcy4jbXV0YXRpb25EZWZhdWx0cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XHJcbiAgICB0aGlzLiNtb3VudENvdW50ID0gMDtcclxuICB9XHJcbiAgbW91bnQoKSB7XHJcbiAgICB0aGlzLiNtb3VudENvdW50Kys7XHJcbiAgICBpZiAodGhpcy4jbW91bnRDb3VudCAhPT0gMSkgcmV0dXJuO1xyXG4gICAgdGhpcy4jdW5zdWJzY3JpYmVGb2N1cyA9IGZvY3VzTWFuYWdlci5zdWJzY3JpYmUoYXN5bmMgKGZvY3VzZWQpID0+IHtcclxuICAgICAgaWYgKGZvY3VzZWQpIHtcclxuICAgICAgICBhd2FpdCB0aGlzLnJlc3VtZVBhdXNlZE11dGF0aW9ucygpO1xyXG4gICAgICAgIHRoaXMuI3F1ZXJ5Q2FjaGUub25Gb2N1cygpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHRoaXMuI3Vuc3Vic2NyaWJlT25saW5lID0gb25saW5lTWFuYWdlci5zdWJzY3JpYmUoYXN5bmMgKG9ubGluZSkgPT4ge1xyXG4gICAgICBpZiAob25saW5lKSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5yZXN1bWVQYXVzZWRNdXRhdGlvbnMoKTtcclxuICAgICAgICB0aGlzLiNxdWVyeUNhY2hlLm9uT25saW5lKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuICB1bm1vdW50KCkge1xyXG4gICAgdGhpcy4jbW91bnRDb3VudC0tO1xyXG4gICAgaWYgKHRoaXMuI21vdW50Q291bnQgIT09IDApIHJldHVybjtcclxuICAgIHRoaXMuI3Vuc3Vic2NyaWJlRm9jdXM/LigpO1xyXG4gICAgdGhpcy4jdW5zdWJzY3JpYmVGb2N1cyA9IHZvaWQgMDtcclxuICAgIHRoaXMuI3Vuc3Vic2NyaWJlT25saW5lPy4oKTtcclxuICAgIHRoaXMuI3Vuc3Vic2NyaWJlT25saW5lID0gdm9pZCAwO1xyXG4gIH1cclxuICBpc0ZldGNoaW5nKGZpbHRlcnMpIHtcclxuICAgIHJldHVybiB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoeyAuLi5maWx0ZXJzLCBmZXRjaFN0YXR1czogXCJmZXRjaGluZ1wiIH0pLmxlbmd0aDtcclxuICB9XHJcbiAgaXNNdXRhdGluZyhmaWx0ZXJzKSB7XHJcbiAgICByZXR1cm4gdGhpcy4jbXV0YXRpb25DYWNoZS5maW5kQWxsKHsgLi4uZmlsdGVycywgc3RhdHVzOiBcInBlbmRpbmdcIiB9KS5sZW5ndGg7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEltcGVyYXRpdmUgKG5vbi1yZWFjdGl2ZSkgd2F5IHRvIHJldHJpZXZlIGRhdGEgZm9yIGEgUXVlcnlLZXkuXHJcbiAgICogU2hvdWxkIG9ubHkgYmUgdXNlZCBpbiBjYWxsYmFja3Mgb3IgZnVuY3Rpb25zIHdoZXJlIHJlYWRpbmcgdGhlIGxhdGVzdCBkYXRhIGlzIG5lY2Vzc2FyeSwgZS5nLiBmb3Igb3B0aW1pc3RpYyB1cGRhdGVzLlxyXG4gICAqXHJcbiAgICogSGludDogRG8gbm90IHVzZSB0aGlzIGZ1bmN0aW9uIGluc2lkZSBhIGNvbXBvbmVudCwgYmVjYXVzZSBpdCB3b24ndCByZWNlaXZlIHVwZGF0ZXMuXHJcbiAgICogVXNlIGB1c2VRdWVyeWAgdG8gY3JlYXRlIGEgYFF1ZXJ5T2JzZXJ2ZXJgIHRoYXQgc3Vic2NyaWJlcyB0byBjaGFuZ2VzLlxyXG4gICAqL1xyXG4gIGdldFF1ZXJ5RGF0YShxdWVyeUtleSkge1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHRoaXMuZGVmYXVsdFF1ZXJ5T3B0aW9ucyh7IHF1ZXJ5S2V5IH0pO1xyXG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGUuZ2V0KG9wdGlvbnMucXVlcnlIYXNoKT8uc3RhdGUuZGF0YTtcclxuICB9XHJcbiAgZW5zdXJlUXVlcnlEYXRhKG9wdGlvbnMpIHtcclxuICAgIGNvbnN0IGRlZmF1bHRlZE9wdGlvbnMgPSB0aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucyk7XHJcbiAgICBjb25zdCBxdWVyeSA9IHRoaXMuI3F1ZXJ5Q2FjaGUuYnVpbGQodGhpcywgZGVmYXVsdGVkT3B0aW9ucyk7XHJcbiAgICBjb25zdCBjYWNoZWREYXRhID0gcXVlcnkuc3RhdGUuZGF0YTtcclxuICAgIGlmIChjYWNoZWREYXRhID09PSB2b2lkIDApIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZmV0Y2hRdWVyeShvcHRpb25zKTtcclxuICAgIH1cclxuICAgIGlmIChvcHRpb25zLnJldmFsaWRhdGVJZlN0YWxlICYmIHF1ZXJ5LmlzU3RhbGVCeVRpbWUocmVzb2x2ZVN0YWxlVGltZShkZWZhdWx0ZWRPcHRpb25zLnN0YWxlVGltZSwgcXVlcnkpKSkge1xyXG4gICAgICB2b2lkIHRoaXMucHJlZmV0Y2hRdWVyeShkZWZhdWx0ZWRPcHRpb25zKTtcclxuICAgIH1cclxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoY2FjaGVkRGF0YSk7XHJcbiAgfVxyXG4gIGdldFF1ZXJpZXNEYXRhKGZpbHRlcnMpIHtcclxuICAgIHJldHVybiB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykubWFwKCh7IHF1ZXJ5S2V5LCBzdGF0ZSB9KSA9PiB7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSBzdGF0ZS5kYXRhO1xyXG4gICAgICByZXR1cm4gW3F1ZXJ5S2V5LCBkYXRhXTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBzZXRRdWVyeURhdGEocXVlcnlLZXksIHVwZGF0ZXIsIG9wdGlvbnMpIHtcclxuICAgIGNvbnN0IGRlZmF1bHRlZE9wdGlvbnMgPSB0aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMoeyBxdWVyeUtleSB9KTtcclxuICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy4jcXVlcnlDYWNoZS5nZXQoXHJcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMucXVlcnlIYXNoXHJcbiAgICApO1xyXG4gICAgY29uc3QgcHJldkRhdGEgPSBxdWVyeT8uc3RhdGUuZGF0YTtcclxuICAgIGNvbnN0IGRhdGEgPSBmdW5jdGlvbmFsVXBkYXRlKHVwZGF0ZXIsIHByZXZEYXRhKTtcclxuICAgIGlmIChkYXRhID09PSB2b2lkIDApIHtcclxuICAgICAgcmV0dXJuIHZvaWQgMDtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLiNxdWVyeUNhY2hlLmJ1aWxkKHRoaXMsIGRlZmF1bHRlZE9wdGlvbnMpLnNldERhdGEoZGF0YSwgeyAuLi5vcHRpb25zLCBtYW51YWw6IHRydWUgfSk7XHJcbiAgfVxyXG4gIHNldFF1ZXJpZXNEYXRhKGZpbHRlcnMsIHVwZGF0ZXIsIG9wdGlvbnMpIHtcclxuICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKFxyXG4gICAgICAoKSA9PiB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykubWFwKCh7IHF1ZXJ5S2V5IH0pID0+IFtcclxuICAgICAgICBxdWVyeUtleSxcclxuICAgICAgICB0aGlzLnNldFF1ZXJ5RGF0YShxdWVyeUtleSwgdXBkYXRlciwgb3B0aW9ucylcclxuICAgICAgXSlcclxuICAgICk7XHJcbiAgfVxyXG4gIGdldFF1ZXJ5U3RhdGUocXVlcnlLZXkpIHtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMoeyBxdWVyeUtleSB9KTtcclxuICAgIHJldHVybiB0aGlzLiNxdWVyeUNhY2hlLmdldChcclxuICAgICAgb3B0aW9ucy5xdWVyeUhhc2hcclxuICAgICk/LnN0YXRlO1xyXG4gIH1cclxuICByZW1vdmVRdWVyaWVzKGZpbHRlcnMpIHtcclxuICAgIGNvbnN0IHF1ZXJ5Q2FjaGUgPSB0aGlzLiNxdWVyeUNhY2hlO1xyXG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XHJcbiAgICAgIHF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xyXG4gICAgICAgIHF1ZXJ5Q2FjaGUucmVtb3ZlKHF1ZXJ5KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmVzZXRRdWVyaWVzKGZpbHRlcnMsIG9wdGlvbnMpIHtcclxuICAgIGNvbnN0IHF1ZXJ5Q2FjaGUgPSB0aGlzLiNxdWVyeUNhY2hlO1xyXG4gICAgcmV0dXJuIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xyXG4gICAgICBxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykuZm9yRWFjaCgocXVlcnkpID0+IHtcclxuICAgICAgICBxdWVyeS5yZXNldCgpO1xyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuIHRoaXMucmVmZXRjaFF1ZXJpZXMoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdHlwZTogXCJhY3RpdmVcIixcclxuICAgICAgICAgIC4uLmZpbHRlcnNcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9wdGlvbnNcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBjYW5jZWxRdWVyaWVzKGZpbHRlcnMsIGNhbmNlbE9wdGlvbnMgPSB7fSkge1xyXG4gICAgY29uc3QgZGVmYXVsdGVkQ2FuY2VsT3B0aW9ucyA9IHsgcmV2ZXJ0OiB0cnVlLCAuLi5jYW5jZWxPcHRpb25zIH07XHJcbiAgICBjb25zdCBwcm9taXNlcyA9IG5vdGlmeU1hbmFnZXIuYmF0Y2goXHJcbiAgICAgICgpID0+IHRoaXMuI3F1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5tYXAoKHF1ZXJ5KSA9PiBxdWVyeS5jYW5jZWwoZGVmYXVsdGVkQ2FuY2VsT3B0aW9ucykpXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKG5vb3ApLmNhdGNoKG5vb3ApO1xyXG4gIH1cclxuICBpbnZhbGlkYXRlUXVlcmllcyhmaWx0ZXJzLCBvcHRpb25zID0ge30pIHtcclxuICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcclxuICAgICAgdGhpcy4jcXVlcnlDYWNoZS5maW5kQWxsKGZpbHRlcnMpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XHJcbiAgICAgICAgcXVlcnkuaW52YWxpZGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgICAgaWYgKGZpbHRlcnM/LnJlZmV0Y2hUeXBlID09PSBcIm5vbmVcIikge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdGhpcy5yZWZldGNoUXVlcmllcyhcclxuICAgICAgICB7XHJcbiAgICAgICAgICAuLi5maWx0ZXJzLFxyXG4gICAgICAgICAgdHlwZTogZmlsdGVycz8ucmVmZXRjaFR5cGUgPz8gZmlsdGVycz8udHlwZSA/PyBcImFjdGl2ZVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvcHRpb25zXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmVmZXRjaFF1ZXJpZXMoZmlsdGVycywgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICBjb25zdCBmZXRjaE9wdGlvbnMgPSB7XHJcbiAgICAgIC4uLm9wdGlvbnMsXHJcbiAgICAgIGNhbmNlbFJlZmV0Y2g6IG9wdGlvbnMuY2FuY2VsUmVmZXRjaCA/PyB0cnVlXHJcbiAgICB9O1xyXG4gICAgY29uc3QgcHJvbWlzZXMgPSBub3RpZnlNYW5hZ2VyLmJhdGNoKFxyXG4gICAgICAoKSA9PiB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykuZmlsdGVyKChxdWVyeSkgPT4gIXF1ZXJ5LmlzRGlzYWJsZWQoKSAmJiAhcXVlcnkuaXNTdGF0aWMoKSkubWFwKChxdWVyeSkgPT4ge1xyXG4gICAgICAgIGxldCBwcm9taXNlID0gcXVlcnkuZmV0Y2godm9pZCAwLCBmZXRjaE9wdGlvbnMpO1xyXG4gICAgICAgIGlmICghZmV0Y2hPcHRpb25zLnRocm93T25FcnJvcikge1xyXG4gICAgICAgICAgcHJvbWlzZSA9IHByb21pc2UuY2F0Y2gobm9vcCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBxdWVyeS5zdGF0ZS5mZXRjaFN0YXR1cyA9PT0gXCJwYXVzZWRcIiA/IFByb21pc2UucmVzb2x2ZSgpIDogcHJvbWlzZTtcclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4obm9vcCk7XHJcbiAgfVxyXG4gIGZldGNoUXVlcnkob3B0aW9ucykge1xyXG4gICAgY29uc3QgZGVmYXVsdGVkT3B0aW9ucyA9IHRoaXMuZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKTtcclxuICAgIGlmIChkZWZhdWx0ZWRPcHRpb25zLnJldHJ5ID09PSB2b2lkIDApIHtcclxuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5yZXRyeSA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLiNxdWVyeUNhY2hlLmJ1aWxkKHRoaXMsIGRlZmF1bHRlZE9wdGlvbnMpO1xyXG4gICAgcmV0dXJuIHF1ZXJ5LmlzU3RhbGVCeVRpbWUoXHJcbiAgICAgIHJlc29sdmVTdGFsZVRpbWUoZGVmYXVsdGVkT3B0aW9ucy5zdGFsZVRpbWUsIHF1ZXJ5KVxyXG4gICAgKSA/IHF1ZXJ5LmZldGNoKGRlZmF1bHRlZE9wdGlvbnMpIDogUHJvbWlzZS5yZXNvbHZlKHF1ZXJ5LnN0YXRlLmRhdGEpO1xyXG4gIH1cclxuICBwcmVmZXRjaFF1ZXJ5KG9wdGlvbnMpIHtcclxuICAgIHJldHVybiB0aGlzLmZldGNoUXVlcnkob3B0aW9ucykudGhlbihub29wKS5jYXRjaChub29wKTtcclxuICB9XHJcbiAgZmV0Y2hJbmZpbml0ZVF1ZXJ5KG9wdGlvbnMpIHtcclxuICAgIG9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3Iob3B0aW9ucy5wYWdlcyk7XHJcbiAgICByZXR1cm4gdGhpcy5mZXRjaFF1ZXJ5KG9wdGlvbnMpO1xyXG4gIH1cclxuICBwcmVmZXRjaEluZmluaXRlUXVlcnkob3B0aW9ucykge1xyXG4gICAgcmV0dXJuIHRoaXMuZmV0Y2hJbmZpbml0ZVF1ZXJ5KG9wdGlvbnMpLnRoZW4obm9vcCkuY2F0Y2gobm9vcCk7XHJcbiAgfVxyXG4gIGVuc3VyZUluZmluaXRlUXVlcnlEYXRhKG9wdGlvbnMpIHtcclxuICAgIG9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3Iob3B0aW9ucy5wYWdlcyk7XHJcbiAgICByZXR1cm4gdGhpcy5lbnN1cmVRdWVyeURhdGEob3B0aW9ucyk7XHJcbiAgfVxyXG4gIHJlc3VtZVBhdXNlZE11dGF0aW9ucygpIHtcclxuICAgIGlmIChvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuI211dGF0aW9uQ2FjaGUucmVzdW1lUGF1c2VkTXV0YXRpb25zKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XHJcbiAgfVxyXG4gIGdldFF1ZXJ5Q2FjaGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy4jcXVlcnlDYWNoZTtcclxuICB9XHJcbiAgZ2V0TXV0YXRpb25DYWNoZSgpIHtcclxuICAgIHJldHVybiB0aGlzLiNtdXRhdGlvbkNhY2hlO1xyXG4gIH1cclxuICBnZXREZWZhdWx0T3B0aW9ucygpIHtcclxuICAgIHJldHVybiB0aGlzLiNkZWZhdWx0T3B0aW9ucztcclxuICB9XHJcbiAgc2V0RGVmYXVsdE9wdGlvbnMob3B0aW9ucykge1xyXG4gICAgdGhpcy4jZGVmYXVsdE9wdGlvbnMgPSBvcHRpb25zO1xyXG4gIH1cclxuICBzZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5LCBvcHRpb25zKSB7XHJcbiAgICB0aGlzLiNxdWVyeURlZmF1bHRzLnNldChoYXNoS2V5KHF1ZXJ5S2V5KSwge1xyXG4gICAgICBxdWVyeUtleSxcclxuICAgICAgZGVmYXVsdE9wdGlvbnM6IG9wdGlvbnNcclxuICAgIH0pO1xyXG4gIH1cclxuICBnZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5KSB7XHJcbiAgICBjb25zdCBkZWZhdWx0cyA9IFsuLi50aGlzLiNxdWVyeURlZmF1bHRzLnZhbHVlcygpXTtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xyXG4gICAgZGVmYXVsdHMuZm9yRWFjaCgocXVlcnlEZWZhdWx0KSA9PiB7XHJcbiAgICAgIGlmIChwYXJ0aWFsTWF0Y2hLZXkocXVlcnlLZXksIHF1ZXJ5RGVmYXVsdC5xdWVyeUtleSkpIHtcclxuICAgICAgICBPYmplY3QuYXNzaWduKHJlc3VsdCwgcXVlcnlEZWZhdWx0LmRlZmF1bHRPcHRpb25zKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBzZXRNdXRhdGlvbkRlZmF1bHRzKG11dGF0aW9uS2V5LCBvcHRpb25zKSB7XHJcbiAgICB0aGlzLiNtdXRhdGlvbkRlZmF1bHRzLnNldChoYXNoS2V5KG11dGF0aW9uS2V5KSwge1xyXG4gICAgICBtdXRhdGlvbktleSxcclxuICAgICAgZGVmYXVsdE9wdGlvbnM6IG9wdGlvbnNcclxuICAgIH0pO1xyXG4gIH1cclxuICBnZXRNdXRhdGlvbkRlZmF1bHRzKG11dGF0aW9uS2V5KSB7XHJcbiAgICBjb25zdCBkZWZhdWx0cyA9IFsuLi50aGlzLiNtdXRhdGlvbkRlZmF1bHRzLnZhbHVlcygpXTtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xyXG4gICAgZGVmYXVsdHMuZm9yRWFjaCgocXVlcnlEZWZhdWx0KSA9PiB7XHJcbiAgICAgIGlmIChwYXJ0aWFsTWF0Y2hLZXkobXV0YXRpb25LZXksIHF1ZXJ5RGVmYXVsdC5tdXRhdGlvbktleSkpIHtcclxuICAgICAgICBPYmplY3QuYXNzaWduKHJlc3VsdCwgcXVlcnlEZWZhdWx0LmRlZmF1bHRPcHRpb25zKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBkZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zLl9kZWZhdWx0ZWQpIHtcclxuICAgICAgcmV0dXJuIG9wdGlvbnM7XHJcbiAgICB9XHJcbiAgICBjb25zdCBkZWZhdWx0ZWRPcHRpb25zID0ge1xyXG4gICAgICAuLi50aGlzLiNkZWZhdWx0T3B0aW9ucy5xdWVyaWVzLFxyXG4gICAgICAuLi50aGlzLmdldFF1ZXJ5RGVmYXVsdHMob3B0aW9ucy5xdWVyeUtleSksXHJcbiAgICAgIC4uLm9wdGlvbnMsXHJcbiAgICAgIF9kZWZhdWx0ZWQ6IHRydWVcclxuICAgIH07XHJcbiAgICBpZiAoIWRlZmF1bHRlZE9wdGlvbnMucXVlcnlIYXNoKSB7XHJcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMucXVlcnlIYXNoID0gaGFzaFF1ZXJ5S2V5QnlPcHRpb25zKFxyXG4gICAgICAgIGRlZmF1bHRlZE9wdGlvbnMucXVlcnlLZXksXHJcbiAgICAgICAgZGVmYXVsdGVkT3B0aW9uc1xyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgaWYgKGRlZmF1bHRlZE9wdGlvbnMucmVmZXRjaE9uUmVjb25uZWN0ID09PSB2b2lkIDApIHtcclxuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5yZWZldGNoT25SZWNvbm5lY3QgPSBkZWZhdWx0ZWRPcHRpb25zLm5ldHdvcmtNb2RlICE9PSBcImFsd2F5c1wiO1xyXG4gICAgfVxyXG4gICAgaWYgKGRlZmF1bHRlZE9wdGlvbnMudGhyb3dPbkVycm9yID09PSB2b2lkIDApIHtcclxuICAgICAgZGVmYXVsdGVkT3B0aW9ucy50aHJvd09uRXJyb3IgPSAhIWRlZmF1bHRlZE9wdGlvbnMuc3VzcGVuc2U7XHJcbiAgICB9XHJcbiAgICBpZiAoIWRlZmF1bHRlZE9wdGlvbnMubmV0d29ya01vZGUgJiYgZGVmYXVsdGVkT3B0aW9ucy5wZXJzaXN0ZXIpIHtcclxuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5uZXR3b3JrTW9kZSA9IFwib2ZmbGluZUZpcnN0XCI7XHJcbiAgICB9XHJcbiAgICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUZuID09PSBza2lwVG9rZW4pIHtcclxuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5lbmFibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGVmYXVsdGVkT3B0aW9ucztcclxuICB9XHJcbiAgZGVmYXVsdE11dGF0aW9uT3B0aW9ucyhvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucz8uX2RlZmF1bHRlZCkge1xyXG4gICAgICByZXR1cm4gb3B0aW9ucztcclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgIC4uLnRoaXMuI2RlZmF1bHRPcHRpb25zLm11dGF0aW9ucyxcclxuICAgICAgLi4ub3B0aW9ucz8ubXV0YXRpb25LZXkgJiYgdGhpcy5nZXRNdXRhdGlvbkRlZmF1bHRzKG9wdGlvbnMubXV0YXRpb25LZXkpLFxyXG4gICAgICAuLi5vcHRpb25zLFxyXG4gICAgICBfZGVmYXVsdGVkOiB0cnVlXHJcbiAgICB9O1xyXG4gIH1cclxuICBjbGVhcigpIHtcclxuICAgIHRoaXMuI3F1ZXJ5Q2FjaGUuY2xlYXIoKTtcclxuICAgIHRoaXMuI211dGF0aW9uQ2FjaGUuY2xlYXIoKTtcclxuICB9XHJcbn07XHJcbmV4cG9ydCB7XHJcbiAgUXVlcnlDbGllbnRcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/removable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/removable.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/removable.ts\r\n\r\nvar Removable = class {\r\n  #gcTimeout;\r\n  destroy() {\r\n    this.clearGcTimeout();\r\n  }\r\n  scheduleGc() {\r\n    this.clearGcTimeout();\r\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.gcTime)) {\r\n      this.#gcTimeout = setTimeout(() => {\r\n        this.optionalRemove();\r\n      }, this.gcTime);\r\n    }\r\n  }\r\n  updateGcTime(newGcTime) {\r\n    this.gcTime = Math.max(\r\n      this.gcTime || 0,\r\n      newGcTime ?? (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1e3)\r\n    );\r\n  }\r\n  clearGcTimeout() {\r\n    if (this.#gcTimeout) {\r\n      clearTimeout(this.#gcTimeout);\r\n      this.#gcTimeout = void 0;\r\n    }\r\n  }\r\n};\r\n\r\n//# sourceMappingURL=removable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcmVtb3ZhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDc0Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFjO0FBQ3RCO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQ0FBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAdGFuc3RhY2tcXHF1ZXJ5LWNvcmVcXGJ1aWxkXFxtb2Rlcm5cXHJlbW92YWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcmVtb3ZhYmxlLnRzXHJcbmltcG9ydCB7IGlzU2VydmVyLCBpc1ZhbGlkVGltZW91dCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XHJcbnZhciBSZW1vdmFibGUgPSBjbGFzcyB7XHJcbiAgI2djVGltZW91dDtcclxuICBkZXN0cm95KCkge1xyXG4gICAgdGhpcy5jbGVhckdjVGltZW91dCgpO1xyXG4gIH1cclxuICBzY2hlZHVsZUdjKCkge1xyXG4gICAgdGhpcy5jbGVhckdjVGltZW91dCgpO1xyXG4gICAgaWYgKGlzVmFsaWRUaW1lb3V0KHRoaXMuZ2NUaW1lKSkge1xyXG4gICAgICB0aGlzLiNnY1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0aGlzLm9wdGlvbmFsUmVtb3ZlKCk7XHJcbiAgICAgIH0sIHRoaXMuZ2NUaW1lKTtcclxuICAgIH1cclxuICB9XHJcbiAgdXBkYXRlR2NUaW1lKG5ld0djVGltZSkge1xyXG4gICAgdGhpcy5nY1RpbWUgPSBNYXRoLm1heChcclxuICAgICAgdGhpcy5nY1RpbWUgfHwgMCxcclxuICAgICAgbmV3R2NUaW1lID8/IChpc1NlcnZlciA/IEluZmluaXR5IDogNSAqIDYwICogMWUzKVxyXG4gICAgKTtcclxuICB9XHJcbiAgY2xlYXJHY1RpbWVvdXQoKSB7XHJcbiAgICBpZiAodGhpcy4jZ2NUaW1lb3V0KSB7XHJcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLiNnY1RpbWVvdXQpO1xyXG4gICAgICB0aGlzLiNnY1RpbWVvdXQgPSB2b2lkIDA7XHJcbiAgICB9XHJcbiAgfVxyXG59O1xyXG5leHBvcnQge1xyXG4gIFJlbW92YWJsZVxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmFibGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/removable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/retryer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/retryer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: () => (/* binding */ CancelledError),\n/* harmony export */   canFetch: () => (/* binding */ canFetch),\n/* harmony export */   createRetryer: () => (/* binding */ createRetryer),\n/* harmony export */   isCancelledError: () => (/* binding */ isCancelledError)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _thenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thenable.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/thenable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/retryer.ts\r\n\r\n\r\n\r\n\r\nfunction defaultRetryDelay(failureCount) {\r\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\r\n}\r\nfunction canFetch(networkMode) {\r\n  return (networkMode ?? \"online\") === \"online\" ? _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\r\n}\r\nvar CancelledError = class extends Error {\r\n  constructor(options) {\r\n    super(\"CancelledError\");\r\n    this.revert = options?.revert;\r\n    this.silent = options?.silent;\r\n  }\r\n};\r\nfunction isCancelledError(value) {\r\n  return value instanceof CancelledError;\r\n}\r\nfunction createRetryer(config) {\r\n  let isRetryCancelled = false;\r\n  let failureCount = 0;\r\n  let isResolved = false;\r\n  let continueFn;\r\n  const thenable = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\r\n  const cancel = (cancelOptions) => {\r\n    if (!isResolved) {\r\n      reject(new CancelledError(cancelOptions));\r\n      config.abort?.();\r\n    }\r\n  };\r\n  const cancelRetry = () => {\r\n    isRetryCancelled = true;\r\n  };\r\n  const continueRetry = () => {\r\n    isRetryCancelled = false;\r\n  };\r\n  const canContinue = () => _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused() && (config.networkMode === \"always\" || _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline()) && config.canRun();\r\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\r\n  const resolve = (value) => {\r\n    if (!isResolved) {\r\n      isResolved = true;\r\n      config.onSuccess?.(value);\r\n      continueFn?.();\r\n      thenable.resolve(value);\r\n    }\r\n  };\r\n  const reject = (value) => {\r\n    if (!isResolved) {\r\n      isResolved = true;\r\n      config.onError?.(value);\r\n      continueFn?.();\r\n      thenable.reject(value);\r\n    }\r\n  };\r\n  const pause = () => {\r\n    return new Promise((continueResolve) => {\r\n      continueFn = (value) => {\r\n        if (isResolved || canContinue()) {\r\n          continueResolve(value);\r\n        }\r\n      };\r\n      config.onPause?.();\r\n    }).then(() => {\r\n      continueFn = void 0;\r\n      if (!isResolved) {\r\n        config.onContinue?.();\r\n      }\r\n    });\r\n  };\r\n  const run = () => {\r\n    if (isResolved) {\r\n      return;\r\n    }\r\n    let promiseOrValue;\r\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\r\n    try {\r\n      promiseOrValue = initialPromise ?? config.fn();\r\n    } catch (error) {\r\n      promiseOrValue = Promise.reject(error);\r\n    }\r\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\r\n      if (isResolved) {\r\n        return;\r\n      }\r\n      const retry = config.retry ?? (_utils_js__WEBPACK_IMPORTED_MODULE_3__.isServer ? 0 : 3);\r\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\r\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\r\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\r\n      if (isRetryCancelled || !shouldRetry) {\r\n        reject(error);\r\n        return;\r\n      }\r\n      failureCount++;\r\n      config.onFail?.(failureCount, error);\r\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(delay).then(() => {\r\n        return canContinue() ? void 0 : pause();\r\n      }).then(() => {\r\n        if (isRetryCancelled) {\r\n          reject(error);\r\n        } else {\r\n          run();\r\n        }\r\n      });\r\n    });\r\n  };\r\n  return {\r\n    promise: thenable,\r\n    cancel,\r\n    continue: () => {\r\n      continueFn?.();\r\n      return thenable;\r\n    },\r\n    cancelRetry,\r\n    continueRetry,\r\n    canStart,\r\n    start: () => {\r\n      if (canStart()) {\r\n        run();\r\n      } else {\r\n        pause().then(run);\r\n      }\r\n      return thenable;\r\n    }\r\n  };\r\n}\r\n\r\n//# sourceMappingURL=retryer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcmV0cnllci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ2lEO0FBQ0U7QUFDSDtBQUNIO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELDREQUFhO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDZEQUFlO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwwREFBWSxvREFBb0QsNERBQWE7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQywrQ0FBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGdEQUFLO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcQHRhbnN0YWNrXFxxdWVyeS1jb3JlXFxidWlsZFxcbW9kZXJuXFxyZXRyeWVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9yZXRyeWVyLnRzXHJcbmltcG9ydCB7IGZvY3VzTWFuYWdlciB9IGZyb20gXCIuL2ZvY3VzTWFuYWdlci5qc1wiO1xyXG5pbXBvcnQgeyBvbmxpbmVNYW5hZ2VyIH0gZnJvbSBcIi4vb25saW5lTWFuYWdlci5qc1wiO1xyXG5pbXBvcnQgeyBwZW5kaW5nVGhlbmFibGUgfSBmcm9tIFwiLi90aGVuYWJsZS5qc1wiO1xyXG5pbXBvcnQgeyBpc1NlcnZlciwgc2xlZXAgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xyXG5mdW5jdGlvbiBkZWZhdWx0UmV0cnlEZWxheShmYWlsdXJlQ291bnQpIHtcclxuICByZXR1cm4gTWF0aC5taW4oMWUzICogMiAqKiBmYWlsdXJlQ291bnQsIDNlNCk7XHJcbn1cclxuZnVuY3Rpb24gY2FuRmV0Y2gobmV0d29ya01vZGUpIHtcclxuICByZXR1cm4gKG5ldHdvcmtNb2RlID8/IFwib25saW5lXCIpID09PSBcIm9ubGluZVwiID8gb25saW5lTWFuYWdlci5pc09ubGluZSgpIDogdHJ1ZTtcclxufVxyXG52YXIgQ2FuY2VsbGVkRXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICBzdXBlcihcIkNhbmNlbGxlZEVycm9yXCIpO1xyXG4gICAgdGhpcy5yZXZlcnQgPSBvcHRpb25zPy5yZXZlcnQ7XHJcbiAgICB0aGlzLnNpbGVudCA9IG9wdGlvbnM/LnNpbGVudDtcclxuICB9XHJcbn07XHJcbmZ1bmN0aW9uIGlzQ2FuY2VsbGVkRXJyb3IodmFsdWUpIHtcclxuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBDYW5jZWxsZWRFcnJvcjtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVSZXRyeWVyKGNvbmZpZykge1xyXG4gIGxldCBpc1JldHJ5Q2FuY2VsbGVkID0gZmFsc2U7XHJcbiAgbGV0IGZhaWx1cmVDb3VudCA9IDA7XHJcbiAgbGV0IGlzUmVzb2x2ZWQgPSBmYWxzZTtcclxuICBsZXQgY29udGludWVGbjtcclxuICBjb25zdCB0aGVuYWJsZSA9IHBlbmRpbmdUaGVuYWJsZSgpO1xyXG4gIGNvbnN0IGNhbmNlbCA9IChjYW5jZWxPcHRpb25zKSA9PiB7XHJcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcclxuICAgICAgcmVqZWN0KG5ldyBDYW5jZWxsZWRFcnJvcihjYW5jZWxPcHRpb25zKSk7XHJcbiAgICAgIGNvbmZpZy5hYm9ydD8uKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuICBjb25zdCBjYW5jZWxSZXRyeSA9ICgpID0+IHtcclxuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSB0cnVlO1xyXG4gIH07XHJcbiAgY29uc3QgY29udGludWVSZXRyeSA9ICgpID0+IHtcclxuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSBmYWxzZTtcclxuICB9O1xyXG4gIGNvbnN0IGNhbkNvbnRpbnVlID0gKCkgPT4gZm9jdXNNYW5hZ2VyLmlzRm9jdXNlZCgpICYmIChjb25maWcubmV0d29ya01vZGUgPT09IFwiYWx3YXlzXCIgfHwgb25saW5lTWFuYWdlci5pc09ubGluZSgpKSAmJiBjb25maWcuY2FuUnVuKCk7XHJcbiAgY29uc3QgY2FuU3RhcnQgPSAoKSA9PiBjYW5GZXRjaChjb25maWcubmV0d29ya01vZGUpICYmIGNvbmZpZy5jYW5SdW4oKTtcclxuICBjb25zdCByZXNvbHZlID0gKHZhbHVlKSA9PiB7XHJcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcclxuICAgICAgaXNSZXNvbHZlZCA9IHRydWU7XHJcbiAgICAgIGNvbmZpZy5vblN1Y2Nlc3M/Lih2YWx1ZSk7XHJcbiAgICAgIGNvbnRpbnVlRm4/LigpO1xyXG4gICAgICB0aGVuYWJsZS5yZXNvbHZlKHZhbHVlKTtcclxuICAgIH1cclxuICB9O1xyXG4gIGNvbnN0IHJlamVjdCA9ICh2YWx1ZSkgPT4ge1xyXG4gICAgaWYgKCFpc1Jlc29sdmVkKSB7XHJcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xyXG4gICAgICBjb25maWcub25FcnJvcj8uKHZhbHVlKTtcclxuICAgICAgY29udGludWVGbj8uKCk7XHJcbiAgICAgIHRoZW5hYmxlLnJlamVjdCh2YWx1ZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuICBjb25zdCBwYXVzZSA9ICgpID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgoY29udGludWVSZXNvbHZlKSA9PiB7XHJcbiAgICAgIGNvbnRpbnVlRm4gPSAodmFsdWUpID0+IHtcclxuICAgICAgICBpZiAoaXNSZXNvbHZlZCB8fCBjYW5Db250aW51ZSgpKSB7XHJcbiAgICAgICAgICBjb250aW51ZVJlc29sdmUodmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgICAgY29uZmlnLm9uUGF1c2U/LigpO1xyXG4gICAgfSkudGhlbigoKSA9PiB7XHJcbiAgICAgIGNvbnRpbnVlRm4gPSB2b2lkIDA7XHJcbiAgICAgIGlmICghaXNSZXNvbHZlZCkge1xyXG4gICAgICAgIGNvbmZpZy5vbkNvbnRpbnVlPy4oKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuICBjb25zdCBydW4gPSAoKSA9PiB7XHJcbiAgICBpZiAoaXNSZXNvbHZlZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBsZXQgcHJvbWlzZU9yVmFsdWU7XHJcbiAgICBjb25zdCBpbml0aWFsUHJvbWlzZSA9IGZhaWx1cmVDb3VudCA9PT0gMCA/IGNvbmZpZy5pbml0aWFsUHJvbWlzZSA6IHZvaWQgMDtcclxuICAgIHRyeSB7XHJcbiAgICAgIHByb21pc2VPclZhbHVlID0gaW5pdGlhbFByb21pc2UgPz8gY29uZmlnLmZuKCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IFByb21pc2UucmVqZWN0KGVycm9yKTtcclxuICAgIH1cclxuICAgIFByb21pc2UucmVzb2x2ZShwcm9taXNlT3JWYWx1ZSkudGhlbihyZXNvbHZlKS5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgaWYgKGlzUmVzb2x2ZWQpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgcmV0cnkgPSBjb25maWcucmV0cnkgPz8gKGlzU2VydmVyID8gMCA6IDMpO1xyXG4gICAgICBjb25zdCByZXRyeURlbGF5ID0gY29uZmlnLnJldHJ5RGVsYXkgPz8gZGVmYXVsdFJldHJ5RGVsYXk7XHJcbiAgICAgIGNvbnN0IGRlbGF5ID0gdHlwZW9mIHJldHJ5RGVsYXkgPT09IFwiZnVuY3Rpb25cIiA/IHJldHJ5RGVsYXkoZmFpbHVyZUNvdW50LCBlcnJvcikgOiByZXRyeURlbGF5O1xyXG4gICAgICBjb25zdCBzaG91bGRSZXRyeSA9IHJldHJ5ID09PSB0cnVlIHx8IHR5cGVvZiByZXRyeSA9PT0gXCJudW1iZXJcIiAmJiBmYWlsdXJlQ291bnQgPCByZXRyeSB8fCB0eXBlb2YgcmV0cnkgPT09IFwiZnVuY3Rpb25cIiAmJiByZXRyeShmYWlsdXJlQ291bnQsIGVycm9yKTtcclxuICAgICAgaWYgKGlzUmV0cnlDYW5jZWxsZWQgfHwgIXNob3VsZFJldHJ5KSB7XHJcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgZmFpbHVyZUNvdW50Kys7XHJcbiAgICAgIGNvbmZpZy5vbkZhaWw/LihmYWlsdXJlQ291bnQsIGVycm9yKTtcclxuICAgICAgc2xlZXAoZGVsYXkpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBjYW5Db250aW51ZSgpID8gdm9pZCAwIDogcGF1c2UoKTtcclxuICAgICAgfSkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgaWYgKGlzUmV0cnlDYW5jZWxsZWQpIHtcclxuICAgICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJ1bigpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG4gIHJldHVybiB7XHJcbiAgICBwcm9taXNlOiB0aGVuYWJsZSxcclxuICAgIGNhbmNlbCxcclxuICAgIGNvbnRpbnVlOiAoKSA9PiB7XHJcbiAgICAgIGNvbnRpbnVlRm4/LigpO1xyXG4gICAgICByZXR1cm4gdGhlbmFibGU7XHJcbiAgICB9LFxyXG4gICAgY2FuY2VsUmV0cnksXHJcbiAgICBjb250aW51ZVJldHJ5LFxyXG4gICAgY2FuU3RhcnQsXHJcbiAgICBzdGFydDogKCkgPT4ge1xyXG4gICAgICBpZiAoY2FuU3RhcnQoKSkge1xyXG4gICAgICAgIHJ1bigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHBhdXNlKCkudGhlbihydW4pO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiB0aGVuYWJsZTtcclxuICAgIH1cclxuICB9O1xyXG59XHJcbmV4cG9ydCB7XHJcbiAgQ2FuY2VsbGVkRXJyb3IsXHJcbiAgY2FuRmV0Y2gsXHJcbiAgY3JlYXRlUmV0cnllcixcclxuICBpc0NhbmNlbGxlZEVycm9yXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJldHJ5ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/retryer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/subscribable.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/subscribable.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: () => (/* binding */ Subscribable)\n/* harmony export */ });\n// src/subscribable.ts\r\nvar Subscribable = class {\r\n  constructor() {\r\n    this.listeners = /* @__PURE__ */ new Set();\r\n    this.subscribe = this.subscribe.bind(this);\r\n  }\r\n  subscribe(listener) {\r\n    this.listeners.add(listener);\r\n    this.onSubscribe();\r\n    return () => {\r\n      this.listeners.delete(listener);\r\n      this.onUnsubscribe();\r\n    };\r\n  }\r\n  hasListeners() {\r\n    return this.listeners.size > 0;\r\n  }\r\n  onSubscribe() {\r\n  }\r\n  onUnsubscribe() {\r\n  }\r\n};\r\n\r\n//# sourceMappingURL=subscribable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vc3Vic2NyaWJhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEB0YW5zdGFja1xccXVlcnktY29yZVxcYnVpbGRcXG1vZGVyblxcc3Vic2NyaWJhYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zdWJzY3JpYmFibGUudHNcclxudmFyIFN1YnNjcmliYWJsZSA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMubGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcclxuICAgIHRoaXMuc3Vic2NyaWJlID0gdGhpcy5zdWJzY3JpYmUuYmluZCh0aGlzKTtcclxuICB9XHJcbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XHJcbiAgICB0aGlzLmxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xyXG4gICAgdGhpcy5vblN1YnNjcmliZSgpO1xyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgdGhpcy5saXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcclxuICAgICAgdGhpcy5vblVuc3Vic2NyaWJlKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuICBoYXNMaXN0ZW5lcnMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMuc2l6ZSA+IDA7XHJcbiAgfVxyXG4gIG9uU3Vic2NyaWJlKCkge1xyXG4gIH1cclxuICBvblVuc3Vic2NyaWJlKCkge1xyXG4gIH1cclxufTtcclxuZXhwb3J0IHtcclxuICBTdWJzY3JpYmFibGVcclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Vic2NyaWJhYmxlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/thenable.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/thenable.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pendingThenable: () => (/* binding */ pendingThenable),\n/* harmony export */   tryResolveSync: () => (/* binding */ tryResolveSync)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/thenable.ts\r\n\r\nfunction pendingThenable() {\r\n  let resolve;\r\n  let reject;\r\n  const thenable = new Promise((_resolve, _reject) => {\r\n    resolve = _resolve;\r\n    reject = _reject;\r\n  });\r\n  thenable.status = \"pending\";\r\n  thenable.catch(() => {\r\n  });\r\n  function finalize(data) {\r\n    Object.assign(thenable, data);\r\n    delete thenable.resolve;\r\n    delete thenable.reject;\r\n  }\r\n  thenable.resolve = (value) => {\r\n    finalize({\r\n      status: \"fulfilled\",\r\n      value\r\n    });\r\n    resolve(value);\r\n  };\r\n  thenable.reject = (reason) => {\r\n    finalize({\r\n      status: \"rejected\",\r\n      reason\r\n    });\r\n    reject(reason);\r\n  };\r\n  return thenable;\r\n}\r\nfunction tryResolveSync(promise) {\r\n  let data;\r\n  promise.then((result) => {\r\n    data = result;\r\n    return result;\r\n  }, _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop)?.catch(_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop);\r\n  if (data !== void 0) {\r\n    return { data };\r\n  }\r\n  return void 0;\r\n}\r\n\r\n//# sourceMappingURL=thenable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vdGhlbmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEVBQUUsMkNBQUksU0FBUywyQ0FBSTtBQUN0QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxAdGFuc3RhY2tcXHF1ZXJ5LWNvcmVcXGJ1aWxkXFxtb2Rlcm5cXHRoZW5hYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy90aGVuYWJsZS50c1xyXG5pbXBvcnQgeyBub29wIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcclxuZnVuY3Rpb24gcGVuZGluZ1RoZW5hYmxlKCkge1xyXG4gIGxldCByZXNvbHZlO1xyXG4gIGxldCByZWplY3Q7XHJcbiAgY29uc3QgdGhlbmFibGUgPSBuZXcgUHJvbWlzZSgoX3Jlc29sdmUsIF9yZWplY3QpID0+IHtcclxuICAgIHJlc29sdmUgPSBfcmVzb2x2ZTtcclxuICAgIHJlamVjdCA9IF9yZWplY3Q7XHJcbiAgfSk7XHJcbiAgdGhlbmFibGUuc3RhdHVzID0gXCJwZW5kaW5nXCI7XHJcbiAgdGhlbmFibGUuY2F0Y2goKCkgPT4ge1xyXG4gIH0pO1xyXG4gIGZ1bmN0aW9uIGZpbmFsaXplKGRhdGEpIHtcclxuICAgIE9iamVjdC5hc3NpZ24odGhlbmFibGUsIGRhdGEpO1xyXG4gICAgZGVsZXRlIHRoZW5hYmxlLnJlc29sdmU7XHJcbiAgICBkZWxldGUgdGhlbmFibGUucmVqZWN0O1xyXG4gIH1cclxuICB0aGVuYWJsZS5yZXNvbHZlID0gKHZhbHVlKSA9PiB7XHJcbiAgICBmaW5hbGl6ZSh7XHJcbiAgICAgIHN0YXR1czogXCJmdWxmaWxsZWRcIixcclxuICAgICAgdmFsdWVcclxuICAgIH0pO1xyXG4gICAgcmVzb2x2ZSh2YWx1ZSk7XHJcbiAgfTtcclxuICB0aGVuYWJsZS5yZWplY3QgPSAocmVhc29uKSA9PiB7XHJcbiAgICBmaW5hbGl6ZSh7XHJcbiAgICAgIHN0YXR1czogXCJyZWplY3RlZFwiLFxyXG4gICAgICByZWFzb25cclxuICAgIH0pO1xyXG4gICAgcmVqZWN0KHJlYXNvbik7XHJcbiAgfTtcclxuICByZXR1cm4gdGhlbmFibGU7XHJcbn1cclxuZnVuY3Rpb24gdHJ5UmVzb2x2ZVN5bmMocHJvbWlzZSkge1xyXG4gIGxldCBkYXRhO1xyXG4gIHByb21pc2UudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICBkYXRhID0gcmVzdWx0O1xyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9LCBub29wKT8uY2F0Y2gobm9vcCk7XHJcbiAgaWYgKGRhdGEgIT09IHZvaWQgMCkge1xyXG4gICAgcmV0dXJuIHsgZGF0YSB9O1xyXG4gIH1cclxuICByZXR1cm4gdm9pZCAwO1xyXG59XHJcbmV4cG9ydCB7XHJcbiAgcGVuZGluZ1RoZW5hYmxlLFxyXG4gIHRyeVJlc29sdmVTeW5jXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRoZW5hYmxlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/thenable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToEnd: () => (/* binding */ addToEnd),\n/* harmony export */   addToStart: () => (/* binding */ addToStart),\n/* harmony export */   ensureQueryFn: () => (/* binding */ ensureQueryFn),\n/* harmony export */   functionalUpdate: () => (/* binding */ functionalUpdate),\n/* harmony export */   hashKey: () => (/* binding */ hashKey),\n/* harmony export */   hashQueryKeyByOptions: () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   isPlainArray: () => (/* binding */ isPlainArray),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   isValidTimeout: () => (/* binding */ isValidTimeout),\n/* harmony export */   keepPreviousData: () => (/* binding */ keepPreviousData),\n/* harmony export */   matchMutation: () => (/* binding */ matchMutation),\n/* harmony export */   matchQuery: () => (/* binding */ matchQuery),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   partialMatchKey: () => (/* binding */ partialMatchKey),\n/* harmony export */   replaceData: () => (/* binding */ replaceData),\n/* harmony export */   replaceEqualDeep: () => (/* binding */ replaceEqualDeep),\n/* harmony export */   resolveEnabled: () => (/* binding */ resolveEnabled),\n/* harmony export */   resolveStaleTime: () => (/* binding */ resolveStaleTime),\n/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects),\n/* harmony export */   shouldThrowError: () => (/* binding */ shouldThrowError),\n/* harmony export */   skipToken: () => (/* binding */ skipToken),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUntilStale: () => (/* binding */ timeUntilStale)\n/* harmony export */ });\n// src/utils.ts\r\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\r\nfunction noop() {\r\n}\r\nfunction functionalUpdate(updater, input) {\r\n  return typeof updater === \"function\" ? updater(input) : updater;\r\n}\r\nfunction isValidTimeout(value) {\r\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\r\n}\r\nfunction timeUntilStale(updatedAt, staleTime) {\r\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\r\n}\r\nfunction resolveStaleTime(staleTime, query) {\r\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\r\n}\r\nfunction resolveEnabled(enabled, query) {\r\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\r\n}\r\nfunction matchQuery(filters, query) {\r\n  const {\r\n    type = \"all\",\r\n    exact,\r\n    fetchStatus,\r\n    predicate,\r\n    queryKey,\r\n    stale\r\n  } = filters;\r\n  if (queryKey) {\r\n    if (exact) {\r\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\r\n        return false;\r\n      }\r\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\r\n      return false;\r\n    }\r\n  }\r\n  if (type !== \"all\") {\r\n    const isActive = query.isActive();\r\n    if (type === \"active\" && !isActive) {\r\n      return false;\r\n    }\r\n    if (type === \"inactive\" && isActive) {\r\n      return false;\r\n    }\r\n  }\r\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\r\n    return false;\r\n  }\r\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\r\n    return false;\r\n  }\r\n  if (predicate && !predicate(query)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction matchMutation(filters, mutation) {\r\n  const { exact, status, predicate, mutationKey } = filters;\r\n  if (mutationKey) {\r\n    if (!mutation.options.mutationKey) {\r\n      return false;\r\n    }\r\n    if (exact) {\r\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\r\n        return false;\r\n      }\r\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\r\n      return false;\r\n    }\r\n  }\r\n  if (status && mutation.state.status !== status) {\r\n    return false;\r\n  }\r\n  if (predicate && !predicate(mutation)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction hashQueryKeyByOptions(queryKey, options) {\r\n  const hashFn = options?.queryKeyHashFn || hashKey;\r\n  return hashFn(queryKey);\r\n}\r\nfunction hashKey(queryKey) {\r\n  return JSON.stringify(\r\n    queryKey,\r\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\r\n      result[key] = val[key];\r\n      return result;\r\n    }, {}) : val\r\n  );\r\n}\r\nfunction partialMatchKey(a, b) {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (typeof a !== typeof b) {\r\n    return false;\r\n  }\r\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\r\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\r\n  }\r\n  return false;\r\n}\r\nfunction replaceEqualDeep(a, b) {\r\n  if (a === b) {\r\n    return a;\r\n  }\r\n  const array = isPlainArray(a) && isPlainArray(b);\r\n  if (array || isPlainObject(a) && isPlainObject(b)) {\r\n    const aItems = array ? a : Object.keys(a);\r\n    const aSize = aItems.length;\r\n    const bItems = array ? b : Object.keys(b);\r\n    const bSize = bItems.length;\r\n    const copy = array ? [] : {};\r\n    const aItemsSet = new Set(aItems);\r\n    let equalItems = 0;\r\n    for (let i = 0; i < bSize; i++) {\r\n      const key = array ? i : bItems[i];\r\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\r\n        copy[key] = void 0;\r\n        equalItems++;\r\n      } else {\r\n        copy[key] = replaceEqualDeep(a[key], b[key]);\r\n        if (copy[key] === a[key] && a[key] !== void 0) {\r\n          equalItems++;\r\n        }\r\n      }\r\n    }\r\n    return aSize === bSize && equalItems === aSize ? a : copy;\r\n  }\r\n  return b;\r\n}\r\nfunction shallowEqualObjects(a, b) {\r\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\r\n    return false;\r\n  }\r\n  for (const key in a) {\r\n    if (a[key] !== b[key]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction isPlainArray(value) {\r\n  return Array.isArray(value) && value.length === Object.keys(value).length;\r\n}\r\nfunction isPlainObject(o) {\r\n  if (!hasObjectPrototype(o)) {\r\n    return false;\r\n  }\r\n  const ctor = o.constructor;\r\n  if (ctor === void 0) {\r\n    return true;\r\n  }\r\n  const prot = ctor.prototype;\r\n  if (!hasObjectPrototype(prot)) {\r\n    return false;\r\n  }\r\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\r\n    return false;\r\n  }\r\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction hasObjectPrototype(o) {\r\n  return Object.prototype.toString.call(o) === \"[object Object]\";\r\n}\r\nfunction sleep(timeout) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, timeout);\r\n  });\r\n}\r\nfunction replaceData(prevData, data, options) {\r\n  if (typeof options.structuralSharing === \"function\") {\r\n    return options.structuralSharing(prevData, data);\r\n  } else if (options.structuralSharing !== false) {\r\n    if (true) {\r\n      try {\r\n        return replaceEqualDeep(prevData, data);\r\n      } catch (error) {\r\n        console.error(\r\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\r\n        );\r\n        throw error;\r\n      }\r\n    }\r\n    return replaceEqualDeep(prevData, data);\r\n  }\r\n  return data;\r\n}\r\nfunction keepPreviousData(previousData) {\r\n  return previousData;\r\n}\r\nfunction addToEnd(items, item, max = 0) {\r\n  const newItems = [...items, item];\r\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\r\n}\r\nfunction addToStart(items, item, max = 0) {\r\n  const newItems = [item, ...items];\r\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\r\n}\r\nvar skipToken = Symbol();\r\nfunction ensureQueryFn(options, fetchOptions) {\r\n  if (true) {\r\n    if (options.queryFn === skipToken) {\r\n      console.error(\r\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\r\n      );\r\n    }\r\n  }\r\n  if (!options.queryFn && fetchOptions?.initialPromise) {\r\n    return () => fetchOptions.initialPromise;\r\n  }\r\n  if (!options.queryFn || options.queryFn === skipToken) {\r\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\r\n  }\r\n  return options.queryFn;\r\n}\r\nfunction shouldThrowError(throwOnError, params) {\r\n  if (typeof throwOnError === \"function\") {\r\n    return throwOnError(...params);\r\n  }\r\n  return !!throwOnError;\r\n}\r\n\r\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientContext: () => (/* binding */ QueryClientContext),\n/* harmony export */   QueryClientProvider: () => (/* binding */ QueryClientProvider),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ QueryClientContext,QueryClientProvider,useQueryClient auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n// src/QueryClientProvider.tsx\n\n\nvar QueryClientContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar useQueryClient = (queryClient)=>{\n    _s();\n    const client = react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);\n    if (queryClient) {\n        return queryClient;\n    }\n    if (!client) {\n        throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n    }\n    return client;\n};\n_s(useQueryClient, \"6C1IqtdJdCPZ/voWsX/6r3Oc32M=\");\nvar QueryClientProvider = (param)=>{\n    let { client, children } = param;\n    _s1();\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"QueryClientProvider.useEffect\": ()=>{\n            client.mount();\n            return ({\n                \"QueryClientProvider.useEffect\": ()=>{\n                    client.unmount();\n                }\n            })[\"QueryClientProvider.useEffect\"];\n        }\n    }[\"QueryClientProvider.useEffect\"], [\n        client\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider, {\n        value: client,\n        children\n    });\n};\n_s1(QueryClientProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = QueryClientProvider;\n //# sourceMappingURL=QueryClientProvider.js.map\nvar _c;\n$RefreshReg$(_c, \"QueryClientProvider\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL1F1ZXJ5Q2xpZW50UHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRUEsOEJBQThCO0FBQ0M7QUFDUztBQUN4QyxJQUFJRSxtQ0FBcUJGLGdEQUFtQixDQUMxQyxLQUFLO0FBRVAsSUFBSUksaUJBQWlCLENBQUNDOztJQUNwQixNQUFNQyxTQUFTTiw2Q0FBZ0IsQ0FBQ0U7SUFDaEMsSUFBSUcsYUFBYTtRQUNmLE9BQU9BO0lBQ1Q7SUFDQSxJQUFJLENBQUNDLFFBQVE7UUFDWCxNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFDQSxPQUFPRjtBQUNUO0dBVElGO0FBVUosSUFBSUssc0JBQXNCO1FBQUMsRUFDekJILE1BQU0sRUFDTkksUUFBUSxFQUNUOztJQUNDViw0Q0FBZTt5Q0FBQztZQUNkTSxPQUFPTSxLQUFLO1lBQ1o7aURBQU87b0JBQ0xOLE9BQU9PLE9BQU87Z0JBQ2hCOztRQUNGO3dDQUFHO1FBQUNQO0tBQU87SUFDWCxPQUFPLGFBQWEsR0FBR0wsc0RBQUdBLENBQUNDLG1CQUFtQlksUUFBUSxFQUFFO1FBQUVDLE9BQU9UO1FBQVFJO0lBQVM7QUFDcEY7SUFYSUQ7S0FBQUE7QUFnQkYsQ0FDRiwrQ0FBK0MiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXEB0YW5zdGFja1xccmVhY3QtcXVlcnlcXGJ1aWxkXFxtb2Rlcm5cXFF1ZXJ5Q2xpZW50UHJvdmlkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG4vLyBzcmMvUXVlcnlDbGllbnRQcm92aWRlci50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xyXG52YXIgUXVlcnlDbGllbnRDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChcclxuICB2b2lkIDBcclxuKTtcclxudmFyIHVzZVF1ZXJ5Q2xpZW50ID0gKHF1ZXJ5Q2xpZW50KSA9PiB7XHJcbiAgY29uc3QgY2xpZW50ID0gUmVhY3QudXNlQ29udGV4dChRdWVyeUNsaWVudENvbnRleHQpO1xyXG4gIGlmIChxdWVyeUNsaWVudCkge1xyXG4gICAgcmV0dXJuIHF1ZXJ5Q2xpZW50O1xyXG4gIH1cclxuICBpZiAoIWNsaWVudCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gUXVlcnlDbGllbnQgc2V0LCB1c2UgUXVlcnlDbGllbnRQcm92aWRlciB0byBzZXQgb25lXCIpO1xyXG4gIH1cclxuICByZXR1cm4gY2xpZW50O1xyXG59O1xyXG52YXIgUXVlcnlDbGllbnRQcm92aWRlciA9ICh7XHJcbiAgY2xpZW50LFxyXG4gIGNoaWxkcmVuXHJcbn0pID0+IHtcclxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY2xpZW50Lm1vdW50KCk7XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBjbGllbnQudW5tb3VudCgpO1xyXG4gICAgfTtcclxuICB9LCBbY2xpZW50XSk7XHJcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goUXVlcnlDbGllbnRDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjbGllbnQsIGNoaWxkcmVuIH0pO1xyXG59O1xyXG5leHBvcnQge1xyXG4gIFF1ZXJ5Q2xpZW50Q29udGV4dCxcclxuICBRdWVyeUNsaWVudFByb3ZpZGVyLFxyXG4gIHVzZVF1ZXJ5Q2xpZW50XHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1ZXJ5Q2xpZW50UHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwianN4IiwiUXVlcnlDbGllbnRDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVF1ZXJ5Q2xpZW50IiwicXVlcnlDbGllbnQiLCJjbGllbnQiLCJ1c2VDb250ZXh0IiwiRXJyb3IiLCJRdWVyeUNsaWVudFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJ1c2VFZmZlY3QiLCJtb3VudCIsInVubW91bnQiLCJQcm92aWRlciIsInZhbHVlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/class-variance-authority/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cva: () => (/* binding */ cva),\n/* harmony export */   cx: () => (/* binding */ cx)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/**\r\n * Copyright 2022 Joe Bell. All rights reserved.\r\n *\r\n * This file is licensed to you under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with the\r\n * License. You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\r\n * License for the specific language governing permissions and limitations under\r\n * the License.\r\n */ \r\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\r\nconst cx = clsx__WEBPACK_IMPORTED_MODULE_0__.clsx;\r\nconst cva = (base, config)=>(props)=>{\r\n        var _config_compoundVariants;\r\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\r\n        const { variants, defaultVariants } = config;\r\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\r\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\r\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\r\n            if (variantProp === null) return null;\r\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\r\n            return variants[variant][variantKey];\r\n        });\r\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\r\n            let [key, value] = param;\r\n            if (value === undefined) {\r\n                return acc;\r\n            }\r\n            acc[key] = value;\r\n            return acc;\r\n        }, {});\r\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\r\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\r\n            return Object.entries(compoundVariantOptions).every((param)=>{\r\n                let [key, value] = param;\r\n                return Array.isArray(value) ? value.includes({\r\n                    ...defaultVariants,\r\n                    ...propsWithoutUndefined\r\n                }[key]) : ({\r\n                    ...defaultVariants,\r\n                    ...propsWithoutUndefined\r\n                })[key] === value;\r\n            }) ? [\r\n                ...acc,\r\n                cvClass,\r\n                cvClassName\r\n            ] : acc;\r\n        }, []);\r\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\r\n    };\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbGFzcy12YXJpYW5jZS1hdXRob3JpdHkvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBZ0M7QUFDaEMsK0RBQStELE1BQU07QUFDOUQsV0FBVyxzQ0FBSTtBQUNmO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQiw0QkFBNEI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2I7QUFDQSxrQkFBa0Isb0VBQW9FO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxjbGFzcy12YXJpYW5jZS1hdXRob3JpdHlcXGRpc3RcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IDIwMjIgSm9lIEJlbGwuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgZmlsZSBpcyBsaWNlbnNlZCB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMFxyXG4gKiAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZVxyXG4gKiBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcclxuICogV0FSUkFOVElFUyBPUiBSRVBSRVNFTlRBVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcclxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXJcclxuICogdGhlIExpY2Vuc2UuXHJcbiAqLyBpbXBvcnQgeyBjbHN4IH0gZnJvbSBcImNsc3hcIjtcclxuY29uc3QgZmFsc3lUb1N0cmluZyA9ICh2YWx1ZSk9PnR5cGVvZiB2YWx1ZSA9PT0gXCJib29sZWFuXCIgPyBgJHt2YWx1ZX1gIDogdmFsdWUgPT09IDAgPyBcIjBcIiA6IHZhbHVlO1xyXG5leHBvcnQgY29uc3QgY3ggPSBjbHN4O1xyXG5leHBvcnQgY29uc3QgY3ZhID0gKGJhc2UsIGNvbmZpZyk9Pihwcm9wcyk9PntcclxuICAgICAgICB2YXIgX2NvbmZpZ19jb21wb3VuZFZhcmlhbnRzO1xyXG4gICAgICAgIGlmICgoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLnZhcmlhbnRzKSA9PSBudWxsKSByZXR1cm4gY3goYmFzZSwgcHJvcHMgPT09IG51bGwgfHwgcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3BzLmNsYXNzLCBwcm9wcyA9PT0gbnVsbCB8fCBwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvcHMuY2xhc3NOYW1lKTtcclxuICAgICAgICBjb25zdCB7IHZhcmlhbnRzLCBkZWZhdWx0VmFyaWFudHMgfSA9IGNvbmZpZztcclxuICAgICAgICBjb25zdCBnZXRWYXJpYW50Q2xhc3NOYW1lcyA9IE9iamVjdC5rZXlzKHZhcmlhbnRzKS5tYXAoKHZhcmlhbnQpPT57XHJcbiAgICAgICAgICAgIGNvbnN0IHZhcmlhbnRQcm9wID0gcHJvcHMgPT09IG51bGwgfHwgcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3BzW3ZhcmlhbnRdO1xyXG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0VmFyaWFudFByb3AgPSBkZWZhdWx0VmFyaWFudHMgPT09IG51bGwgfHwgZGVmYXVsdFZhcmlhbnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkZWZhdWx0VmFyaWFudHNbdmFyaWFudF07XHJcbiAgICAgICAgICAgIGlmICh2YXJpYW50UHJvcCA9PT0gbnVsbCkgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIGNvbnN0IHZhcmlhbnRLZXkgPSBmYWxzeVRvU3RyaW5nKHZhcmlhbnRQcm9wKSB8fCBmYWxzeVRvU3RyaW5nKGRlZmF1bHRWYXJpYW50UHJvcCk7XHJcbiAgICAgICAgICAgIHJldHVybiB2YXJpYW50c1t2YXJpYW50XVt2YXJpYW50S2V5XTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBwcm9wc1dpdGhvdXRVbmRlZmluZWQgPSBwcm9wcyAmJiBPYmplY3QuZW50cmllcyhwcm9wcykucmVkdWNlKChhY2MsIHBhcmFtKT0+e1xyXG4gICAgICAgICAgICBsZXQgW2tleSwgdmFsdWVdID0gcGFyYW07XHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYWNjO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGFjY1trZXldID0gdmFsdWU7XHJcbiAgICAgICAgICAgIHJldHVybiBhY2M7XHJcbiAgICAgICAgfSwge30pO1xyXG4gICAgICAgIGNvbnN0IGdldENvbXBvdW5kVmFyaWFudENsYXNzTmFtZXMgPSBjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2NvbmZpZ19jb21wb3VuZFZhcmlhbnRzID0gY29uZmlnLmNvbXBvdW5kVmFyaWFudHMpID09PSBudWxsIHx8IF9jb25maWdfY29tcG91bmRWYXJpYW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2NvbmZpZ19jb21wb3VuZFZhcmlhbnRzLnJlZHVjZSgoYWNjLCBwYXJhbSk9PntcclxuICAgICAgICAgICAgbGV0IHsgY2xhc3M6IGN2Q2xhc3MsIGNsYXNzTmFtZTogY3ZDbGFzc05hbWUsIC4uLmNvbXBvdW5kVmFyaWFudE9wdGlvbnMgfSA9IHBhcmFtO1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMoY29tcG91bmRWYXJpYW50T3B0aW9ucykuZXZlcnkoKHBhcmFtKT0+e1xyXG4gICAgICAgICAgICAgICAgbGV0IFtrZXksIHZhbHVlXSA9IHBhcmFtO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUuaW5jbHVkZXMoe1xyXG4gICAgICAgICAgICAgICAgICAgIC4uLmRlZmF1bHRWYXJpYW50cyxcclxuICAgICAgICAgICAgICAgICAgICAuLi5wcm9wc1dpdGhvdXRVbmRlZmluZWRcclxuICAgICAgICAgICAgICAgIH1ba2V5XSkgOiAoe1xyXG4gICAgICAgICAgICAgICAgICAgIC4uLmRlZmF1bHRWYXJpYW50cyxcclxuICAgICAgICAgICAgICAgICAgICAuLi5wcm9wc1dpdGhvdXRVbmRlZmluZWRcclxuICAgICAgICAgICAgICAgIH0pW2tleV0gPT09IHZhbHVlO1xyXG4gICAgICAgICAgICB9KSA/IFtcclxuICAgICAgICAgICAgICAgIC4uLmFjYyxcclxuICAgICAgICAgICAgICAgIGN2Q2xhc3MsXHJcbiAgICAgICAgICAgICAgICBjdkNsYXNzTmFtZVxyXG4gICAgICAgICAgICBdIDogYWNjO1xyXG4gICAgICAgIH0sIFtdKTtcclxuICAgICAgICByZXR1cm4gY3goYmFzZSwgZ2V0VmFyaWFudENsYXNzTmFtZXMsIGdldENvbXBvdW5kVmFyaWFudENsYXNzTmFtZXMsIHByb3BzID09PSBudWxsIHx8IHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm9wcy5jbGFzcywgcHJvcHMgPT09IG51bGwgfHwgcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3BzLmNsYXNzTmFtZSk7XHJcbiAgICB9O1xyXG5cclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/class-variance-authority/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: () => (/* binding */ clsx),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjLGFBQWEsK0NBQStDLGdEQUFnRCxlQUFlLFFBQVEsSUFBSSwwQ0FBMEMseUNBQXlDLFNBQWdCLGdCQUFnQix3Q0FBd0MsSUFBSSxtREFBbUQsU0FBUyxpRUFBZSxJQUFJIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxjbHN4XFxkaXN0XFxjbHN4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiByKGUpe3ZhciB0LGYsbj1cIlwiO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlfHxcIm51bWJlclwiPT10eXBlb2YgZSluKz1lO2Vsc2UgaWYoXCJvYmplY3RcIj09dHlwZW9mIGUpaWYoQXJyYXkuaXNBcnJheShlKSl7dmFyIG89ZS5sZW5ndGg7Zm9yKHQ9MDt0PG87dCsrKWVbdF0mJihmPXIoZVt0XSkpJiYobiYmKG4rPVwiIFwiKSxuKz1mKX1lbHNlIGZvcihmIGluIGUpZVtmXSYmKG4mJihuKz1cIiBcIiksbis9Zik7cmV0dXJuIG59ZXhwb3J0IGZ1bmN0aW9uIGNsc3goKXtmb3IodmFyIGUsdCxmPTAsbj1cIlwiLG89YXJndW1lbnRzLmxlbmd0aDtmPG87ZisrKShlPWFyZ3VtZW50c1tmXSkmJih0PXIoZSkpJiYobiYmKG4rPVwiIFwiKSxuKz10KTtyZXR1cm4gbn1leHBvcnQgZGVmYXVsdCBjbHN4OyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/Icon.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Icon)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \n\n\nconst Icon = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c = (param, ref)=>{\n    let { color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, iconNode, ...rest } = param;\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n        ref,\n        ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide\", className),\n        ...rest\n    }, [\n        ...iconNode.map((param)=>{\n            let [tag, attrs] = param;\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs);\n        }),\n        ...Array.isArray(children) ? children : [\n            children\n        ]\n    ]);\n});\n_c1 = Icon;\n //# sourceMappingURL=Icon.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Icon$forwardRef\");\n$RefreshReg$(_c1, \"Icon\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRWlEO0FBQ0s7QUFDRjtBQUVyRCxNQUFNSSxxQkFBT0osaURBQVVBLE1BQ3JCLFFBU0dLO1FBVEYsRUFDQ0MsUUFBUSxjQUFjLEVBQ3RCQyxPQUFPLEVBQUUsRUFDVEMsY0FBYyxDQUFDLEVBQ2ZDLG1CQUFtQixFQUNuQkMsWUFBWSxFQUFFLEVBQ2RDLFFBQVEsRUFDUkMsUUFBUSxFQUNSLEdBQUdDLE1BQ0o7SUFDQyxxQkFBT1osb0RBQWFBLENBQ2xCLE9BQ0E7UUFDRUk7UUFDQSxHQUFHSCw2REFBaUI7UUFDcEJZLE9BQU9QO1FBQ1BRLFFBQVFSO1FBQ1JTLFFBQVFWO1FBQ1JFLGFBQWFDLHNCQUFzQlEsT0FBT1QsZUFBZSxLQUFLUyxPQUFPVixRQUFRQztRQUM3RUUsV0FBV1Asa0VBQVlBLENBQUMsVUFBVU87UUFDbEMsR0FBR0csSUFBSTtJQUNULEdBQ0E7V0FDS0QsU0FBU00sR0FBRyxDQUFDO2dCQUFDLENBQUNDLEtBQUtDLE1BQU07aUNBQUtuQixvREFBYUEsQ0FBQ2tCLEtBQUtDOztXQUNsREMsTUFBTUMsT0FBTyxDQUFDWCxZQUFZQSxXQUFXO1lBQUNBO1NBQVM7S0FDbkQ7QUFFTDs7QUFHeUIsQ0FDM0IsZ0NBQWdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxsdWNpZGUtcmVhY3RcXGRpc3RcXGVzbVxcSWNvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ1NC4wIC0gSVNDXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxyXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG5pbXBvcnQgeyBmb3J3YXJkUmVmLCBjcmVhdGVFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZGVmYXVsdEF0dHJpYnV0ZXMgZnJvbSAnLi9kZWZhdWx0QXR0cmlidXRlcy5qcyc7XHJcbmltcG9ydCB7IG1lcmdlQ2xhc3NlcyB9IGZyb20gJy4vc2hhcmVkL3NyYy91dGlscy5qcyc7XHJcblxyXG5jb25zdCBJY29uID0gZm9yd2FyZFJlZihcclxuICAoe1xyXG4gICAgY29sb3IgPSBcImN1cnJlbnRDb2xvclwiLFxyXG4gICAgc2l6ZSA9IDI0LFxyXG4gICAgc3Ryb2tlV2lkdGggPSAyLFxyXG4gICAgYWJzb2x1dGVTdHJva2VXaWR0aCxcclxuICAgIGNsYXNzTmFtZSA9IFwiXCIsXHJcbiAgICBjaGlsZHJlbixcclxuICAgIGljb25Ob2RlLFxyXG4gICAgLi4ucmVzdFxyXG4gIH0sIHJlZikgPT4ge1xyXG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoXHJcbiAgICAgIFwic3ZnXCIsXHJcbiAgICAgIHtcclxuICAgICAgICByZWYsXHJcbiAgICAgICAgLi4uZGVmYXVsdEF0dHJpYnV0ZXMsXHJcbiAgICAgICAgd2lkdGg6IHNpemUsXHJcbiAgICAgICAgaGVpZ2h0OiBzaXplLFxyXG4gICAgICAgIHN0cm9rZTogY29sb3IsXHJcbiAgICAgICAgc3Ryb2tlV2lkdGg6IGFic29sdXRlU3Ryb2tlV2lkdGggPyBOdW1iZXIoc3Ryb2tlV2lkdGgpICogMjQgLyBOdW1iZXIoc2l6ZSkgOiBzdHJva2VXaWR0aCxcclxuICAgICAgICBjbGFzc05hbWU6IG1lcmdlQ2xhc3NlcyhcImx1Y2lkZVwiLCBjbGFzc05hbWUpLFxyXG4gICAgICAgIC4uLnJlc3RcclxuICAgICAgfSxcclxuICAgICAgW1xyXG4gICAgICAgIC4uLmljb25Ob2RlLm1hcCgoW3RhZywgYXR0cnNdKSA9PiBjcmVhdGVFbGVtZW50KHRhZywgYXR0cnMpKSxcclxuICAgICAgICAuLi5BcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXVxyXG4gICAgICBdXHJcbiAgICApO1xyXG4gIH1cclxuKTtcclxuXHJcbmV4cG9ydCB7IEljb24gYXMgZGVmYXVsdCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JY29uLmpzLm1hcFxyXG4iXSwibmFtZXMiOlsiZm9yd2FyZFJlZiIsImNyZWF0ZUVsZW1lbnQiLCJkZWZhdWx0QXR0cmlidXRlcyIsIm1lcmdlQ2xhc3NlcyIsIkljb24iLCJyZWYiLCJjb2xvciIsInNpemUiLCJzdHJva2VXaWR0aCIsImFic29sdXRlU3Ryb2tlV2lkdGgiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsImljb25Ob2RlIiwicmVzdCIsIndpZHRoIiwiaGVpZ2h0Iiwic3Ryb2tlIiwiTnVtYmVyIiwibWFwIiwidGFnIiwiYXR0cnMiLCJBcnJheSIsImlzQXJyYXkiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createLucideIcon)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/Icon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \n\n\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((param, ref)=>{\n        let { className, ...props } = param;\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Icon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n            ref,\n            iconNode,\n            className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide-\".concat((0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toKebabCase)(iconName)), className),\n            ...props\n        });\n    });\n    Component.displayName = \"\".concat(iconName);\n    return Component;\n};\n //# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRWlEO0FBQ2dCO0FBQ3JDO0FBRTdCLE1BQU1LLG1CQUFtQixDQUFDQyxVQUFVQztJQUNsQyxNQUFNQywwQkFBWVIsaURBQVVBLENBQzFCLFFBQTBCUztZQUF6QixFQUFFQyxTQUFTLEVBQUUsR0FBR0MsT0FBTzs2QkFBVVYsb0RBQWFBLENBQUNHLGdEQUFJQSxFQUFFO1lBQ3BESztZQUNBRjtZQUNBRyxXQUFXUixrRUFBWUEsQ0FBQyxVQUFnQyxPQUF0QkMsaUVBQVdBLENBQUNHLFlBQWFJO1lBQzNELEdBQUdDLEtBQUs7UUFDVjs7SUFFRkgsVUFBVUksV0FBVyxHQUFHLEdBQVksT0FBVE47SUFDM0IsT0FBT0U7QUFDVDtBQUV1QyxDQUN2Qyw0Q0FBNEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXGx1Y2lkZS1yZWFjdFxcZGlzdFxcZXNtXFxjcmVhdGVMdWNpZGVJY29uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDU0LjAgLSBJU0NcclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXHJcbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbmltcG9ydCB7IGZvcndhcmRSZWYsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IG1lcmdlQ2xhc3NlcywgdG9LZWJhYkNhc2UgfSBmcm9tICcuL3NoYXJlZC9zcmMvdXRpbHMuanMnO1xyXG5pbXBvcnQgSWNvbiBmcm9tICcuL0ljb24uanMnO1xyXG5cclxuY29uc3QgY3JlYXRlTHVjaWRlSWNvbiA9IChpY29uTmFtZSwgaWNvbk5vZGUpID0+IHtcclxuICBjb25zdCBDb21wb25lbnQgPSBmb3J3YXJkUmVmKFxyXG4gICAgKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IGNyZWF0ZUVsZW1lbnQoSWNvbiwge1xyXG4gICAgICByZWYsXHJcbiAgICAgIGljb25Ob2RlLFxyXG4gICAgICBjbGFzc05hbWU6IG1lcmdlQ2xhc3NlcyhgbHVjaWRlLSR7dG9LZWJhYkNhc2UoaWNvbk5hbWUpfWAsIGNsYXNzTmFtZSksXHJcbiAgICAgIC4uLnByb3BzXHJcbiAgICB9KVxyXG4gICk7XHJcbiAgQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gYCR7aWNvbk5hbWV9YDtcclxuICByZXR1cm4gQ29tcG9uZW50O1xyXG59O1xyXG5cclxuZXhwb3J0IHsgY3JlYXRlTHVjaWRlSWNvbiBhcyBkZWZhdWx0IH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUx1Y2lkZUljb24uanMubWFwXHJcbiJdLCJuYW1lcyI6WyJmb3J3YXJkUmVmIiwiY3JlYXRlRWxlbWVudCIsIm1lcmdlQ2xhc3NlcyIsInRvS2ViYWJDYXNlIiwiSWNvbiIsImNyZWF0ZUx1Y2lkZUljb24iLCJpY29uTmFtZSIsImljb25Ob2RlIiwiQ29tcG9uZW50IiwicmVmIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJkaXNwbGF5TmFtZSIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ defaultAttributes)\n/* harmony export */ });\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\n //# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBRUQsSUFBSUEsb0JBQW9CO0lBQ3RCQyxPQUFPO0lBQ1BDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxTQUFTO0lBQ1RDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxhQUFhO0lBQ2JDLGVBQWU7SUFDZkMsZ0JBQWdCO0FBQ2xCO0FBRXdDLENBQ3hDLDZDQUE2QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXGRlZmF1bHRBdHRyaWJ1dGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDU0LjAgLSBJU0NcclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXHJcbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbnZhciBkZWZhdWx0QXR0cmlidXRlcyA9IHtcclxuICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxyXG4gIHdpZHRoOiAyNCxcclxuICBoZWlnaHQ6IDI0LFxyXG4gIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCIsXHJcbiAgZmlsbDogXCJub25lXCIsXHJcbiAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxyXG4gIHN0cm9rZVdpZHRoOiAyLFxyXG4gIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIixcclxuICBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiXHJcbn07XHJcblxyXG5leHBvcnQgeyBkZWZhdWx0QXR0cmlidXRlcyBhcyBkZWZhdWx0IH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRBdHRyaWJ1dGVzLmpzLm1hcFxyXG4iXSwibmFtZXMiOlsiZGVmYXVsdEF0dHJpYnV0ZXMiLCJ4bWxucyIsIndpZHRoIiwiaGVpZ2h0Iiwidmlld0JveCIsImZpbGwiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VMaW5lam9pbiIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-alert.js":
/*!******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/circle-alert.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CircleAlert)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst CircleAlert = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"CircleAlert\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"12\",\n            key: \"1pkeuh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"4dfq90\"\n        }\n    ]\n]);\n //# sourceMappingURL=circle-alert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2lyY2xlLWFsZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFcUQ7QUFFdEQsTUFBTUMsY0FBY0QsZ0VBQWdCQSxDQUFDLGVBQWU7SUFDbEQ7UUFBQztRQUFVO1lBQUVFLElBQUk7WUFBTUMsSUFBSTtZQUFNQyxHQUFHO1lBQU1DLEtBQUs7UUFBUztLQUFFO0lBQzFEO1FBQUM7UUFBUTtZQUFFQyxJQUFJO1lBQU1DLElBQUk7WUFBTUMsSUFBSTtZQUFLQyxJQUFJO1lBQU1KLEtBQUs7UUFBUztLQUFFO0lBQ2xFO1FBQUM7UUFBUTtZQUFFQyxJQUFJO1lBQU1DLElBQUk7WUFBU0MsSUFBSTtZQUFNQyxJQUFJO1lBQU1KLEtBQUs7UUFBUztLQUFFO0NBQ3ZFO0FBRWlDLENBQ2xDLHdDQUF3QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXGljb25zXFxjaXJjbGUtYWxlcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTQuMCAtIElTQ1xyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cclxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XHJcblxyXG5jb25zdCBDaXJjbGVBbGVydCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJDaXJjbGVBbGVydFwiLCBbXHJcbiAgW1wiY2lyY2xlXCIsIHsgY3g6IFwiMTJcIiwgY3k6IFwiMTJcIiwgcjogXCIxMFwiLCBrZXk6IFwiMW1nbGF5XCIgfV0sXHJcbiAgW1wibGluZVwiLCB7IHgxOiBcIjEyXCIsIHgyOiBcIjEyXCIsIHkxOiBcIjhcIiwgeTI6IFwiMTJcIiwga2V5OiBcIjFwa2V1aFwiIH1dLFxyXG4gIFtcImxpbmVcIiwgeyB4MTogXCIxMlwiLCB4MjogXCIxMi4wMVwiLCB5MTogXCIxNlwiLCB5MjogXCIxNlwiLCBrZXk6IFwiNGRmcTkwXCIgfV1cclxuXSk7XHJcblxyXG5leHBvcnQgeyBDaXJjbGVBbGVydCBhcyBkZWZhdWx0IH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNpcmNsZS1hbGVydC5qcy5tYXBcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUx1Y2lkZUljb24iLCJDaXJjbGVBbGVydCIsImN4IiwiY3kiLCJyIiwia2V5IiwieDEiLCJ4MiIsInkxIiwieTIiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/circle-alert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/loader-circle.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LoaderCircle)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst LoaderCircle = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"LoaderCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 1 1-6.219-8.56\",\n            key: \"13zald\"\n        }\n    ]\n]);\n //# sourceMappingURL=loader-circle.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvbG9hZGVyLWNpcmNsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLGVBQWVELGdFQUFnQkEsQ0FBQyxnQkFBZ0I7SUFDcEQ7UUFBQztRQUFRO1lBQUVFLEdBQUc7WUFBK0JDLEtBQUs7UUFBUztLQUFFO0NBQzlEO0FBRWtDLENBQ25DLHlDQUF5QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXGljb25zXFxsb2FkZXItY2lyY2xlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDU0LjAgLSBJU0NcclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXHJcbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xyXG5cclxuY29uc3QgTG9hZGVyQ2lyY2xlID0gY3JlYXRlTHVjaWRlSWNvbihcIkxvYWRlckNpcmNsZVwiLCBbXHJcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTIxIDEyYTkgOSAwIDEgMS02LjIxOS04LjU2XCIsIGtleTogXCIxM3phbGRcIiB9XVxyXG5dKTtcclxuXHJcbmV4cG9ydCB7IExvYWRlckNpcmNsZSBhcyBkZWZhdWx0IH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvYWRlci1jaXJjbGUuanMubWFwXHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVMdWNpZGVJY29uIiwiTG9hZGVyQ2lyY2xlIiwiZCIsImtleSIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/refresh-cw.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RefreshCw)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst RefreshCw = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"RefreshCw\", [\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\",\n            key: \"v9h5vc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v5h-5\",\n            key: \"1q7to0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\",\n            key: \"3uifl3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16H3v5\",\n            key: \"1cv678\"\n        }\n    ]\n]);\n //# sourceMappingURL=refresh-cw.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcmVmcmVzaC1jdy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLFlBQVlELGdFQUFnQkEsQ0FBQyxhQUFhO0lBQzlDO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQXNEQyxLQUFLO1FBQVM7S0FBRTtJQUNwRjtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFjQyxLQUFLO1FBQVM7S0FBRTtJQUM1QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUF1REMsS0FBSztRQUFTO0tBQUU7SUFDckY7UUFBQztRQUFRO1lBQUVELEdBQUc7WUFBYUMsS0FBSztRQUFTO0tBQUU7Q0FDNUM7QUFFK0IsQ0FDaEMsc0NBQXNDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxsdWNpZGUtcmVhY3RcXGRpc3RcXGVzbVxcaWNvbnNcXHJlZnJlc2gtY3cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NTQuMCAtIElTQ1xyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cclxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XHJcblxyXG5jb25zdCBSZWZyZXNoQ3cgPSBjcmVhdGVMdWNpZGVJY29uKFwiUmVmcmVzaEN3XCIsIFtcclxuICBbXCJwYXRoXCIsIHsgZDogXCJNMyAxMmE5IDkgMCAwIDEgOS05IDkuNzUgOS43NSAwIDAgMSA2Ljc0IDIuNzRMMjEgOFwiLCBrZXk6IFwidjloNXZjXCIgfV0sXHJcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTIxIDN2NWgtNVwiLCBrZXk6IFwiMXE3dG8wXCIgfV0sXHJcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTIxIDEyYTkgOSAwIDAgMS05IDkgOS43NSA5Ljc1IDAgMCAxLTYuNzQtMi43NEwzIDE2XCIsIGtleTogXCIzdWlmbDNcIiB9XSxcclxuICBbXCJwYXRoXCIsIHsgZDogXCJNOCAxNkgzdjVcIiwga2V5OiBcIjFjdjY3OFwiIH1dXHJcbl0pO1xyXG5cclxuZXhwb3J0IHsgUmVmcmVzaEN3IGFzIGRlZmF1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmcmVzaC1jdy5qcy5tYXBcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUx1Y2lkZUljb24iLCJSZWZyZXNoQ3ciLCJkIiwia2V5IiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js":
/*!*******************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/x.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ X)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ \nconst X = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"X\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6 6 18\",\n            key: \"1bl5f8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 6 12 12\",\n            key: \"d8bk6v\"\n        }\n    ]\n]);\n //# sourceMappingURL=x.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMveC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLElBQUlELGdFQUFnQkEsQ0FBQyxLQUFLO0lBQzlCO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQWNDLEtBQUs7UUFBUztLQUFFO0lBQzVDO1FBQUM7UUFBUTtZQUFFRCxHQUFHO1lBQWNDLEtBQUs7UUFBUztLQUFFO0NBQzdDO0FBRXVCLENBQ3hCLDZCQUE2QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXGljb25zXFx4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDU0LjAgLSBJU0NcclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXHJcbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xyXG5cclxuY29uc3QgWCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJYXCIsIFtcclxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTggNiA2IDE4XCIsIGtleTogXCIxYmw1ZjhcIiB9XSxcclxuICBbXCJwYXRoXCIsIHsgZDogXCJtNiA2IDEyIDEyXCIsIGtleTogXCJkOGJrNnZcIiB9XVxyXG5dKTtcclxuXHJcbmV4cG9ydCB7IFggYXMgZGVmYXVsdCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD14LmpzLm1hcFxyXG4iXSwibmFtZXMiOlsiY3JlYXRlTHVjaWRlSWNvbiIsIlgiLCJkIiwia2V5IiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/shared/src/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeClasses: () => (/* binding */ mergeClasses),\n/* harmony export */   toKebabCase: () => (/* binding */ toKebabCase)\n/* harmony export */ });\n/**\r\n * @license lucide-react v0.454.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */ const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = function() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    return classes.filter((className, index, array)=>{\n        return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n    }).join(\" \").trim();\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vc2hhcmVkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRUQsTUFBTUEsY0FBYyxDQUFDQyxTQUFXQSxPQUFPQyxPQUFPLENBQUMsc0JBQXNCLFNBQVNDLFdBQVc7QUFDekYsTUFBTUMsZUFBZTtxQ0FBSUM7UUFBQUE7O1dBQVlBLFFBQVFDLE1BQU0sQ0FBQyxDQUFDQyxXQUFXQyxPQUFPQztRQUNyRSxPQUFPQyxRQUFRSCxjQUFjQSxVQUFVSSxJQUFJLE9BQU8sTUFBTUYsTUFBTUcsT0FBTyxDQUFDTCxlQUFlQztJQUN2RixHQUFHSyxJQUFJLENBQUMsS0FBS0YsSUFBSTs7QUFFb0IsQ0FDckMsaUNBQWlDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxsdWNpZGUtcmVhY3RcXGRpc3RcXGVzbVxcc2hhcmVkXFxzcmNcXHV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDU0LjAgLSBJU0NcclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXHJcbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbmNvbnN0IHRvS2ViYWJDYXNlID0gKHN0cmluZykgPT4gc3RyaW5nLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csIFwiJDEtJDJcIikudG9Mb3dlckNhc2UoKTtcclxuY29uc3QgbWVyZ2VDbGFzc2VzID0gKC4uLmNsYXNzZXMpID0+IGNsYXNzZXMuZmlsdGVyKChjbGFzc05hbWUsIGluZGV4LCBhcnJheSkgPT4ge1xyXG4gIHJldHVybiBCb29sZWFuKGNsYXNzTmFtZSkgJiYgY2xhc3NOYW1lLnRyaW0oKSAhPT0gXCJcIiAmJiBhcnJheS5pbmRleE9mKGNsYXNzTmFtZSkgPT09IGluZGV4O1xyXG59KS5qb2luKFwiIFwiKS50cmltKCk7XHJcblxyXG5leHBvcnQgeyBtZXJnZUNsYXNzZXMsIHRvS2ViYWJDYXNlIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcFxyXG4iXSwibmFtZXMiOlsidG9LZWJhYkNhc2UiLCJzdHJpbmciLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJtZXJnZUNsYXNzZXMiLCJjbGFzc2VzIiwiZmlsdGVyIiwiY2xhc3NOYW1lIiwiaW5kZXgiLCJhcnJheSIsIkJvb2xlYW4iLCJ0cmltIiwiaW5kZXhPZiIsImpvaW4iXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/shared/src/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-themes/dist/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/next-themes/dist/index.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ J),\n/* harmony export */   useTheme: () => (/* binding */ z)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ ThemeProvider,useTheme auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\nvar M = (e, i, s, u, m, a, l, h)=>{\n    let d = document.documentElement, w = [\n        \"light\",\n        \"dark\"\n    ];\n    function p(n) {\n        (Array.isArray(e) ? e : [\n            e\n        ]).forEach((y)=>{\n            let k = y === \"class\", S = k && a ? m.map((f)=>a[f] || f) : m;\n            k ? (d.classList.remove(...S), d.classList.add(a && a[n] ? a[n] : n)) : d.setAttribute(y, n);\n        }), R(n);\n    }\n    function R(n) {\n        h && w.includes(n) && (d.style.colorScheme = n);\n    }\n    function c() {\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    }\n    if (u) p(u);\n    else try {\n        let n = localStorage.getItem(i) || s, y = l && n === \"system\" ? c() : n;\n        p(y);\n    } catch (n) {}\n};\n_c = M;\nvar b = [\n    \"light\",\n    \"dark\"\n], I = \"(prefers-color-scheme: dark)\", O = \"object\" == \"undefined\", x = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0), U = {\n    setTheme: (e)=>{},\n    themes: []\n}, z = ()=>{\n    _s();\n    var e;\n    return (e = react__WEBPACK_IMPORTED_MODULE_0__.useContext(x)) != null ? e : U;\n}, J = (e)=>{\n    _s1();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useContext(x) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, e.children) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(V, {\n        ...e\n    });\n}, N = [\n    \"light\",\n    \"dark\"\n], V = (param)=>{\n    let { forcedTheme: e, disableTransitionOnChange: i = !1, enableSystem: s = !0, enableColorScheme: u = !0, storageKey: m = \"theme\", themes: a = N, defaultTheme: l = s ? \"system\" : \"light\", attribute: h = \"data-theme\", value: d, children: w, nonce: p, scriptProps: R } = param;\n    _s2();\n    let [c, n] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        \"V.useState\": ()=>H(m, l)\n    }[\"V.useState\"]), [T, y] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        \"V.useState\": ()=>c === \"system\" ? E() : c\n    }[\"V.useState\"]), k = d ? Object.values(d) : a, S = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"V.useCallback[S]\": (o)=>{\n            let r = o;\n            if (!r) return;\n            o === \"system\" && s && (r = E());\n            let v = d ? d[r] : r, C = i ? W(p) : null, P = document.documentElement, L = {\n                \"V.useCallback[S].L\": (g)=>{\n                    g === \"class\" ? (P.classList.remove(...k), v && P.classList.add(v)) : g.startsWith(\"data-\") && (v ? P.setAttribute(g, v) : P.removeAttribute(g));\n                }\n            }[\"V.useCallback[S].L\"];\n            if (Array.isArray(h) ? h.forEach(L) : L(h), u) {\n                let g = b.includes(l) ? l : null, D = b.includes(r) ? r : g;\n                P.style.colorScheme = D;\n            }\n            C == null || C();\n        }\n    }[\"V.useCallback[S]\"], [\n        p\n    ]), f = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"V.useCallback[f]\": (o)=>{\n            let r = typeof o == \"function\" ? o(c) : o;\n            n(r);\n            try {\n                localStorage.setItem(m, r);\n            } catch (v) {}\n        }\n    }[\"V.useCallback[f]\"], [\n        c\n    ]), A = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"V.useCallback[A]\": (o)=>{\n            let r = E(o);\n            y(r), c === \"system\" && s && !e && S(\"system\");\n        }\n    }[\"V.useCallback[A]\"], [\n        c,\n        e\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"V.useEffect\": ()=>{\n            let o = window.matchMedia(I);\n            return o.addListener(A), A(o), ({\n                \"V.useEffect\": ()=>o.removeListener(A)\n            })[\"V.useEffect\"];\n        }\n    }[\"V.useEffect\"], [\n        A\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"V.useEffect\": ()=>{\n            let o = {\n                \"V.useEffect.o\": (r)=>{\n                    r.key === m && (r.newValue ? n(r.newValue) : f(l));\n                }\n            }[\"V.useEffect.o\"];\n            return window.addEventListener(\"storage\", o), ({\n                \"V.useEffect\": ()=>window.removeEventListener(\"storage\", o)\n            })[\"V.useEffect\"];\n        }\n    }[\"V.useEffect\"], [\n        f\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"V.useEffect\": ()=>{\n            S(e != null ? e : c);\n        }\n    }[\"V.useEffect\"], [\n        e,\n        c\n    ]);\n    let Q = react__WEBPACK_IMPORTED_MODULE_0__.useMemo({\n        \"V.useMemo[Q]\": ()=>({\n                theme: c,\n                setTheme: f,\n                forcedTheme: e,\n                resolvedTheme: c === \"system\" ? T : c,\n                themes: s ? [\n                    ...a,\n                    \"system\"\n                ] : a,\n                systemTheme: s ? T : void 0\n            })\n    }[\"V.useMemo[Q]\"], [\n        c,\n        f,\n        e,\n        T,\n        s,\n        a\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(x.Provider, {\n        value: Q\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_, {\n        forcedTheme: e,\n        storageKey: m,\n        attribute: h,\n        enableSystem: s,\n        enableColorScheme: u,\n        defaultTheme: l,\n        value: d,\n        themes: a,\n        nonce: p,\n        scriptProps: R\n    }), w);\n}, _ = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.memo((param)=>{\n    let { forcedTheme: e, storageKey: i, attribute: s, enableSystem: u, enableColorScheme: m, defaultTheme: a, value: l, themes: h, nonce: d, scriptProps: w } = param;\n    let p = JSON.stringify([\n        s,\n        i,\n        a,\n        e,\n        h,\n        l,\n        u,\n        m\n    ]).slice(1, -1);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"script\", {\n        ...w,\n        suppressHydrationWarning: !0,\n        nonce:  false ? 0 : \"\",\n        dangerouslySetInnerHTML: {\n            __html: \"(\".concat(M.toString(), \")(\").concat(p, \")\")\n        }\n    });\n}), H = (e, i)=>{\n    if (O) return;\n    let s;\n    try {\n        s = localStorage.getItem(e) || void 0;\n    } catch (u) {}\n    return s || i;\n}, W = (e)=>{\n    let i = document.createElement(\"style\");\n    return e && i.setAttribute(\"nonce\", e), i.appendChild(document.createTextNode(\"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")), document.head.appendChild(i), ()=>{\n        window.getComputedStyle(document.body), setTimeout(()=>{\n            document.head.removeChild(i);\n        }, 1);\n    };\n}, E = (e)=>(e || (e = window.matchMedia(I)), e.matches ? \"dark\" : \"light\");\n_s(z, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_s1(J, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_s2(V, \"UCkmxL+2pKwquH5a3QithkhUKcE=\");\n\nvar _c;\n$RefreshReg$(_c, \"M\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\r\n\r\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEO0FBQ2hEO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGFwaVxcbmF2aWdhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuLi9jbGllbnQvY29tcG9uZW50cy9uYXZpZ2F0aW9uJztcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5hdmlnYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cproviders%5C%5Cquery-provider.tsx%22%2C%22ids%22%3A%5B%22QueryProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cproviders%5C%5Cquery-provider.tsx%22%2C%22ids%22%3A%5B%22QueryProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/auth/enhanced-auth-provider.tsx */ \"(app-pages-browser)/./components/auth/enhanced-auth-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/providers/query-provider.tsx */ \"(app-pages-browser)/./components/providers/query-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/theme-provider.tsx */ \"(app-pages-browser)/./components/theme-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ui/toaster.tsx */ \"(app-pages-browser)/./components/ui/toaster.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./lib/language-context.tsx */ \"(app-pages-browser)/./lib/language-context.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDa2thY3AlNUMlNUNEZXNrdG9wJTVDJTVDU3BlY3Jlc0NSTXYyJTVDJTVDU3BlY3RyZXNHcm91cENSTSU1QyU1Q2Rhc2hib2FyZCU1QyU1Q2FwcCU1QyU1Q2dsb2JhbHMuY3NzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2trYWNwJTVDJTVDRGVza3RvcCU1QyU1Q1NwZWNyZXNDUk12MiU1QyU1Q1NwZWN0cmVzR3JvdXBDUk0lNUMlNUNkYXNoYm9hcmQlNUMlNUNjb21wb25lbnRzJTVDJTVDYXV0aCU1QyU1Q2VuaGFuY2VkLWF1dGgtcHJvdmlkZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyRW5oYW5jZWRBdXRoUHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDa2thY3AlNUMlNUNEZXNrdG9wJTVDJTVDU3BlY3Jlc0NSTXYyJTVDJTVDU3BlY3RyZXNHcm91cENSTSU1QyU1Q2Rhc2hib2FyZCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNwcm92aWRlcnMlNUMlNUNxdWVyeS1wcm92aWRlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJRdWVyeVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2trYWNwJTVDJTVDRGVza3RvcCU1QyU1Q1NwZWNyZXNDUk12MiU1QyU1Q1NwZWN0cmVzR3JvdXBDUk0lNUMlNUNkYXNoYm9hcmQlNUMlNUNjb21wb25lbnRzJTVDJTVDdGhlbWUtcHJvdmlkZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyVGhlbWVQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNra2FjcCU1QyU1Q0Rlc2t0b3AlNUMlNUNTcGVjcmVzQ1JNdjIlNUMlNUNTcGVjdHJlc0dyb3VwQ1JNJTVDJTVDZGFzaGJvYXJkJTVDJTVDY29tcG9uZW50cyU1QyU1Q3VpJTVDJTVDdG9hc3Rlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJUb2FzdGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2trYWNwJTVDJTVDRGVza3RvcCU1QyU1Q1NwZWNyZXNDUk12MiU1QyU1Q1NwZWN0cmVzR3JvdXBDUk0lNUMlNUNkYXNoYm9hcmQlNUMlNUNsaWIlNUMlNUNsYW5ndWFnZS1jb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkxhbmd1YWdlUHJvdmlkZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDa2thY3AlNUMlNUNEZXNrdG9wJTVDJTVDU3BlY3Jlc0NSTXYyJTVDJTVDU3BlY3RyZXNHcm91cENSTSU1QyU1Q2Rhc2hib2FyZCU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNmb250JTVDJTVDZ29vZ2xlJTVDJTVDdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJhcHAlNUMlNUMlNUMlNUNsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIySW50ZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJpbnRlciU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDRKQUEySDtBQUMzSDtBQUNBLGtOQUFpTTtBQUNqTTtBQUNBLDRNQUF1TDtBQUN2TDtBQUNBLHdMQUE0SztBQUM1SztBQUNBLGdMQUFtSztBQUNuSztBQUNBLDhLQUEwSztBQUMxSztBQUNBLHNiQUFrUiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxca2thY3BcXFxcRGVza3RvcFxcXFxTcGVjcmVzQ1JNdjJcXFxcU3BlY3RyZXNHcm91cENSTVxcXFxkYXNoYm9hcmRcXFxcYXBwXFxcXGdsb2JhbHMuY3NzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJFbmhhbmNlZEF1dGhQcm92aWRlclwiXSAqLyBcIkM6XFxcXFVzZXJzXFxcXGtrYWNwXFxcXERlc2t0b3BcXFxcU3BlY3Jlc0NSTXYyXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGNvbXBvbmVudHNcXFxcYXV0aFxcXFxlbmhhbmNlZC1hdXRoLXByb3ZpZGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiUXVlcnlQcm92aWRlclwiXSAqLyBcIkM6XFxcXFVzZXJzXFxcXGtrYWNwXFxcXERlc2t0b3BcXFxcU3BlY3Jlc0NSTXYyXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGNvbXBvbmVudHNcXFxccHJvdmlkZXJzXFxcXHF1ZXJ5LXByb3ZpZGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVGhlbWVQcm92aWRlclwiXSAqLyBcIkM6XFxcXFVzZXJzXFxcXGtrYWNwXFxcXERlc2t0b3BcXFxcU3BlY3Jlc0NSTXYyXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGNvbXBvbmVudHNcXFxcdGhlbWUtcHJvdmlkZXIudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUb2FzdGVyXCJdICovIFwiQzpcXFxcVXNlcnNcXFxca2thY3BcXFxcRGVza3RvcFxcXFxTcGVjcmVzQ1JNdjJcXFxcU3BlY3RyZXNHcm91cENSTVxcXFxkYXNoYm9hcmRcXFxcY29tcG9uZW50c1xcXFx1aVxcXFx0b2FzdGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiTGFuZ3VhZ2VQcm92aWRlclwiXSAqLyBcIkM6XFxcXFVzZXJzXFxcXGtrYWNwXFxcXERlc2t0b3BcXFxcU3BlY3Jlc0NSTXYyXFxcXFNwZWN0cmVzR3JvdXBDUk1cXFxcZGFzaGJvYXJkXFxcXGxpYlxcXFxsYW5ndWFnZS1jb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxca2thY3BcXFxcRGVza3RvcFxcXFxTcGVjcmVzQ1JNdjJcXFxcU3BlY3RyZXNHcm91cENSTVxcXFxkYXNoYm9hcmRcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZm9udFxcXFxnb29nbGVcXFxcdGFyZ2V0LmNzcz97XFxcInBhdGhcXFwiOlxcXCJhcHBcXFxcXFxcXGxheW91dC50c3hcXFwiLFxcXCJpbXBvcnRcXFwiOlxcXCJJbnRlclxcXCIsXFxcImFyZ3VtZW50c1xcXCI6W3tcXFwic3Vic2V0c1xcXCI6W1xcXCJsYXRpblxcXCJdfV0sXFxcInZhcmlhYmxlTmFtZVxcXCI6XFxcImludGVyXFxcIn1cIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cproviders%5C%5Cquery-provider.tsx%22%2C%22ids%22%3A%5B%22QueryProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\r\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={529:(e,r,t)=>{var n=t(191);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},191:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(529);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxra2FjcFxcRGVza3RvcFxcU3BlY3Jlc0NSTXYyXFxTcGVjdHJlc0dyb3VwQ1JNXFxkYXNoYm9hcmRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcY29tcGlsZWRcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxobXJcXGhvdE1vZHVsZVJlcGxhY2VtZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs1Mjk6KGUscix0KT0+e3ZhciBuPXQoMTkxKTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDE5MTplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNTI5KTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\r\n * @license React\r\n * react-jsx-dev-runtime.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n true &&\r\n  (function () {\r\n    function getComponentNameFromType(type) {\r\n      if (null == type) return null;\r\n      if (\"function\" === typeof type)\r\n        return type.$$typeof === REACT_CLIENT_REFERENCE\r\n          ? null\r\n          : type.displayName || type.name || null;\r\n      if (\"string\" === typeof type) return type;\r\n      switch (type) {\r\n        case REACT_FRAGMENT_TYPE:\r\n          return \"Fragment\";\r\n        case REACT_PORTAL_TYPE:\r\n          return \"Portal\";\r\n        case REACT_PROFILER_TYPE:\r\n          return \"Profiler\";\r\n        case REACT_STRICT_MODE_TYPE:\r\n          return \"StrictMode\";\r\n        case REACT_SUSPENSE_TYPE:\r\n          return \"Suspense\";\r\n        case REACT_SUSPENSE_LIST_TYPE:\r\n          return \"SuspenseList\";\r\n      }\r\n      if (\"object\" === typeof type)\r\n        switch (\r\n          (\"number\" === typeof type.tag &&\r\n            console.error(\r\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\r\n            ),\r\n          type.$$typeof)\r\n        ) {\r\n          case REACT_CONTEXT_TYPE:\r\n            return (type.displayName || \"Context\") + \".Provider\";\r\n          case REACT_CONSUMER_TYPE:\r\n            return (type._context.displayName || \"Context\") + \".Consumer\";\r\n          case REACT_FORWARD_REF_TYPE:\r\n            var innerType = type.render;\r\n            type = type.displayName;\r\n            type ||\r\n              ((type = innerType.displayName || innerType.name || \"\"),\r\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\r\n            return type;\r\n          case REACT_MEMO_TYPE:\r\n            return (\r\n              (innerType = type.displayName || null),\r\n              null !== innerType\r\n                ? innerType\r\n                : getComponentNameFromType(type.type) || \"Memo\"\r\n            );\r\n          case REACT_LAZY_TYPE:\r\n            innerType = type._payload;\r\n            type = type._init;\r\n            try {\r\n              return getComponentNameFromType(type(innerType));\r\n            } catch (x) {}\r\n        }\r\n      return null;\r\n    }\r\n    function testStringCoercion(value) {\r\n      return \"\" + value;\r\n    }\r\n    function checkKeyStringCoercion(value) {\r\n      try {\r\n        testStringCoercion(value);\r\n        var JSCompiler_inline_result = !1;\r\n      } catch (e) {\r\n        JSCompiler_inline_result = !0;\r\n      }\r\n      if (JSCompiler_inline_result) {\r\n        JSCompiler_inline_result = console;\r\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\r\n        var JSCompiler_inline_result$jscomp$0 =\r\n          (\"function\" === typeof Symbol &&\r\n            Symbol.toStringTag &&\r\n            value[Symbol.toStringTag]) ||\r\n          value.constructor.name ||\r\n          \"Object\";\r\n        JSCompiler_temp_const.call(\r\n          JSCompiler_inline_result,\r\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\r\n          JSCompiler_inline_result$jscomp$0\r\n        );\r\n        return testStringCoercion(value);\r\n      }\r\n    }\r\n    function getTaskName(type) {\r\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\r\n      if (\r\n        \"object\" === typeof type &&\r\n        null !== type &&\r\n        type.$$typeof === REACT_LAZY_TYPE\r\n      )\r\n        return \"<...>\";\r\n      try {\r\n        var name = getComponentNameFromType(type);\r\n        return name ? \"<\" + name + \">\" : \"<...>\";\r\n      } catch (x) {\r\n        return \"<...>\";\r\n      }\r\n    }\r\n    function getOwner() {\r\n      var dispatcher = ReactSharedInternals.A;\r\n      return null === dispatcher ? null : dispatcher.getOwner();\r\n    }\r\n    function hasValidKey(config) {\r\n      if (hasOwnProperty.call(config, \"key\")) {\r\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\r\n        if (getter && getter.isReactWarning) return !1;\r\n      }\r\n      return void 0 !== config.key;\r\n    }\r\n    function defineKeyPropWarningGetter(props, displayName) {\r\n      function warnAboutAccessingKey() {\r\n        specialPropKeyWarningShown ||\r\n          ((specialPropKeyWarningShown = !0),\r\n          console.error(\r\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\r\n            displayName\r\n          ));\r\n      }\r\n      warnAboutAccessingKey.isReactWarning = !0;\r\n      Object.defineProperty(props, \"key\", {\r\n        get: warnAboutAccessingKey,\r\n        configurable: !0\r\n      });\r\n    }\r\n    function elementRefGetterWithDeprecationWarning() {\r\n      var componentName = getComponentNameFromType(this.type);\r\n      didWarnAboutElementRef[componentName] ||\r\n        ((didWarnAboutElementRef[componentName] = !0),\r\n        console.error(\r\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\r\n        ));\r\n      componentName = this.props.ref;\r\n      return void 0 !== componentName ? componentName : null;\r\n    }\r\n    function ReactElement(\r\n      type,\r\n      key,\r\n      self,\r\n      source,\r\n      owner,\r\n      props,\r\n      debugStack,\r\n      debugTask\r\n    ) {\r\n      self = props.ref;\r\n      type = {\r\n        $$typeof: REACT_ELEMENT_TYPE,\r\n        type: type,\r\n        key: key,\r\n        props: props,\r\n        _owner: owner\r\n      };\r\n      null !== (void 0 !== self ? self : null)\r\n        ? Object.defineProperty(type, \"ref\", {\r\n            enumerable: !1,\r\n            get: elementRefGetterWithDeprecationWarning\r\n          })\r\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\r\n      type._store = {};\r\n      Object.defineProperty(type._store, \"validated\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: 0\r\n      });\r\n      Object.defineProperty(type, \"_debugInfo\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: null\r\n      });\r\n      Object.defineProperty(type, \"_debugStack\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugStack\r\n      });\r\n      Object.defineProperty(type, \"_debugTask\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugTask\r\n      });\r\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\r\n      return type;\r\n    }\r\n    function jsxDEVImpl(\r\n      type,\r\n      config,\r\n      maybeKey,\r\n      isStaticChildren,\r\n      source,\r\n      self,\r\n      debugStack,\r\n      debugTask\r\n    ) {\r\n      var children = config.children;\r\n      if (void 0 !== children)\r\n        if (isStaticChildren)\r\n          if (isArrayImpl(children)) {\r\n            for (\r\n              isStaticChildren = 0;\r\n              isStaticChildren < children.length;\r\n              isStaticChildren++\r\n            )\r\n              validateChildKeys(children[isStaticChildren]);\r\n            Object.freeze && Object.freeze(children);\r\n          } else\r\n            console.error(\r\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\r\n            );\r\n        else validateChildKeys(children);\r\n      if (hasOwnProperty.call(config, \"key\")) {\r\n        children = getComponentNameFromType(type);\r\n        var keys = Object.keys(config).filter(function (k) {\r\n          return \"key\" !== k;\r\n        });\r\n        isStaticChildren =\r\n          0 < keys.length\r\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\r\n            : \"{key: someKey}\";\r\n        didWarnAboutKeySpread[children + isStaticChildren] ||\r\n          ((keys =\r\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\r\n          console.error(\r\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\r\n            isStaticChildren,\r\n            children,\r\n            keys,\r\n            children\r\n          ),\r\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\r\n      }\r\n      children = null;\r\n      void 0 !== maybeKey &&\r\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\r\n      hasValidKey(config) &&\r\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\r\n      if (\"key\" in config) {\r\n        maybeKey = {};\r\n        for (var propName in config)\r\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\r\n      } else maybeKey = config;\r\n      children &&\r\n        defineKeyPropWarningGetter(\r\n          maybeKey,\r\n          \"function\" === typeof type\r\n            ? type.displayName || type.name || \"Unknown\"\r\n            : type\r\n        );\r\n      return ReactElement(\r\n        type,\r\n        children,\r\n        self,\r\n        source,\r\n        getOwner(),\r\n        maybeKey,\r\n        debugStack,\r\n        debugTask\r\n      );\r\n    }\r\n    function validateChildKeys(node) {\r\n      \"object\" === typeof node &&\r\n        null !== node &&\r\n        node.$$typeof === REACT_ELEMENT_TYPE &&\r\n        node._store &&\r\n        (node._store.validated = 1);\r\n    }\r\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\r\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\r\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\r\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\r\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\r\n    Symbol.for(\"react.provider\");\r\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\r\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\r\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\r\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\r\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\r\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\r\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\r\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\r\n      ReactSharedInternals =\r\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\r\n      hasOwnProperty = Object.prototype.hasOwnProperty,\r\n      isArrayImpl = Array.isArray,\r\n      createTask = console.createTask\r\n        ? console.createTask\r\n        : function () {\r\n            return null;\r\n          },\r\n      specialPropKeyWarningShown;\r\n    var didWarnAboutElementRef = {};\r\n    var didWarnAboutKeySpread = {};\r\n    exports.Fragment = REACT_FRAGMENT_TYPE;\r\n    exports.jsxDEV = function (\r\n      type,\r\n      config,\r\n      maybeKey,\r\n      isStaticChildren,\r\n      source,\r\n      self\r\n    ) {\r\n      return jsxDEVImpl(\r\n        type,\r\n        config,\r\n        maybeKey,\r\n        isStaticChildren,\r\n        source,\r\n        self,\r\n        Error(\"react-stack-top-frame\"),\r\n        createTask(getTaskName(type))\r\n      );\r\n    };\r\n  })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2IsS0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCwrQ0FBK0MsNkJBQTZCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsZ0JBQWdCLGdEQUFnRDtBQUNoRSxnQkFBZ0IsYUFBYTtBQUM3QjtBQUNBO0FBQ0EsZ0NBQWdDLGtDQUFrQyxPQUFPO0FBQ3pFO0FBQ0EsZ0dBQWdHLFNBQVMsVUFBVSxzRkFBc0YsYUFBYSxVQUFVLFVBQVU7QUFDMU87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxzR0FBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsSUFBSSxnQkFBZ0I7QUFDcEIsSUFBSSxjQUFjO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUciLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGNvbXBpbGVkXFxyZWFjdFxcY2pzXFxyZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlIFJlYWN0XHJcbiAqIHJlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qc1xyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcblwidXNlIHN0cmljdFwiO1xyXG5cInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgJiZcclxuICAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKHR5cGUpIHtcclxuICAgICAgaWYgKG51bGwgPT0gdHlwZSkgcmV0dXJuIG51bGw7XHJcbiAgICAgIGlmIChcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiB0eXBlKVxyXG4gICAgICAgIHJldHVybiB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DTElFTlRfUkVGRVJFTkNFXHJcbiAgICAgICAgICA/IG51bGxcclxuICAgICAgICAgIDogdHlwZS5kaXNwbGF5TmFtZSB8fCB0eXBlLm5hbWUgfHwgbnVsbDtcclxuICAgICAgaWYgKFwic3RyaW5nXCIgPT09IHR5cGVvZiB0eXBlKSByZXR1cm4gdHlwZTtcclxuICAgICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgY2FzZSBSRUFDVF9GUkFHTUVOVF9UWVBFOlxyXG4gICAgICAgICAgcmV0dXJuIFwiRnJhZ21lbnRcIjtcclxuICAgICAgICBjYXNlIFJFQUNUX1BPUlRBTF9UWVBFOlxyXG4gICAgICAgICAgcmV0dXJuIFwiUG9ydGFsXCI7XHJcbiAgICAgICAgY2FzZSBSRUFDVF9QUk9GSUxFUl9UWVBFOlxyXG4gICAgICAgICAgcmV0dXJuIFwiUHJvZmlsZXJcIjtcclxuICAgICAgICBjYXNlIFJFQUNUX1NUUklDVF9NT0RFX1RZUEU6XHJcbiAgICAgICAgICByZXR1cm4gXCJTdHJpY3RNb2RlXCI7XHJcbiAgICAgICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9UWVBFOlxyXG4gICAgICAgICAgcmV0dXJuIFwiU3VzcGVuc2VcIjtcclxuICAgICAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRTpcclxuICAgICAgICAgIHJldHVybiBcIlN1c3BlbnNlTGlzdFwiO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChcIm9iamVjdFwiID09PSB0eXBlb2YgdHlwZSlcclxuICAgICAgICBzd2l0Y2ggKFxyXG4gICAgICAgICAgKFwibnVtYmVyXCIgPT09IHR5cGVvZiB0eXBlLnRhZyAmJlxyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgICAgICAgIFwiUmVjZWl2ZWQgYW4gdW5leHBlY3RlZCBvYmplY3QgaW4gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKCkuIFRoaXMgaXMgbGlrZWx5IGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS5cIlxyXG4gICAgICAgICAgICApLFxyXG4gICAgICAgICAgdHlwZS4kJHR5cGVvZilcclxuICAgICAgICApIHtcclxuICAgICAgICAgIGNhc2UgUkVBQ1RfQ09OVEVYVF9UWVBFOlxyXG4gICAgICAgICAgICByZXR1cm4gKHR5cGUuZGlzcGxheU5hbWUgfHwgXCJDb250ZXh0XCIpICsgXCIuUHJvdmlkZXJcIjtcclxuICAgICAgICAgIGNhc2UgUkVBQ1RfQ09OU1VNRVJfVFlQRTpcclxuICAgICAgICAgICAgcmV0dXJuICh0eXBlLl9jb250ZXh0LmRpc3BsYXlOYW1lIHx8IFwiQ29udGV4dFwiKSArIFwiLkNvbnN1bWVyXCI7XHJcbiAgICAgICAgICBjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6XHJcbiAgICAgICAgICAgIHZhciBpbm5lclR5cGUgPSB0eXBlLnJlbmRlcjtcclxuICAgICAgICAgICAgdHlwZSA9IHR5cGUuZGlzcGxheU5hbWU7XHJcbiAgICAgICAgICAgIHR5cGUgfHxcclxuICAgICAgICAgICAgICAoKHR5cGUgPSBpbm5lclR5cGUuZGlzcGxheU5hbWUgfHwgaW5uZXJUeXBlLm5hbWUgfHwgXCJcIiksXHJcbiAgICAgICAgICAgICAgKHR5cGUgPSBcIlwiICE9PSB0eXBlID8gXCJGb3J3YXJkUmVmKFwiICsgdHlwZSArIFwiKVwiIDogXCJGb3J3YXJkUmVmXCIpKTtcclxuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XHJcbiAgICAgICAgICBjYXNlIFJFQUNUX01FTU9fVFlQRTpcclxuICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAoaW5uZXJUeXBlID0gdHlwZS5kaXNwbGF5TmFtZSB8fCBudWxsKSxcclxuICAgICAgICAgICAgICBudWxsICE9PSBpbm5lclR5cGVcclxuICAgICAgICAgICAgICAgID8gaW5uZXJUeXBlXHJcbiAgICAgICAgICAgICAgICA6IGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlLnR5cGUpIHx8IFwiTWVtb1wiXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICBjYXNlIFJFQUNUX0xBWllfVFlQRTpcclxuICAgICAgICAgICAgaW5uZXJUeXBlID0gdHlwZS5fcGF5bG9hZDtcclxuICAgICAgICAgICAgdHlwZSA9IHR5cGUuX2luaXQ7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlKGlubmVyVHlwZSkpO1xyXG4gICAgICAgICAgICB9IGNhdGNoICh4KSB7fVxyXG4gICAgICAgIH1cclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpIHtcclxuICAgICAgcmV0dXJuIFwiXCIgKyB2YWx1ZTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24odmFsdWUpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpO1xyXG4gICAgICAgIHZhciBKU0NvbXBpbGVyX2lubGluZV9yZXN1bHQgPSAhMTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIEpTQ29tcGlsZXJfaW5saW5lX3Jlc3VsdCA9ICEwO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChKU0NvbXBpbGVyX2lubGluZV9yZXN1bHQpIHtcclxuICAgICAgICBKU0NvbXBpbGVyX2lubGluZV9yZXN1bHQgPSBjb25zb2xlO1xyXG4gICAgICAgIHZhciBKU0NvbXBpbGVyX3RlbXBfY29uc3QgPSBKU0NvbXBpbGVyX2lubGluZV9yZXN1bHQuZXJyb3I7XHJcbiAgICAgICAgdmFyIEpTQ29tcGlsZXJfaW5saW5lX3Jlc3VsdCRqc2NvbXAkMCA9XHJcbiAgICAgICAgICAoXCJmdW5jdGlvblwiID09PSB0eXBlb2YgU3ltYm9sICYmXHJcbiAgICAgICAgICAgIFN5bWJvbC50b1N0cmluZ1RhZyAmJlxyXG4gICAgICAgICAgICB2YWx1ZVtTeW1ib2wudG9TdHJpbmdUYWddKSB8fFxyXG4gICAgICAgICAgdmFsdWUuY29uc3RydWN0b3IubmFtZSB8fFxyXG4gICAgICAgICAgXCJPYmplY3RcIjtcclxuICAgICAgICBKU0NvbXBpbGVyX3RlbXBfY29uc3QuY2FsbChcclxuICAgICAgICAgIEpTQ29tcGlsZXJfaW5saW5lX3Jlc3VsdCxcclxuICAgICAgICAgIFwiVGhlIHByb3ZpZGVkIGtleSBpcyBhbiB1bnN1cHBvcnRlZCB0eXBlICVzLiBUaGlzIHZhbHVlIG11c3QgYmUgY29lcmNlZCB0byBhIHN0cmluZyBiZWZvcmUgdXNpbmcgaXQgaGVyZS5cIixcclxuICAgICAgICAgIEpTQ29tcGlsZXJfaW5saW5lX3Jlc3VsdCRqc2NvbXAkMFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgcmV0dXJuIHRlc3RTdHJpbmdDb2VyY2lvbih2YWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGdldFRhc2tOYW1lKHR5cGUpIHtcclxuICAgICAgaWYgKHR5cGUgPT09IFJFQUNUX0ZSQUdNRU5UX1RZUEUpIHJldHVybiBcIjw+XCI7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBcIm9iamVjdFwiID09PSB0eXBlb2YgdHlwZSAmJlxyXG4gICAgICAgIG51bGwgIT09IHR5cGUgJiZcclxuICAgICAgICB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9MQVpZX1RZUEVcclxuICAgICAgKVxyXG4gICAgICAgIHJldHVybiBcIjwuLi4+XCI7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgdmFyIG5hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZSk7XHJcbiAgICAgICAgcmV0dXJuIG5hbWUgPyBcIjxcIiArIG5hbWUgKyBcIj5cIiA6IFwiPC4uLj5cIjtcclxuICAgICAgfSBjYXRjaCAoeCkge1xyXG4gICAgICAgIHJldHVybiBcIjwuLi4+XCI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGdldE93bmVyKCkge1xyXG4gICAgICB2YXIgZGlzcGF0Y2hlciA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLkE7XHJcbiAgICAgIHJldHVybiBudWxsID09PSBkaXNwYXRjaGVyID8gbnVsbCA6IGRpc3BhdGNoZXIuZ2V0T3duZXIoKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGhhc1ZhbGlkS2V5KGNvbmZpZykge1xyXG4gICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChjb25maWcsIFwia2V5XCIpKSB7XHJcbiAgICAgICAgdmFyIGdldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoY29uZmlnLCBcImtleVwiKS5nZXQ7XHJcbiAgICAgICAgaWYgKGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmcpIHJldHVybiAhMTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdm9pZCAwICE9PSBjb25maWcua2V5O1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gZGVmaW5lS2V5UHJvcFdhcm5pbmdHZXR0ZXIocHJvcHMsIGRpc3BsYXlOYW1lKSB7XHJcbiAgICAgIGZ1bmN0aW9uIHdhcm5BYm91dEFjY2Vzc2luZ0tleSgpIHtcclxuICAgICAgICBzcGVjaWFsUHJvcEtleVdhcm5pbmdTaG93biB8fFxyXG4gICAgICAgICAgKChzcGVjaWFsUHJvcEtleVdhcm5pbmdTaG93biA9ICEwKSxcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgICAgIFwiJXM6IGBrZXlgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAgYmVpbmcgcmV0dXJuZWQuIElmIHlvdSBuZWVkIHRvIGFjY2VzcyB0aGUgc2FtZSB2YWx1ZSB3aXRoaW4gdGhlIGNoaWxkIGNvbXBvbmVudCwgeW91IHNob3VsZCBwYXNzIGl0IGFzIGEgZGlmZmVyZW50IHByb3AuIChodHRwczovL3JlYWN0LmRldi9saW5rL3NwZWNpYWwtcHJvcHMpXCIsXHJcbiAgICAgICAgICAgIGRpc3BsYXlOYW1lXHJcbiAgICAgICAgICApKTtcclxuICAgICAgfVxyXG4gICAgICB3YXJuQWJvdXRBY2Nlc3NpbmdLZXkuaXNSZWFjdFdhcm5pbmcgPSAhMDtcclxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCBcImtleVwiLCB7XHJcbiAgICAgICAgZ2V0OiB3YXJuQWJvdXRBY2Nlc3NpbmdLZXksXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiAhMFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGVsZW1lbnRSZWZHZXR0ZXJXaXRoRGVwcmVjYXRpb25XYXJuaW5nKCkge1xyXG4gICAgICB2YXIgY29tcG9uZW50TmFtZSA9IGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0aGlzLnR5cGUpO1xyXG4gICAgICBkaWRXYXJuQWJvdXRFbGVtZW50UmVmW2NvbXBvbmVudE5hbWVdIHx8XHJcbiAgICAgICAgKChkaWRXYXJuQWJvdXRFbGVtZW50UmVmW2NvbXBvbmVudE5hbWVdID0gITApLFxyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgICBcIkFjY2Vzc2luZyBlbGVtZW50LnJlZiB3YXMgcmVtb3ZlZCBpbiBSZWFjdCAxOS4gcmVmIGlzIG5vdyBhIHJlZ3VsYXIgcHJvcC4gSXQgd2lsbCBiZSByZW1vdmVkIGZyb20gdGhlIEpTWCBFbGVtZW50IHR5cGUgaW4gYSBmdXR1cmUgcmVsZWFzZS5cIlxyXG4gICAgICAgICkpO1xyXG4gICAgICBjb21wb25lbnROYW1lID0gdGhpcy5wcm9wcy5yZWY7XHJcbiAgICAgIHJldHVybiB2b2lkIDAgIT09IGNvbXBvbmVudE5hbWUgPyBjb21wb25lbnROYW1lIDogbnVsbDtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIFJlYWN0RWxlbWVudChcclxuICAgICAgdHlwZSxcclxuICAgICAga2V5LFxyXG4gICAgICBzZWxmLFxyXG4gICAgICBzb3VyY2UsXHJcbiAgICAgIG93bmVyLFxyXG4gICAgICBwcm9wcyxcclxuICAgICAgZGVidWdTdGFjayxcclxuICAgICAgZGVidWdUYXNrXHJcbiAgICApIHtcclxuICAgICAgc2VsZiA9IHByb3BzLnJlZjtcclxuICAgICAgdHlwZSA9IHtcclxuICAgICAgICAkJHR5cGVvZjogUkVBQ1RfRUxFTUVOVF9UWVBFLFxyXG4gICAgICAgIHR5cGU6IHR5cGUsXHJcbiAgICAgICAga2V5OiBrZXksXHJcbiAgICAgICAgcHJvcHM6IHByb3BzLFxyXG4gICAgICAgIF9vd25lcjogb3duZXJcclxuICAgICAgfTtcclxuICAgICAgbnVsbCAhPT0gKHZvaWQgMCAhPT0gc2VsZiA/IHNlbGYgOiBudWxsKVxyXG4gICAgICAgID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KHR5cGUsIFwicmVmXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogITEsXHJcbiAgICAgICAgICAgIGdldDogZWxlbWVudFJlZkdldHRlcldpdGhEZXByZWNhdGlvbldhcm5pbmdcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgOiBPYmplY3QuZGVmaW5lUHJvcGVydHkodHlwZSwgXCJyZWZcIiwgeyBlbnVtZXJhYmxlOiAhMSwgdmFsdWU6IG51bGwgfSk7XHJcbiAgICAgIHR5cGUuX3N0b3JlID0ge307XHJcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0eXBlLl9zdG9yZSwgXCJ2YWxpZGF0ZWRcIiwge1xyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogITEsXHJcbiAgICAgICAgZW51bWVyYWJsZTogITEsXHJcbiAgICAgICAgd3JpdGFibGU6ICEwLFxyXG4gICAgICAgIHZhbHVlOiAwXHJcbiAgICAgIH0pO1xyXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodHlwZSwgXCJfZGVidWdJbmZvXCIsIHtcclxuICAgICAgICBjb25maWd1cmFibGU6ICExLFxyXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxyXG4gICAgICAgIHdyaXRhYmxlOiAhMCxcclxuICAgICAgICB2YWx1ZTogbnVsbFxyXG4gICAgICB9KTtcclxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHR5cGUsIFwiX2RlYnVnU3RhY2tcIiwge1xyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogITEsXHJcbiAgICAgICAgZW51bWVyYWJsZTogITEsXHJcbiAgICAgICAgd3JpdGFibGU6ICEwLFxyXG4gICAgICAgIHZhbHVlOiBkZWJ1Z1N0YWNrXHJcbiAgICAgIH0pO1xyXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodHlwZSwgXCJfZGVidWdUYXNrXCIsIHtcclxuICAgICAgICBjb25maWd1cmFibGU6ICExLFxyXG4gICAgICAgIGVudW1lcmFibGU6ICExLFxyXG4gICAgICAgIHdyaXRhYmxlOiAhMCxcclxuICAgICAgICB2YWx1ZTogZGVidWdUYXNrXHJcbiAgICAgIH0pO1xyXG4gICAgICBPYmplY3QuZnJlZXplICYmIChPYmplY3QuZnJlZXplKHR5cGUucHJvcHMpLCBPYmplY3QuZnJlZXplKHR5cGUpKTtcclxuICAgICAgcmV0dXJuIHR5cGU7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBqc3hERVZJbXBsKFxyXG4gICAgICB0eXBlLFxyXG4gICAgICBjb25maWcsXHJcbiAgICAgIG1heWJlS2V5LFxyXG4gICAgICBpc1N0YXRpY0NoaWxkcmVuLFxyXG4gICAgICBzb3VyY2UsXHJcbiAgICAgIHNlbGYsXHJcbiAgICAgIGRlYnVnU3RhY2ssXHJcbiAgICAgIGRlYnVnVGFza1xyXG4gICAgKSB7XHJcbiAgICAgIHZhciBjaGlsZHJlbiA9IGNvbmZpZy5jaGlsZHJlbjtcclxuICAgICAgaWYgKHZvaWQgMCAhPT0gY2hpbGRyZW4pXHJcbiAgICAgICAgaWYgKGlzU3RhdGljQ2hpbGRyZW4pXHJcbiAgICAgICAgICBpZiAoaXNBcnJheUltcGwoY2hpbGRyZW4pKSB7XHJcbiAgICAgICAgICAgIGZvciAoXHJcbiAgICAgICAgICAgICAgaXNTdGF0aWNDaGlsZHJlbiA9IDA7XHJcbiAgICAgICAgICAgICAgaXNTdGF0aWNDaGlsZHJlbiA8IGNoaWxkcmVuLmxlbmd0aDtcclxuICAgICAgICAgICAgICBpc1N0YXRpY0NoaWxkcmVuKytcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgIHZhbGlkYXRlQ2hpbGRLZXlzKGNoaWxkcmVuW2lzU3RhdGljQ2hpbGRyZW5dKTtcclxuICAgICAgICAgICAgT2JqZWN0LmZyZWV6ZSAmJiBPYmplY3QuZnJlZXplKGNoaWxkcmVuKTtcclxuICAgICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgICAgICAgIFwiUmVhY3QuanN4OiBTdGF0aWMgY2hpbGRyZW4gc2hvdWxkIGFsd2F5cyBiZSBhbiBhcnJheS4gWW91IGFyZSBsaWtlbHkgZXhwbGljaXRseSBjYWxsaW5nIFJlYWN0LmpzeHMgb3IgUmVhY3QuanN4REVWLiBVc2UgdGhlIEJhYmVsIHRyYW5zZm9ybSBpbnN0ZWFkLlwiXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgZWxzZSB2YWxpZGF0ZUNoaWxkS2V5cyhjaGlsZHJlbik7XHJcbiAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZywgXCJrZXlcIikpIHtcclxuICAgICAgICBjaGlsZHJlbiA9IGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlKTtcclxuICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGNvbmZpZykuZmlsdGVyKGZ1bmN0aW9uIChrKSB7XHJcbiAgICAgICAgICByZXR1cm4gXCJrZXlcIiAhPT0gaztcclxuICAgICAgICB9KTtcclxuICAgICAgICBpc1N0YXRpY0NoaWxkcmVuID1cclxuICAgICAgICAgIDAgPCBrZXlzLmxlbmd0aFxyXG4gICAgICAgICAgICA/IFwie2tleTogc29tZUtleSwgXCIgKyBrZXlzLmpvaW4oXCI6IC4uLiwgXCIpICsgXCI6IC4uLn1cIlxyXG4gICAgICAgICAgICA6IFwie2tleTogc29tZUtleX1cIjtcclxuICAgICAgICBkaWRXYXJuQWJvdXRLZXlTcHJlYWRbY2hpbGRyZW4gKyBpc1N0YXRpY0NoaWxkcmVuXSB8fFxyXG4gICAgICAgICAgKChrZXlzID1cclxuICAgICAgICAgICAgMCA8IGtleXMubGVuZ3RoID8gXCJ7XCIgKyBrZXlzLmpvaW4oXCI6IC4uLiwgXCIpICsgXCI6IC4uLn1cIiA6IFwie31cIiksXHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgICAgICAnQSBwcm9wcyBvYmplY3QgY29udGFpbmluZyBhIFwia2V5XCIgcHJvcCBpcyBiZWluZyBzcHJlYWQgaW50byBKU1g6XFxuICBsZXQgcHJvcHMgPSAlcztcXG4gIDwlcyB7Li4ucHJvcHN9IC8+XFxuUmVhY3Qga2V5cyBtdXN0IGJlIHBhc3NlZCBkaXJlY3RseSB0byBKU1ggd2l0aG91dCB1c2luZyBzcHJlYWQ6XFxuICBsZXQgcHJvcHMgPSAlcztcXG4gIDwlcyBrZXk9e3NvbWVLZXl9IHsuLi5wcm9wc30gLz4nLFxyXG4gICAgICAgICAgICBpc1N0YXRpY0NoaWxkcmVuLFxyXG4gICAgICAgICAgICBjaGlsZHJlbixcclxuICAgICAgICAgICAga2V5cyxcclxuICAgICAgICAgICAgY2hpbGRyZW5cclxuICAgICAgICAgICksXHJcbiAgICAgICAgICAoZGlkV2FybkFib3V0S2V5U3ByZWFkW2NoaWxkcmVuICsgaXNTdGF0aWNDaGlsZHJlbl0gPSAhMCkpO1xyXG4gICAgICB9XHJcbiAgICAgIGNoaWxkcmVuID0gbnVsbDtcclxuICAgICAgdm9pZCAwICE9PSBtYXliZUtleSAmJlxyXG4gICAgICAgIChjaGVja0tleVN0cmluZ0NvZXJjaW9uKG1heWJlS2V5KSwgKGNoaWxkcmVuID0gXCJcIiArIG1heWJlS2V5KSk7XHJcbiAgICAgIGhhc1ZhbGlkS2V5KGNvbmZpZykgJiZcclxuICAgICAgICAoY2hlY2tLZXlTdHJpbmdDb2VyY2lvbihjb25maWcua2V5KSwgKGNoaWxkcmVuID0gXCJcIiArIGNvbmZpZy5rZXkpKTtcclxuICAgICAgaWYgKFwia2V5XCIgaW4gY29uZmlnKSB7XHJcbiAgICAgICAgbWF5YmVLZXkgPSB7fTtcclxuICAgICAgICBmb3IgKHZhciBwcm9wTmFtZSBpbiBjb25maWcpXHJcbiAgICAgICAgICBcImtleVwiICE9PSBwcm9wTmFtZSAmJiAobWF5YmVLZXlbcHJvcE5hbWVdID0gY29uZmlnW3Byb3BOYW1lXSk7XHJcbiAgICAgIH0gZWxzZSBtYXliZUtleSA9IGNvbmZpZztcclxuICAgICAgY2hpbGRyZW4gJiZcclxuICAgICAgICBkZWZpbmVLZXlQcm9wV2FybmluZ0dldHRlcihcclxuICAgICAgICAgIG1heWJlS2V5LFxyXG4gICAgICAgICAgXCJmdW5jdGlvblwiID09PSB0eXBlb2YgdHlwZVxyXG4gICAgICAgICAgICA/IHR5cGUuZGlzcGxheU5hbWUgfHwgdHlwZS5uYW1lIHx8IFwiVW5rbm93blwiXHJcbiAgICAgICAgICAgIDogdHlwZVxyXG4gICAgICAgICk7XHJcbiAgICAgIHJldHVybiBSZWFjdEVsZW1lbnQoXHJcbiAgICAgICAgdHlwZSxcclxuICAgICAgICBjaGlsZHJlbixcclxuICAgICAgICBzZWxmLFxyXG4gICAgICAgIHNvdXJjZSxcclxuICAgICAgICBnZXRPd25lcigpLFxyXG4gICAgICAgIG1heWJlS2V5LFxyXG4gICAgICAgIGRlYnVnU3RhY2ssXHJcbiAgICAgICAgZGVidWdUYXNrXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZUNoaWxkS2V5cyhub2RlKSB7XHJcbiAgICAgIFwib2JqZWN0XCIgPT09IHR5cGVvZiBub2RlICYmXHJcbiAgICAgICAgbnVsbCAhPT0gbm9kZSAmJlxyXG4gICAgICAgIG5vZGUuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRSAmJlxyXG4gICAgICAgIG5vZGUuX3N0b3JlICYmXHJcbiAgICAgICAgKG5vZGUuX3N0b3JlLnZhbGlkYXRlZCA9IDEpO1xyXG4gICAgfVxyXG4gICAgdmFyIFJlYWN0ID0gcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9yZWFjdFwiKSxcclxuICAgICAgUkVBQ1RfRUxFTUVOVF9UWVBFID0gU3ltYm9sLmZvcihcInJlYWN0LnRyYW5zaXRpb25hbC5lbGVtZW50XCIpLFxyXG4gICAgICBSRUFDVF9QT1JUQUxfVFlQRSA9IFN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksXHJcbiAgICAgIFJFQUNUX0ZSQUdNRU5UX1RZUEUgPSBTeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksXHJcbiAgICAgIFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSBTeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksXHJcbiAgICAgIFJFQUNUX1BST0ZJTEVSX1RZUEUgPSBTeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik7XHJcbiAgICBTeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik7XHJcbiAgICB2YXIgUkVBQ1RfQ09OU1VNRVJfVFlQRSA9IFN5bWJvbC5mb3IoXCJyZWFjdC5jb25zdW1lclwiKSxcclxuICAgICAgUkVBQ1RfQ09OVEVYVF9UWVBFID0gU3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksXHJcbiAgICAgIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSBTeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksXHJcbiAgICAgIFJFQUNUX1NVU1BFTlNFX1RZUEUgPSBTeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIiksXHJcbiAgICAgIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSA9IFN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLFxyXG4gICAgICBSRUFDVF9NRU1PX1RZUEUgPSBTeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSxcclxuICAgICAgUkVBQ1RfTEFaWV9UWVBFID0gU3ltYm9sLmZvcihcInJlYWN0LmxhenlcIiksXHJcbiAgICAgIFJFQUNUX0NMSUVOVF9SRUZFUkVOQ0UgPSBTeW1ib2wuZm9yKFwicmVhY3QuY2xpZW50LnJlZmVyZW5jZVwiKSxcclxuICAgICAgUmVhY3RTaGFyZWRJbnRlcm5hbHMgPVxyXG4gICAgICAgIFJlYWN0Ll9fQ0xJRU5UX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1dBUk5fVVNFUlNfVEhFWV9DQU5OT1RfVVBHUkFERSxcclxuICAgICAgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxyXG4gICAgICBpc0FycmF5SW1wbCA9IEFycmF5LmlzQXJyYXksXHJcbiAgICAgIGNyZWF0ZVRhc2sgPSBjb25zb2xlLmNyZWF0ZVRhc2tcclxuICAgICAgICA/IGNvbnNvbGUuY3JlYXRlVGFza1xyXG4gICAgICAgIDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgIH0sXHJcbiAgICAgIHNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duO1xyXG4gICAgdmFyIGRpZFdhcm5BYm91dEVsZW1lbnRSZWYgPSB7fTtcclxuICAgIHZhciBkaWRXYXJuQWJvdXRLZXlTcHJlYWQgPSB7fTtcclxuICAgIGV4cG9ydHMuRnJhZ21lbnQgPSBSRUFDVF9GUkFHTUVOVF9UWVBFO1xyXG4gICAgZXhwb3J0cy5qc3hERVYgPSBmdW5jdGlvbiAoXHJcbiAgICAgIHR5cGUsXHJcbiAgICAgIGNvbmZpZyxcclxuICAgICAgbWF5YmVLZXksXHJcbiAgICAgIGlzU3RhdGljQ2hpbGRyZW4sXHJcbiAgICAgIHNvdXJjZSxcclxuICAgICAgc2VsZlxyXG4gICAgKSB7XHJcbiAgICAgIHJldHVybiBqc3hERVZJbXBsKFxyXG4gICAgICAgIHR5cGUsXHJcbiAgICAgICAgY29uZmlnLFxyXG4gICAgICAgIG1heWJlS2V5LFxyXG4gICAgICAgIGlzU3RhdGljQ2hpbGRyZW4sXHJcbiAgICAgICAgc291cmNlLFxyXG4gICAgICAgIHNlbGYsXHJcbiAgICAgICAgRXJyb3IoXCJyZWFjdC1zdGFjay10b3AtZnJhbWVcIiksXHJcbiAgICAgICAgY3JlYXRlVGFzayhnZXRUYXNrTmFtZSh0eXBlKSlcclxuICAgICAgKTtcclxuICAgIH07XHJcbiAgfSkoKTtcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nif (false) {} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsOExBQXNFO0FBQ3hFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtrYWNwXFxEZXNrdG9wXFxTcGVjcmVzQ1JNdjJcXFNwZWN0cmVzR3JvdXBDUk1cXGRhc2hib2FyZFxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxccmVhY3RcXGpzeC1kZXYtcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcclxufSBlbHNlIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \*********************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'Inter', 'Inter Fallback'\",\"fontStyle\":\"normal\"},\"className\":\"__className_e8ce0c\"};\n    if(true) {\n      // 1750941607498\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwXFxcXGxheW91dC50c3hcIixcImltcG9ydFwiOlwiSW50ZXJcIixcImFyZ3VtZW50c1wiOlt7XCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwiaW50ZXJcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyw4REFBOEQ7QUFDekYsT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQW9KLGNBQWMsc0RBQXNEO0FBQ3RQLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXG5leHRcXGZvbnRcXGdvb2dsZVxcdGFyZ2V0LmNzcz97XCJwYXRoXCI6XCJhcHBcXGxheW91dC50c3hcIixcImltcG9ydFwiOlwiSW50ZXJcIixcImFyZ3VtZW50c1wiOlt7XCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwiaW50ZXJcIn18YXBwLXBhZ2VzLWJyb3dzZXIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ0ludGVyJywgJ0ludGVyIEZhbGxiYWNrJ1wiLFwiZm9udFN0eWxlXCI6XCJub3JtYWxcIn0sXCJjbGFzc05hbWVcIjpcIl9fY2xhc3NOYW1lX2U4Y2UwY1wifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzUwOTQxNjA3NDk4XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkM6L1VzZXJzL2trYWNwL0Rlc2t0b3AvU3BlY3Jlc0NSTXYyL1NwZWN0cmVzR3JvdXBDUk0vZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/tailwind-merge/dist/bundle-mjs.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTailwindMerge: () => (/* binding */ createTailwindMerge),\n/* harmony export */   extendTailwindMerge: () => (/* binding */ extendTailwindMerge),\n/* harmony export */   fromTheme: () => (/* binding */ fromTheme),\n/* harmony export */   getDefaultConfig: () => (/* binding */ getDefaultConfig),\n/* harmony export */   mergeConfigs: () => (/* binding */ mergeConfigs),\n/* harmony export */   twJoin: () => (/* binding */ twJoin),\n/* harmony export */   twMerge: () => (/* binding */ twMerge),\n/* harmony export */   validators: () => (/* binding */ validators)\n/* harmony export */ });\nconst CLASS_PART_SEPARATOR = '-';\r\nconst createClassGroupUtils = config => {\r\n  const classMap = createClassMap(config);\r\n  const {\r\n    conflictingClassGroups,\r\n    conflictingClassGroupModifiers\r\n  } = config;\r\n  const getClassGroupId = className => {\r\n    const classParts = className.split(CLASS_PART_SEPARATOR);\r\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\r\n    if (classParts[0] === '' && classParts.length !== 1) {\r\n      classParts.shift();\r\n    }\r\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\r\n  };\r\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\r\n    const conflicts = conflictingClassGroups[classGroupId] || [];\r\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\r\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\r\n    }\r\n    return conflicts;\r\n  };\r\n  return {\r\n    getClassGroupId,\r\n    getConflictingClassGroupIds\r\n  };\r\n};\r\nconst getGroupRecursive = (classParts, classPartObject) => {\r\n  if (classParts.length === 0) {\r\n    return classPartObject.classGroupId;\r\n  }\r\n  const currentClassPart = classParts[0];\r\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\r\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\r\n  if (classGroupFromNextClassPart) {\r\n    return classGroupFromNextClassPart;\r\n  }\r\n  if (classPartObject.validators.length === 0) {\r\n    return undefined;\r\n  }\r\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\r\n  return classPartObject.validators.find(({\r\n    validator\r\n  }) => validator(classRest))?.classGroupId;\r\n};\r\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\r\nconst getGroupIdForArbitraryProperty = className => {\r\n  if (arbitraryPropertyRegex.test(className)) {\r\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\r\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\r\n    if (property) {\r\n      // I use two dots here because one dot is used as prefix for class groups in plugins\r\n      return 'arbitrary..' + property;\r\n    }\r\n  }\r\n};\r\n/**\r\n * Exported for testing only\r\n */\r\nconst createClassMap = config => {\r\n  const {\r\n    theme,\r\n    prefix\r\n  } = config;\r\n  const classMap = {\r\n    nextPart: new Map(),\r\n    validators: []\r\n  };\r\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\r\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\r\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\r\n  });\r\n  return classMap;\r\n};\r\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\r\n  classGroup.forEach(classDefinition => {\r\n    if (typeof classDefinition === 'string') {\r\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\r\n      classPartObjectToEdit.classGroupId = classGroupId;\r\n      return;\r\n    }\r\n    if (typeof classDefinition === 'function') {\r\n      if (isThemeGetter(classDefinition)) {\r\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\r\n        return;\r\n      }\r\n      classPartObject.validators.push({\r\n        validator: classDefinition,\r\n        classGroupId\r\n      });\r\n      return;\r\n    }\r\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\r\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\r\n    });\r\n  });\r\n};\r\nconst getPart = (classPartObject, path) => {\r\n  let currentClassPartObject = classPartObject;\r\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\r\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\r\n      currentClassPartObject.nextPart.set(pathPart, {\r\n        nextPart: new Map(),\r\n        validators: []\r\n      });\r\n    }\r\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\r\n  });\r\n  return currentClassPartObject;\r\n};\r\nconst isThemeGetter = func => func.isThemeGetter;\r\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\r\n  if (!prefix) {\r\n    return classGroupEntries;\r\n  }\r\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\r\n    const prefixedClassGroup = classGroup.map(classDefinition => {\r\n      if (typeof classDefinition === 'string') {\r\n        return prefix + classDefinition;\r\n      }\r\n      if (typeof classDefinition === 'object') {\r\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\r\n      }\r\n      return classDefinition;\r\n    });\r\n    return [classGroupId, prefixedClassGroup];\r\n  });\r\n};\r\n\r\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\r\nconst createLruCache = maxCacheSize => {\r\n  if (maxCacheSize < 1) {\r\n    return {\r\n      get: () => undefined,\r\n      set: () => {}\r\n    };\r\n  }\r\n  let cacheSize = 0;\r\n  let cache = new Map();\r\n  let previousCache = new Map();\r\n  const update = (key, value) => {\r\n    cache.set(key, value);\r\n    cacheSize++;\r\n    if (cacheSize > maxCacheSize) {\r\n      cacheSize = 0;\r\n      previousCache = cache;\r\n      cache = new Map();\r\n    }\r\n  };\r\n  return {\r\n    get(key) {\r\n      let value = cache.get(key);\r\n      if (value !== undefined) {\r\n        return value;\r\n      }\r\n      if ((value = previousCache.get(key)) !== undefined) {\r\n        update(key, value);\r\n        return value;\r\n      }\r\n    },\r\n    set(key, value) {\r\n      if (cache.has(key)) {\r\n        cache.set(key, value);\r\n      } else {\r\n        update(key, value);\r\n      }\r\n    }\r\n  };\r\n};\r\nconst IMPORTANT_MODIFIER = '!';\r\nconst createParseClassName = config => {\r\n  const {\r\n    separator,\r\n    experimentalParseClassName\r\n  } = config;\r\n  const isSeparatorSingleCharacter = separator.length === 1;\r\n  const firstSeparatorCharacter = separator[0];\r\n  const separatorLength = separator.length;\r\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\r\n  const parseClassName = className => {\r\n    const modifiers = [];\r\n    let bracketDepth = 0;\r\n    let modifierStart = 0;\r\n    let postfixModifierPosition;\r\n    for (let index = 0; index < className.length; index++) {\r\n      let currentCharacter = className[index];\r\n      if (bracketDepth === 0) {\r\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\r\n          modifiers.push(className.slice(modifierStart, index));\r\n          modifierStart = index + separatorLength;\r\n          continue;\r\n        }\r\n        if (currentCharacter === '/') {\r\n          postfixModifierPosition = index;\r\n          continue;\r\n        }\r\n      }\r\n      if (currentCharacter === '[') {\r\n        bracketDepth++;\r\n      } else if (currentCharacter === ']') {\r\n        bracketDepth--;\r\n      }\r\n    }\r\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\r\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\r\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\r\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\r\n    return {\r\n      modifiers,\r\n      hasImportantModifier,\r\n      baseClassName,\r\n      maybePostfixModifierPosition\r\n    };\r\n  };\r\n  if (experimentalParseClassName) {\r\n    return className => experimentalParseClassName({\r\n      className,\r\n      parseClassName\r\n    });\r\n  }\r\n  return parseClassName;\r\n};\r\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\r\nconst sortModifiers = modifiers => {\r\n  if (modifiers.length <= 1) {\r\n    return modifiers;\r\n  }\r\n  const sortedModifiers = [];\r\n  let unsortedModifiers = [];\r\n  modifiers.forEach(modifier => {\r\n    const isArbitraryVariant = modifier[0] === '[';\r\n    if (isArbitraryVariant) {\r\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\r\n      unsortedModifiers = [];\r\n    } else {\r\n      unsortedModifiers.push(modifier);\r\n    }\r\n  });\r\n  sortedModifiers.push(...unsortedModifiers.sort());\r\n  return sortedModifiers;\r\n};\r\nconst createConfigUtils = config => ({\r\n  cache: createLruCache(config.cacheSize),\r\n  parseClassName: createParseClassName(config),\r\n  ...createClassGroupUtils(config)\r\n});\r\nconst SPLIT_CLASSES_REGEX = /\\s+/;\r\nconst mergeClassList = (classList, configUtils) => {\r\n  const {\r\n    parseClassName,\r\n    getClassGroupId,\r\n    getConflictingClassGroupIds\r\n  } = configUtils;\r\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example 'md:!pr'\r\n   */\r\n  const classGroupsInConflict = [];\r\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\r\n  let result = '';\r\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\r\n    const originalClassName = classNames[index];\r\n    const {\r\n      modifiers,\r\n      hasImportantModifier,\r\n      baseClassName,\r\n      maybePostfixModifierPosition\r\n    } = parseClassName(originalClassName);\r\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\r\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\r\n    if (!classGroupId) {\r\n      if (!hasPostfixModifier) {\r\n        // Not a Tailwind class\r\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\r\n        continue;\r\n      }\r\n      classGroupId = getClassGroupId(baseClassName);\r\n      if (!classGroupId) {\r\n        // Not a Tailwind class\r\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\r\n        continue;\r\n      }\r\n      hasPostfixModifier = false;\r\n    }\r\n    const variantModifier = sortModifiers(modifiers).join(':');\r\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\r\n    const classId = modifierId + classGroupId;\r\n    if (classGroupsInConflict.includes(classId)) {\r\n      // Tailwind class omitted due to conflict\r\n      continue;\r\n    }\r\n    classGroupsInConflict.push(classId);\r\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\r\n    for (let i = 0; i < conflictGroups.length; ++i) {\r\n      const group = conflictGroups[i];\r\n      classGroupsInConflict.push(modifierId + group);\r\n    }\r\n    // Tailwind class not in conflict\r\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\r\nfunction twJoin() {\r\n  let index = 0;\r\n  let argument;\r\n  let resolvedValue;\r\n  let string = '';\r\n  while (index < arguments.length) {\r\n    if (argument = arguments[index++]) {\r\n      if (resolvedValue = toValue(argument)) {\r\n        string && (string += ' ');\r\n        string += resolvedValue;\r\n      }\r\n    }\r\n  }\r\n  return string;\r\n}\r\nconst toValue = mix => {\r\n  if (typeof mix === 'string') {\r\n    return mix;\r\n  }\r\n  let resolvedValue;\r\n  let string = '';\r\n  for (let k = 0; k < mix.length; k++) {\r\n    if (mix[k]) {\r\n      if (resolvedValue = toValue(mix[k])) {\r\n        string && (string += ' ');\r\n        string += resolvedValue;\r\n      }\r\n    }\r\n  }\r\n  return string;\r\n};\r\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\r\n  let configUtils;\r\n  let cacheGet;\r\n  let cacheSet;\r\n  let functionToCall = initTailwindMerge;\r\n  function initTailwindMerge(classList) {\r\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\r\n    configUtils = createConfigUtils(config);\r\n    cacheGet = configUtils.cache.get;\r\n    cacheSet = configUtils.cache.set;\r\n    functionToCall = tailwindMerge;\r\n    return tailwindMerge(classList);\r\n  }\r\n  function tailwindMerge(classList) {\r\n    const cachedResult = cacheGet(classList);\r\n    if (cachedResult) {\r\n      return cachedResult;\r\n    }\r\n    const result = mergeClassList(classList, configUtils);\r\n    cacheSet(classList, result);\r\n    return result;\r\n  }\r\n  return function callTailwindMerge() {\r\n    return functionToCall(twJoin.apply(null, arguments));\r\n  };\r\n}\r\nconst fromTheme = key => {\r\n  const themeGetter = theme => theme[key] || [];\r\n  themeGetter.isThemeGetter = true;\r\n  return themeGetter;\r\n};\r\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\r\nconst fractionRegex = /^\\d+\\/\\d+$/;\r\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\r\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\r\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\r\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\r\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\r\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\r\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\r\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\r\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\r\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\r\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\r\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\r\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\r\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\r\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\r\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\r\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\r\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\r\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\r\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\r\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\r\nconst isAny = () => true;\r\nconst getIsArbitraryValue = (value, label, testValue) => {\r\n  const result = arbitraryValueRegex.exec(value);\r\n  if (result) {\r\n    if (result[1]) {\r\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\r\n    }\r\n    return testValue(result[2]);\r\n  }\r\n  return false;\r\n};\r\nconst isLengthOnly = value =>\r\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\r\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\r\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\r\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\r\nconst isNever = () => false;\r\nconst isShadow = value => shadowRegex.test(value);\r\nconst isImage = value => imageRegex.test(value);\r\nconst validators = /*#__PURE__*/Object.defineProperty({\r\n  __proto__: null,\r\n  isAny,\r\n  isArbitraryImage,\r\n  isArbitraryLength,\r\n  isArbitraryNumber,\r\n  isArbitraryPosition,\r\n  isArbitraryShadow,\r\n  isArbitrarySize,\r\n  isArbitraryValue,\r\n  isInteger,\r\n  isLength,\r\n  isNumber,\r\n  isPercent,\r\n  isTshirtSize\r\n}, Symbol.toStringTag, {\r\n  value: 'Module'\r\n});\r\nconst getDefaultConfig = () => {\r\n  const colors = fromTheme('colors');\r\n  const spacing = fromTheme('spacing');\r\n  const blur = fromTheme('blur');\r\n  const brightness = fromTheme('brightness');\r\n  const borderColor = fromTheme('borderColor');\r\n  const borderRadius = fromTheme('borderRadius');\r\n  const borderSpacing = fromTheme('borderSpacing');\r\n  const borderWidth = fromTheme('borderWidth');\r\n  const contrast = fromTheme('contrast');\r\n  const grayscale = fromTheme('grayscale');\r\n  const hueRotate = fromTheme('hueRotate');\r\n  const invert = fromTheme('invert');\r\n  const gap = fromTheme('gap');\r\n  const gradientColorStops = fromTheme('gradientColorStops');\r\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\r\n  const inset = fromTheme('inset');\r\n  const margin = fromTheme('margin');\r\n  const opacity = fromTheme('opacity');\r\n  const padding = fromTheme('padding');\r\n  const saturate = fromTheme('saturate');\r\n  const scale = fromTheme('scale');\r\n  const sepia = fromTheme('sepia');\r\n  const skew = fromTheme('skew');\r\n  const space = fromTheme('space');\r\n  const translate = fromTheme('translate');\r\n  const getOverscroll = () => ['auto', 'contain', 'none'];\r\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\r\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\r\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\r\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\r\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\r\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\r\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\r\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\r\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\r\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\r\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\r\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\r\n  return {\r\n    cacheSize: 500,\r\n    separator: ':',\r\n    theme: {\r\n      colors: [isAny],\r\n      spacing: [isLength, isArbitraryLength],\r\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\r\n      brightness: getNumberAndArbitrary(),\r\n      borderColor: [colors],\r\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\r\n      borderSpacing: getSpacingWithArbitrary(),\r\n      borderWidth: getLengthWithEmptyAndArbitrary(),\r\n      contrast: getNumberAndArbitrary(),\r\n      grayscale: getZeroAndEmpty(),\r\n      hueRotate: getNumberAndArbitrary(),\r\n      invert: getZeroAndEmpty(),\r\n      gap: getSpacingWithArbitrary(),\r\n      gradientColorStops: [colors],\r\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\r\n      inset: getSpacingWithAutoAndArbitrary(),\r\n      margin: getSpacingWithAutoAndArbitrary(),\r\n      opacity: getNumberAndArbitrary(),\r\n      padding: getSpacingWithArbitrary(),\r\n      saturate: getNumberAndArbitrary(),\r\n      scale: getNumberAndArbitrary(),\r\n      sepia: getZeroAndEmpty(),\r\n      skew: getNumberAndArbitrary(),\r\n      space: getSpacingWithArbitrary(),\r\n      translate: getSpacingWithArbitrary()\r\n    },\r\n    classGroups: {\r\n      // Layout\r\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\r\n      aspect: [{\r\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\r\n      container: ['container'],\r\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\r\n      columns: [{\r\n        columns: [isTshirtSize]\r\n      }],\r\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\r\n      'break-after': [{\r\n        'break-after': getBreaks()\r\n      }],\r\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\r\n      'break-before': [{\r\n        'break-before': getBreaks()\r\n      }],\r\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\r\n      'break-inside': [{\r\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\r\n      }],\r\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\r\n      'box-decoration': [{\r\n        'box-decoration': ['slice', 'clone']\r\n      }],\r\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\r\n      box: [{\r\n        box: ['border', 'content']\r\n      }],\r\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\r\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\r\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\r\n      float: [{\r\n        float: ['right', 'left', 'none', 'start', 'end']\r\n      }],\r\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\r\n      clear: [{\r\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\r\n      }],\r\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\r\n      isolation: ['isolate', 'isolation-auto'],\r\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\r\n      'object-fit': [{\r\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\r\n      }],\r\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\r\n      'object-position': [{\r\n        object: [...getPositions(), isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\r\n      overflow: [{\r\n        overflow: getOverflow()\r\n      }],\r\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\r\n      'overflow-x': [{\r\n        'overflow-x': getOverflow()\r\n      }],\r\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\r\n      'overflow-y': [{\r\n        'overflow-y': getOverflow()\r\n      }],\r\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\r\n      overscroll: [{\r\n        overscroll: getOverscroll()\r\n      }],\r\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\r\n      'overscroll-x': [{\r\n        'overscroll-x': getOverscroll()\r\n      }],\r\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\r\n      'overscroll-y': [{\r\n        'overscroll-y': getOverscroll()\r\n      }],\r\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\r\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\r\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      inset: [{\r\n        inset: [inset]\r\n      }],\r\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      'inset-x': [{\r\n        'inset-x': [inset]\r\n      }],\r\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      'inset-y': [{\r\n        'inset-y': [inset]\r\n      }],\r\n      /**\r\n       * Start\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      start: [{\r\n        start: [inset]\r\n      }],\r\n      /**\r\n       * End\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      end: [{\r\n        end: [inset]\r\n      }],\r\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      top: [{\r\n        top: [inset]\r\n      }],\r\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      right: [{\r\n        right: [inset]\r\n      }],\r\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      bottom: [{\r\n        bottom: [inset]\r\n      }],\r\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\r\n      left: [{\r\n        left: [inset]\r\n      }],\r\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\r\n      visibility: ['visible', 'invisible', 'collapse'],\r\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\r\n      z: [{\r\n        z: ['auto', isInteger, isArbitraryValue]\r\n      }],\r\n      // Flexbox and Grid\r\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\r\n      basis: [{\r\n        basis: getSpacingWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\r\n      'flex-direction': [{\r\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\r\n      }],\r\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\r\n      'flex-wrap': [{\r\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\r\n      }],\r\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\r\n      flex: [{\r\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\r\n      grow: [{\r\n        grow: getZeroAndEmpty()\r\n      }],\r\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\r\n      shrink: [{\r\n        shrink: getZeroAndEmpty()\r\n      }],\r\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\r\n      order: [{\r\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\r\n      'grid-cols': [{\r\n        'grid-cols': [isAny]\r\n      }],\r\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\r\n      'col-start-end': [{\r\n        col: ['auto', {\r\n          span: ['full', isInteger, isArbitraryValue]\r\n        }, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\r\n      'col-start': [{\r\n        'col-start': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\r\n      'col-end': [{\r\n        'col-end': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\r\n      'grid-rows': [{\r\n        'grid-rows': [isAny]\r\n      }],\r\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\r\n      'row-start-end': [{\r\n        row: ['auto', {\r\n          span: [isInteger, isArbitraryValue]\r\n        }, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\r\n      'row-start': [{\r\n        'row-start': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\r\n      'row-end': [{\r\n        'row-end': getNumberWithAutoAndArbitrary()\r\n      }],\r\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\r\n      'grid-flow': [{\r\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\r\n      }],\r\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\r\n      'auto-cols': [{\r\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\r\n      'auto-rows': [{\r\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\r\n      gap: [{\r\n        gap: [gap]\r\n      }],\r\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\r\n      'gap-x': [{\r\n        'gap-x': [gap]\r\n      }],\r\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\r\n      'gap-y': [{\r\n        'gap-y': [gap]\r\n      }],\r\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\r\n      'justify-content': [{\r\n        justify: ['normal', ...getAlign()]\r\n      }],\r\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\r\n      'justify-items': [{\r\n        'justify-items': ['start', 'end', 'center', 'stretch']\r\n      }],\r\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\r\n      'justify-self': [{\r\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\r\n      }],\r\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\r\n      'align-content': [{\r\n        content: ['normal', ...getAlign(), 'baseline']\r\n      }],\r\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\r\n      'align-items': [{\r\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\r\n      }],\r\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\r\n      'align-self': [{\r\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\r\n      }],\r\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\r\n      'place-content': [{\r\n        'place-content': [...getAlign(), 'baseline']\r\n      }],\r\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\r\n      'place-items': [{\r\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\r\n      }],\r\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\r\n      'place-self': [{\r\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\r\n      }],\r\n      // Spacing\r\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      p: [{\r\n        p: [padding]\r\n      }],\r\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      px: [{\r\n        px: [padding]\r\n      }],\r\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      py: [{\r\n        py: [padding]\r\n      }],\r\n      /**\r\n       * Padding Start\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      ps: [{\r\n        ps: [padding]\r\n      }],\r\n      /**\r\n       * Padding End\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pe: [{\r\n        pe: [padding]\r\n      }],\r\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pt: [{\r\n        pt: [padding]\r\n      }],\r\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pr: [{\r\n        pr: [padding]\r\n      }],\r\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pb: [{\r\n        pb: [padding]\r\n      }],\r\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\r\n      pl: [{\r\n        pl: [padding]\r\n      }],\r\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      m: [{\r\n        m: [margin]\r\n      }],\r\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mx: [{\r\n        mx: [margin]\r\n      }],\r\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      my: [{\r\n        my: [margin]\r\n      }],\r\n      /**\r\n       * Margin Start\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      ms: [{\r\n        ms: [margin]\r\n      }],\r\n      /**\r\n       * Margin End\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      me: [{\r\n        me: [margin]\r\n      }],\r\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mt: [{\r\n        mt: [margin]\r\n      }],\r\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mr: [{\r\n        mr: [margin]\r\n      }],\r\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      mb: [{\r\n        mb: [margin]\r\n      }],\r\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\r\n      ml: [{\r\n        ml: [margin]\r\n      }],\r\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-x': [{\r\n        'space-x': [space]\r\n      }],\r\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-x-reverse': ['space-x-reverse'],\r\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-y': [{\r\n        'space-y': [space]\r\n      }],\r\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\r\n      'space-y-reverse': ['space-y-reverse'],\r\n      // Sizing\r\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\r\n      w: [{\r\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\r\n      }],\r\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\r\n      'min-w': [{\r\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\r\n      }],\r\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\r\n      'max-w': [{\r\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\r\n          screen: [isTshirtSize]\r\n        }, isTshirtSize]\r\n      }],\r\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\r\n      h: [{\r\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\r\n      }],\r\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\r\n      'min-h': [{\r\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\r\n      }],\r\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\r\n      'max-h': [{\r\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\r\n      }],\r\n      /**\r\n       * Size\r\n       * @see https://tailwindcss.com/docs/size\r\n       */\r\n      size: [{\r\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\r\n      }],\r\n      // Typography\r\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\r\n      'font-size': [{\r\n        text: ['base', isTshirtSize, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\r\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\r\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\r\n      'font-style': ['italic', 'not-italic'],\r\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\r\n      'font-weight': [{\r\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\r\n      }],\r\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\r\n      'font-family': [{\r\n        font: [isAny]\r\n      }],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-normal': ['normal-nums'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-ordinal': ['ordinal'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-slashed-zero': ['slashed-zero'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\r\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\r\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\r\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\r\n      tracking: [{\r\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Line Clamp\r\n       * @see https://tailwindcss.com/docs/line-clamp\r\n       */\r\n      'line-clamp': [{\r\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\r\n      }],\r\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\r\n      leading: [{\r\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * List Style Image\r\n       * @see https://tailwindcss.com/docs/list-style-image\r\n       */\r\n      'list-image': [{\r\n        'list-image': ['none', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\r\n      'list-style-type': [{\r\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\r\n      'list-style-position': [{\r\n        list: ['inside', 'outside']\r\n      }],\r\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\r\n      'placeholder-color': [{\r\n        placeholder: [colors]\r\n      }],\r\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\r\n      'placeholder-opacity': [{\r\n        'placeholder-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\r\n      'text-alignment': [{\r\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\r\n      }],\r\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\r\n      'text-color': [{\r\n        text: [colors]\r\n      }],\r\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\r\n      'text-opacity': [{\r\n        'text-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\r\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\r\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\r\n      'text-decoration-style': [{\r\n        decoration: [...getLineStyles(), 'wavy']\r\n      }],\r\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\r\n      'text-decoration-thickness': [{\r\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\r\n      'underline-offset': [{\r\n        'underline-offset': ['auto', isLength, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\r\n      'text-decoration-color': [{\r\n        decoration: [colors]\r\n      }],\r\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\r\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\r\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\r\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\r\n      /**\r\n       * Text Wrap\r\n       * @see https://tailwindcss.com/docs/text-wrap\r\n       */\r\n      'text-wrap': [{\r\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\r\n      }],\r\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\r\n      indent: [{\r\n        indent: getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\r\n      'vertical-align': [{\r\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\r\n      whitespace: [{\r\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\r\n      }],\r\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\r\n      break: [{\r\n        break: ['normal', 'words', 'all', 'keep']\r\n      }],\r\n      /**\r\n       * Hyphens\r\n       * @see https://tailwindcss.com/docs/hyphens\r\n       */\r\n      hyphens: [{\r\n        hyphens: ['none', 'manual', 'auto']\r\n      }],\r\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\r\n      content: [{\r\n        content: ['none', isArbitraryValue]\r\n      }],\r\n      // Backgrounds\r\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\r\n      'bg-attachment': [{\r\n        bg: ['fixed', 'local', 'scroll']\r\n      }],\r\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\r\n      'bg-clip': [{\r\n        'bg-clip': ['border', 'padding', 'content', 'text']\r\n      }],\r\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\r\n      'bg-opacity': [{\r\n        'bg-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\r\n      'bg-origin': [{\r\n        'bg-origin': ['border', 'padding', 'content']\r\n      }],\r\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\r\n      'bg-position': [{\r\n        bg: [...getPositions(), isArbitraryPosition]\r\n      }],\r\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\r\n      'bg-repeat': [{\r\n        bg: ['no-repeat', {\r\n          repeat: ['', 'x', 'y', 'round', 'space']\r\n        }]\r\n      }],\r\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\r\n      'bg-size': [{\r\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\r\n      }],\r\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\r\n      'bg-image': [{\r\n        bg: ['none', {\r\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\r\n        }, isArbitraryImage]\r\n      }],\r\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\r\n      'bg-color': [{\r\n        bg: [colors]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops From Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-from-pos': [{\r\n        from: [gradientColorStopPositions]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops Via Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-via-pos': [{\r\n        via: [gradientColorStopPositions]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops To Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-to-pos': [{\r\n        to: [gradientColorStopPositions]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-from': [{\r\n        from: [gradientColorStops]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-via': [{\r\n        via: [gradientColorStops]\r\n      }],\r\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\r\n      'gradient-to': [{\r\n        to: [gradientColorStops]\r\n      }],\r\n      // Borders\r\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      rounded: [{\r\n        rounded: [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-s': [{\r\n        'rounded-s': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-e': [{\r\n        'rounded-e': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-t': [{\r\n        'rounded-t': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-r': [{\r\n        'rounded-r': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-b': [{\r\n        'rounded-b': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-l': [{\r\n        'rounded-l': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Start Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-ss': [{\r\n        'rounded-ss': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Start End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-se': [{\r\n        'rounded-se': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius End End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-ee': [{\r\n        'rounded-ee': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius End Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-es': [{\r\n        'rounded-es': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-tl': [{\r\n        'rounded-tl': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-tr': [{\r\n        'rounded-tr': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-br': [{\r\n        'rounded-br': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\r\n      'rounded-bl': [{\r\n        'rounded-bl': [borderRadius]\r\n      }],\r\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w': [{\r\n        border: [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-x': [{\r\n        'border-x': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-y': [{\r\n        'border-y': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Start\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-s': [{\r\n        'border-s': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width End\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-e': [{\r\n        'border-e': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-t': [{\r\n        'border-t': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-r': [{\r\n        'border-r': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-b': [{\r\n        'border-b': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\r\n      'border-w-l': [{\r\n        'border-l': [borderWidth]\r\n      }],\r\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\r\n      'border-opacity': [{\r\n        'border-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\r\n      'border-style': [{\r\n        border: [...getLineStyles(), 'hidden']\r\n      }],\r\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-x': [{\r\n        'divide-x': [borderWidth]\r\n      }],\r\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-x-reverse': ['divide-x-reverse'],\r\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-y': [{\r\n        'divide-y': [borderWidth]\r\n      }],\r\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\r\n      'divide-y-reverse': ['divide-y-reverse'],\r\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\r\n      'divide-opacity': [{\r\n        'divide-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\r\n      'divide-style': [{\r\n        divide: getLineStyles()\r\n      }],\r\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color': [{\r\n        border: [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-x': [{\r\n        'border-x': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-y': [{\r\n        'border-y': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color S\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-s': [{\r\n        'border-s': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color E\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-e': [{\r\n        'border-e': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-t': [{\r\n        'border-t': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-r': [{\r\n        'border-r': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-b': [{\r\n        'border-b': [borderColor]\r\n      }],\r\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\r\n      'border-color-l': [{\r\n        'border-l': [borderColor]\r\n      }],\r\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\r\n      'divide-color': [{\r\n        divide: [borderColor]\r\n      }],\r\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\r\n      'outline-style': [{\r\n        outline: ['', ...getLineStyles()]\r\n      }],\r\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\r\n      'outline-offset': [{\r\n        'outline-offset': [isLength, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\r\n      'outline-w': [{\r\n        outline: [isLength, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\r\n      'outline-color': [{\r\n        outline: [colors]\r\n      }],\r\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\r\n      'ring-w': [{\r\n        ring: getLengthWithEmptyAndArbitrary()\r\n      }],\r\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\r\n      'ring-w-inset': ['ring-inset'],\r\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\r\n      'ring-color': [{\r\n        ring: [colors]\r\n      }],\r\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\r\n      'ring-opacity': [{\r\n        'ring-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\r\n      'ring-offset-w': [{\r\n        'ring-offset': [isLength, isArbitraryLength]\r\n      }],\r\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\r\n      'ring-offset-color': [{\r\n        'ring-offset': [colors]\r\n      }],\r\n      // Effects\r\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\r\n      shadow: [{\r\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\r\n      }],\r\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\r\n      'shadow-color': [{\r\n        shadow: [isAny]\r\n      }],\r\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\r\n      opacity: [{\r\n        opacity: [opacity]\r\n      }],\r\n      /**\r\n       * Mix Blend Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\r\n      'mix-blend': [{\r\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\r\n      }],\r\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\r\n      'bg-blend': [{\r\n        'bg-blend': getBlendModes()\r\n      }],\r\n      // Filters\r\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\r\n      filter: [{\r\n        filter: ['', 'none']\r\n      }],\r\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\r\n      blur: [{\r\n        blur: [blur]\r\n      }],\r\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\r\n      brightness: [{\r\n        brightness: [brightness]\r\n      }],\r\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\r\n      contrast: [{\r\n        contrast: [contrast]\r\n      }],\r\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\r\n      'drop-shadow': [{\r\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\r\n      grayscale: [{\r\n        grayscale: [grayscale]\r\n      }],\r\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\r\n      'hue-rotate': [{\r\n        'hue-rotate': [hueRotate]\r\n      }],\r\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\r\n      invert: [{\r\n        invert: [invert]\r\n      }],\r\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\r\n      saturate: [{\r\n        saturate: [saturate]\r\n      }],\r\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\r\n      sepia: [{\r\n        sepia: [sepia]\r\n      }],\r\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\r\n      'backdrop-filter': [{\r\n        'backdrop-filter': ['', 'none']\r\n      }],\r\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\r\n      'backdrop-blur': [{\r\n        'backdrop-blur': [blur]\r\n      }],\r\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\r\n      'backdrop-brightness': [{\r\n        'backdrop-brightness': [brightness]\r\n      }],\r\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\r\n      'backdrop-contrast': [{\r\n        'backdrop-contrast': [contrast]\r\n      }],\r\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\r\n      'backdrop-grayscale': [{\r\n        'backdrop-grayscale': [grayscale]\r\n      }],\r\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\r\n      'backdrop-hue-rotate': [{\r\n        'backdrop-hue-rotate': [hueRotate]\r\n      }],\r\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\r\n      'backdrop-invert': [{\r\n        'backdrop-invert': [invert]\r\n      }],\r\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\r\n      'backdrop-opacity': [{\r\n        'backdrop-opacity': [opacity]\r\n      }],\r\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\r\n      'backdrop-saturate': [{\r\n        'backdrop-saturate': [saturate]\r\n      }],\r\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\r\n      'backdrop-sepia': [{\r\n        'backdrop-sepia': [sepia]\r\n      }],\r\n      // Tables\r\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\r\n      'border-collapse': [{\r\n        border: ['collapse', 'separate']\r\n      }],\r\n      /**\r\n       * Border Spacing\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\r\n      'border-spacing': [{\r\n        'border-spacing': [borderSpacing]\r\n      }],\r\n      /**\r\n       * Border Spacing X\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\r\n      'border-spacing-x': [{\r\n        'border-spacing-x': [borderSpacing]\r\n      }],\r\n      /**\r\n       * Border Spacing Y\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\r\n      'border-spacing-y': [{\r\n        'border-spacing-y': [borderSpacing]\r\n      }],\r\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\r\n      'table-layout': [{\r\n        table: ['auto', 'fixed']\r\n      }],\r\n      /**\r\n       * Caption Side\r\n       * @see https://tailwindcss.com/docs/caption-side\r\n       */\r\n      caption: [{\r\n        caption: ['top', 'bottom']\r\n      }],\r\n      // Transitions and Animation\r\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\r\n      transition: [{\r\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\r\n      duration: [{\r\n        duration: getNumberAndArbitrary()\r\n      }],\r\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\r\n      ease: [{\r\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\r\n      delay: [{\r\n        delay: getNumberAndArbitrary()\r\n      }],\r\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\r\n      animate: [{\r\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\r\n      }],\r\n      // Transforms\r\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\r\n      transform: [{\r\n        transform: ['', 'gpu', 'none']\r\n      }],\r\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\r\n      scale: [{\r\n        scale: [scale]\r\n      }],\r\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\r\n      'scale-x': [{\r\n        'scale-x': [scale]\r\n      }],\r\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\r\n      'scale-y': [{\r\n        'scale-y': [scale]\r\n      }],\r\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\r\n      rotate: [{\r\n        rotate: [isInteger, isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\r\n      'translate-x': [{\r\n        'translate-x': [translate]\r\n      }],\r\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\r\n      'translate-y': [{\r\n        'translate-y': [translate]\r\n      }],\r\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\r\n      'skew-x': [{\r\n        'skew-x': [skew]\r\n      }],\r\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\r\n      'skew-y': [{\r\n        'skew-y': [skew]\r\n      }],\r\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\r\n      'transform-origin': [{\r\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\r\n      }],\r\n      // Interactivity\r\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\r\n      accent: [{\r\n        accent: ['auto', colors]\r\n      }],\r\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\r\n      appearance: [{\r\n        appearance: ['none', 'auto']\r\n      }],\r\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\r\n      cursor: [{\r\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\r\n      }],\r\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\r\n      'caret-color': [{\r\n        caret: [colors]\r\n      }],\r\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\r\n      'pointer-events': [{\r\n        'pointer-events': ['none', 'auto']\r\n      }],\r\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\r\n      resize: [{\r\n        resize: ['none', 'y', 'x', '']\r\n      }],\r\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\r\n      'scroll-behavior': [{\r\n        scroll: ['auto', 'smooth']\r\n      }],\r\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-m': [{\r\n        'scroll-m': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mx': [{\r\n        'scroll-mx': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-my': [{\r\n        'scroll-my': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Start\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-ms': [{\r\n        'scroll-ms': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin End\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-me': [{\r\n        'scroll-me': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mt': [{\r\n        'scroll-mt': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mr': [{\r\n        'scroll-mr': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-mb': [{\r\n        'scroll-mb': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\r\n      'scroll-ml': [{\r\n        'scroll-ml': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-p': [{\r\n        'scroll-p': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-px': [{\r\n        'scroll-px': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-py': [{\r\n        'scroll-py': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Start\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-ps': [{\r\n        'scroll-ps': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding End\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pe': [{\r\n        'scroll-pe': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pt': [{\r\n        'scroll-pt': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pr': [{\r\n        'scroll-pr': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pb': [{\r\n        'scroll-pb': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\r\n      'scroll-pl': [{\r\n        'scroll-pl': getSpacingWithArbitrary()\r\n      }],\r\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\r\n      'snap-align': [{\r\n        snap: ['start', 'end', 'center', 'align-none']\r\n      }],\r\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\r\n      'snap-stop': [{\r\n        snap: ['normal', 'always']\r\n      }],\r\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\r\n      'snap-type': [{\r\n        snap: ['none', 'x', 'y', 'both']\r\n      }],\r\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\r\n      'snap-strictness': [{\r\n        snap: ['mandatory', 'proximity']\r\n      }],\r\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      touch: [{\r\n        touch: ['auto', 'none', 'manipulation']\r\n      }],\r\n      /**\r\n       * Touch Action X\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      'touch-x': [{\r\n        'touch-pan': ['x', 'left', 'right']\r\n      }],\r\n      /**\r\n       * Touch Action Y\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      'touch-y': [{\r\n        'touch-pan': ['y', 'up', 'down']\r\n      }],\r\n      /**\r\n       * Touch Action Pinch Zoom\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\r\n      'touch-pz': ['touch-pinch-zoom'],\r\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\r\n      select: [{\r\n        select: ['none', 'text', 'all', 'auto']\r\n      }],\r\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\r\n      'will-change': [{\r\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\r\n      }],\r\n      // SVG\r\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\r\n      fill: [{\r\n        fill: [colors, 'none']\r\n      }],\r\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\r\n      'stroke-w': [{\r\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\r\n      }],\r\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\r\n      stroke: [{\r\n        stroke: [colors, 'none']\r\n      }],\r\n      // Accessibility\r\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\r\n      sr: ['sr-only', 'not-sr-only'],\r\n      /**\r\n       * Forced Color Adjust\r\n       * @see https://tailwindcss.com/docs/forced-color-adjust\r\n       */\r\n      'forced-color-adjust': [{\r\n        'forced-color-adjust': ['auto', 'none']\r\n      }]\r\n    },\r\n    conflictingClassGroups: {\r\n      overflow: ['overflow-x', 'overflow-y'],\r\n      overscroll: ['overscroll-x', 'overscroll-y'],\r\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\r\n      'inset-x': ['right', 'left'],\r\n      'inset-y': ['top', 'bottom'],\r\n      flex: ['basis', 'grow', 'shrink'],\r\n      gap: ['gap-x', 'gap-y'],\r\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\r\n      px: ['pr', 'pl'],\r\n      py: ['pt', 'pb'],\r\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\r\n      mx: ['mr', 'ml'],\r\n      my: ['mt', 'mb'],\r\n      size: ['w', 'h'],\r\n      'font-size': ['leading'],\r\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\r\n      'fvn-ordinal': ['fvn-normal'],\r\n      'fvn-slashed-zero': ['fvn-normal'],\r\n      'fvn-figure': ['fvn-normal'],\r\n      'fvn-spacing': ['fvn-normal'],\r\n      'fvn-fraction': ['fvn-normal'],\r\n      'line-clamp': ['display', 'overflow'],\r\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\r\n      'rounded-s': ['rounded-ss', 'rounded-es'],\r\n      'rounded-e': ['rounded-se', 'rounded-ee'],\r\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\r\n      'rounded-r': ['rounded-tr', 'rounded-br'],\r\n      'rounded-b': ['rounded-br', 'rounded-bl'],\r\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\r\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\r\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\r\n      'border-w-x': ['border-w-r', 'border-w-l'],\r\n      'border-w-y': ['border-w-t', 'border-w-b'],\r\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\r\n      'border-color-x': ['border-color-r', 'border-color-l'],\r\n      'border-color-y': ['border-color-t', 'border-color-b'],\r\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\r\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\r\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\r\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\r\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\r\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\r\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\r\n      'touch-x': ['touch'],\r\n      'touch-y': ['touch'],\r\n      'touch-pz': ['touch']\r\n    },\r\n    conflictingClassGroupModifiers: {\r\n      'font-size': ['leading']\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\r\nconst mergeConfigs = (baseConfig, {\r\n  cacheSize,\r\n  prefix,\r\n  separator,\r\n  experimentalParseClassName,\r\n  extend = {},\r\n  override = {}\r\n}) => {\r\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\r\n  overrideProperty(baseConfig, 'prefix', prefix);\r\n  overrideProperty(baseConfig, 'separator', separator);\r\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\r\n  for (const configKey in override) {\r\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\r\n  }\r\n  for (const key in extend) {\r\n    mergeConfigProperties(baseConfig[key], extend[key]);\r\n  }\r\n  return baseConfig;\r\n};\r\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\r\n  if (overrideValue !== undefined) {\r\n    baseObject[overrideKey] = overrideValue;\r\n  }\r\n};\r\nconst overrideConfigProperties = (baseObject, overrideObject) => {\r\n  if (overrideObject) {\r\n    for (const key in overrideObject) {\r\n      overrideProperty(baseObject, key, overrideObject[key]);\r\n    }\r\n  }\r\n};\r\nconst mergeConfigProperties = (baseObject, mergeObject) => {\r\n  if (mergeObject) {\r\n    for (const key in mergeObject) {\r\n      const mergeValue = mergeObject[key];\r\n      if (mergeValue !== undefined) {\r\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\r\n      }\r\n    }\r\n  }\r\n};\r\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\r\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\r\n\r\n//# sourceMappingURL=bundle-mjs.mjs.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ws/browser.js":
/*!************************************!*\
  !*** ./node_modules/ws/browser.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nmodule.exports = function () {\r\n  throw new Error(\r\n    'ws does not work in the browser. Browser clients must use the native ' +\r\n      'WebSocket object'\r\n  );\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy93cy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXHdzXFxicm93c2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xyXG4gIHRocm93IG5ldyBFcnJvcihcclxuICAgICd3cyBkb2VzIG5vdCB3b3JrIGluIHRoZSBicm93c2VyLiBCcm93c2VyIGNsaWVudHMgbXVzdCB1c2UgdGhlIG5hdGl2ZSAnICtcclxuICAgICAgJ1dlYlNvY2tldCBvYmplY3QnXHJcbiAgKTtcclxufTtcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ws/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs":
/*!*************************************************!*\
  !*** ./node_modules/zustand/esm/middleware.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   createJSONStorage: () => (/* binding */ createJSONStorage),\n/* harmony export */   devtools: () => (/* binding */ devtools),\n/* harmony export */   persist: () => (/* binding */ persist),\n/* harmony export */   redux: () => (/* binding */ redux),\n/* harmony export */   subscribeWithSelector: () => (/* binding */ subscribeWithSelector)\n/* harmony export */ });\nconst reduxImpl = (reducer, initial) => (set, _get, api) => {\r\n  api.dispatch = (action) => {\r\n    set((state) => reducer(state, action), false, action);\r\n    return action;\r\n  };\r\n  api.dispatchFromDevtools = true;\r\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\r\n};\r\nconst redux = reduxImpl;\r\n\r\nconst trackedConnections = /* @__PURE__ */ new Map();\r\nconst getTrackedConnectionState = (name) => {\r\n  const api = trackedConnections.get(name);\r\n  if (!api) return {};\r\n  return Object.fromEntries(\r\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\r\n  );\r\n};\r\nconst extractConnectionInformation = (store, extensionConnector, options) => {\r\n  if (store === void 0) {\r\n    return {\r\n      type: \"untracked\",\r\n      connection: extensionConnector.connect(options)\r\n    };\r\n  }\r\n  const existingConnection = trackedConnections.get(options.name);\r\n  if (existingConnection) {\r\n    return { type: \"tracked\", store, ...existingConnection };\r\n  }\r\n  const newConnection = {\r\n    connection: extensionConnector.connect(options),\r\n    stores: {}\r\n  };\r\n  trackedConnections.set(options.name, newConnection);\r\n  return { type: \"tracked\", store, ...newConnection };\r\n};\r\nconst removeStoreFromTrackedConnections = (name, store) => {\r\n  if (store === void 0) return;\r\n  const connectionInfo = trackedConnections.get(name);\r\n  if (!connectionInfo) return;\r\n  delete connectionInfo.stores[store];\r\n  if (Object.keys(connectionInfo.stores).length === 0) {\r\n    trackedConnections.delete(name);\r\n  }\r\n};\r\nconst findCallerName = (stack) => {\r\n  var _a, _b;\r\n  if (!stack) return void 0;\r\n  const traceLines = stack.split(\"\\n\");\r\n  const apiSetStateLineIndex = traceLines.findIndex(\r\n    (traceLine) => traceLine.includes(\"api.setState\")\r\n  );\r\n  if (apiSetStateLineIndex < 0) return void 0;\r\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\r\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\r\n};\r\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\r\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\r\n  let extensionConnector;\r\n  try {\r\n    extensionConnector = (enabled != null ? enabled : ( false ? 0 : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\r\n  } catch (e) {\r\n  }\r\n  if (!extensionConnector) {\r\n    return fn(set, get, api);\r\n  }\r\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\r\n  let isRecording = true;\r\n  api.setState = (state, replace, nameOrAction) => {\r\n    const r = set(state, replace);\r\n    if (!isRecording) return r;\r\n    const inferredActionType = findCallerName(new Error().stack);\r\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || inferredActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\r\n    if (store === void 0) {\r\n      connection == null ? void 0 : connection.send(action, get());\r\n      return r;\r\n    }\r\n    connection == null ? void 0 : connection.send(\r\n      {\r\n        ...action,\r\n        type: `${store}/${action.type}`\r\n      },\r\n      {\r\n        ...getTrackedConnectionState(options.name),\r\n        [store]: api.getState()\r\n      }\r\n    );\r\n    return r;\r\n  };\r\n  api.devtools = {\r\n    cleanup: () => {\r\n      if (connection && typeof connection.unsubscribe === \"function\") {\r\n        connection.unsubscribe();\r\n      }\r\n      removeStoreFromTrackedConnections(options.name, store);\r\n    }\r\n  };\r\n  const setStateFromDevtools = (...a) => {\r\n    const originalIsRecording = isRecording;\r\n    isRecording = false;\r\n    set(...a);\r\n    isRecording = originalIsRecording;\r\n  };\r\n  const initialState = fn(api.setState, get, api);\r\n  if (connectionInformation.type === \"untracked\") {\r\n    connection == null ? void 0 : connection.init(initialState);\r\n  } else {\r\n    connectionInformation.stores[connectionInformation.store] = api;\r\n    connection == null ? void 0 : connection.init(\r\n      Object.fromEntries(\r\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\r\n          key,\r\n          key === connectionInformation.store ? initialState : store2.getState()\r\n        ])\r\n      )\r\n    );\r\n  }\r\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\r\n    let didWarnAboutReservedActionType = false;\r\n    const originalDispatch = api.dispatch;\r\n    api.dispatch = (...args) => {\r\n      if (( false ? 0 : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\r\n        console.warn(\r\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\r\n        );\r\n        didWarnAboutReservedActionType = true;\r\n      }\r\n      originalDispatch(...args);\r\n    };\r\n  }\r\n  connection.subscribe((message) => {\r\n    var _a;\r\n    switch (message.type) {\r\n      case \"ACTION\":\r\n        if (typeof message.payload !== \"string\") {\r\n          console.error(\r\n            \"[zustand devtools middleware] Unsupported action format\"\r\n          );\r\n          return;\r\n        }\r\n        return parseJsonThen(\r\n          message.payload,\r\n          (action) => {\r\n            if (action.type === \"__setState\") {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(action.state);\r\n                return;\r\n              }\r\n              if (Object.keys(action.state).length !== 1) {\r\n                console.error(\r\n                  `\r\n                    [zustand devtools middleware] Unsupported __setState action format.\r\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\r\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\r\n                    `\r\n                );\r\n              }\r\n              const stateFromDevtools = action.state[store];\r\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\r\n                return;\r\n              }\r\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\r\n                setStateFromDevtools(stateFromDevtools);\r\n              }\r\n              return;\r\n            }\r\n            if (!api.dispatchFromDevtools) return;\r\n            if (typeof api.dispatch !== \"function\") return;\r\n            api.dispatch(action);\r\n          }\r\n        );\r\n      case \"DISPATCH\":\r\n        switch (message.payload.type) {\r\n          case \"RESET\":\r\n            setStateFromDevtools(initialState);\r\n            if (store === void 0) {\r\n              return connection == null ? void 0 : connection.init(api.getState());\r\n            }\r\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n          case \"COMMIT\":\r\n            if (store === void 0) {\r\n              connection == null ? void 0 : connection.init(api.getState());\r\n              return;\r\n            }\r\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n          case \"ROLLBACK\":\r\n            return parseJsonThen(message.state, (state) => {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(state);\r\n                connection == null ? void 0 : connection.init(api.getState());\r\n                return;\r\n              }\r\n              setStateFromDevtools(state[store]);\r\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n            });\r\n          case \"JUMP_TO_STATE\":\r\n          case \"JUMP_TO_ACTION\":\r\n            return parseJsonThen(message.state, (state) => {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(state);\r\n                return;\r\n              }\r\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\r\n                setStateFromDevtools(state[store]);\r\n              }\r\n            });\r\n          case \"IMPORT_STATE\": {\r\n            const { nextLiftedState } = message.payload;\r\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\r\n            if (!lastComputedState) return;\r\n            if (store === void 0) {\r\n              setStateFromDevtools(lastComputedState);\r\n            } else {\r\n              setStateFromDevtools(lastComputedState[store]);\r\n            }\r\n            connection == null ? void 0 : connection.send(\r\n              null,\r\n              // FIXME no-any\r\n              nextLiftedState\r\n            );\r\n            return;\r\n          }\r\n          case \"PAUSE_RECORDING\":\r\n            return isRecording = !isRecording;\r\n        }\r\n        return;\r\n    }\r\n  });\r\n  return initialState;\r\n};\r\nconst devtools = devtoolsImpl;\r\nconst parseJsonThen = (stringified, fn) => {\r\n  let parsed;\r\n  try {\r\n    parsed = JSON.parse(stringified);\r\n  } catch (e) {\r\n    console.error(\r\n      \"[zustand devtools middleware] Could not parse the received json\",\r\n      e\r\n    );\r\n  }\r\n  if (parsed !== void 0) fn(parsed);\r\n};\r\n\r\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\r\n  const origSubscribe = api.subscribe;\r\n  api.subscribe = (selector, optListener, options) => {\r\n    let listener = selector;\r\n    if (optListener) {\r\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\r\n      let currentSlice = selector(api.getState());\r\n      listener = (state) => {\r\n        const nextSlice = selector(state);\r\n        if (!equalityFn(currentSlice, nextSlice)) {\r\n          const previousSlice = currentSlice;\r\n          optListener(currentSlice = nextSlice, previousSlice);\r\n        }\r\n      };\r\n      if (options == null ? void 0 : options.fireImmediately) {\r\n        optListener(currentSlice, currentSlice);\r\n      }\r\n    }\r\n    return origSubscribe(listener);\r\n  };\r\n  const initialState = fn(set, get, api);\r\n  return initialState;\r\n};\r\nconst subscribeWithSelector = subscribeWithSelectorImpl;\r\n\r\nfunction combine(initialState, create) {\r\n  return (...args) => Object.assign({}, initialState, create(...args));\r\n}\r\n\r\nfunction createJSONStorage(getStorage, options) {\r\n  let storage;\r\n  try {\r\n    storage = getStorage();\r\n  } catch (e) {\r\n    return;\r\n  }\r\n  const persistStorage = {\r\n    getItem: (name) => {\r\n      var _a;\r\n      const parse = (str2) => {\r\n        if (str2 === null) {\r\n          return null;\r\n        }\r\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\r\n      };\r\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\r\n      if (str instanceof Promise) {\r\n        return str.then(parse);\r\n      }\r\n      return parse(str);\r\n    },\r\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\r\n    removeItem: (name) => storage.removeItem(name)\r\n  };\r\n  return persistStorage;\r\n}\r\nconst toThenable = (fn) => (input) => {\r\n  try {\r\n    const result = fn(input);\r\n    if (result instanceof Promise) {\r\n      return result;\r\n    }\r\n    return {\r\n      then(onFulfilled) {\r\n        return toThenable(onFulfilled)(result);\r\n      },\r\n      catch(_onRejected) {\r\n        return this;\r\n      }\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      then(_onFulfilled) {\r\n        return this;\r\n      },\r\n      catch(onRejected) {\r\n        return toThenable(onRejected)(e);\r\n      }\r\n    };\r\n  }\r\n};\r\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\r\n  let options = {\r\n    storage: createJSONStorage(() => localStorage),\r\n    partialize: (state) => state,\r\n    version: 0,\r\n    merge: (persistedState, currentState) => ({\r\n      ...currentState,\r\n      ...persistedState\r\n    }),\r\n    ...baseOptions\r\n  };\r\n  let hasHydrated = false;\r\n  const hydrationListeners = /* @__PURE__ */ new Set();\r\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\r\n  let storage = options.storage;\r\n  if (!storage) {\r\n    return config(\r\n      (...args) => {\r\n        console.warn(\r\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\r\n        );\r\n        set(...args);\r\n      },\r\n      get,\r\n      api\r\n    );\r\n  }\r\n  const setItem = () => {\r\n    const state = options.partialize({ ...get() });\r\n    return storage.setItem(options.name, {\r\n      state,\r\n      version: options.version\r\n    });\r\n  };\r\n  const savedSetState = api.setState;\r\n  api.setState = (state, replace) => {\r\n    savedSetState(state, replace);\r\n    void setItem();\r\n  };\r\n  const configResult = config(\r\n    (...args) => {\r\n      set(...args);\r\n      void setItem();\r\n    },\r\n    get,\r\n    api\r\n  );\r\n  api.getInitialState = () => configResult;\r\n  let stateFromStorage;\r\n  const hydrate = () => {\r\n    var _a, _b;\r\n    if (!storage) return;\r\n    hasHydrated = false;\r\n    hydrationListeners.forEach((cb) => {\r\n      var _a2;\r\n      return cb((_a2 = get()) != null ? _a2 : configResult);\r\n    });\r\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\r\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\r\n      if (deserializedStorageValue) {\r\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\r\n          if (options.migrate) {\r\n            const migration = options.migrate(\r\n              deserializedStorageValue.state,\r\n              deserializedStorageValue.version\r\n            );\r\n            if (migration instanceof Promise) {\r\n              return migration.then((result) => [true, result]);\r\n            }\r\n            return [true, migration];\r\n          }\r\n          console.error(\r\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\r\n          );\r\n        } else {\r\n          return [false, deserializedStorageValue.state];\r\n        }\r\n      }\r\n      return [false, void 0];\r\n    }).then((migrationResult) => {\r\n      var _a2;\r\n      const [migrated, migratedState] = migrationResult;\r\n      stateFromStorage = options.merge(\r\n        migratedState,\r\n        (_a2 = get()) != null ? _a2 : configResult\r\n      );\r\n      set(stateFromStorage, true);\r\n      if (migrated) {\r\n        return setItem();\r\n      }\r\n    }).then(() => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\r\n      stateFromStorage = get();\r\n      hasHydrated = true;\r\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\r\n    }).catch((e) => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\r\n    });\r\n  };\r\n  api.persist = {\r\n    setOptions: (newOptions) => {\r\n      options = {\r\n        ...options,\r\n        ...newOptions\r\n      };\r\n      if (newOptions.storage) {\r\n        storage = newOptions.storage;\r\n      }\r\n    },\r\n    clearStorage: () => {\r\n      storage == null ? void 0 : storage.removeItem(options.name);\r\n    },\r\n    getOptions: () => options,\r\n    rehydrate: () => hydrate(),\r\n    hasHydrated: () => hasHydrated,\r\n    onHydrate: (cb) => {\r\n      hydrationListeners.add(cb);\r\n      return () => {\r\n        hydrationListeners.delete(cb);\r\n      };\r\n    },\r\n    onFinishHydration: (cb) => {\r\n      finishHydrationListeners.add(cb);\r\n      return () => {\r\n        finishHydrationListeners.delete(cb);\r\n      };\r\n    }\r\n  };\r\n  if (!options.skipHydration) {\r\n    hydrate();\r\n  }\r\n  return stateFromStorage || configResult;\r\n};\r\nconst persist = persistImpl;\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/react.mjs":
/*!********************************************!*\
  !*** ./node_modules/zustand/esm/react.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   useStore: () => (/* binding */ useStore)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/vanilla */ \"(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\");\n\r\n\r\n\r\nconst identity = (arg) => arg;\r\nfunction useStore(api, selector = identity) {\r\n  const slice = react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore(\r\n    api.subscribe,\r\n    () => selector(api.getState()),\r\n    () => selector(api.getInitialState())\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue(slice);\r\n  return slice;\r\n}\r\nconst createImpl = (createState) => {\r\n  const api = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(createState);\r\n  const useBoundStore = (selector) => useStore(api, selector);\r\n  Object.assign(useBoundStore, api);\r\n  return useBoundStore;\r\n};\r\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS9yZWFjdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQjtBQUNvQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdURBQTBCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxnREFBbUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0REFBVztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXHp1c3RhbmRcXGVzbVxccmVhY3QubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAnenVzdGFuZC92YW5pbGxhJztcclxuXHJcbmNvbnN0IGlkZW50aXR5ID0gKGFyZykgPT4gYXJnO1xyXG5mdW5jdGlvbiB1c2VTdG9yZShhcGksIHNlbGVjdG9yID0gaWRlbnRpdHkpIHtcclxuICBjb25zdCBzbGljZSA9IFJlYWN0LnVzZVN5bmNFeHRlcm5hbFN0b3JlKFxyXG4gICAgYXBpLnN1YnNjcmliZSxcclxuICAgICgpID0+IHNlbGVjdG9yKGFwaS5nZXRTdGF0ZSgpKSxcclxuICAgICgpID0+IHNlbGVjdG9yKGFwaS5nZXRJbml0aWFsU3RhdGUoKSlcclxuICApO1xyXG4gIFJlYWN0LnVzZURlYnVnVmFsdWUoc2xpY2UpO1xyXG4gIHJldHVybiBzbGljZTtcclxufVxyXG5jb25zdCBjcmVhdGVJbXBsID0gKGNyZWF0ZVN0YXRlKSA9PiB7XHJcbiAgY29uc3QgYXBpID0gY3JlYXRlU3RvcmUoY3JlYXRlU3RhdGUpO1xyXG4gIGNvbnN0IHVzZUJvdW5kU3RvcmUgPSAoc2VsZWN0b3IpID0+IHVzZVN0b3JlKGFwaSwgc2VsZWN0b3IpO1xyXG4gIE9iamVjdC5hc3NpZ24odXNlQm91bmRTdG9yZSwgYXBpKTtcclxuICByZXR1cm4gdXNlQm91bmRTdG9yZTtcclxufTtcclxuY29uc3QgY3JlYXRlID0gKGNyZWF0ZVN0YXRlKSA9PiBjcmVhdGVTdGF0ZSA/IGNyZWF0ZUltcGwoY3JlYXRlU3RhdGUpIDogY3JlYXRlSW1wbDtcclxuXHJcbmV4cG9ydCB7IGNyZWF0ZSwgdXNlU3RvcmUgfTtcclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/react.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs":
/*!**********************************************!*\
  !*** ./node_modules/zustand/esm/vanilla.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: () => (/* binding */ createStore)\n/* harmony export */ });\nconst createStoreImpl = (createState) => {\r\n  let state;\r\n  const listeners = /* @__PURE__ */ new Set();\r\n  const setState = (partial, replace) => {\r\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\r\n    if (!Object.is(nextState, state)) {\r\n      const previousState = state;\r\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\r\n      listeners.forEach((listener) => listener(state, previousState));\r\n    }\r\n  };\r\n  const getState = () => state;\r\n  const getInitialState = () => initialState;\r\n  const subscribe = (listener) => {\r\n    listeners.add(listener);\r\n    return () => listeners.delete(listener);\r\n  };\r\n  const api = { setState, getState, getInitialState, subscribe };\r\n  const initialState = state = createState(setState, getState, api);\r\n  return api;\r\n};\r\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy96dXN0YW5kL2VzbS92YW5pbGxhLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4SEFBOEg7QUFDOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDdUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2thY3BcXERlc2t0b3BcXFNwZWNyZXNDUk12MlxcU3BlY3RyZXNHcm91cENSTVxcZGFzaGJvYXJkXFxub2RlX21vZHVsZXNcXHp1c3RhbmRcXGVzbVxcdmFuaWxsYS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3JlYXRlU3RvcmVJbXBsID0gKGNyZWF0ZVN0YXRlKSA9PiB7XHJcbiAgbGV0IHN0YXRlO1xyXG4gIGNvbnN0IGxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XHJcbiAgY29uc3Qgc2V0U3RhdGUgPSAocGFydGlhbCwgcmVwbGFjZSkgPT4ge1xyXG4gICAgY29uc3QgbmV4dFN0YXRlID0gdHlwZW9mIHBhcnRpYWwgPT09IFwiZnVuY3Rpb25cIiA/IHBhcnRpYWwoc3RhdGUpIDogcGFydGlhbDtcclxuICAgIGlmICghT2JqZWN0LmlzKG5leHRTdGF0ZSwgc3RhdGUpKSB7XHJcbiAgICAgIGNvbnN0IHByZXZpb3VzU3RhdGUgPSBzdGF0ZTtcclxuICAgICAgc3RhdGUgPSAocmVwbGFjZSAhPSBudWxsID8gcmVwbGFjZSA6IHR5cGVvZiBuZXh0U3RhdGUgIT09IFwib2JqZWN0XCIgfHwgbmV4dFN0YXRlID09PSBudWxsKSA/IG5leHRTdGF0ZSA6IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXh0U3RhdGUpO1xyXG4gICAgICBsaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IGxpc3RlbmVyKHN0YXRlLCBwcmV2aW91c1N0YXRlKSk7XHJcbiAgICB9XHJcbiAgfTtcclxuICBjb25zdCBnZXRTdGF0ZSA9ICgpID0+IHN0YXRlO1xyXG4gIGNvbnN0IGdldEluaXRpYWxTdGF0ZSA9ICgpID0+IGluaXRpYWxTdGF0ZTtcclxuICBjb25zdCBzdWJzY3JpYmUgPSAobGlzdGVuZXIpID0+IHtcclxuICAgIGxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xyXG4gICAgcmV0dXJuICgpID0+IGxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xyXG4gIH07XHJcbiAgY29uc3QgYXBpID0geyBzZXRTdGF0ZSwgZ2V0U3RhdGUsIGdldEluaXRpYWxTdGF0ZSwgc3Vic2NyaWJlIH07XHJcbiAgY29uc3QgaW5pdGlhbFN0YXRlID0gc3RhdGUgPSBjcmVhdGVTdGF0ZShzZXRTdGF0ZSwgZ2V0U3RhdGUsIGFwaSk7XHJcbiAgcmV0dXJuIGFwaTtcclxufTtcclxuY29uc3QgY3JlYXRlU3RvcmUgPSAoY3JlYXRlU3RhdGUpID0+IGNyZWF0ZVN0YXRlID8gY3JlYXRlU3RvcmVJbXBsKGNyZWF0ZVN0YXRlKSA6IGNyZWF0ZVN0b3JlSW1wbDtcclxuXHJcbmV4cG9ydCB7IGNyZWF0ZVN0b3JlIH07XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/zustand/esm/vanilla.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./store/useStore.ts":
/*!***************************!*\
  !*** ./store/useStore.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useActivity: () => (/* binding */ useActivity),\n/* harmony export */   useAuth: () => (/* binding */ useAuth),\n/* harmony export */   useClients: () => (/* binding */ useClients),\n/* harmony export */   useLiveEditing: () => (/* binding */ useLiveEditing),\n/* harmony export */   useStore: () => (/* binding */ useStore),\n/* harmony export */   useUI: () => (/* binding */ useUI)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\nconst useStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        // Stan początkowy\n        user: null,\n        isAuthenticated: false,\n        clients: [],\n        selectedClient: null,\n        editingClient: null,\n        liveEditingSessions: {},\n        activityLogs: [],\n        sidebarOpen: false,\n        currentPage: 'dashboard',\n        // Implementacja akcji użytkownika\n        setUser: (user)=>set({\n                user\n            }),\n        setAuthenticated: (authenticated)=>set({\n                isAuthenticated: authenticated\n            }),\n        // Implementacja akcji klientów\n        setClients: (clients)=>set({\n                clients\n            }),\n        addClient: (client)=>set((state)=>({\n                    clients: [\n                        client,\n                        ...state.clients\n                    ]\n                })),\n        updateClient: (id, updates)=>set((state)=>({\n                    clients: state.clients.map((client)=>client.id === id ? {\n                            ...client,\n                            ...updates\n                        } : client)\n                })),\n        removeClient: (id)=>set((state)=>{\n                var _state_selectedClient;\n                return {\n                    clients: state.clients.filter((client)=>client.id !== id),\n                    selectedClient: ((_state_selectedClient = state.selectedClient) === null || _state_selectedClient === void 0 ? void 0 : _state_selectedClient.id) === id ? null : state.selectedClient\n                };\n            }),\n        setSelectedClient: (client)=>set({\n                selectedClient: client\n            }),\n        // Implementacja akcji live edycji\n        startEditing: (clientId, userId)=>set((state)=>({\n                    liveEditingSessions: {\n                        ...state.liveEditingSessions,\n                        [clientId]: userId\n                    }\n                })),\n        stopEditing: (clientId)=>set((state)=>{\n                const { [clientId]: removed, ...rest } = state.liveEditingSessions;\n                return {\n                    liveEditingSessions: rest\n                };\n            }),\n        setEditingClient: (clientId)=>set({\n                editingClient: clientId\n            }),\n        // Implementacja akcji aktywności\n        setActivityLogs: (logs)=>set({\n                activityLogs: logs\n            }),\n        addActivityLog: (log)=>set((state)=>({\n                    activityLogs: [\n                        log,\n                        ...state.activityLogs\n                    ]\n                })),\n        // Implementacja akcji UI\n        setSidebarOpen: (open)=>set({\n                sidebarOpen: open\n            }),\n        setCurrentPage: (page)=>set({\n                currentPage: page\n            }),\n        // Czyszczenie store przy wylogowaniu\n        clearStore: ()=>set({\n                user: null,\n                isAuthenticated: false,\n                clients: [],\n                selectedClient: null,\n                editingClient: null,\n                liveEditingSessions: {},\n                activityLogs: [],\n                sidebarOpen: false,\n                currentPage: 'dashboard'\n            })\n    }), {\n    name: 'spectres-crm-storage',\n    storage: (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.createJSONStorage)(()=>localStorage),\n    // Tylko krytyczne dane dla autoryzacji - nie przechowuj całej bazy klientów\n    partialize: (state)=>({\n            user: state.user,\n            isAuthenticated: state.isAuthenticated,\n            sidebarOpen: state.sidebarOpen,\n            currentPage: state.currentPage\n        }),\n    // Wersjonowanie na wypadek zmian w strukturze\n    version: 1\n}));\n// Selektory pomocnicze\nconst useAuth = ()=>{\n    const { user, isAuthenticated, setUser, setAuthenticated, clearStore } = useStore();\n    return {\n        user,\n        isAuthenticated,\n        setUser,\n        setAuthenticated,\n        clearStore\n    };\n};\nconst useClients = ()=>{\n    const { clients, selectedClient, editingClient, setClients, addClient, updateClient, removeClient, setSelectedClient, setEditingClient } = useStore();\n    return {\n        clients,\n        selectedClient,\n        editingClient,\n        setClients,\n        addClient,\n        updateClient,\n        removeClient,\n        setSelectedClient,\n        setEditingClient\n    };\n};\nconst useLiveEditing = ()=>{\n    const { liveEditingSessions, startEditing, stopEditing } = useStore();\n    // Sprawdź czy klient jest edytowany\n    const isClientBeingEdited = (clientId)=>{\n        return clientId in liveEditingSessions;\n    };\n    // Pobierz użytkownika edytującego klienta\n    const getEditingUser = (clientId)=>{\n        return liveEditingSessions[clientId] || null;\n    };\n    return {\n        liveEditingSessions,\n        startEditing,\n        stopEditing,\n        isClientBeingEdited,\n        getEditingUser\n    };\n};\nconst useActivity = ()=>{\n    const { activityLogs, setActivityLogs, addActivityLog } = useStore();\n    return {\n        activityLogs,\n        setActivityLogs,\n        addActivityLog\n    };\n};\nconst useUI = ()=>{\n    const { sidebarOpen, currentPage, setSidebarOpen, setCurrentPage } = useStore();\n    return {\n        sidebarOpen,\n        currentPage,\n        setSidebarOpen,\n        setCurrentPage\n    };\n};\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/useStore.ts\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cauth%5C%5Cenhanced-auth-provider.tsx%22%2C%22ids%22%3A%5B%22EnhancedAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cproviders%5C%5Cquery-provider.tsx%22%2C%22ids%22%3A%5B%22QueryProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Ctheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Ccomponents%5C%5Cui%5C%5Ctoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Clib%5C%5Clanguage-context.tsx%22%2C%22ids%22%3A%5B%22LanguageProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Ckkacp%5C%5CDesktop%5C%5CSpecresCRMv2%5C%5CSpectresGroupCRM%5C%5Cdashboard%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);